==============================================================================
20190402 05:34:56.060 - INFO - + START SUITE: Provision-Containers [ ]
==============================================================================
20190402 05:34:56.060 - INFO - +- START SETUP: BuiltIn.Run Keywords [ Utils.Stx Suite Setup | provisioning.Assign Data Interfaces ]
20190402 05:34:56.060 - INFO - +-- START KW: Utils.Stx Suite Setup [ ]
20190402 05:34:56.061 - INFO - +--- START KW: Utils.Open Master Controller Connection [ ]
20190402 05:34:56.061 - INFO - +---- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 05:34:56.061 - INFO - +----- START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 05:34:56.062 - INFO - ${controller_connection} = 1
20190402 05:34:56.062 - INFO - +----- END KW: SSHLibrary.Open Connection (1)
20190402 05:34:56.062 - INFO - +----- START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 05:34:56.062 - INFO - +------ START KW: BuiltIn.Get Length [ ${password} ]
20190402 05:34:56.062 - INFO - Length is 10
20190402 05:34:56.062 - INFO - ${pwd_length} = 10
20190402 05:34:56.062 - INFO - +------ END KW: BuiltIn.Get Length (0)
20190402 05:34:56.063 - INFO - +------ START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 05:34:56.063 - INFO - +------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 05:34:56.063 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 05:34:57.180 - INFO - Read output: Last login: Tue Apr  2 10:03:40 2019
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 05:34:57.181 - INFO - /home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  m.add_string(self.Q_C.public_numbers().encode_point())
/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:96: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point
  self.curve, Q_S_bytes
/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:111: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  hm.add_string(self.Q_C.public_numbers().encode_point())
20190402 05:34:57.181 - INFO - +------- END KW: SSHLibrary.Login (1118)
20190402 05:34:57.182 - INFO - Returning from the enclosing user keyword.
20190402 05:34:57.182 - INFO - +------ END KW: BuiltIn.Run Keyword And Return If (1119)
20190402 05:34:57.183 - INFO - +----- END KW: Utils.Flexible_SSH_Login (1120)
20190402 05:34:57.183 - INFO - ${master_controller_connection} = 1
20190402 05:34:57.183 - INFO - +---- END KW: Utils.Connect to Controller Node (1122)
20190402 05:34:57.184 - INFO - +---- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 05:34:57.185 - INFO - ${master_controller_connection} = 1
20190402 05:34:57.185 - INFO - +---- END KW: BuiltIn.Set Suite Variable (1)
20190402 05:34:57.185 - INFO - +---- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 05:34:57.186 - INFO - 1
20190402 05:34:57.186 - INFO - +---- END KW: BuiltIn.Log (1)
20190402 05:34:57.186 - INFO - +--- END KW: Utils.Open Master Controller Connection (1125)
20190402 05:34:57.187 - INFO - +--- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:34:57.188 - INFO - +---- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:34:57.189 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:34:57.190 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:34:57.190 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:34:57.191 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:34:57.193 - INFO - &{result_dict} = { stdout= }
20190402 05:34:57.193 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 05:34:57.193 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:34:57.194 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:34:57.195 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:34:57.195 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:34:57.196 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:34:57.196 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:34:57.197 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:34:57.197 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:34:57.197 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:34:57.203 - INFO - source /etc/platform/openrc
20190402 05:34:57.203 - INFO - +----- END KW: SSHLibrary.Write (6)
20190402 05:34:57.203 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:34:57.598 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:57.598 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:57.598 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (395)
20190402 05:34:57.598 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:34:57.599 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:34:57.599 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:57.599 - INFO - +------ END KW: String.Get Line (0)
20190402 05:34:57.599 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:34:57.599 - INFO - ${clean_out} =
20190402 05:34:57.599 - INFO - +------ END KW: String.Remove String (0)
20190402 05:34:57.600 - INFO - ${output} =
20190402 05:34:57.600 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 05:34:57.600 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:34:57.600 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:34:57.601 - INFO - echo $?
20190402 05:34:57.602 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:34:57.602 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:34:57.602 - INFO - 0
20190402 05:34:57.602 - INFO - ${rc} = 0
20190402 05:34:57.602 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:34:57.602 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:34:57.603 - INFO - 0
20190402 05:34:57.603 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 05:34:57.603 - INFO - ${rc} = 0
20190402 05:34:57.603 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:34:57.603 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:34:57.603 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:34:57.604 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:34:57.604 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:34:57.604 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:34:57.604 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:34:57.604 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:34:57.604 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 05:34:57.604 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:34:57.604 - INFO - +---- END KW: Utils.Run Command (417)
20190402 05:34:57.604 - INFO - +--- END KW: Utils.Set Env Vars From Openrc (417)
20190402 05:34:57.605 - INFO - +-- END KW: Utils.Stx Suite Setup (1545)
20190402 05:34:57.605 - INFO - +-- START KW: provisioning.Assign Data Interfaces [ ]
20190402 05:34:57.605 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${ENVIRONMENT}'=='virtual' | Create List | eth1000 | eth1001 | ELSE | Create List | enp24s0f0 | enp24s0f1 ]
20190402 05:34:57.605 - INFO - +---- START KW: BuiltIn.Create List [ enp24s0f0 | enp24s0f1 ]
20190402 05:34:57.605 - INFO - +---- END KW: BuiltIn.Create List (0)
20190402 05:34:57.605 - INFO - @{data_interfaces} = [ enp24s0f0 | enp24s0f1 ]
20190402 05:34:57.606 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 05:34:57.606 - INFO - +--- START KW: Collections.Get From List [ ${data_interfaces} | 0 ]
20190402 05:34:57.606 - INFO - ${data0if} = enp24s0f0
20190402 05:34:57.606 - INFO - +--- END KW: Collections.Get From List (0)
20190402 05:34:57.606 - INFO - +--- START KW: Collections.Get From List [ ${data_interfaces} | 1 ]
20190402 05:34:57.606 - INFO - ${data1if} = enp24s0f1
20190402 05:34:57.606 - INFO - +--- END KW: Collections.Get From List (0)
20190402 05:34:57.606 - INFO - +--- START KW: BuiltIn.Set Suite Variable [ ${data0if} ]
20190402 05:34:57.607 - INFO - ${data0if} = enp24s0f0
20190402 05:34:57.607 - INFO - +--- END KW: BuiltIn.Set Suite Variable (1)
20190402 05:34:57.607 - INFO - +--- START KW: BuiltIn.Set Suite Variable [ ${data1if} ]
20190402 05:34:57.607 - INFO - ${data1if} = enp24s0f1
20190402 05:34:57.607 - INFO - +--- END KW: BuiltIn.Set Suite Variable (0)
20190402 05:34:57.607 - INFO - +-- END KW: provisioning.Assign Data Interfaces (2)
20190402 05:34:57.607 - INFO - +- END SETUP: BuiltIn.Run Keywords (1547)
------------------------------------------------------------------------------
20190402 05:34:57.607 - INFO - +- START TEST: Provisioning Duplex System [ ]
------------------------------------------------------------------------------
20190402 05:34:57.608 - INFO - +-- START KW: Utils.Set NTP Server [ ]
20190402 05:34:57.608 - INFO - +--- START KW: BuiltIn.Set Variable [ 0.pool.ntp.org,1.pool.ntp.org ]
20190402 05:34:57.608 - INFO - ${ntp_servers} = 0.pool.ntp.org,1.pool.ntp.org
20190402 05:34:57.608 - INFO - +--- END KW: BuiltIn.Set Variable (0)
20190402 05:34:57.608 - INFO - +--- START KW: Utils.Run Command [ system ntp-modify ntpservers=${ntp_servers} ]
20190402 05:34:57.609 - INFO - +---- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:34:57.609 - INFO - +---- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:34:57.609 - INFO - +---- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:34:57.609 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:34:57.610 - INFO - &{result_dict} = { stdout= }
20190402 05:34:57.610 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 05:34:57.610 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:34:57.610 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:34:57.610 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:34:57.610 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:34:57.610 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:34:57.611 - INFO - +---- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:34:57.611 - INFO - +---- START KW: SSHLibrary.Read [ ]
20190402 05:34:57.611 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:57.611 - INFO - +---- END KW: SSHLibrary.Read (0)
20190402 05:34:57.611 - INFO - +---- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:34:57.620 - INFO - system ntp-modify ntpservers=0.pool.nt p.org,1.pool.ntp.org
20190402 05:34:57.620 - INFO - +---- END KW: SSHLibrary.Write (9)
20190402 05:34:57.620 - INFO - +---- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:34:58.834 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| uuid         | 75981062-d688-4d6d-b1b2-32887c1200db |
| enabled      | True                                 |
| ntpservers   | 0.pool.ntp.org,1.pool.ntp.org        |
| isystem_uuid | 76ce9d91-d770-4f94-85b0-7eebb135973e |
| created_at   | 2019-04-02T10:06:08.063839+00:00     |
| updated_at   | None                                 |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:58.834 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| uuid         | 75981062-d68...
20190402 05:34:58.834 - INFO - +---- END KW: SSHLibrary.Read Until Prompt (1214)
20190402 05:34:58.834 - INFO - +---- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:34:58.834 - INFO - +----- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:34:58.835 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:58.835 - INFO - +----- END KW: String.Get Line (1)
20190402 05:34:58.835 - INFO - +----- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:34:58.835 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| uuid         | 75981062-d68...
20190402 05:34:58.835 - INFO - +----- END KW: String.Remove String (0)
20190402 05:34:58.835 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| uuid         | 75981062-d68...
20190402 05:34:58.835 - INFO - +---- END KW: Utils.Remove Prompt Line (1)
20190402 05:34:58.835 - INFO - +---- START KW: Utils.Get Return Code [ ]
20190402 05:34:58.836 - INFO - +----- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:34:58.837 - INFO - echo $?
20190402 05:34:58.837 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 05:34:58.837 - INFO - +----- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:34:58.838 - INFO - 0
20190402 05:34:58.838 - INFO - ${rc} = 0
20190402 05:34:58.838 - INFO - +----- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:34:58.838 - INFO - +----- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:34:58.838 - INFO - 0
20190402 05:34:58.838 - INFO - +----- END KW: BuiltIn.Log (0)
20190402 05:34:58.838 - INFO - ${rc} = 0
20190402 05:34:58.838 - INFO - +---- END KW: Utils.Get Return Code (3)
20190402 05:34:58.838 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:34:58.839 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:34:58.839 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:34:58.839 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 05:34:58.839 - INFO - +---- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:34:58.839 - INFO - +---- END KW: Collections.Set To Dictionary (0)
20190402 05:34:58.840 - INFO - +---- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:34:58.840 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| uuid         | 75981062-d688-4d6d-b1b2-32887c1200db |
| enabled      | True                                 |
| ntpservers   | 0.pool.ntp.org,1.pool.ntp.org        |
| isystem_uuid | 76ce9d91-d770-4f94-85b0-7eebb135973e |
| created_at   | 2019-04-02T10:06:08.063839+00:00     |
| updated_at   | None                                 |
+--------------+--------------------------------------+
20190402 05:34:58.840 - INFO - +---- END KW: Collections.Log Dictionary (0)
20190402 05:34:58.840 - INFO - +--- END KW: Utils.Run Command (1232)
20190402 05:34:58.840 - INFO - +-- END KW: Utils.Set NTP Server (1232)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:34:58.840 - INFO - +-- START KW: Utils.Configure Data Interfaces [ ${master_controller} | ${data0if} | ${data1if} | ${physnet0} | ${physnet1} | ${mtu} ]
20190402 05:34:58.841 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-1' | Run Keywords | Provide OAM Network Interface | ${host} | AND | Setup Cluster-host Interfaces | ${host} ]
20190402 05:34:58.841 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 05:34:58.841 - INFO - +--- START KW: Utils.Get Interface Information [ ${host} | ${data0if} ]
20190402 05:34:58.841 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-port-list ${host} --nowrap | grep ${interface} | awk '{ print $2,$4,$8}' ]
20190402 05:34:58.842 - INFO - ${cmd} = system host-port-list controller-0 --nowrap|grep enp24s0f0|awk '{ print $2,$4,$8}'
20190402 05:34:58.842 - INFO - +---- END KW: BuiltIn.Catenate (1)
20190402 05:34:58.842 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 05:34:58.842 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:34:58.842 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:34:58.842 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:34:58.843 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:34:58.843 - INFO - &{result_dict} = { stdout= }
20190402 05:34:58.843 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:34:58.843 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:34:58.843 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:34:58.844 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:34:58.844 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:34:58.844 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:34:58.844 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:34:58.844 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:34:58.844 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:58.844 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:34:58.844 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:34:58.855 - INFO - system host-port-list controller-0 --n owrap|grep enp24s0f0|awk '{ print $2,$4,$8}'
20190402 05:34:58.856 - INFO - +----- END KW: SSHLibrary.Write (12)
20190402 05:34:58.856 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:34:59.934 - INFO - 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:59.934 - INFO - ${output} = 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:59.934 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1078)
20190402 05:34:59.934 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:34:59.934 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:34:59.935 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:59.935 - INFO - +------ END KW: String.Get Line (1)
20190402 05:34:59.935 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:34:59.935 - INFO - ${clean_out} = 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0
20190402 05:34:59.935 - INFO - +------ END KW: String.Remove String (0)
20190402 05:34:59.935 - INFO - ${output} = 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0
20190402 05:34:59.935 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:34:59.935 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:34:59.936 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:34:59.937 - INFO - echo $?
20190402 05:34:59.937 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:34:59.937 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:34:59.937 - INFO - 0
20190402 05:34:59.937 - INFO - ${rc} = 0
20190402 05:34:59.938 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:34:59.938 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:34:59.938 - INFO - 0
20190402 05:34:59.938 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:34:59.938 - INFO - ${rc} = 0
20190402 05:34:59.938 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:34:59.938 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:34:59.939 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:34:59.939 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:34:59.939 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:34:59.939 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:34:59.939 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:34:59.939 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:34:59.939 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0
20190402 05:34:59.940 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 05:34:59.940 - INFO - ${info} = {u'stdout': u'6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0', u'stderr': u'', u'rc': u'0'}
20190402 05:34:59.940 - INFO - +---- END KW: Utils.Run Command (1098)
20190402 05:34:59.940 - INFO - +---- START KW: Utils.Convert Response To List [ ${info} ]
20190402 05:34:59.940 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:34:59.940 - INFO - ${response} = 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 enp24s0f0 0000:18:00.0
20190402 05:34:59.940 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 05:34:59.940 - INFO - +----- START KW: String.Split String [ ${response} ]
20190402 05:34:59.941 - INFO - @{res_in_list} = [ 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6 | enp24s0f0 | 0000:18:00.0 ]
20190402 05:34:59.941 - INFO - +----- END KW: String.Split String (1)
20190402 05:34:59.941 - INFO - ${info} = [u'6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6', u'enp24s0f0', u'0000:18:00.0']
20190402 05:34:59.941 - INFO - +---- END KW: Utils.Convert Response To List (1)
20190402 05:34:59.941 - INFO - ${iface_info} = [u'6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6', u'enp24s0f0', u'0000:18:00.0']
20190402 05:34:59.941 - INFO - +--- END KW: Utils.Get Interface Information (1100)
20190402 05:34:59.941 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 0 ]
20190402 05:34:59.941 - INFO - ${data0portuuid} = 6ef9bf2a-1a6f-4d1e-8890-3f621879b8f6
20190402 05:34:59.941 - INFO - +--- END KW: Collections.Get From List (0)
20190402 05:34:59.941 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 1 ]
20190402 05:34:59.942 - INFO - ${data0portname} = enp24s0f0
20190402 05:34:59.942 - INFO - +--- END KW: Collections.Get From List (1)
20190402 05:34:59.942 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 2 ]
20190402 05:34:59.942 - INFO - ${data0pciaddr} = 0000:18:00.0
20190402 05:34:59.942 - INFO - +--- END KW: Collections.Get From List (0)
20190402 05:34:59.942 - INFO - +--- START KW: Utils.Get Interface Information [ ${host} | ${data1if} ]
20190402 05:34:59.943 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-port-list ${host} --nowrap | grep ${interface} | awk '{ print $2,$4,$8}' ]
20190402 05:34:59.943 - INFO - ${cmd} = system host-port-list controller-0 --nowrap|grep enp24s0f1|awk '{ print $2,$4,$8}'
20190402 05:34:59.943 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:34:59.943 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 05:34:59.943 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:34:59.944 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:34:59.944 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:34:59.944 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:34:59.944 - INFO - &{result_dict} = { stdout= }
20190402 05:34:59.944 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:34:59.944 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:34:59.945 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:34:59.945 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:34:59.945 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:34:59.945 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:34:59.945 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:34:59.945 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:34:59.945 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:34:59.946 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:34:59.946 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:34:59.958 - INFO - system host-port-list controller-0 --n owrap|grep enp24s0f1|awk '{ print $2,$4,$8}'
20190402 05:34:59.958 - INFO - +----- END KW: SSHLibrary.Write (12)
20190402 05:34:59.958 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:01.099 - INFO - 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:01.099 - INFO - ${output} = 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:01.099 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1141)
20190402 05:35:01.099 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:01.099 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:01.100 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:01.100 - INFO - +------ END KW: String.Get Line (1)
20190402 05:35:01.100 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:01.100 - INFO - ${clean_out} = 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1
20190402 05:35:01.100 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:01.100 - INFO - ${output} = 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1
20190402 05:35:01.100 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:01.100 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:01.100 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:01.102 - INFO - echo $?
20190402 05:35:01.102 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:01.102 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:01.103 - INFO - 0
20190402 05:35:01.103 - INFO - ${rc} = 0
20190402 05:35:01.103 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:01.103 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:01.103 - INFO - 0
20190402 05:35:01.103 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:01.104 - INFO - ${rc} = 0
20190402 05:35:01.104 - INFO - +----- END KW: Utils.Get Return Code (4)
20190402 05:35:01.104 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:01.104 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:01.104 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:01.104 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:01.104 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:01.105 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 05:35:01.105 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:01.105 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1
20190402 05:35:01.105 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:01.105 - INFO - ${info} = {u'stdout': u'8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1', u'stderr': u'', u'rc': u'0'}
20190402 05:35:01.105 - INFO - +---- END KW: Utils.Run Command (1162)
20190402 05:35:01.105 - INFO - +---- START KW: Utils.Convert Response To List [ ${info} ]
20190402 05:35:01.106 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:01.106 - INFO - ${response} = 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 enp24s0f1 0000:18:00.1
20190402 05:35:01.106 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 05:35:01.106 - INFO - +----- START KW: String.Split String [ ${response} ]
20190402 05:35:01.106 - INFO - @{res_in_list} = [ 8f070dfb-c440-470d-82d3-8f5f52d7c2a4 | enp24s0f1 | 0000:18:00.1 ]
20190402 05:35:01.106 - INFO - +----- END KW: String.Split String (0)
20190402 05:35:01.106 - INFO - ${info} = [u'8f070dfb-c440-470d-82d3-8f5f52d7c2a4', u'enp24s0f1', u'0000:18:00.1']
20190402 05:35:01.106 - INFO - +---- END KW: Utils.Convert Response To List (1)
20190402 05:35:01.106 - INFO - ${iface_info} = [u'8f070dfb-c440-470d-82d3-8f5f52d7c2a4', u'enp24s0f1', u'0000:18:00.1']
20190402 05:35:01.107 - INFO - +--- END KW: Utils.Get Interface Information (1164)
20190402 05:35:01.107 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 0 ]
20190402 05:35:01.107 - INFO - ${data1portuuid} = 8f070dfb-c440-470d-82d3-8f5f52d7c2a4
20190402 05:35:01.107 - INFO - +--- END KW: Collections.Get From List (0)
20190402 05:35:01.107 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 1 ]
20190402 05:35:01.107 - INFO - ${data1portname} = enp24s0f1
20190402 05:35:01.107 - INFO - +--- END KW: Collections.Get From List (0)
20190402 05:35:01.107 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 2 ]
20190402 05:35:01.108 - INFO - ${data1pciaddr} = 0000:18:00.1
20190402 05:35:01.108 - INFO - +--- END KW: Collections.Get From List (1)
20190402 05:35:01.108 - INFO - +--- START KW: Utils.Get Interface UUID [ ${host} | ${data0portname} ]
20190402 05:35:01.108 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-if-list -a ${host} | grep ${port_name} | awk '{print $2}' ]
20190402 05:35:01.108 - INFO - ${cmd} = system host-if-list -a controller-0|grep enp24s0f0|awk '{print $2}'
20190402 05:35:01.108 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:35:01.108 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 05:35:01.109 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:01.109 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:01.109 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:01.109 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:01.110 - INFO - &{result_dict} = { stdout= }
20190402 05:35:01.110 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:01.110 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:01.110 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:01.110 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:01.110 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:01.111 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:01.111 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:01.111 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:01.111 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:01.111 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:01.111 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:01.120 - INFO - system host-if-list -a controller-0|gr ep enp24s0f0|awk '{print $2}'
20190402 05:35:01.120 - INFO - +----- END KW: SSHLibrary.Write (9)
20190402 05:35:01.120 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:02.283 - INFO - c22463b6-2fe0-479e-b810-8ece7e444a4f
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:02.284 - INFO - ${output} = c22463b6-2fe0-479e-b810-8ece7e444a4f
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:02.284 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1164)
20190402 05:35:02.284 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:02.284 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:02.284 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:02.284 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:02.285 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:02.285 - INFO - ${clean_out} = c22463b6-2fe0-479e-b810-8ece7e444a4f
20190402 05:35:02.285 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:02.285 - INFO - ${output} = c22463b6-2fe0-479e-b810-8ece7e444a4f
20190402 05:35:02.285 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:02.285 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:02.285 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:02.287 - INFO - echo $?
20190402 05:35:02.287 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:02.287 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:02.287 - INFO - 0
20190402 05:35:02.287 - INFO - ${rc} = 0
20190402 05:35:02.287 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:02.288 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:02.288 - INFO - 0
20190402 05:35:02.288 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:02.288 - INFO - ${rc} = 0
20190402 05:35:02.288 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:02.288 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:02.288 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:02.289 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:02.289 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:02.289 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:02.289 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:02.289 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:02.289 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: c22463b6-2fe0-479e-b810-8ece7e444a4f
20190402 05:35:02.289 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:02.289 - INFO - ${uuid} = {u'stdout': u'c22463b6-2fe0-479e-b810-8ece7e444a4f', u'stderr': u'', u'rc': u'0'}
20190402 05:35:02.290 - INFO - +---- END KW: Utils.Run Command (1181)
20190402 05:35:02.290 - INFO - ${data0ifuuid} = c22463b6-2fe0-479e-b810-8ece7e444a4f
20190402 05:35:02.290 - INFO - +--- END KW: Utils.Get Interface UUID (1182)
20190402 05:35:02.290 - INFO - +--- START KW: Utils.Get Interface UUID [ ${host} | ${data1portname} ]
20190402 05:35:02.290 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-if-list -a ${host} | grep ${port_name} | awk '{print $2}' ]
20190402 05:35:02.290 - INFO - ${cmd} = system host-if-list -a controller-0|grep enp24s0f1|awk '{print $2}'
20190402 05:35:02.290 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:35:02.291 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 05:35:02.292 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:02.292 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:02.292 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:02.292 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:02.293 - INFO - &{result_dict} = { stdout= }
20190402 05:35:02.293 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:02.293 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:02.293 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:02.293 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:02.293 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:02.293 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:02.294 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:02.294 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:02.294 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:02.294 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:02.294 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:02.304 - INFO - system host-if-list -a controller-0|gr ep enp24s0f1|awk '{print $2}'
20190402 05:35:02.304 - INFO - +----- END KW: SSHLibrary.Write (10)
20190402 05:35:02.304 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:03.464 - INFO - f623786d-bcad-4598-90c5-723841b5f6c9
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:03.464 - INFO - ${output} = f623786d-bcad-4598-90c5-723841b5f6c9
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:03.464 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1160)
20190402 05:35:03.464 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:03.465 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:03.465 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:03.465 - INFO - +------ END KW: String.Get Line (1)
20190402 05:35:03.465 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:03.465 - INFO - ${clean_out} = f623786d-bcad-4598-90c5-723841b5f6c9
20190402 05:35:03.465 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:03.465 - INFO - ${output} = f623786d-bcad-4598-90c5-723841b5f6c9
20190402 05:35:03.465 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:03.465 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:03.466 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:03.467 - INFO - echo $?
20190402 05:35:03.467 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:35:03.468 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:03.468 - INFO - 0
20190402 05:35:03.468 - INFO - ${rc} = 0
20190402 05:35:03.468 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:03.468 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:03.468 - INFO - 0
20190402 05:35:03.468 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:03.469 - INFO - ${rc} = 0
20190402 05:35:03.469 - INFO - +----- END KW: Utils.Get Return Code (4)
20190402 05:35:03.469 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:03.469 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:03.469 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:03.469 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:03.469 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:03.470 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 05:35:03.470 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:03.470 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: f623786d-bcad-4598-90c5-723841b5f6c9
20190402 05:35:03.470 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:03.470 - INFO - ${uuid} = {u'stdout': u'f623786d-bcad-4598-90c5-723841b5f6c9', u'stderr': u'', u'rc': u'0'}
20190402 05:35:03.470 - INFO - +---- END KW: Utils.Run Command (1179)
20190402 05:35:03.470 - INFO - ${data1ifuuid} = f623786d-bcad-4598-90c5-723841b5f6c9
20190402 05:35:03.470 - INFO - +--- END KW: Utils.Get Interface UUID (1180)
20190402 05:35:03.471 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-0' or '${host}'=='compute-0' | Run Keywords | Run Command | system datanetwork-add ${physnet0} vlan | True | AND | Run Command | system datanetwork-add ${physnet1} vlan | True ]
20190402 05:35:03.471 - INFO - +---- START KW: BuiltIn.Run Keywords [ Run Command | system datanetwork-add ${physnet0} vlan | True | AND | Run Command | system datanetwork-add ${physnet1} vlan | True ]
20190402 05:35:03.471 - INFO - +----- START KW: Utils.Run Command [ system datanetwork-add ${physnet0} vlan | True ]
20190402 05:35:03.471 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:03.472 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:03.472 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:03.472 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:03.472 - INFO - &{result_dict} = { stdout= }
20190402 05:35:03.472 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:03.472 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:03.473 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:03.473 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:03.473 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:03.473 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:03.473 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:03.474 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:35:03.474 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:03.474 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 05:35:03.474 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:03.479 - INFO - system datanetwork-add physnet0 vlan
20190402 05:35:03.479 - INFO - +------ END KW: SSHLibrary.Write (5)
20190402 05:35:03.480 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:04.500 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 1                                    |
| uuid         | 2e5088f2-a40d-4bce-a4d4-c567ba883e45 |
| name         | physnet0                             |
| network_type | vlan                                 |
| mtu          | 1500                                 |
| description  | None                                 |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:04.501 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 1           ...
20190402 05:35:04.501 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1021)
20190402 05:35:04.501 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:04.501 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:04.501 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:04.502 - INFO - +------- END KW: String.Get Line (1)
20190402 05:35:04.502 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:04.502 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 1           ...
20190402 05:35:04.502 - INFO - +------- END KW: String.Remove String (0)
20190402 05:35:04.502 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 1           ...
20190402 05:35:04.502 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 05:35:04.502 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:35:04.502 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:04.504 - INFO - echo $?
20190402 05:35:04.504 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:35:04.504 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:04.505 - INFO - 0
20190402 05:35:04.505 - INFO - ${rc} = 0
20190402 05:35:04.505 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:04.505 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:04.505 - INFO - 0
20190402 05:35:04.505 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 05:35:04.505 - INFO - ${rc} = 0
20190402 05:35:04.505 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:35:04.506 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:04.506 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:04.506 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:04.506 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:04.506 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:04.506 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:04.507 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:04.507 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 1                                    |
| uuid         | 2e5088f2-a40d-4bce-a4d4-c567ba883e45 |
| name         | physnet0                             |
| network_type | vlan                                 |
| mtu          | 1500                                 |
| description  | None                                 |
+--------------+--------------------------------------+
20190402 05:35:04.507 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 05:35:04.507 - INFO - +----- END KW: Utils.Run Command (1036)
20190402 05:35:04.507 - INFO - +----- START KW: Utils.Run Command [ system datanetwork-add ${physnet1} vlan | True ]
20190402 05:35:04.507 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:04.508 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:04.508 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:04.508 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:04.508 - INFO - &{result_dict} = { stdout= }
20190402 05:35:04.508 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:04.509 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:04.509 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:04.509 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:04.509 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:04.509 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:04.509 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:04.509 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:35:04.509 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:04.510 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 05:35:04.510 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:04.515 - INFO - system datanetwork-add physnet1 vlan
20190402 05:35:04.515 - INFO - +------ END KW: SSHLibrary.Write (5)
20190402 05:35:04.515 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:05.535 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 2                                    |
| uuid         | 7fac0e9e-15e4-4fc1-a050-56c6a42ebc6c |
| name         | physnet1                             |
| network_type | vlan                                 |
| mtu          | 1500                                 |
| description  | None                                 |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:05.536 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 2           ...
20190402 05:35:05.536 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1021)
20190402 05:35:05.536 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:05.536 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:05.536 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:05.536 - INFO - +------- END KW: String.Get Line (0)
20190402 05:35:05.536 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:05.537 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 2           ...
20190402 05:35:05.537 - INFO - +------- END KW: String.Remove String (1)
20190402 05:35:05.537 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 2           ...
20190402 05:35:05.537 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 05:35:05.537 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:35:05.537 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:05.539 - INFO - echo $?
20190402 05:35:05.539 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:35:05.539 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:05.540 - INFO - 0
20190402 05:35:05.540 - INFO - ${rc} = 0
20190402 05:35:05.540 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:05.540 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:05.540 - INFO - 0
20190402 05:35:05.540 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 05:35:05.540 - INFO - ${rc} = 0
20190402 05:35:05.540 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:35:05.541 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:05.541 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:05.541 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:05.541 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:05.541 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:05.542 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:05.542 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:05.542 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| id           | 2                                    |
| uuid         | 7fac0e9e-15e4-4fc1-a050-56c6a42ebc6c |
| name         | physnet1                             |
| network_type | vlan                                 |
| mtu          | 1500                                 |
| description  | None                                 |
+--------------+--------------------------------------+
20190402 05:35:05.542 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 05:35:05.542 - INFO - +----- END KW: Utils.Run Command (1035)
20190402 05:35:05.542 - INFO - +---- END KW: BuiltIn.Run Keywords (2071)
20190402 05:35:05.542 - INFO - +--- END KW: BuiltIn.Run Keyword If (2071)
20190402 05:35:05.542 - INFO - +--- START KW: Utils.Add Interface To Data Network [ ${mtu} | data0 | ${physnet0} | ${host} | ${data0ifuuid} ]
20190402 05:35:05.543 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${host}'=='controler-0' | -d | -p ]
20190402 05:35:05.543 - INFO - ${option} = -p
20190402 05:35:05.543 - INFO - +---- END KW: BuiltIn.Set Variable If (0)
20190402 05:35:05.543 - INFO - +---- START KW: BuiltIn.Catenate [ system host-if-modify | -m ${mtu} | -n ${if_name} | ${option} ${datanetwork} | -c data | ${host} | ${uuid} ]
20190402 05:35:05.543 - INFO - ${cmd} = system host-if-modify -m 1500 -n data0 -p physnet0 -c data controller-0 c22463b6-2fe0-479e-b810-8ece7e444a4f
20190402 05:35:05.543 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:35:05.543 - INFO - +---- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 05:35:05.544 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:05.544 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:05.544 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:05.544 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:05.545 - INFO - &{result_dict} = { stdout= }
20190402 05:35:05.545 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:05.545 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:05.545 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:05.545 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:05.545 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:05.546 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:05.546 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:05.546 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:05.546 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:05.546 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:05.546 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:05.561 - INFO - system host-if-modify -m 1500 -n data0  -p physnet0 -c data controller-0 c22463b6-2fe0-479e-b810-8ece7e444a4f
20190402 05:35:05.561 - INFO - +----- END KW: SSHLibrary.Write (15)
20190402 05:35:05.561 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:07.132 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f0']                       |
| datanetworks | [u'physnet0']                        |
| imac         | 3c:fd:fe:be:e0:cc                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | c22463b6-2fe0-479e-b810-8ece7e444a4f |
| ihost_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T10:06:57.909474+00:00     |
| updated_at   | 2019-04-02T11:23:50.874925+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:07.132 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0       ...
20190402 05:35:07.133 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1571)
20190402 05:35:07.133 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:07.133 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:07.133 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:07.133 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:07.133 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:07.134 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0       ...
20190402 05:35:07.134 - INFO - +------ END KW: String.Remove String (1)
20190402 05:35:07.134 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0       ...
20190402 05:35:07.134 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:07.134 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:07.134 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:07.136 - INFO - echo $?
20190402 05:35:07.136 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:07.136 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:07.136 - INFO - 0
20190402 05:35:07.136 - INFO - ${rc} = 0
20190402 05:35:07.136 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:07.136 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:07.137 - INFO - 0
20190402 05:35:07.137 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 05:35:07.137 - INFO - ${rc} = 0
20190402 05:35:07.137 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:07.137 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:07.137 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:07.138 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:07.138 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:07.138 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:07.138 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:07.138 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:07.138 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f0']                       |
| datanetworks | [u'physnet0']                        |
| imac         | 3c:fd:fe:be:e0:cc                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | c22463b6-2fe0-479e-b810-8ece7e444a4f |
| ihost_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T10:06:57.909474+00:00     |
| updated_at   | 2019-04-02T11:23:50.874925+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
20190402 05:35:07.138 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:07.139 - INFO - +---- END KW: Utils.Run Command (1596)
20190402 05:35:07.139 - INFO - +--- END KW: Utils.Add Interface To Data Network (1597)
20190402 05:35:07.139 - INFO - +--- START KW: Utils.Add Interface To Data Network [ ${mtu} | data1 | ${physnet1} | ${host} | ${data1ifuuid} ]
20190402 05:35:07.139 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${host}'=='controler-0' | -d | -p ]
20190402 05:35:07.139 - INFO - ${option} = -p
20190402 05:35:07.139 - INFO - +---- END KW: BuiltIn.Set Variable If (0)
20190402 05:35:07.139 - INFO - +---- START KW: BuiltIn.Catenate [ system host-if-modify | -m ${mtu} | -n ${if_name} | ${option} ${datanetwork} | -c data | ${host} | ${uuid} ]
20190402 05:35:07.140 - INFO - ${cmd} = system host-if-modify -m 1500 -n data1 -p physnet1 -c data controller-0 f623786d-bcad-4598-90c5-723841b5f6c9
20190402 05:35:07.140 - INFO - +---- END KW: BuiltIn.Catenate (1)
20190402 05:35:07.140 - INFO - +---- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 05:35:07.140 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:07.141 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:07.141 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:07.141 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:07.141 - INFO - &{result_dict} = { stdout= }
20190402 05:35:07.141 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:07.141 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:07.142 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:07.142 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:07.142 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:07.142 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:07.142 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:07.142 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:07.142 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:07.142 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:07.142 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:07.158 - INFO - system host-if-modify -m 1500 -n data1  -p physnet1 -c data controller-0 f623786d-bcad-4598-90c5-723841b5f6c9
20190402 05:35:07.158 - INFO - +----- END KW: SSHLibrary.Write (16)
20190402 05:35:07.158 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:08.725 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f1']                       |
| datanetworks | [u'physnet1']                        |
| imac         | 3c:fd:fe:be:e0:cd                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | f623786d-bcad-4598-90c5-723841b5f6c9 |
| ihost_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T10:06:58.001956+00:00     |
| updated_at   | 2019-04-02T11:23:52.456743+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:08.725 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1       ...
20190402 05:35:08.725 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1567)
20190402 05:35:08.726 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:08.726 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:08.726 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:08.726 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:08.726 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:08.726 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1       ...
20190402 05:35:08.727 - INFO - +------ END KW: String.Remove String (1)
20190402 05:35:08.727 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1       ...
20190402 05:35:08.727 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:08.727 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:08.727 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:08.729 - INFO - echo $?
20190402 05:35:08.729 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:08.729 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:08.729 - INFO - 0
20190402 05:35:08.729 - INFO - ${rc} = 0
20190402 05:35:08.729 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:08.730 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:08.730 - INFO - 0
20190402 05:35:08.730 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:08.730 - INFO - ${rc} = 0
20190402 05:35:08.730 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:08.730 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:08.730 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:08.731 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:08.731 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:08.731 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:08.731 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:08.731 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:08.731 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f1']                       |
| datanetworks | [u'physnet1']                        |
| imac         | 3c:fd:fe:be:e0:cd                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | f623786d-bcad-4598-90c5-723841b5f6c9 |
| ihost_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T10:06:58.001956+00:00     |
| updated_at   | 2019-04-02T11:23:52.456743+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
20190402 05:35:08.731 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:08.732 - INFO - +---- END KW: Utils.Run Command (1592)
20190402 05:35:08.732 - INFO - +--- END KW: Utils.Add Interface To Data Network (1593)
20190402 05:35:08.732 - INFO - +-- END KW: Utils.Configure Data Interfaces (9892)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:35:08.732 - INFO - +-- START KW: Utils.Enable Containerized Services [ ${master_controller} ]
20190402 05:35:08.732 - INFO - +--- START KW: BuiltIn.Evaluate [ "controller" in """${host}""" ]
20190402 05:35:08.732 - INFO - ${is_controller} = True
20190402 05:35:08.732 - INFO - +--- END KW: BuiltIn.Evaluate (0)
20190402 05:35:08.733 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==True | Run Command | system host-label-assign ${host} openstack-control-plane=enabled | True ]
20190402 05:35:08.733 - INFO - +---- START KW: Utils.Run Command [ system host-label-assign ${host} openstack-control-plane=enabled | True ]
20190402 05:35:08.733 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:08.734 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:08.734 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:08.734 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:08.734 - INFO - &{result_dict} = { stdout= }
20190402 05:35:08.734 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:08.734 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:08.735 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:08.735 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:08.735 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:08.735 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:08.735 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:08.735 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:08.735 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:08.735 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:08.736 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:08.747 - INFO - system host-label-assign controller-0  openstack-control-plane=enabled
20190402 05:35:08.747 - INFO - +----- END KW: SSHLibrary.Write (11)
20190402 05:35:08.747 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:09.839 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 8bd90126-04f1-437e-ad77-37e81fc2baf6 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | openstack-control-plane              |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:09.840 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 8bd90126-04f1-43...
20190402 05:35:09.840 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1093)
20190402 05:35:09.840 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:09.840 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:09.840 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:09.841 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:09.841 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:09.841 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 8bd90126-04f1-43...
20190402 05:35:09.841 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:09.841 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 8bd90126-04f1-43...
20190402 05:35:09.841 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:09.841 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:09.841 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:09.843 - INFO - echo $?
20190402 05:35:09.843 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:09.843 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:09.843 - INFO - 0
20190402 05:35:09.844 - INFO - ${rc} = 0
20190402 05:35:09.844 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:09.844 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:09.844 - INFO - 0
20190402 05:35:09.844 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:09.844 - INFO - ${rc} = 0
20190402 05:35:09.844 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:09.844 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:09.845 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:09.845 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:09.845 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:09.845 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:09.845 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:09.845 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:09.846 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 8bd90126-04f1-437e-ad77-37e81fc2baf6 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | openstack-control-plane              |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 05:35:09.846 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 05:35:09.846 - INFO - +---- END KW: Utils.Run Command (1113)
20190402 05:35:09.846 - INFO - +--- END KW: BuiltIn.Run Keyword If (1113)
20190402 05:35:09.846 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}'=='Simplex' or '${CONFIGURATION_TYPE}'=='Duplex' or ${is_controller}==False | Run Keywords | Run Command | system host-label-assign ${host} openstack-compute-node=enabled | True | AND | Run Command | system host-label-assign ${host} openvswitch=enabled | True | AND | Run Command | system host-label-assign ${host} sriov=enabled | True ]
20190402 05:35:09.846 - INFO - +---- START KW: BuiltIn.Run Keywords [ Run Command | system host-label-assign ${host} openstack-compute-node=enabled | True | AND | Run Command | system host-label-assign ${host} openvswitch=enabled | True | AND | Run Command | system host-label-assign ${host} sriov=enabled | True ]
20190402 05:35:09.847 - INFO - +----- START KW: Utils.Run Command [ system host-label-assign ${host} openstack-compute-node=enabled | True ]
20190402 05:35:09.847 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:09.847 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:09.847 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:09.848 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:09.848 - INFO - &{result_dict} = { stdout= }
20190402 05:35:09.848 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:09.848 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:09.848 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:09.849 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:09.849 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:09.849 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:09.849 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:09.849 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:35:09.849 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:09.849 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 05:35:09.849 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:09.860 - INFO - system host-label-assign controller-0  openstack-compute-node=enabled
20190402 05:35:09.860 - INFO - +------ END KW: SSHLibrary.Write (11)
20190402 05:35:09.860 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:10.957 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | cd5d7c87-20a2-4d5e-b7fb-ab221f4a0bd2 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | openstack-compute-node               |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:10.957 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | cd5d7c87-20a2-4d...
20190402 05:35:10.957 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1097)
20190402 05:35:10.958 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:10.958 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:10.958 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:10.958 - INFO - +------- END KW: String.Get Line (0)
20190402 05:35:10.958 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:10.958 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | cd5d7c87-20a2-4d...
20190402 05:35:10.959 - INFO - +------- END KW: String.Remove String (1)
20190402 05:35:10.959 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | cd5d7c87-20a2-4d...
20190402 05:35:10.959 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 05:35:10.959 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:35:10.959 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:10.960 - INFO - echo $?
20190402 05:35:10.961 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:35:10.961 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:10.961 - INFO - 0
20190402 05:35:10.961 - INFO - ${rc} = 0
20190402 05:35:10.961 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:10.961 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:10.961 - INFO - 0
20190402 05:35:10.962 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 05:35:10.962 - INFO - ${rc} = 0
20190402 05:35:10.962 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:35:10.962 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:10.962 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:10.962 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:10.962 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:10.963 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:10.963 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:10.963 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:10.963 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | cd5d7c87-20a2-4d5e-b7fb-ab221f4a0bd2 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | openstack-compute-node               |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 05:35:10.963 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 05:35:10.963 - INFO - +----- END KW: Utils.Run Command (1116)
20190402 05:35:10.963 - INFO - +----- START KW: Utils.Run Command [ system host-label-assign ${host} openvswitch=enabled | True ]
20190402 05:35:10.964 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:10.964 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:10.964 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:10.964 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:10.965 - INFO - &{result_dict} = { stdout= }
20190402 05:35:10.965 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:10.965 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:10.965 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:10.965 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:10.965 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:10.966 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:10.966 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:10.966 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:35:10.966 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:10.966 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 05:35:10.966 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:10.974 - INFO - system host-label-assign controller-0  openvswitch=enabled
20190402 05:35:10.974 - INFO - +------ END KW: SSHLibrary.Write (8)
20190402 05:35:10.975 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:12.073 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | d5ee1c84-03e2-48bf-9034-18c9d35a3c41 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | openvswitch                          |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:12.073 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | d5ee1c84-03e2-48...
20190402 05:35:12.073 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1098)
20190402 05:35:12.073 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:12.074 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:12.074 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:12.074 - INFO - +------- END KW: String.Get Line (0)
20190402 05:35:12.074 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:12.075 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | d5ee1c84-03e2-48...
20190402 05:35:12.075 - INFO - +------- END KW: String.Remove String (1)
20190402 05:35:12.075 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | d5ee1c84-03e2-48...
20190402 05:35:12.075 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190402 05:35:12.075 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:35:12.075 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:12.077 - INFO - echo $?
20190402 05:35:12.077 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:35:12.077 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:12.077 - INFO - 0
20190402 05:35:12.077 - INFO - ${rc} = 0
20190402 05:35:12.077 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:12.077 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:12.078 - INFO - 0
20190402 05:35:12.078 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 05:35:12.078 - INFO - ${rc} = 0
20190402 05:35:12.078 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:35:12.078 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:12.078 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:12.079 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:12.079 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:12.079 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:12.079 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:12.079 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:12.079 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | d5ee1c84-03e2-48bf-9034-18c9d35a3c41 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | openvswitch                          |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 05:35:12.079 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 05:35:12.080 - INFO - +----- END KW: Utils.Run Command (1116)
20190402 05:35:12.080 - INFO - +----- START KW: Utils.Run Command [ system host-label-assign ${host} sriov=enabled | True ]
20190402 05:35:12.080 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:12.080 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:12.080 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:12.081 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:12.081 - INFO - &{result_dict} = { stdout= }
20190402 05:35:12.081 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:12.081 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:12.081 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:12.081 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:12.082 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:12.082 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:12.082 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:12.082 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:35:12.082 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:12.082 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 05:35:12.082 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:12.090 - INFO - system host-label-assign controller-0  sriov=enabled
20190402 05:35:12.090 - INFO - +------ END KW: SSHLibrary.Write (8)
20190402 05:35:12.090 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:13.190 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 1fb09885-cf78-4e4f-9154-6bbbcc4391d6 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | sriov                                |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:13.190 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 1fb09885-cf78-4e...
20190402 05:35:13.191 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1100)
20190402 05:35:13.191 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:13.191 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:13.191 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:13.191 - INFO - +------- END KW: String.Get Line (0)
20190402 05:35:13.191 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:13.192 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 1fb09885-cf78-4e...
20190402 05:35:13.192 - INFO - +------- END KW: String.Remove String (1)
20190402 05:35:13.192 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 1fb09885-cf78-4e...
20190402 05:35:13.192 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 05:35:13.192 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:35:13.192 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:13.194 - INFO - echo $?
20190402 05:35:13.194 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:35:13.194 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:13.194 - INFO - 0
20190402 05:35:13.194 - INFO - ${rc} = 0
20190402 05:35:13.194 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:13.194 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:13.195 - INFO - 0
20190402 05:35:13.195 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 05:35:13.195 - INFO - ${rc} = 0
20190402 05:35:13.195 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:35:13.195 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:13.195 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:13.196 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:13.196 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:13.196 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:13.196 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:13.196 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:13.196 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 1fb09885-cf78-4e4f-9154-6bbbcc4391d6 |
| host_uuid   | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd |
| label_key   | sriov                                |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 05:35:13.196 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 05:35:13.197 - INFO - +----- END KW: Utils.Run Command (1116)
20190402 05:35:13.197 - INFO - +---- END KW: BuiltIn.Run Keywords (3351)
20190402 05:35:13.197 - INFO - +--- END KW: BuiltIn.Run Keyword If (3351)
20190402 05:35:13.197 - INFO - +-- END KW: Utils.Enable Containerized Services (4465)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:35:13.197 - INFO - +-- START KW: Utils.Setup Partitions [ ${master_controller} | ${lgv_name} | ${nova_size} | ${cgts_part_size} ]
20190402 05:35:13.197 - INFO - +--- START KW: Utils.Get Root Disk Device [ ${host} ]
20190402 05:35:13.198 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${host} | grep rootfs | awk '{print $4}' ]
20190402 05:35:13.198 - INFO - ${cmd} = system host-show controller-0|grep rootfs|awk '{print $4}'
20190402 05:35:13.198 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:35:13.198 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 05:35:13.198 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:13.199 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:13.199 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:13.199 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:13.199 - INFO - &{result_dict} = { stdout= }
20190402 05:35:13.199 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:13.200 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:13.200 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:13.200 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:13.200 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:13.200 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:13.200 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:13.200 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:13.201 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:13.201 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:35:13.201 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:13.210 - INFO - system host-show controller-0|grep roo tfs|awk '{print $4}'
20190402 05:35:13.210 - INFO - +----- END KW: SSHLibrary.Write (9)
20190402 05:35:13.210 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:14.238 - INFO - /dev/disk/by-path/pci-0000:00:17.0-ata-1.0
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:14.239 - INFO - ${output} = /dev/disk/by-path/pci-0000:00:17.0-ata-1.0
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:14.239 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 05:35:14.239 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:14.239 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:14.239 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:14.240 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:14.240 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:14.240 - INFO - ${clean_out} = /dev/disk/by-path/pci-0000:00:17.0-ata-1.0
20190402 05:35:14.240 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:14.240 - INFO - ${output} = /dev/disk/by-path/pci-0000:00:17.0-ata-1.0
20190402 05:35:14.240 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:14.240 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:14.240 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:14.242 - INFO - echo $?
20190402 05:35:14.242 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:14.242 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:14.242 - INFO - 0
20190402 05:35:14.242 - INFO - ${rc} = 0
20190402 05:35:14.242 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:14.243 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:14.243 - INFO - 0
20190402 05:35:14.243 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:14.243 - INFO - ${rc} = 0
20190402 05:35:14.243 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:14.243 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:14.243 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:14.244 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:14.244 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:14.244 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:14.244 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:14.244 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:14.244 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: /dev/disk/by-path/pci-0000:00:17.0-ata-1.0
20190402 05:35:14.244 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:14.245 - INFO - ${result} = {u'stdout': u'/dev/disk/by-path/pci-0000:00:17.0-ata-1.0', u'stderr': u'', u'rc': u'0'}
20190402 05:35:14.245 - INFO - +---- END KW: Utils.Run Command (1047)
20190402 05:35:14.245 - INFO - +---- START KW: BuiltIn.Set Variable [ ${result.stdout.strip()} ]
20190402 05:35:14.245 - INFO - ${root_disk} = /dev/disk/by-path/pci-0000:00:17.0-ata-1.0
20190402 05:35:14.245 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 05:35:14.245 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-disk-list ${host} --nowrap | grep ${root_disk} | awk '{print $4}' ]
20190402 05:35:14.245 - INFO - ${cmd} = system host-disk-list controller-0 --nowrap|grep /dev/disk/by-path/pci-0000:00:17.0-ata-1.0|awk '{print $4}'
20190402 05:35:14.245 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:35:14.245 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 05:35:14.246 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:14.246 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:14.246 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:14.246 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:14.247 - INFO - &{result_dict} = { stdout= }
20190402 05:35:14.247 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:14.247 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:14.247 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:14.247 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:14.248 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:14.248 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:14.248 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:14.248 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:14.248 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:14.248 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:14.248 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:14.262 - INFO - system host-disk-list controller-0 --n owrap|grep /dev/disk/by-path/pci-0000:00:17.0-ata-1.0|awk '{print $4}'
20190402 05:35:14.262 - INFO - +----- END KW: SSHLibrary.Write (14)
20190402 05:35:14.262 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:15.391 - INFO - /dev/sda
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:15.391 - INFO - ${output} = /dev/sda
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:15.391 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1129)
20190402 05:35:15.391 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:15.392 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:15.392 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:15.392 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:15.392 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:15.392 - INFO - ${clean_out} = /dev/sda
20190402 05:35:15.392 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:15.392 - INFO - ${output} = /dev/sda
20190402 05:35:15.392 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:15.392 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:15.393 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:15.394 - INFO - echo $?
20190402 05:35:15.394 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:35:15.395 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:15.395 - INFO - 0
20190402 05:35:15.395 - INFO - ${rc} = 0
20190402 05:35:15.395 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:15.395 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:15.395 - INFO - 0
20190402 05:35:15.395 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:15.395 - INFO - ${rc} = 0
20190402 05:35:15.396 - INFO - +----- END KW: Utils.Get Return Code (4)
20190402 05:35:15.396 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:15.396 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:15.396 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:15.396 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:15.396 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:15.397 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 05:35:15.397 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:15.397 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: /dev/sda
20190402 05:35:15.397 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:15.397 - INFO - ${root_disk_device} = {u'stdout': u'/dev/sda', u'stderr': u'', u'rc': u'0'}
20190402 05:35:15.397 - INFO - +---- END KW: Utils.Run Command (1152)
20190402 05:35:15.397 - INFO - ${root_disk_device} = /dev/sda
20190402 05:35:15.397 - INFO - +--- END KW: Utils.Get Root Disk Device (2200)
20190402 05:35:15.397 - INFO - +--- START KW: Utils.Get Disk List UID [ ${host} | ${root_disk_device} ]
20190402 05:35:15.398 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-disk-list ${host} | grep ${device_node} | awk '{print $2}' ]
20190402 05:35:15.398 - INFO - ${system_cmd} = system host-disk-list controller-0|grep /dev/sda|awk '{print $2}'
20190402 05:35:15.398 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 05:35:15.398 - INFO - +---- START KW: Utils.Run Command [ ${system_cmd} | True ]
20190402 05:35:15.399 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:15.399 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:15.399 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:15.399 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:15.399 - INFO - &{result_dict} = { stdout= }
20190402 05:35:15.400 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:15.400 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:15.400 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:15.400 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:15.400 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:15.400 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:15.400 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:15.401 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:15.401 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:15.401 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:15.401 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:15.411 - INFO - system host-disk-list controller-0|gre p /dev/sda|awk '{print $2}'
20190402 05:35:15.411 - INFO - +----- END KW: SSHLibrary.Write (10)
20190402 05:35:15.411 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:16.482 - INFO - 59c21ecb-ddc2-4855-9798-ada28b56ee4d
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:16.482 - INFO - ${output} = 59c21ecb-ddc2-4855-9798-ada28b56ee4d
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:16.483 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1072)
20190402 05:35:16.483 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:16.483 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:16.483 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:16.484 - INFO - +------ END KW: String.Get Line (1)
20190402 05:35:16.484 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:16.484 - INFO - ${clean_out} = 59c21ecb-ddc2-4855-9798-ada28b56ee4d
20190402 05:35:16.484 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:16.484 - INFO - ${output} = 59c21ecb-ddc2-4855-9798-ada28b56ee4d
20190402 05:35:16.484 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:16.484 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:16.484 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:16.486 - INFO - echo $?
20190402 05:35:16.486 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:16.486 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:16.487 - INFO - 0
20190402 05:35:16.487 - INFO - ${rc} = 0
20190402 05:35:16.487 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:16.487 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:16.487 - INFO - 0
20190402 05:35:16.487 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:16.487 - INFO - ${rc} = 0
20190402 05:35:16.487 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:16.487 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:16.488 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:16.488 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:16.488 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:16.488 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:16.488 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:16.488 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:16.489 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 59c21ecb-ddc2-4855-9798-ada28b56ee4d
20190402 05:35:16.489 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 05:35:16.489 - INFO - &{result} = { stdout=59c21ecb-ddc2-4855-9798-ada28b56ee4d | stderr= | rc=0 }
20190402 05:35:16.489 - INFO - +---- END KW: Utils.Run Command (1091)
20190402 05:35:16.489 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:16.489 - INFO - ${uid} = 59c21ecb-ddc2-4855-9798-ada28b56ee4d
20190402 05:35:16.489 - INFO - +---- END KW: Collections.Get From Dictionary (0)
20190402 05:35:16.489 - INFO - ${root_disk_uuid} = 59c21ecb-ddc2-4855-9798-ada28b56ee4d
20190402 05:35:16.490 - INFO - +--- END KW: Utils.Get Disk List UID (1092)
20190402 05:35:16.490 - INFO - +--- START KW: BuiltIn.Set Variable If [ '${host}'=='controller-0' | Ready | Creating ]
20190402 05:35:16.490 - INFO - ${part_status} = Ready
20190402 05:35:16.490 - INFO - +--- END KW: BuiltIn.Set Variable If (0)
20190402 05:35:16.490 - INFO - +--- START KW: BuiltIn.Evaluate [ "controller" in """${host}""" ]
20190402 05:35:16.490 - INFO - ${is_controller} = True
20190402 05:35:16.490 - INFO - +--- END KW: BuiltIn.Evaluate (0)
20190402 05:35:16.490 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${nova_size}==True | Calcultae Nova Partition Size For Computes | ${host} | ${root_disk_uuid} | ${cgts_part_size} | ELSE | Set Variable | ${nova_size} ]
20190402 05:35:16.491 - INFO - +---- START KW: BuiltIn.Set Variable [ ${nova_size} ]
20190402 05:35:16.491 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 05:35:16.491 - INFO - ${nova_size} = 100
20190402 05:35:16.491 - INFO - +--- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:16.491 - INFO - +--- START KW: Utils.Add Disk Partition [ ${host} | ${root_disk_uuid} | ${nova_size} | ${part_status} ]
20190402 05:35:16.491 - INFO - +---- START KW: Utils.Run Command [ system host-disk-partition-add ${host} ${uid} ${size} -t lvm_phys_vol | True ]
20190402 05:35:16.492 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:16.492 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:16.492 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:16.492 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:16.493 - INFO - &{result_dict} = { stdout= }
20190402 05:35:16.493 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:16.493 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:16.493 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:16.493 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:16.493 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:16.493 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:16.494 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:16.494 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:16.494 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:16.494 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:16.494 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:16.507 - INFO - system host-disk-partition-add control ler-0 59c21ecb-ddc2-4855-9798-ada28b56ee4d 100 -t lvm_phys_vol
20190402 05:35:16.507 - INFO - +----- END KW: SSHLibrary.Write (13)
20190402 05:35:16.508 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:17.737 - INFO - +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| device_node | /dev/sda5                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 102400                                           |
| uuid        | 41e205bc-b2ec-467b-8971-c9a060ab2b02             |
| ihost_uuid  | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| idisk_uuid  | 59c21ecb-ddc2-4855-9798-ada28b56ee4d             |
| ipv_uuid    | None                                             |
| status      | Creating                                         |
| created_at  | 2019-04-02T11:24:01.519303+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:17.737 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 05:35:17.737 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1229)
20190402 05:35:17.737 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:17.738 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:17.738 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:17.738 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:17.738 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:17.738 - INFO - ${clean_out} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 05:35:17.739 - INFO - +------ END KW: String.Remove String (1)
20190402 05:35:17.739 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 05:35:17.739 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 05:35:17.739 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:17.739 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:17.741 - INFO - echo $?
20190402 05:35:17.741 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:17.741 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:17.741 - INFO - 0
20190402 05:35:17.741 - INFO - ${rc} = 0
20190402 05:35:17.742 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:17.742 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:17.742 - INFO - 0
20190402 05:35:17.742 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:17.742 - INFO - ${rc} = 0
20190402 05:35:17.742 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:17.742 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:17.742 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:17.743 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:17.743 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:17.743 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:17.743 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:17.743 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:17.743 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| device_node | /dev/sda5                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 102400                                           |
| uuid        | 41e205bc-b2ec-467b-8971-c9a060ab2b02             |
| ihost_uuid  | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| idisk_uuid  | 59c21ecb-ddc2-4855-9798-ada28b56ee4d             |
| ipv_uuid    | None                                             |
| status      | Creating                                         |
| created_at  | 2019-04-02T11:24:01.519303+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
20190402 05:35:17.743 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:17.744 - INFO - ${result} = {u'stdout': u'+-------------+--------------------------------------------------+\r\n| Property    | Value                                            |\r\n+-------------+-------------------------------...
20190402 05:35:17.744 - INFO - +---- END KW: Utils.Run Command (1253)
20190402 05:35:17.744 - INFO - +---- START KW: Utils.Get Property From Result [ ${result} | uuid ]
20190402 05:35:17.744 - INFO - +----- START KW: common.String To Dict [ ${result} ]
20190402 05:35:17.744 - INFO - ${dict} = {'Property': {'status': {'Value': 'Creating'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '41e205bc-b2ec-467b-8971-...
20190402 05:35:17.744 - INFO - +----- END KW: common.String To Dict (0)
20190402 05:35:17.744 - INFO - +----- START KW: Collections.Get From Dictionary [ ${dict} | Property ]
20190402 05:35:17.745 - INFO - ${dict} = {'status': {'Value': 'Creating'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '41e205bc-b2ec-467b-8971-c9a060ab2b02'...
20190402 05:35:17.745 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 05:35:17.745 - INFO - +----- START KW: Collections.Get From Dictionary [ ${dict} | ${property} ]
20190402 05:35:17.745 - INFO - ${dict} = {'Value': '41e205bc-b2ec-467b-8971-c9a060ab2b02'}
20190402 05:35:17.745 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 05:35:17.745 - INFO - +----- START KW: Collections.Get From Dictionary [ ${dict} | Value ]
20190402 05:35:17.745 - INFO - ${dict} = 41e205bc-b2ec-467b-8971-c9a060ab2b02
20190402 05:35:17.745 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 05:35:17.745 - INFO - ${new_uid} = 41e205bc-b2ec-467b-8971-c9a060ab2b02
20190402 05:35:17.745 - INFO - +---- END KW: Utils.Get Property From Result (1)
20190402 05:35:17.746 - INFO - +---- START KW: BuiltIn.Wait Until Keyword Succeeds [ 30 min | 10 sec | Check Property Value Of Command | system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:17.746 - INFO - +----- START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:17.746 - INFO - +------ START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:35:17.746 - INFO - +------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:35:17.747 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:17.747 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:17.747 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:17.747 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:17.748 - INFO - &{result_dict} = { stdout= }
20190402 05:35:17.748 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:17.748 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:17.748 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:17.748 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:17.748 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:17.749 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:17.749 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:17.749 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:35:17.749 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:17.749 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:35:17.749 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:17.767 - INFO - system host-disk-partition-show contro ller-0 41e205bc-b2ec-467b-8971-c9a060ab2b02 | grep -w status | awk '{print$4}'
20190402 05:35:17.767 - INFO - +-------- END KW: SSHLibrary.Write (18)
20190402 05:35:17.767 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:18.788 - INFO - Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:18.789 - INFO - ${output} = Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:18.789 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1022)
20190402 05:35:18.789 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:18.789 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:18.789 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:18.789 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:35:18.789 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:18.790 - INFO - ${clean_out} = Creating
20190402 05:35:18.790 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:35:18.790 - INFO - ${output} = Creating
20190402 05:35:18.790 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:18.790 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:35:18.790 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:18.792 - INFO - echo $?
20190402 05:35:18.792 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:35:18.792 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:18.792 - INFO - 0
20190402 05:35:18.793 - INFO - ${rc} = 0
20190402 05:35:18.793 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:18.793 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:18.793 - INFO - 0
20190402 05:35:18.793 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:35:18.793 - INFO - ${rc} = 0
20190402 05:35:18.793 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:35:18.793 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:18.794 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:18.794 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:18.794 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:18.794 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:18.794 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:18.794 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:18.795 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Creating
20190402 05:35:18.795 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:35:18.795 - INFO - ${result} = {u'stdout': u'Creating', u'stderr': u'', u'rc': u'0'}
20190402 05:35:18.795 - INFO - +------- END KW: Utils.Run Command (1049)
20190402 05:35:18.795 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:18.795 - INFO - ${value} = Creating
20190402 05:35:18.795 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:35:18.795 - INFO - ${current_value} = Creating
20190402 05:35:18.795 - INFO - +------ END KW: Utils.Get Property Value Of Command (1049)
20190402 05:35:18.796 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:35:18.796 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:35:18.796 - FAIL - Creating != Ready
20190402 05:35:18.796 - DEBUG - Traceback (most recent call last):
  None
20190402 05:35:18.796 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:35:18.796 - INFO - +----- END KW: Utils.Check Property Value Of Command (1050)
20190402 05:35:28.797 - INFO - +----- START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:28.800 - INFO - +------ START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:35:28.802 - INFO - +------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:35:28.804 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:28.805 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:28.805 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:28.806 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:28.807 - INFO - &{result_dict} = { stdout= }
20190402 05:35:28.808 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:35:28.808 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:28.809 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:28.809 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:28.810 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:28.811 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:28.811 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:35:28.811 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:35:28.812 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:28.812 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:35:28.812 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:28.849 - INFO - system host-disk-partition-show contro ller-0 41e205bc-b2ec-467b-8971-c9a060ab2b02 | grep -w status | awk '{print$4}'
20190402 05:35:28.849 - INFO - +-------- END KW: SSHLibrary.Write (37)
20190402 05:35:28.849 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:29.869 - INFO - Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:29.869 - INFO - ${output} = Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:29.869 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1020)
20190402 05:35:29.870 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:29.870 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:29.870 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:29.870 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:35:29.870 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:29.870 - INFO - ${clean_out} = Creating
20190402 05:35:29.870 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:35:29.871 - INFO - ${output} = Creating
20190402 05:35:29.871 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:29.871 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:35:29.871 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:29.872 - INFO - echo $?
20190402 05:35:29.872 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:35:29.873 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:29.873 - INFO - 0
20190402 05:35:29.873 - INFO - ${rc} = 0
20190402 05:35:29.873 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:29.873 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:29.873 - INFO - 0
20190402 05:35:29.873 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:35:29.873 - INFO - ${rc} = 0
20190402 05:35:29.874 - INFO - +-------- END KW: Utils.Get Return Code (2)
20190402 05:35:29.874 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:29.874 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:29.874 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:29.874 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:29.874 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:29.875 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:29.875 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:29.875 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Creating
20190402 05:35:29.875 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:35:29.875 - INFO - ${result} = {u'stdout': u'Creating', u'stderr': u'', u'rc': u'0'}
20190402 05:35:29.875 - INFO - +------- END KW: Utils.Run Command (1073)
20190402 05:35:29.875 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:29.875 - INFO - ${value} = Creating
20190402 05:35:29.875 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:35:29.876 - INFO - ${current_value} = Creating
20190402 05:35:29.876 - INFO - +------ END KW: Utils.Get Property Value Of Command (1076)
20190402 05:35:29.876 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:35:29.876 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:35:29.876 - FAIL - Creating != Ready
20190402 05:35:29.876 - DEBUG - Traceback (most recent call last):
  None
20190402 05:35:29.876 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:35:29.876 - INFO - +----- END KW: Utils.Check Property Value Of Command (1079)
20190402 05:35:39.877 - INFO - +----- START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:39.880 - INFO - +------ START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:35:39.882 - INFO - +------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:35:39.884 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:39.885 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:39.885 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:39.886 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:39.887 - INFO - &{result_dict} = { stdout= }
20190402 05:35:39.888 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:39.888 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:39.889 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:39.889 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:39.890 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:39.891 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:39.891 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:35:39.891 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:35:39.891 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:39.892 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:35:39.892 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:39.931 - INFO - system host-disk-partition-show contro ller-0 41e205bc-b2ec-467b-8971-c9a060ab2b02 | grep -w status | awk '{print$4}'
20190402 05:35:39.931 - INFO - +-------- END KW: SSHLibrary.Write (39)
20190402 05:35:39.931 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:41.016 - INFO - Ready
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:41.016 - INFO - ${output} = Ready
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:41.016 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1085)
20190402 05:35:41.016 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:41.017 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:41.017 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:41.017 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:35:41.017 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:41.017 - INFO - ${clean_out} = Ready
20190402 05:35:41.017 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:35:41.018 - INFO - ${output} = Ready
20190402 05:35:41.018 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 05:35:41.018 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:35:41.018 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:41.019 - INFO - echo $?
20190402 05:35:41.019 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:35:41.019 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:41.020 - INFO - 0
20190402 05:35:41.020 - INFO - ${rc} = 0
20190402 05:35:41.020 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:41.020 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:41.021 - INFO - 0
20190402 05:35:41.021 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:35:41.021 - INFO - ${rc} = 0
20190402 05:35:41.021 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:35:41.021 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:41.021 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:41.022 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:41.022 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:41.022 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:41.022 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:41.022 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:41.022 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Ready
20190402 05:35:41.022 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:35:41.022 - INFO - ${result} = {u'stdout': u'Ready', u'stderr': u'', u'rc': u'0'}
20190402 05:35:41.022 - INFO - +------- END KW: Utils.Run Command (1140)
20190402 05:35:41.023 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:41.023 - INFO - ${value} = Ready
20190402 05:35:41.023 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:35:41.023 - INFO - ${current_value} = Ready
20190402 05:35:41.023 - INFO - +------ END KW: Utils.Get Property Value Of Command (1143)
20190402 05:35:41.023 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:35:41.023 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:35:41.023 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:35:41.023 - INFO - +----- END KW: Utils.Check Property Value Of Command (1146)
20190402 05:35:41.024 - INFO - +---- END KW: BuiltIn.Wait Until Keyword Succeeds (23277)
20190402 05:35:41.024 - INFO - ${nova_partition_uuid} = 41e205bc-b2ec-467b-8971-c9a060ab2b02
20190402 05:35:41.024 - INFO - +--- END KW: Utils.Add Disk Partition (24533)
20190402 05:35:41.024 - INFO - +--- START KW: Utils.Add Local Volume Group [ ${host} | ${lgv_name} ]
20190402 05:35:41.024 - INFO - +---- START KW: Utils.Run Command [ system host-lvg-add ${host} ${lvg_name} | True ]
20190402 05:35:41.024 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:41.025 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:41.025 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:41.025 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:41.025 - INFO - &{result_dict} = { stdout= }
20190402 05:35:41.025 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:41.025 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:41.026 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:41.026 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:41.026 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:41.026 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:41.026 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:41.026 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:41.026 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:41.027 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:35:41.027 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:41.033 - INFO - system host-lvg-add controller-0 nova- local
20190402 05:35:41.033 - INFO - +----- END KW: SSHLibrary.Write (6)
20190402 05:35:41.033 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:42.109 - INFO - +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+-----------------------+-------------------------------------------------------------------+
| lvm_vg_name           | nova-local                                                        |
| vg_state              | adding                                                            |
| uuid                  | 53262803-e3b3-435c-b3e8-1355487417d8                              |
| ihost_uuid            | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd                              |
| lvm_vg_access         | None                                                              |
| lvm_max_lv            | 0                                                                 |
| lvm_cur_lv            | 0                                                                 |
| lvm_max_pv            | 0                                                                 |
| lvm_cur_pv            | 0                                                                 |
| lvm_vg_size_gib       | 0.0                                                               |
| lvm_vg_avail_size_gib | 0.0                                                               |
| lvm_vg_total_pe       | 0                                                                 |
| lvm_vg_free_pe        | 0                                                                 |
| created_at            | 2019-04-02T11:24:25.895886+00:00                                  |
| updated_at            | None                                                              |
| parameters            | {u'concurrent_disk_operations': 2, u'instance_backing': u'image'} |
+-----------------------+-------------------------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:42.110 - INFO - ${output} = +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+---------...
20190402 05:35:42.110 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1077)
20190402 05:35:42.110 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:42.110 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:42.110 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:42.110 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:42.111 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:42.111 - INFO - ${clean_out} = +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+---------...
20190402 05:35:42.111 - INFO - +------ END KW: String.Remove String (0)
20190402 05:35:42.111 - INFO - ${output} = +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+---------...
20190402 05:35:42.111 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:42.111 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:42.111 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:42.113 - INFO - echo $?
20190402 05:35:42.113 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:42.113 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:42.113 - INFO - 0
20190402 05:35:42.113 - INFO - ${rc} = 0
20190402 05:35:42.113 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:42.114 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:42.114 - INFO - 0
20190402 05:35:42.114 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 05:35:42.114 - INFO - ${rc} = 0
20190402 05:35:42.114 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:42.114 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:42.114 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:42.115 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:42.115 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:42.115 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:42.115 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:42.115 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:42.115 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+-----------------------+-------------------------------------------------------------------+
| lvm_vg_name           | nova-local                                                        |
| vg_state              | adding                                                            |
| uuid                  | 53262803-e3b3-435c-b3e8-1355487417d8                              |
| ihost_uuid            | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd                              |
| lvm_vg_access         | None                                                              |
| lvm_max_lv            | 0                                                                 |
| lvm_cur_lv            | 0                                                                 |
| lvm_max_pv            | 0                                                                 |
| lvm_cur_pv            | 0                                                                 |
| lvm_vg_size_gib       | 0.0                                                               |
| lvm_vg_avail_size_gib | 0.0                                                               |
| lvm_vg_total_pe       | 0                                                                 |
| lvm_vg_free_pe        | 0                                                                 |
| created_at            | 2019-04-02T11:24:25.895886+00:00                                  |
| updated_at            | None                                                              |
| parameters            | {u'concurrent_disk_operations': 2, u'instance_backing': u'image'} |
+-----------------------+-------------------------------------------------------------------+
20190402 05:35:42.115 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:42.115 - INFO - +---- END KW: Utils.Run Command (1091)
20190402 05:35:42.116 - INFO - +--- END KW: Utils.Add Local Volume Group (1092)
20190402 05:35:42.116 - INFO - +--- START KW: Utils.Add Physical Volume [ ${host} | ${lgv_name} | ${nova_partition_uuid} ]
20190402 05:35:42.116 - INFO - +---- START KW: Utils.Run Command [ system host-pv-add ${host} ${lvg name} ${uid} | True ]
20190402 05:35:42.117 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:42.117 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:42.117 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:42.117 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:42.118 - INFO - &{result_dict} = { stdout= }
20190402 05:35:42.118 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:42.118 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:42.118 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:42.118 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:42.118 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:42.118 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:42.118 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:42.119 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:35:42.119 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:42.119 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:35:42.119 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:42.131 - INFO - system host-pv-add controller-0 nova-l ocal 41e205bc-b2ec-467b-8971-c9a060ab2b02
20190402 05:35:42.132 - INFO - +----- END KW: SSHLibrary.Write (13)
20190402 05:35:42.132 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:43.379 - INFO - +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | da0b981a-b00c-48f3-89d7-e3b547b9fe52             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 41e205bc-b2ec-467b-8971-c9a060ab2b02             |
| disk_or_part_device_node | /dev/sda5                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| lvm_pv_name              | /dev/sda5                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| created_at               | 2019-04-02T11:24:27.166027+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:43.379 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 05:35:43.380 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1248)
20190402 05:35:43.380 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:43.380 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:43.380 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:43.380 - INFO - +------ END KW: String.Get Line (0)
20190402 05:35:43.380 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:43.381 - INFO - ${clean_out} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 05:35:43.381 - INFO - +------ END KW: String.Remove String (1)
20190402 05:35:43.381 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 05:35:43.381 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:43.381 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:35:43.381 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:43.383 - INFO - echo $?
20190402 05:35:43.383 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:35:43.383 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:43.383 - INFO - 0
20190402 05:35:43.383 - INFO - ${rc} = 0
20190402 05:35:43.383 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:43.384 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:43.384 - INFO - 0
20190402 05:35:43.384 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:35:43.384 - INFO - ${rc} = 0
20190402 05:35:43.384 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:35:43.384 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:43.384 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:43.385 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:35:43.385 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:43.385 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:43.385 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:35:43.385 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:43.385 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | da0b981a-b00c-48f3-89d7-e3b547b9fe52             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 41e205bc-b2ec-467b-8971-c9a060ab2b02             |
| disk_or_part_device_node | /dev/sda5                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| lvm_pv_name              | /dev/sda5                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| created_at               | 2019-04-02T11:24:27.166027+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
20190402 05:35:43.385 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:35:43.386 - INFO - +---- END KW: Utils.Run Command (1269)
20190402 05:35:43.386 - INFO - +--- END KW: Utils.Add Physical Volume (1270)
20190402 05:35:43.386 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==False | Modify LVG Attributes | -b image | ${host} | ${lgv_name} ]
20190402 05:35:43.386 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 05:35:43.386 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==True or ${setup_cgts}==True | Add Disk Partition | ${host} | ${root_disk_uuid} | ${cgts_part_size} | ${part_status} ]
20190402 05:35:43.386 - INFO - +---- START KW: Utils.Add Disk Partition [ ${host} | ${root_disk_uuid} | ${cgts_part_size} | ${part_status} ]
20190402 05:35:43.387 - INFO - +----- START KW: Utils.Run Command [ system host-disk-partition-add ${host} ${uid} ${size} -t lvm_phys_vol | True ]
20190402 05:35:43.387 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:43.387 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:43.387 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:43.388 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:43.388 - INFO - &{result_dict} = { stdout= }
20190402 05:35:43.388 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:43.388 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:43.389 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:43.389 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:43.389 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:43.389 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:43.389 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:43.389 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:35:43.389 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:43.389 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 05:35:43.390 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:43.404 - INFO - system host-disk-partition-add control ler-0 59c21ecb-ddc2-4855-9798-ada28b56ee4d 20 -t lvm_phys_vol
20190402 05:35:43.404 - INFO - +------ END KW: SSHLibrary.Write (14)
20190402 05:35:43.404 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:44.523 - INFO - +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| device_node | /dev/sda6                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 20480                                            |
| uuid        | 37bf735d-2aa0-4c66-96fa-ec12d5420656             |
| ihost_uuid  | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| idisk_uuid  | 59c21ecb-ddc2-4855-9798-ada28b56ee4d             |
| ipv_uuid    | None                                             |
| status      | Creating                                         |
| created_at  | 2019-04-02T11:24:28.311921+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:44.523 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 05:35:44.523 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1119)
20190402 05:35:44.523 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:44.524 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:44.524 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:44.524 - INFO - +------- END KW: String.Get Line (0)
20190402 05:35:44.524 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:44.524 - INFO - ${clean_out} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 05:35:44.524 - INFO - +------- END KW: String.Remove String (0)
20190402 05:35:44.524 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 05:35:44.524 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 05:35:44.524 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:35:44.525 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:44.526 - INFO - echo $?
20190402 05:35:44.526 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:35:44.526 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:44.527 - INFO - 0
20190402 05:35:44.527 - INFO - ${rc} = 0
20190402 05:35:44.527 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:44.527 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:44.527 - INFO - 0
20190402 05:35:44.527 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 05:35:44.527 - INFO - ${rc} = 0
20190402 05:35:44.527 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:35:44.527 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:44.528 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:44.528 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:44.528 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:44.528 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:44.528 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:35:44.528 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:44.529 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| device_node | /dev/sda6                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 20480                                            |
| uuid        | 37bf735d-2aa0-4c66-96fa-ec12d5420656             |
| ihost_uuid  | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| idisk_uuid  | 59c21ecb-ddc2-4855-9798-ada28b56ee4d             |
| ipv_uuid    | None                                             |
| status      | Creating                                         |
| created_at  | 2019-04-02T11:24:28.311921+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
20190402 05:35:44.529 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 05:35:44.529 - INFO - ${result} = {u'stdout': u'+-------------+--------------------------------------------------+\r\n| Property    | Value                                            |\r\n+-------------+-------------------------------...
20190402 05:35:44.529 - INFO - +----- END KW: Utils.Run Command (1142)
20190402 05:35:44.529 - INFO - +----- START KW: Utils.Get Property From Result [ ${result} | uuid ]
20190402 05:35:44.529 - INFO - +------ START KW: common.String To Dict [ ${result} ]
20190402 05:35:44.530 - INFO - ${dict} = {'Property': {'status': {'Value': 'Creating'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '37bf735d-2aa0-4c66-96fa-...
20190402 05:35:44.530 - INFO - +------ END KW: common.String To Dict (1)
20190402 05:35:44.530 - INFO - +------ START KW: Collections.Get From Dictionary [ ${dict} | Property ]
20190402 05:35:44.530 - INFO - ${dict} = {'status': {'Value': 'Creating'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '37bf735d-2aa0-4c66-96fa-ec12d5420656'...
20190402 05:35:44.530 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 05:35:44.530 - INFO - +------ START KW: Collections.Get From Dictionary [ ${dict} | ${property} ]
20190402 05:35:44.530 - INFO - ${dict} = {'Value': '37bf735d-2aa0-4c66-96fa-ec12d5420656'}
20190402 05:35:44.530 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 05:35:44.530 - INFO - +------ START KW: Collections.Get From Dictionary [ ${dict} | Value ]
20190402 05:35:44.531 - INFO - ${dict} = 37bf735d-2aa0-4c66-96fa-ec12d5420656
20190402 05:35:44.531 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 05:35:44.531 - INFO - ${new_uid} = 37bf735d-2aa0-4c66-96fa-ec12d5420656
20190402 05:35:44.531 - INFO - +----- END KW: Utils.Get Property From Result (2)
20190402 05:35:44.531 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 30 min | 10 sec | Check Property Value Of Command | system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:44.531 - INFO - +------ START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:44.532 - INFO - +------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:35:44.532 - INFO - +-------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:35:44.532 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:44.533 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:35:44.533 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:44.533 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:44.533 - INFO - &{result_dict} = { stdout= }
20190402 05:35:44.533 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:35:44.534 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:44.534 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:44.534 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:44.534 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:44.534 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:44.534 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:35:44.534 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 05:35:44.535 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:44.535 - INFO - +--------- END KW: SSHLibrary.Read (1)
20190402 05:35:44.535 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:44.552 - INFO - system host-disk-partition-show contro ller-0 37bf735d-2aa0-4c66-96fa-ec12d5420656 | grep -w status | awk '{print$4}'
20190402 05:35:44.552 - INFO - +--------- END KW: SSHLibrary.Write (17)
20190402 05:35:44.552 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:45.595 - INFO - Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:45.596 - INFO - ${output} = Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:45.596 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (1044)
20190402 05:35:45.596 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:45.596 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:45.596 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:45.596 - INFO - +---------- END KW: String.Get Line (0)
20190402 05:35:45.596 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:45.597 - INFO - ${clean_out} = Creating
20190402 05:35:45.597 - INFO - +---------- END KW: String.Remove String (1)
20190402 05:35:45.597 - INFO - ${output} = Creating
20190402 05:35:45.597 - INFO - +--------- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:45.597 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 05:35:45.597 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:45.598 - INFO - echo $?
20190402 05:35:45.598 - INFO - +---------- END KW: SSHLibrary.Write (1)
20190402 05:35:45.598 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:45.599 - INFO - 0
20190402 05:35:45.599 - INFO - ${rc} = 0
20190402 05:35:45.599 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:35:45.599 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:45.600 - INFO - 0
20190402 05:35:45.600 - INFO - +---------- END KW: BuiltIn.Log (1)
20190402 05:35:45.600 - INFO - ${rc} = 0
20190402 05:35:45.600 - INFO - +--------- END KW: Utils.Get Return Code (3)
20190402 05:35:45.600 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:45.600 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:45.601 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:45.601 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:45.601 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:45.601 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:45.601 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:45.601 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Creating
20190402 05:35:45.601 - INFO - +--------- END KW: Collections.Log Dictionary (0)
20190402 05:35:45.601 - INFO - ${result} = {u'stdout': u'Creating', u'stderr': u'', u'rc': u'0'}
20190402 05:35:45.602 - INFO - +-------- END KW: Utils.Run Command (1070)
20190402 05:35:45.602 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:45.602 - INFO - ${value} = Creating
20190402 05:35:45.602 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 05:35:45.602 - INFO - ${current_value} = Creating
20190402 05:35:45.602 - INFO - +------- END KW: Utils.Get Property Value Of Command (1070)
20190402 05:35:45.602 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:35:45.602 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:35:45.602 - FAIL - Creating != Ready
20190402 05:35:45.603 - DEBUG - Traceback (most recent call last):
  None
20190402 05:35:45.603 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:35:45.603 - INFO - +------ END KW: Utils.Check Property Value Of Command (1072)
20190402 05:35:55.604 - INFO - +------ START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:35:55.605 - INFO - +------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:35:55.606 - INFO - +-------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:35:55.608 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:35:55.608 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:35:55.608 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:35:55.609 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:35:55.609 - INFO - &{result_dict} = { stdout= }
20190402 05:35:55.609 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:35:55.609 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:35:55.609 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:55.610 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:35:55.610 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:55.610 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:35:55.610 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:35:55.610 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 05:35:55.610 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:55.610 - INFO - +--------- END KW: SSHLibrary.Read (0)
20190402 05:35:55.610 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:35:55.629 - INFO - system host-disk-partition-show contro ller-0 37bf735d-2aa0-4c66-96fa-ec12d5420656 | grep -w status | awk '{print$4}'
20190402 05:35:55.629 - INFO - +--------- END KW: SSHLibrary.Write (19)
20190402 05:35:55.630 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:35:56.660 - INFO - Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:56.661 - INFO - ${output} = Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:56.661 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (1032)
20190402 05:35:56.661 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:35:56.661 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:35:56.661 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:35:56.661 - INFO - +---------- END KW: String.Get Line (0)
20190402 05:35:56.662 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:35:56.662 - INFO - ${clean_out} = Creating
20190402 05:35:56.662 - INFO - +---------- END KW: String.Remove String (0)
20190402 05:35:56.662 - INFO - ${output} = Creating
20190402 05:35:56.662 - INFO - +--------- END KW: Utils.Remove Prompt Line (1)
20190402 05:35:56.662 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 05:35:56.662 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:35:56.664 - INFO - echo $?
20190402 05:35:56.664 - INFO - +---------- END KW: SSHLibrary.Write (2)
20190402 05:35:56.664 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:35:56.664 - INFO - 0
20190402 05:35:56.664 - INFO - ${rc} = 0
20190402 05:35:56.664 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:35:56.665 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:35:56.665 - INFO - 0
20190402 05:35:56.665 - INFO - +---------- END KW: BuiltIn.Log (0)
20190402 05:35:56.665 - INFO - ${rc} = 0
20190402 05:35:56.665 - INFO - +--------- END KW: Utils.Get Return Code (3)
20190402 05:35:56.665 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:35:56.665 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:35:56.666 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:35:56.666 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:35:56.666 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:35:56.666 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:35:56.666 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:35:56.666 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Creating
20190402 05:35:56.666 - INFO - +--------- END KW: Collections.Log Dictionary (0)
20190402 05:35:56.667 - INFO - ${result} = {u'stdout': u'Creating', u'stderr': u'', u'rc': u'0'}
20190402 05:35:56.667 - INFO - +-------- END KW: Utils.Run Command (1061)
20190402 05:35:56.667 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:35:56.667 - INFO - ${value} = Creating
20190402 05:35:56.667 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 05:35:56.667 - INFO - ${current_value} = Creating
20190402 05:35:56.667 - INFO - +------- END KW: Utils.Get Property Value Of Command (1062)
20190402 05:35:56.667 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:35:56.667 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:35:56.668 - FAIL - Creating != Ready
20190402 05:35:56.668 - DEBUG - Traceback (most recent call last):
  None
20190402 05:35:56.668 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:35:56.668 - INFO - +------ END KW: Utils.Check Property Value Of Command (1065)
20190402 05:36:06.669 - INFO - +------ START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 05:36:06.670 - INFO - +------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:36:06.671 - INFO - +-------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:36:06.673 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:06.673 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:36:06.673 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:06.674 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:06.674 - INFO - &{result_dict} = { stdout= }
20190402 05:36:06.674 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:36:06.674 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:06.674 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:06.674 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:06.675 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:06.675 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:06.675 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:36:06.675 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 05:36:06.675 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:06.675 - INFO - +--------- END KW: SSHLibrary.Read (0)
20190402 05:36:06.675 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:06.693 - INFO - system host-disk-partition-show contro ller-0 37bf735d-2aa0-4c66-96fa-ec12d5420656 | grep -w status | awk '{print$4}'
20190402 05:36:06.693 - INFO - +--------- END KW: SSHLibrary.Write (18)
20190402 05:36:06.693 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:07.732 - INFO - Ready
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:07.732 - INFO - ${output} = Ready
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:07.732 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (1039)
20190402 05:36:07.732 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:07.733 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:07.733 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:07.733 - INFO - +---------- END KW: String.Get Line (0)
20190402 05:36:07.733 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:07.733 - INFO - ${clean_out} = Ready
20190402 05:36:07.733 - INFO - +---------- END KW: String.Remove String (0)
20190402 05:36:07.733 - INFO - ${output} = Ready
20190402 05:36:07.734 - INFO - +--------- END KW: Utils.Remove Prompt Line (2)
20190402 05:36:07.734 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 05:36:07.734 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:07.735 - INFO - echo $?
20190402 05:36:07.735 - INFO - +---------- END KW: SSHLibrary.Write (1)
20190402 05:36:07.735 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:07.736 - INFO - 0
20190402 05:36:07.736 - INFO - ${rc} = 0
20190402 05:36:07.736 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:36:07.736 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:07.736 - INFO - 0
20190402 05:36:07.736 - INFO - +---------- END KW: BuiltIn.Log (0)
20190402 05:36:07.736 - INFO - ${rc} = 0
20190402 05:36:07.736 - INFO - +--------- END KW: Utils.Get Return Code (2)
20190402 05:36:07.736 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:07.737 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:07.737 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:07.737 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:36:07.737 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:07.737 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:07.738 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:07.738 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Ready
20190402 05:36:07.738 - INFO - +--------- END KW: Collections.Log Dictionary (0)
20190402 05:36:07.738 - INFO - ${result} = {u'stdout': u'Ready', u'stderr': u'', u'rc': u'0'}
20190402 05:36:07.738 - INFO - +-------- END KW: Utils.Run Command (1067)
20190402 05:36:07.738 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:07.738 - INFO - ${value} = Ready
20190402 05:36:07.738 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 05:36:07.738 - INFO - ${current_value} = Ready
20190402 05:36:07.739 - INFO - +------- END KW: Utils.Get Property Value Of Command (1068)
20190402 05:36:07.739 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:36:07.739 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:36:07.739 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:36:07.739 - INFO - +------ END KW: Utils.Check Property Value Of Command (1071)
20190402 05:36:07.739 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (23208)
20190402 05:36:07.739 - INFO - +---- END KW: Utils.Add Disk Partition (24353)
20190402 05:36:07.739 - INFO - ${cgts_partition_uuid} = 37bf735d-2aa0-4c66-96fa-ec12d5420656
20190402 05:36:07.739 - INFO - +--- END KW: BuiltIn.Run Keyword If (24353)
20190402 05:36:07.739 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==True or ${setup_cgts}==True | Add Physical Volume | ${host} | ${lgv_name} | ${cgts_partition_uuid} ]
20190402 05:36:07.740 - INFO - +---- START KW: Utils.Add Physical Volume [ ${host} | ${lgv_name} | ${cgts_partition_uuid} ]
20190402 05:36:07.740 - INFO - +----- START KW: Utils.Run Command [ system host-pv-add ${host} ${lvg name} ${uid} | True ]
20190402 05:36:07.740 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:07.741 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:36:07.741 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:07.741 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:07.741 - INFO - &{result_dict} = { stdout= }
20190402 05:36:07.741 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:36:07.741 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:07.742 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:07.742 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:07.742 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:07.742 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:07.742 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:36:07.742 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 05:36:07.742 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:07.743 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 05:36:07.743 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:07.753 - INFO - system host-pv-add controller-0 nova-l ocal 37bf735d-2aa0-4c66-96fa-ec12d5420656
20190402 05:36:07.754 - INFO - +------ END KW: SSHLibrary.Write (11)
20190402 05:36:07.754 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:08.898 - INFO - +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | 3654b23d-951a-4f02-82a5-ac9700e16979             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 37bf735d-2aa0-4c66-96fa-ec12d5420656             |
| disk_or_part_device_node | /dev/sda6                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| lvm_pv_name              | /dev/sda6                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| created_at               | 2019-04-02T11:24:52.683184+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:08.899 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 05:36:08.899 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1145)
20190402 05:36:08.899 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:08.899 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:08.899 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:08.900 - INFO - +------- END KW: String.Get Line (1)
20190402 05:36:08.900 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:08.900 - INFO - ${clean_out} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 05:36:08.900 - INFO - +------- END KW: String.Remove String (0)
20190402 05:36:08.900 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 05:36:08.900 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 05:36:08.900 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 05:36:08.901 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:08.902 - INFO - echo $?
20190402 05:36:08.902 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:36:08.902 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:08.902 - INFO - 0
20190402 05:36:08.903 - INFO - ${rc} = 0
20190402 05:36:08.903 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:36:08.903 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:08.903 - INFO - 0
20190402 05:36:08.903 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 05:36:08.903 - INFO - ${rc} = 0
20190402 05:36:08.903 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 05:36:08.903 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:08.904 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:08.904 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:08.904 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 05:36:08.904 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:08.904 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:36:08.904 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:08.905 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | 3654b23d-951a-4f02-82a5-ac9700e16979             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 37bf735d-2aa0-4c66-96fa-ec12d5420656             |
| disk_or_part_device_node | /dev/sda6                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| lvm_pv_name              | /dev/sda6                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| created_at               | 2019-04-02T11:24:52.683184+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
20190402 05:36:08.905 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 05:36:08.905 - INFO - +----- END KW: Utils.Run Command (1165)
20190402 05:36:08.905 - INFO - +---- END KW: Utils.Add Physical Volume (1165)
20190402 05:36:08.905 - INFO - +--- END KW: BuiltIn.Run Keyword If (1166)
20190402 05:36:08.905 - INFO - +-- END KW: Utils.Setup Partitions (55708)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:36:08.905 - INFO - +-- START KW: Utils.Configure Ceph [ ${master_controller} | ${backend_type} ]
20190402 05:36:08.905 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-0' | Run Keywords | Add LVM Storage Backend | ${backend_type} | --confirmed | AND | Check Ceph Status | HEALTH_ERR ]
20190402 05:36:08.906 - INFO - +---- START KW: BuiltIn.Run Keywords [ Add LVM Storage Backend | ${backend_type} | --confirmed | AND | Check Ceph Status | HEALTH_ERR ]
20190402 05:36:08.906 - INFO - +----- START KW: Utils.Add LVM Storage Backend [ ${backend_type} | --confirmed ]
20190402 05:36:08.906 - INFO - +------ START KW: Utils.Run Command [ system storage-backend-add ${backend} ${args} | True ]
20190402 05:36:08.907 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:08.907 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:36:08.907 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:08.907 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:08.907 - INFO - &{result_dict} = { stdout= }
20190402 05:36:08.908 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:36:08.908 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:08.908 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:08.908 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:08.908 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:08.908 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:08.908 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:36:08.908 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:36:08.909 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:08.909 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:36:08.909 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:08.915 - INFO - system storage-backend-add ceph --conf irmed
20190402 05:36:08.915 - INFO - +------- END KW: SSHLibrary.Write (6)
20190402 05:36:08.916 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:12.745 - INFO - System configuration has changed.
Please follow the administrator guide to complete configuring the system.

+--------------------------------------+------------+---------+-------------+------+----------+--------------------+
| uuid                                 | name       | backend | state       | task | services | capabilities       |
+--------------------------------------+------------+---------+-------------+------+----------+--------------------+
| 75981062-d688-4d6d-b1b2-32887c1200db | file-store | file    | configured  | None | glance   |                    |
| e38d5d2f-3433-43e4-aaf3-4e4d3a634acd | ceph-store | ceph    | configuring | {}   | None     | min_replication: 1 |
|                                      |            |         |             |      |          | replication: 2     |
+--------------------------------------+------------+---------+-------------+------+----------+--------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:12.746 - INFO - ${output} = 
System configuration has changed.
Please follow the administrator guide to complete configuring the system.

+--------------------------------------+------------+---------+-------------+------+--...
20190402 05:36:12.746 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (3830)
20190402 05:36:12.746 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:12.746 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:12.747 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:12.747 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:36:12.747 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:12.747 - INFO - ${clean_out} = 
System configuration has changed.
Please follow the administrator guide to complete configuring the system.

+--------------------------------------+------------+---------+-------------+------+--...
20190402 05:36:12.747 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:36:12.747 - INFO - ${output} = 
System configuration has changed.
Please follow the administrator guide to complete configuring the system.

+--------------------------------------+------------+---------+-------------+------+--...
20190402 05:36:12.747 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:12.747 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:36:12.748 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:12.749 - INFO - echo $?
20190402 05:36:12.749 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:36:12.749 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:12.750 - INFO - 0
20190402 05:36:12.750 - INFO - ${rc} = 0
20190402 05:36:12.750 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:36:12.750 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:12.751 - INFO - 0
20190402 05:36:12.751 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:36:12.751 - INFO - ${rc} = 0
20190402 05:36:12.751 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 05:36:12.751 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:12.751 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:12.752 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:12.752 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:36:12.752 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:12.752 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:12.752 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:12.752 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: System configuration has changed.
Please follow the administrator guide to complete configuring the system.

+--------------------------------------+------------+---------+-------------+------+----------+--------------------+
| uuid                                 | name       | backend | state       | task | services | capabilities       |
+--------------------------------------+------------+---------+-------------+------+----------+--------------------+
| 75981062-d688-4d6d-b1b2-32887c1200db | file-store | file    | configured  | None | glance   |                    |
| e38d5d2f-3433-43e4-aaf3-4e4d3a634acd | ceph-store | ceph    | configuring | {}   | None     | min_replication: 1 |
|                                      |            |         |             |      |          | replication: 2     |
+--------------------------------------+------------+---------+-------------+------+----------+--------------------+
20190402 05:36:12.753 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:36:12.753 - INFO - +------ END KW: Utils.Run Command (3847)
20190402 05:36:12.753 - INFO - +------ START KW: Utils.Get LVM Storage Backend UID [ ${backend} ]
20190402 05:36:12.753 - INFO - +------- START KW: Utils.Run Command [ system storage-backend-list | grep ${backend} | awk '{print $2}' ]
20190402 05:36:12.754 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:12.754 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:36:12.754 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:12.754 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:12.754 - INFO - &{result_dict} = { stdout= }
20190402 05:36:12.755 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:36:12.755 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:12.755 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:12.755 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:12.755 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:12.755 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:12.755 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:36:12.756 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:36:12.756 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:12.756 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:36:12.756 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:12.765 - INFO - system storage-backend-list | grep cep h | awk '{print $2}'
20190402 05:36:12.765 - INFO - +-------- END KW: SSHLibrary.Write (9)
20190402 05:36:12.765 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:13.897 - INFO - e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:13.897 - INFO - ${output} = e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:13.898 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1133)
20190402 05:36:13.898 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:13.898 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:13.898 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:13.898 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:36:13.898 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:13.899 - INFO - ${clean_out} = e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
20190402 05:36:13.899 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:36:13.899 - INFO - ${output} = e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
20190402 05:36:13.899 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:13.899 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:36:13.899 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:13.901 - INFO - echo $?
20190402 05:36:13.901 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:36:13.901 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:13.902 - INFO - 0
20190402 05:36:13.902 - INFO - ${rc} = 0
20190402 05:36:13.902 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:36:13.902 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:13.902 - INFO - 0
20190402 05:36:13.902 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:36:13.902 - INFO - ${rc} = 0
20190402 05:36:13.902 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:36:13.902 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:13.903 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:13.903 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:13.903 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:36:13.903 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:13.903 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:13.903 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:13.904 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
20190402 05:36:13.904 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:36:13.904 - INFO - ${result} = {u'stdout': u'e38d5d2f-3433-43e4-aaf3-4e4d3a634acd', u'stderr': u'', u'rc': u'0'}
20190402 05:36:13.904 - INFO - +------- END KW: Utils.Run Command (1151)
20190402 05:36:13.904 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:13.904 - INFO - ${value} = e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
20190402 05:36:13.904 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:36:13.904 - INFO - ${name} = e38d5d2f-3433-43e4-aaf3-4e4d3a634acd
20190402 05:36:13.904 - INFO - +------ END KW: Utils.Get LVM Storage Backend UID (1151)
20190402 05:36:13.905 - INFO - +------ START KW: BuiltIn.Wait Until Keyword Succeeds [ 30 min | 10 sec | Check Property Value Of Command | system storage-backend-show ${name} | state | configured ]
20190402 05:36:13.905 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:36:13.905 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:36:13.906 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:36:13.906 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:13.906 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:36:13.906 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:13.906 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:13.907 - INFO - &{result_dict} = { stdout= }
20190402 05:36:13.907 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:36:13.907 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:13.907 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:13.907 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:13.908 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:13.908 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:13.908 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:36:13.908 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:36:13.908 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:13.908 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:36:13.908 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:13.922 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:36:13.922 - INFO - +---------- END KW: SSHLibrary.Write (14)
20190402 05:36:13.922 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:15.018 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:15.018 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:15.018 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1096)
20190402 05:36:15.019 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:15.019 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:15.019 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:15.019 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:36:15.019 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:15.019 - INFO - ${clean_out} = configuring
20190402 05:36:15.020 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:36:15.020 - INFO - ${output} = configuring
20190402 05:36:15.020 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:15.020 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:36:15.020 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:15.021 - INFO - echo $?
20190402 05:36:15.021 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:36:15.021 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:15.022 - INFO - 0
20190402 05:36:15.022 - INFO - ${rc} = 0
20190402 05:36:15.022 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:36:15.022 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:15.022 - INFO - 0
20190402 05:36:15.022 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:36:15.023 - INFO - ${rc} = 0
20190402 05:36:15.023 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:36:15.023 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:15.023 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:15.023 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:15.023 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:36:15.024 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:15.024 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:15.024 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:15.024 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:36:15.024 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:36:15.024 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:36:15.024 - INFO - +--------- END KW: Utils.Run Command (1118)
20190402 05:36:15.024 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:15.025 - INFO - ${value} = configuring
20190402 05:36:15.025 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:36:15.025 - INFO - ${current_value} = configuring
20190402 05:36:15.025 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1120)
20190402 05:36:15.025 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:36:15.025 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:36:15.025 - FAIL - configuring != configured
20190402 05:36:15.025 - DEBUG - Traceback (most recent call last):
  None
20190402 05:36:15.025 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:36:15.025 - INFO - +------- END KW: Utils.Check Property Value Of Command (1120)
20190402 05:36:25.026 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:36:25.028 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:36:25.029 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:36:25.031 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:25.031 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:36:25.031 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:25.032 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:25.032 - INFO - &{result_dict} = { stdout= }
20190402 05:36:25.032 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:36:25.032 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:25.032 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:25.033 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:25.033 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:25.033 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:25.033 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:36:25.033 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:36:25.033 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:25.033 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:36:25.033 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:25.047 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:36:25.047 - INFO - +---------- END KW: SSHLibrary.Write (14)
20190402 05:36:25.047 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:26.122 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:26.122 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:26.122 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1075)
20190402 05:36:26.122 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:26.122 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:26.123 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:26.123 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:36:26.123 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:26.123 - INFO - ${clean_out} = configuring
20190402 05:36:26.123 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:36:26.123 - INFO - ${output} = configuring
20190402 05:36:26.123 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:26.123 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:36:26.123 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:26.125 - INFO - echo $?
20190402 05:36:26.125 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:36:26.125 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:26.126 - INFO - 0
20190402 05:36:26.126 - INFO - ${rc} = 0
20190402 05:36:26.126 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:36:26.126 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:26.126 - INFO - 0
20190402 05:36:26.126 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:36:26.126 - INFO - ${rc} = 0
20190402 05:36:26.126 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:36:26.126 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:26.127 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:26.127 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:26.127 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:36:26.127 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:26.127 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:26.127 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:26.128 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:36:26.128 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:36:26.128 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:36:26.128 - INFO - +--------- END KW: Utils.Run Command (1099)
20190402 05:36:26.128 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:26.128 - INFO - ${value} = configuring
20190402 05:36:26.128 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:36:26.128 - INFO - ${current_value} = configuring
20190402 05:36:26.128 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1100)
20190402 05:36:26.129 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:36:26.129 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:36:26.129 - FAIL - configuring != configured
20190402 05:36:26.129 - DEBUG - Traceback (most recent call last):
  None
20190402 05:36:26.129 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:36:26.129 - INFO - +------- END KW: Utils.Check Property Value Of Command (1103)
20190402 05:36:36.130 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:36:36.131 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:36:36.133 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:36:36.134 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:36.135 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:36:36.135 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:36.137 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:36.139 - INFO - &{result_dict} = { stdout= }
20190402 05:36:36.140 - INFO - +----------- END KW: BuiltIn.Create Dictionary (3)
20190402 05:36:36.140 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:36.142 - INFO - +----------- END KW: Collections.Set To Dictionary (2)
20190402 05:36:36.142 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:36.144 - INFO - +----------- END KW: Collections.Set To Dictionary (2)
20190402 05:36:36.144 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:36.145 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (10)
20190402 05:36:36.145 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:36:36.145 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:36.146 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:36:36.146 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:36.183 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:36:36.183 - INFO - +---------- END KW: SSHLibrary.Write (37)
20190402 05:36:36.183 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:37.230 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:37.231 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:37.231 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1048)
20190402 05:36:37.231 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:37.231 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:37.231 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:37.231 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:36:37.231 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:37.232 - INFO - ${clean_out} = configuring
20190402 05:36:37.232 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:36:37.232 - INFO - ${output} = configuring
20190402 05:36:37.232 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:37.232 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:36:37.232 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:37.234 - INFO - echo $?
20190402 05:36:37.234 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:36:37.234 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:37.234 - INFO - 0
20190402 05:36:37.234 - INFO - ${rc} = 0
20190402 05:36:37.234 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:36:37.234 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:37.234 - INFO - 0
20190402 05:36:37.235 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:36:37.235 - INFO - ${rc} = 0
20190402 05:36:37.235 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:36:37.235 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:37.235 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:37.235 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:37.236 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:36:37.236 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:37.236 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:37.236 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:37.236 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:36:37.236 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:36:37.236 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:36:37.236 - INFO - +--------- END KW: Utils.Run Command (1104)
20190402 05:36:37.236 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:37.237 - INFO - ${value} = configuring
20190402 05:36:37.237 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:36:37.237 - INFO - ${current_value} = configuring
20190402 05:36:37.237 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1106)
20190402 05:36:37.237 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:36:37.237 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:36:37.237 - FAIL - configuring != configured
20190402 05:36:37.237 - DEBUG - Traceback (most recent call last):
  None
20190402 05:36:37.237 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:36:37.238 - INFO - +------- END KW: Utils.Check Property Value Of Command (1107)
20190402 05:36:47.239 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:36:47.241 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:36:47.243 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:36:47.245 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:47.246 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:36:47.247 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:47.248 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:47.249 - INFO - &{result_dict} = { stdout= }
20190402 05:36:47.249 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:36:47.250 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:47.252 - INFO - +----------- END KW: Collections.Set To Dictionary (2)
20190402 05:36:47.253 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:47.254 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:47.254 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:47.255 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (8)
20190402 05:36:47.255 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:36:47.255 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:47.256 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:36:47.256 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:47.295 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:36:47.296 - INFO - +---------- END KW: SSHLibrary.Write (39)
20190402 05:36:47.296 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:48.336 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:48.336 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:48.336 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1040)
20190402 05:36:48.336 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:48.337 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:48.337 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:48.337 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:36:48.337 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:48.337 - INFO - ${clean_out} = configuring
20190402 05:36:48.337 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:36:48.337 - INFO - ${output} = configuring
20190402 05:36:48.337 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:48.338 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:36:48.338 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:48.339 - INFO - echo $?
20190402 05:36:48.340 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:36:48.340 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:48.340 - INFO - 0
20190402 05:36:48.340 - INFO - ${rc} = 0
20190402 05:36:48.340 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:36:48.340 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:48.340 - INFO - 0
20190402 05:36:48.341 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:36:48.341 - INFO - ${rc} = 0
20190402 05:36:48.341 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:36:48.341 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:48.341 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:48.341 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:48.342 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:36:48.342 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:48.342 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:48.342 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:48.342 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:36:48.342 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:36:48.342 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:36:48.342 - INFO - +--------- END KW: Utils.Run Command (1099)
20190402 05:36:48.342 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:48.343 - INFO - ${value} = configuring
20190402 05:36:48.343 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:36:48.343 - INFO - ${current_value} = configuring
20190402 05:36:48.343 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1102)
20190402 05:36:48.343 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:36:48.343 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:36:48.343 - FAIL - configuring != configured
20190402 05:36:48.343 - DEBUG - Traceback (most recent call last):
  None
20190402 05:36:48.343 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:36:48.343 - INFO - +------- END KW: Utils.Check Property Value Of Command (1105)
20190402 05:36:58.344 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:36:58.346 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:36:58.347 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:36:58.349 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:36:58.349 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:36:58.349 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:36:58.350 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:36:58.350 - INFO - &{result_dict} = { stdout= }
20190402 05:36:58.350 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:36:58.350 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:36:58.350 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:58.350 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:36:58.351 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:58.351 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:36:58.351 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:36:58.351 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:36:58.351 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:58.351 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:36:58.351 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:36:58.369 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:36:58.369 - INFO - +---------- END KW: SSHLibrary.Write (18)
20190402 05:36:58.369 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:36:59.429 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:59.430 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:59.430 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1061)
20190402 05:36:59.430 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:36:59.430 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:36:59.430 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:36:59.431 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:36:59.431 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:36:59.431 - INFO - ${clean_out} = configuring
20190402 05:36:59.431 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:36:59.431 - INFO - ${output} = configuring
20190402 05:36:59.431 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:36:59.431 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:36:59.431 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:36:59.433 - INFO - echo $?
20190402 05:36:59.434 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:36:59.434 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:36:59.434 - INFO - 0
20190402 05:36:59.434 - INFO - ${rc} = 0
20190402 05:36:59.434 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:36:59.434 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:36:59.434 - INFO - 0
20190402 05:36:59.434 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:36:59.435 - INFO - ${rc} = 0
20190402 05:36:59.435 - INFO - +---------- END KW: Utils.Get Return Code (4)
20190402 05:36:59.435 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:36:59.435 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:36:59.435 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:36:59.435 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:36:59.435 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:36:59.436 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:36:59.436 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:36:59.436 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:36:59.436 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:36:59.436 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:36:59.436 - INFO - +--------- END KW: Utils.Run Command (1089)
20190402 05:36:59.436 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:36:59.436 - INFO - ${value} = configuring
20190402 05:36:59.437 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:36:59.437 - INFO - ${current_value} = configuring
20190402 05:36:59.437 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1091)
20190402 05:36:59.437 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:36:59.437 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:36:59.437 - FAIL - configuring != configured
20190402 05:36:59.437 - DEBUG - Traceback (most recent call last):
  None
20190402 05:36:59.437 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:36:59.437 - INFO - +------- END KW: Utils.Check Property Value Of Command (1093)
20190402 05:37:09.438 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:37:09.440 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:37:09.441 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:37:09.443 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:37:09.443 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:37:09.443 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:37:09.443 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:37:09.444 - INFO - &{result_dict} = { stdout= }
20190402 05:37:09.444 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:37:09.444 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:37:09.444 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:09.444 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:37:09.444 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:09.445 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:37:09.445 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:37:09.445 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:37:09.445 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:09.445 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:37:09.445 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:37:09.460 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:37:09.460 - INFO - +---------- END KW: SSHLibrary.Write (15)
20190402 05:37:09.460 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:37:10.539 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:10.539 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:10.539 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1079)
20190402 05:37:10.539 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:37:10.540 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:37:10.540 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:10.540 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:37:10.540 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:37:10.540 - INFO - ${clean_out} = configuring
20190402 05:37:10.540 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:37:10.541 - INFO - ${output} = configuring
20190402 05:37:10.541 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:37:10.541 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:37:10.541 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:37:10.542 - INFO - echo $?
20190402 05:37:10.543 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:37:10.543 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:37:10.543 - INFO - 0
20190402 05:37:10.543 - INFO - ${rc} = 0
20190402 05:37:10.543 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:37:10.543 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:37:10.543 - INFO - 0
20190402 05:37:10.544 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:37:10.544 - INFO - ${rc} = 0
20190402 05:37:10.544 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:37:10.544 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:37:10.544 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:37:10.544 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:10.544 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:37:10.545 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:37:10.545 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:10.545 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:37:10.545 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:37:10.545 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:37:10.545 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:37:10.545 - INFO - +--------- END KW: Utils.Run Command (1104)
20190402 05:37:10.545 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:37:10.546 - INFO - ${value} = configuring
20190402 05:37:10.546 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:37:10.546 - INFO - ${current_value} = configuring
20190402 05:37:10.546 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1106)
20190402 05:37:10.546 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:37:10.546 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:37:10.546 - FAIL - configuring != configured
20190402 05:37:10.546 - DEBUG - Traceback (most recent call last):
  None
20190402 05:37:10.546 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:37:10.546 - INFO - +------- END KW: Utils.Check Property Value Of Command (1108)
20190402 05:37:20.547 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:37:20.549 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:37:20.550 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:37:20.552 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:37:20.552 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:37:20.552 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:37:20.553 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:37:20.553 - INFO - &{result_dict} = { stdout= }
20190402 05:37:20.553 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:37:20.553 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:37:20.553 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:20.553 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:37:20.554 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:37:20.554 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:37:20.554 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:37:20.554 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:37:20.554 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:20.554 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:37:20.554 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:37:20.569 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:37:20.569 - INFO - +---------- END KW: SSHLibrary.Write (15)
20190402 05:37:20.569 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:37:21.680 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:21.680 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:21.681 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1111)
20190402 05:37:21.681 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:37:21.681 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:37:21.681 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:21.681 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:37:21.681 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:37:21.682 - INFO - ${clean_out} = configuring
20190402 05:37:21.682 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:37:21.682 - INFO - ${output} = configuring
20190402 05:37:21.682 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:37:21.682 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:37:21.682 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:37:21.683 - INFO - echo $?
20190402 05:37:21.683 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:37:21.684 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:37:21.684 - INFO - 0
20190402 05:37:21.684 - INFO - ${rc} = 0
20190402 05:37:21.685 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:37:21.685 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:37:21.685 - INFO - 0
20190402 05:37:21.685 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:37:21.685 - INFO - ${rc} = 0
20190402 05:37:21.685 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:37:21.685 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:37:21.686 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:37:21.686 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:21.686 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:37:21.686 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:37:21.686 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:21.686 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:37:21.686 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:37:21.686 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:37:21.687 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:37:21.687 - INFO - +--------- END KW: Utils.Run Command (1137)
20190402 05:37:21.687 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:37:21.687 - INFO - ${value} = configuring
20190402 05:37:21.687 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:37:21.687 - INFO - ${current_value} = configuring
20190402 05:37:21.687 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1138)
20190402 05:37:21.687 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:37:21.687 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:37:21.688 - FAIL - configuring != configured
20190402 05:37:21.688 - DEBUG - Traceback (most recent call last):
  None
20190402 05:37:21.688 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:37:21.688 - INFO - +------- END KW: Utils.Check Property Value Of Command (1141)
20190402 05:37:31.689 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:37:31.690 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:37:31.691 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:37:31.693 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:37:31.693 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:37:31.693 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:37:31.694 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:37:31.694 - INFO - &{result_dict} = { stdout= }
20190402 05:37:31.694 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:37:31.694 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:37:31.694 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:31.695 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:37:31.695 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:31.695 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:37:31.695 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:37:31.695 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:37:31.695 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:31.695 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:37:31.695 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:37:31.714 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:37:31.714 - INFO - +---------- END KW: SSHLibrary.Write (19)
20190402 05:37:31.714 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:37:32.789 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:32.790 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:32.790 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1076)
20190402 05:37:32.790 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:37:32.790 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:37:32.790 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:32.790 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:37:32.791 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:37:32.791 - INFO - ${clean_out} = configuring
20190402 05:37:32.791 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:37:32.791 - INFO - ${output} = configuring
20190402 05:37:32.791 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:37:32.791 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:37:32.791 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:37:32.793 - INFO - echo $?
20190402 05:37:32.793 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:37:32.793 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:37:32.793 - INFO - 0
20190402 05:37:32.794 - INFO - ${rc} = 0
20190402 05:37:32.794 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:37:32.794 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:37:32.794 - INFO - 0
20190402 05:37:32.794 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:37:32.794 - INFO - ${rc} = 0
20190402 05:37:32.794 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:37:32.794 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:37:32.795 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:37:32.795 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:32.795 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:37:32.795 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:37:32.796 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:37:32.796 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:37:32.796 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:37:32.796 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:37:32.796 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:37:32.796 - INFO - +--------- END KW: Utils.Run Command (1105)
20190402 05:37:32.796 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:37:32.796 - INFO - ${value} = configuring
20190402 05:37:32.796 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:37:32.797 - INFO - ${current_value} = configuring
20190402 05:37:32.797 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1107)
20190402 05:37:32.797 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:37:32.797 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:37:32.797 - FAIL - configuring != configured
20190402 05:37:32.797 - DEBUG - Traceback (most recent call last):
  None
20190402 05:37:32.797 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:37:32.797 - INFO - +------- END KW: Utils.Check Property Value Of Command (1108)
20190402 05:37:42.798 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:37:42.800 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:37:42.801 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:37:42.802 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:37:42.803 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:37:42.803 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:37:42.803 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:37:42.804 - INFO - &{result_dict} = { stdout= }
20190402 05:37:42.804 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:37:42.804 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:37:42.804 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:42.804 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:37:42.804 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:42.805 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:37:42.805 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:37:42.805 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:37:42.805 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:42.805 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:37:42.805 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:37:42.821 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:37:42.821 - INFO - +---------- END KW: SSHLibrary.Write (16)
20190402 05:37:42.821 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:37:43.902 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:43.902 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:43.902 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1081)
20190402 05:37:43.902 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:37:43.902 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:37:43.903 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:43.903 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:37:43.903 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:37:43.903 - INFO - ${clean_out} = configuring
20190402 05:37:43.903 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:37:43.903 - INFO - ${output} = configuring
20190402 05:37:43.903 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:37:43.903 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:37:43.904 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:37:43.905 - INFO - echo $?
20190402 05:37:43.905 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:37:43.906 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:37:43.906 - INFO - 0
20190402 05:37:43.906 - INFO - ${rc} = 0
20190402 05:37:43.906 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:37:43.906 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:37:43.906 - INFO - 0
20190402 05:37:43.906 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:37:43.906 - INFO - ${rc} = 0
20190402 05:37:43.907 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:37:43.907 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:37:43.907 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:37:43.907 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:43.907 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:37:43.907 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:37:43.908 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:37:43.908 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:37:43.908 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:37:43.908 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:37:43.908 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:37:43.908 - INFO - +--------- END KW: Utils.Run Command (1107)
20190402 05:37:43.908 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:37:43.908 - INFO - ${value} = configuring
20190402 05:37:43.908 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:37:43.909 - INFO - ${current_value} = configuring
20190402 05:37:43.909 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1110)
20190402 05:37:43.909 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:37:43.909 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:37:43.909 - FAIL - configuring != configured
20190402 05:37:43.909 - DEBUG - Traceback (most recent call last):
  None
20190402 05:37:43.909 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:37:43.909 - INFO - +------- END KW: Utils.Check Property Value Of Command (1111)
20190402 05:37:53.910 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:37:53.912 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:37:53.913 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:37:53.915 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:37:53.915 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:37:53.915 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:37:53.916 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:37:53.916 - INFO - &{result_dict} = { stdout= }
20190402 05:37:53.916 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:37:53.916 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:37:53.916 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:53.917 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:37:53.917 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:53.917 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:37:53.917 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:37:53.917 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:37:53.917 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:53.917 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:37:53.917 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:37:53.933 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:37:53.933 - INFO - +---------- END KW: SSHLibrary.Write (16)
20190402 05:37:53.933 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:37:55.002 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:55.002 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:55.003 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1069)
20190402 05:37:55.003 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:37:55.003 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:37:55.003 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:37:55.003 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:37:55.003 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:37:55.004 - INFO - ${clean_out} = configuring
20190402 05:37:55.004 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:37:55.004 - INFO - ${output} = configuring
20190402 05:37:55.004 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:37:55.004 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:37:55.004 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:37:55.006 - INFO - echo $?
20190402 05:37:55.006 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:37:55.006 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:37:55.006 - INFO - 0
20190402 05:37:55.006 - INFO - ${rc} = 0
20190402 05:37:55.006 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:37:55.006 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:37:55.006 - INFO - 0
20190402 05:37:55.007 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:37:55.007 - INFO - ${rc} = 0
20190402 05:37:55.007 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:37:55.007 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:37:55.007 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:37:55.008 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:55.008 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:37:55.008 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:37:55.008 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:37:55.008 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:37:55.008 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:37:55.008 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:37:55.008 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:37:55.008 - INFO - +--------- END KW: Utils.Run Command (1095)
20190402 05:37:55.008 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:37:55.009 - INFO - ${value} = configuring
20190402 05:37:55.009 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:37:55.009 - INFO - ${current_value} = configuring
20190402 05:37:55.009 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1097)
20190402 05:37:55.009 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:37:55.009 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:37:55.009 - FAIL - configuring != configured
20190402 05:37:55.009 - DEBUG - Traceback (most recent call last):
  None
20190402 05:37:55.009 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:37:55.010 - INFO - +------- END KW: Utils.Check Property Value Of Command (1100)
20190402 05:38:05.010 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:38:05.012 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:38:05.013 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:38:05.015 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:05.015 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:05.015 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:05.016 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:05.016 - INFO - &{result_dict} = { stdout= }
20190402 05:38:05.016 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:38:05.016 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:05.016 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:05.017 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:05.017 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:05.017 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:05.017 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:05.017 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:38:05.017 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:05.017 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:38:05.017 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:05.036 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:38:05.037 - INFO - +---------- END KW: SSHLibrary.Write (20)
20190402 05:38:05.037 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:06.193 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:06.193 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:06.193 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1156)
20190402 05:38:06.193 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:06.194 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:06.194 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:06.194 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:38:06.194 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:06.195 - INFO - ${clean_out} = configuring
20190402 05:38:06.195 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:38:06.195 - INFO - ${output} = configuring
20190402 05:38:06.195 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:38:06.195 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:38:06.195 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:06.198 - INFO - echo $?
20190402 05:38:06.198 - INFO - +----------- END KW: SSHLibrary.Write (3)
20190402 05:38:06.198 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:06.198 - INFO - 0
20190402 05:38:06.199 - INFO - ${rc} = 0
20190402 05:38:06.199 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:06.199 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:06.199 - INFO - 0
20190402 05:38:06.199 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:38:06.200 - INFO - ${rc} = 0
20190402 05:38:06.200 - INFO - +---------- END KW: Utils.Get Return Code (5)
20190402 05:38:06.200 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:06.200 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:06.201 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:06.201 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:06.201 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:06.201 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:06.202 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:06.202 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:38:06.202 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:38:06.202 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:38:06.202 - INFO - +--------- END KW: Utils.Run Command (1189)
20190402 05:38:06.203 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:38:06.203 - INFO - ${value} = configuring
20190402 05:38:06.203 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:38:06.203 - INFO - ${current_value} = configuring
20190402 05:38:06.203 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1191)
20190402 05:38:06.204 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:38:06.204 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:38:06.204 - FAIL - configuring != configured
20190402 05:38:06.204 - DEBUG - Traceback (most recent call last):
  None
20190402 05:38:06.204 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:38:06.204 - INFO - +------- END KW: Utils.Check Property Value Of Command (1194)
20190402 05:38:16.205 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:38:16.205 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:38:16.206 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:38:16.206 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:16.207 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:38:16.207 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:16.207 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:16.208 - INFO - &{result_dict} = { stdout= }
20190402 05:38:16.208 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:16.208 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:16.208 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:16.208 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:16.209 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:16.209 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:16.209 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:16.209 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:38:16.209 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:16.209 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:38:16.209 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:16.229 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:38:16.229 - INFO - +---------- END KW: SSHLibrary.Write (20)
20190402 05:38:16.229 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:17.302 - INFO - configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:17.302 - INFO - ${output} = configuring
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:17.302 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1073)
20190402 05:38:17.302 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:17.303 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:17.303 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:17.303 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:38:17.303 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:17.303 - INFO - ${clean_out} = configuring
20190402 05:38:17.303 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:38:17.304 - INFO - ${output} = configuring
20190402 05:38:17.304 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:38:17.304 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:38:17.304 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:17.306 - INFO - echo $?
20190402 05:38:17.306 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:38:17.306 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:17.306 - INFO - 0
20190402 05:38:17.307 - INFO - ${rc} = 0
20190402 05:38:17.307 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:17.307 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:17.307 - INFO - 0
20190402 05:38:17.307 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:38:17.307 - INFO - ${rc} = 0
20190402 05:38:17.307 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:38:17.307 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:17.308 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:17.308 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:17.308 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:17.308 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:17.308 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:17.308 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:17.309 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configuring
20190402 05:38:17.309 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:38:17.309 - INFO - ${result} = {u'stdout': u'configuring', u'stderr': u'', u'rc': u'0'}
20190402 05:38:17.309 - INFO - +--------- END KW: Utils.Run Command (1103)
20190402 05:38:17.309 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:38:17.309 - INFO - ${value} = configuring
20190402 05:38:17.309 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:38:17.309 - INFO - ${current_value} = configuring
20190402 05:38:17.309 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1104)
20190402 05:38:17.310 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:38:17.310 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:38:17.310 - FAIL - configuring != configured
20190402 05:38:17.310 - DEBUG - Traceback (most recent call last):
  None
20190402 05:38:17.310 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:38:17.310 - INFO - +------- END KW: Utils.Check Property Value Of Command (1105)
20190402 05:38:27.310 - INFO - +------- START KW: Utils.Check Property Value Of Command [ system storage-backend-show ${name} | state | configured ]
20190402 05:38:27.311 - INFO - +-------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 05:38:27.311 - INFO - +--------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 05:38:27.312 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:27.312 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:27.312 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:27.313 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:27.313 - INFO - &{result_dict} = { stdout= }
20190402 05:38:27.313 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:27.313 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:27.314 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:27.314 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:27.314 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:27.314 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:27.314 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:27.315 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:38:27.315 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:27.315 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:38:27.315 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:27.332 - INFO - system storage-backend-show e38d5d2f-3 433-43e4-aaf3-4e4d3a634acd | grep -w state | awk '{print$4}'
20190402 05:38:27.332 - INFO - +---------- END KW: SSHLibrary.Write (17)
20190402 05:38:27.332 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:28.471 - INFO - configured
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.472 - INFO - ${output} = configured
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.472 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1140)
20190402 05:38:28.472 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:28.472 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:28.472 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.473 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:38:28.473 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:28.473 - INFO - ${clean_out} = configured
20190402 05:38:28.473 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:38:28.473 - INFO - ${output} = configured
20190402 05:38:28.473 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:28.473 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:38:28.474 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:28.478 - INFO - echo $?
20190402 05:38:28.478 - INFO - +----------- END KW: SSHLibrary.Write (4)
20190402 05:38:28.478 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:28.478 - INFO - 0
20190402 05:38:28.478 - INFO - ${rc} = 0
20190402 05:38:28.478 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:38:28.478 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:28.478 - INFO - 0
20190402 05:38:28.478 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:38:28.479 - INFO - ${rc} = 0
20190402 05:38:28.479 - INFO - +---------- END KW: Utils.Get Return Code (6)
20190402 05:38:28.479 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:28.479 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:28.480 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:28.480 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:28.480 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:28.480 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.480 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:28.480 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: configured
20190402 05:38:28.480 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:38:28.481 - INFO - ${result} = {u'stdout': u'configured', u'stderr': u'', u'rc': u'0'}
20190402 05:38:28.481 - INFO - +--------- END KW: Utils.Run Command (1170)
20190402 05:38:28.481 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:38:28.481 - INFO - ${value} = configured
20190402 05:38:28.481 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:38:28.481 - INFO - ${current_value} = configured
20190402 05:38:28.481 - INFO - +-------- END KW: Utils.Get Property Value Of Command (1170)
20190402 05:38:28.481 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:38:28.481 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:38:28.482 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:38:28.482 - INFO - +------- END KW: Utils.Check Property Value Of Command (1172)
20190402 05:38:28.482 - INFO - +------ END KW: BuiltIn.Wait Until Keyword Succeeds (134578)
20190402 05:38:28.482 - INFO - +----- END KW: Utils.Add LVM Storage Backend (139576)
20190402 05:38:28.482 - INFO - +----- START KW: Utils.Check Ceph Status [ HEALTH_ERR ]
20190402 05:38:28.482 - INFO - +------ START KW: Utils.Run Command [ ceph -s ]
20190402 05:38:28.483 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:28.483 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:38:28.483 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:28.483 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:28.483 - INFO - &{result_dict} = { stdout= }
20190402 05:38:28.484 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:38:28.484 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:28.484 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.484 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:28.484 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.484 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:28.484 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:38:28.485 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:38:28.485 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.485 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:38:28.485 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:28.486 - INFO - ceph -s
20190402 05:38:28.486 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:38:28.487 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:28.632 - INFO - cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_ERR
            no osds
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 3, quorum 0 controller
     osdmap e2: 0 osds: 0 up, 0 in
            flags sortbitwise,require_jewel_osds
      pgmap v3: 64 pgs, 1 pools, 0 bytes data, 0 objects
            0 kB used, 0 kB / 0 kB avail
                  64 creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.632 - INFO - ${output} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_ERR
            no osds
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 3, quorum 0 controll...
20190402 05:38:28.632 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (145)
20190402 05:38:28.632 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:28.632 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:28.633 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.633 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:38:28.633 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:28.633 - INFO - ${clean_out} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_ERR
            no osds
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 3, quorum 0 controll...
20190402 05:38:28.633 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:38:28.633 - INFO - ${output} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_ERR
            no osds
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 3, quorum 0 controll...
20190402 05:38:28.633 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:28.633 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:38:28.633 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:28.635 - INFO - echo $?
20190402 05:38:28.635 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:38:28.635 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:28.636 - INFO - 0
20190402 05:38:28.636 - INFO - ${rc} = 0
20190402 05:38:28.636 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:28.636 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:28.636 - INFO - 0
20190402 05:38:28.636 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:38:28.636 - INFO - ${rc} = 0
20190402 05:38:28.636 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:38:28.636 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:28.637 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:28.637 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.637 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:28.637 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:28.637 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.638 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:28.638 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_ERR
            no osds
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 3, quorum 0 controller
     osdmap e2: 0 osds: 0 up, 0 in
            flags sortbitwise,require_jewel_osds
      pgmap v3: 64 pgs, 1 pools, 0 bytes data, 0 objects
            0 kB used, 0 kB / 0 kB avail
                  64 creating
20190402 05:38:28.638 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:38:28.638 - INFO - ${result} = {u'stdout': u'cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7\r\n     health HEALTH_ERR\r\n            no osds\r\n     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}\r\n            election epoch 3,...
20190402 05:38:28.638 - INFO - +------ END KW: Utils.Run Command (156)
20190402 05:38:28.638 - INFO - +------ START KW: BuiltIn.Should Contain [ ${result.stdout} | ${status} ]
20190402 05:38:28.638 - INFO - +------ END KW: BuiltIn.Should Contain (0)
20190402 05:38:28.638 - INFO - +------ START KW: Utils.Run Command [ ceph osd tree | True ]
20190402 05:38:28.639 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:28.639 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:28.639 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:28.639 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:28.640 - INFO - &{result_dict} = { stdout= }
20190402 05:38:28.640 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:28.640 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:28.640 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.640 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:28.640 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.641 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:28.641 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:28.641 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:38:28.641 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.641 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:38:28.641 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:28.643 - INFO - ceph osd tree
20190402 05:38:28.643 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:38:28.643 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:28.783 - INFO - ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                                         
-4      0         host controller-0                                   
-3      0         host controller-1                                   
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.783 - INFO - ${output} = ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                           ...
20190402 05:38:28.783 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (140)
20190402 05:38:28.784 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:28.784 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:28.784 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.784 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:38:28.784 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:28.785 - INFO - ${clean_out} = ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                           ...
20190402 05:38:28.785 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:38:28.785 - INFO - ${output} = ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                           ...
20190402 05:38:28.785 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:28.785 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:38:28.785 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:28.787 - INFO - echo $?
20190402 05:38:28.787 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:38:28.787 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:28.787 - INFO - 0
20190402 05:38:28.787 - INFO - ${rc} = 0
20190402 05:38:28.787 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:38:28.788 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:28.788 - INFO - 0
20190402 05:38:28.788 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:38:28.788 - INFO - ${rc} = 0
20190402 05:38:28.788 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:38:28.788 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:28.788 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:28.789 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:28.789 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:28.789 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:28.789 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.789 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:28.789 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                                         
-4      0         host controller-0                                   
-3      0         host controller-1
20190402 05:38:28.789 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:38:28.790 - INFO - +------ END KW: Utils.Run Command (152)
20190402 05:38:28.790 - INFO - +----- END KW: Utils.Check Ceph Status (308)
20190402 05:38:28.790 - INFO - +---- END KW: BuiltIn.Run Keywords (139884)
20190402 05:38:28.790 - INFO - +--- END KW: BuiltIn.Run Keyword If (139885)
20190402 05:38:28.790 - INFO - +--- START KW: Utils.Add ODS To Tier [ ${host} ]
20190402 05:38:28.790 - INFO - +---- START KW: BuiltIn.Set Variable [ /dev/sdb ]
20190402 05:38:28.790 - INFO - ${device} = /dev/sdb
20190402 05:38:28.790 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 05:38:28.790 - INFO - +---- START KW: BuiltIn.Set Variable [ ceph_cluster ]
20190402 05:38:28.791 - INFO - ${tier_name} = ceph_cluster
20190402 05:38:28.791 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 05:38:28.791 - INFO - +---- START KW: BuiltIn.Set Variable [ ${SPACE} ]
20190402 05:38:28.791 - INFO - ${tier_opt} =
20190402 05:38:28.791 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 05:38:28.791 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-disk-list ${host} | grep ${device} | awk '{print $2}' ]
20190402 05:38:28.791 - INFO - ${cmd} = system host-disk-list controller-0|grep /dev/sdb|awk '{print $2}'
20190402 05:38:28.792 - INFO - +---- END KW: BuiltIn.Catenate (1)
20190402 05:38:28.792 - INFO - +---- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 05:38:28.793 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:28.793 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:28.793 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:28.793 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:28.794 - INFO - &{result_dict} = { stdout= }
20190402 05:38:28.794 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:28.794 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:28.794 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:28.794 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:28.795 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:38:28.795 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:28.795 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:28.795 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:38:28.795 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:28.795 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:38:28.795 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:28.811 - INFO - system host-disk-list controller-0|gre p /dev/sdb|awk '{print $2}'
20190402 05:38:28.811 - INFO - +----- END KW: SSHLibrary.Write (16)
20190402 05:38:28.811 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:29.864 - INFO - 949488d0-0531-4095-9cdd-66c95802bd0d
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:29.864 - INFO - ${output} = 949488d0-0531-4095-9cdd-66c95802bd0d
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:29.864 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1053)
20190402 05:38:29.864 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:29.864 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:29.865 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:29.865 - INFO - +------ END KW: String.Get Line (1)
20190402 05:38:29.865 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:29.865 - INFO - ${clean_out} = 949488d0-0531-4095-9cdd-66c95802bd0d
20190402 05:38:29.865 - INFO - +------ END KW: String.Remove String (0)
20190402 05:38:29.865 - INFO - ${output} = 949488d0-0531-4095-9cdd-66c95802bd0d
20190402 05:38:29.865 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:29.865 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:38:29.866 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:29.867 - INFO - echo $?
20190402 05:38:29.867 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:38:29.867 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:29.868 - INFO - 0
20190402 05:38:29.868 - INFO - ${rc} = 0
20190402 05:38:29.868 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:29.868 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:29.868 - INFO - 0
20190402 05:38:29.868 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:38:29.868 - INFO - ${rc} = 0
20190402 05:38:29.868 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:38:29.868 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:29.869 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:29.869 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:29.869 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:29.869 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:29.869 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:38:29.870 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:29.870 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 949488d0-0531-4095-9cdd-66c95802bd0d
20190402 05:38:29.870 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 05:38:29.870 - INFO - ${result} = {u'stdout': u'949488d0-0531-4095-9cdd-66c95802bd0d', u'stderr': u'', u'rc': u'0'}
20190402 05:38:29.870 - INFO - +---- END KW: Utils.Run Command (1078)
20190402 05:38:29.870 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-1' | Get Tier UUID | ${tier_name} ]
20190402 05:38:29.870 - INFO - ${tier_uuid} = None
20190402 05:38:29.870 - INFO - +---- END KW: BuiltIn.Run Keyword If (0)
20190402 05:38:29.870 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${host}'=='controller-1' | --tier-uuid ${tier_uuid} | ${EMPTY} ]
20190402 05:38:29.871 - INFO - ${tier_opt} =
20190402 05:38:29.871 - INFO - +---- END KW: BuiltIn.Set Variable If (1)
20190402 05:38:29.871 - INFO - +---- START KW: Utils.Run Command [ system host-stor-add ${host} ${result.stdout.strip()} ${tier_opt} | True ]
20190402 05:38:29.871 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:29.872 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:38:29.872 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:29.872 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:29.872 - INFO - &{result_dict} = { stdout= }
20190402 05:38:29.872 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:38:29.872 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:29.873 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:38:29.873 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:29.873 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:29.873 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:29.873 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:38:29.873 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:38:29.874 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:29.874 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:38:29.874 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:29.885 - INFO - system host-stor-add controller-0 9494 88d0-0531-4095-9cdd-66c95802bd0d
20190402 05:38:29.885 - INFO - +----- END KW: SSHLibrary.Write (11)
20190402 05:38:29.885 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:31.299 - INFO - +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+--------------------------------------------------+
| osdid            | 0                                                |
| function         | osd                                              |
| state            | configuring-on-unlock                            |
| journal_location | f826b655-ce64-4844-a873-58fbb5451b1f             |
| journal_size_gib | 1024                                             |
| journal_path     | /dev/disk/by-path/pci-0000:00:17.0-ata-2.0-part2 |
| journal_node     | /dev/sdb2                                        |
| uuid             | f826b655-ce64-4844-a873-58fbb5451b1f             |
| ihost_uuid       | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| idisk_uuid       | 949488d0-0531-4095-9cdd-66c95802bd0d             |
| tier_uuid        | 02919f4d-97d2-40f4-a470-5beb3b7558c1             |
| tier_name        | storage                                          |
| created_at       | 2019-04-02T11:27:14.792558+00:00                 |
| updated_at       | 2019-04-02T11:27:14.919947+00:00                 |
+------------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:31.299 - INFO - ${output} = +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+----------------------------------...
20190402 05:38:31.300 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1414)
20190402 05:38:31.300 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:31.300 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:31.300 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:31.300 - INFO - +------ END KW: String.Get Line (0)
20190402 05:38:31.300 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:31.301 - INFO - ${clean_out} = +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+----------------------------------...
20190402 05:38:31.301 - INFO - +------ END KW: String.Remove String (1)
20190402 05:38:31.301 - INFO - ${output} = +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+----------------------------------...
20190402 05:38:31.301 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:31.301 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:38:31.301 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:31.303 - INFO - echo $?
20190402 05:38:31.303 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:38:31.303 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:31.303 - INFO - 0
20190402 05:38:31.303 - INFO - ${rc} = 0
20190402 05:38:31.303 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:38:31.303 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:31.304 - INFO - 0
20190402 05:38:31.304 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 05:38:31.304 - INFO - ${rc} = 0
20190402 05:38:31.304 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:38:31.304 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:31.304 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:31.305 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:38:31.305 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:31.305 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:31.305 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:38:31.305 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:31.305 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+--------------------------------------------------+
| osdid            | 0                                                |
| function         | osd                                              |
| state            | configuring-on-unlock                            |
| journal_location | f826b655-ce64-4844-a873-58fbb5451b1f             |
| journal_size_gib | 1024                                             |
| journal_path     | /dev/disk/by-path/pci-0000:00:17.0-ata-2.0-part2 |
| journal_node     | /dev/sdb2                                        |
| uuid             | f826b655-ce64-4844-a873-58fbb5451b1f             |
| ihost_uuid       | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd             |
| idisk_uuid       | 949488d0-0531-4095-9cdd-66c95802bd0d             |
| tier_uuid        | 02919f4d-97d2-40f4-a470-5beb3b7558c1             |
| tier_name        | storage                                          |
| created_at       | 2019-04-02T11:27:14.792558+00:00                 |
| updated_at       | 2019-04-02T11:27:14.919947+00:00                 |
+------------------+--------------------------------------------------+
20190402 05:38:31.305 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:38:31.305 - INFO - +---- END KW: Utils.Run Command (1434)
20190402 05:38:31.306 - INFO - +---- START KW: Utils.Run Command [ ceph osd tree | True ]
20190402 05:38:31.306 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:31.306 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:31.306 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:31.307 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:31.307 - INFO - &{result_dict} = { stdout= }
20190402 05:38:31.307 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:38:31.307 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:31.308 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:31.308 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:31.308 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:31.308 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:31.308 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:31.308 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:38:31.308 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:31.309 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:38:31.309 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:31.314 - INFO - ceph osd tree
20190402 05:38:31.314 - INFO - +----- END KW: SSHLibrary.Write (5)
20190402 05:38:31.314 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:31.456 - INFO - ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                                         
-4      0         host controller-0                                   
-3      0         host controller-1                                   
 0      0 osd.0                        down        0          1.00000 
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:31.456 - INFO - ${output} = ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                           ...
20190402 05:38:31.456 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (142)
20190402 05:38:31.456 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:31.457 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:31.457 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:31.457 - INFO - +------ END KW: String.Get Line (0)
20190402 05:38:31.457 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:31.457 - INFO - ${clean_out} = ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                           ...
20190402 05:38:31.457 - INFO - +------ END KW: String.Remove String (0)
20190402 05:38:31.457 - INFO - ${output} = ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                           ...
20190402 05:38:31.457 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:31.458 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:38:31.458 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:31.459 - INFO - echo $?
20190402 05:38:31.460 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:38:31.460 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:31.460 - INFO - 0
20190402 05:38:31.460 - INFO - ${rc} = 0
20190402 05:38:31.460 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:38:31.460 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:31.461 - INFO - 0
20190402 05:38:31.461 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 05:38:31.461 - INFO - ${rc} = 0
20190402 05:38:31.461 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 05:38:31.461 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:31.462 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:31.462 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:31.462 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:31.462 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:31.462 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:38:31.462 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:31.463 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: ID WEIGHT TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1      0 root storage-tier                                           
-2      0     chassis group-0                                         
-4      0         host controller-0                                   
-3      0         host controller-1                                   
 0      0 osd.0                        down        0          1.00000
20190402 05:38:31.463 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 05:38:31.463 - INFO - +---- END KW: Utils.Run Command (157)
20190402 05:38:31.463 - INFO - +--- END KW: Utils.Add ODS To Tier (2673)
20190402 05:38:31.463 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}'=='Simplex' | Set Ceph Pool Replication ]
20190402 05:38:31.463 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 05:38:31.463 - INFO - +-- END KW: Utils.Configure Ceph (142558)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:38:31.463 - INFO - +-- START KW: Utils.Unlock Master Controller [ ${master_controller} ]
20190402 05:38:31.464 - INFO - +--- START KW: BuiltIn.Set Variable [ *Socket is closed* ]
20190402 05:38:31.464 - INFO - ${error_expected} = *Socket is closed*
20190402 05:38:31.464 - INFO - +--- END KW: BuiltIn.Set Variable (0)
20190402 05:38:31.464 - INFO - +--- START KW: Utils.Unlock Controller [ ${controller} ]
20190402 05:38:31.464 - INFO - +---- START KW: BuiltIn.Wait Until Keyword Succeeds [ 15 min | 10 sec | Check Property Value | ${controller_name} | availability | online ]
20190402 05:38:31.465 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | availability | online ]
20190402 05:38:31.465 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:38:31.465 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:38:31.466 - INFO - ${system_cmd} = system host-show controller-0|grep -w availability|awk '{print$4}'
20190402 05:38:31.466 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:38:31.466 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:38:31.466 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:31.467 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:38:31.467 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:31.467 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:31.467 - INFO - &{result_dict} = { stdout= }
20190402 05:38:31.467 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:38:31.467 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:31.468 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:31.468 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:31.468 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:31.468 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:31.468 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:38:31.468 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:38:31.469 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:31.469 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:38:31.469 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:31.485 - INFO - system host-show controller-0|grep -w  availability|awk '{print$4}'
20190402 05:38:31.485 - INFO - +-------- END KW: SSHLibrary.Write (16)
20190402 05:38:31.486 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:32.505 - INFO - online
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:32.505 - INFO - ${output} = online
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:32.505 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1019)
20190402 05:38:32.505 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:32.505 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:32.506 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:32.506 - INFO - +--------- END KW: String.Get Line (1)
20190402 05:38:32.506 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:32.506 - INFO - ${clean_out} = online
20190402 05:38:32.506 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:38:32.506 - INFO - ${output} = online
20190402 05:38:32.506 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:32.506 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:38:32.506 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:32.508 - INFO - echo $?
20190402 05:38:32.508 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:38:32.508 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:32.509 - INFO - 0
20190402 05:38:32.509 - INFO - ${rc} = 0
20190402 05:38:32.509 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:32.509 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:32.509 - INFO - 0
20190402 05:38:32.510 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:38:32.510 - INFO - ${rc} = 0
20190402 05:38:32.510 - INFO - +-------- END KW: Utils.Get Return Code (4)
20190402 05:38:32.510 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:32.510 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:32.510 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:32.511 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:38:32.511 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:32.511 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:32.511 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:32.511 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: online
20190402 05:38:32.511 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:38:32.511 - INFO - ${result} = {u'stdout': u'online', u'stderr': u'', u'rc': u'0'}
20190402 05:38:32.511 - INFO - +------- END KW: Utils.Run Command (1045)
20190402 05:38:32.511 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:38:32.512 - INFO - ${value} = online
20190402 05:38:32.512 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 05:38:32.512 - INFO - ${current_value} = online
20190402 05:38:32.512 - INFO - +------ END KW: Utils.Retrieve Host Property (1047)
20190402 05:38:32.512 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:38:32.512 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:38:32.512 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:38:32.512 - INFO - +----- END KW: Utils.Check Property Value (1047)
20190402 05:38:32.512 - INFO - +---- END KW: BuiltIn.Wait Until Keyword Succeeds (1048)
20190402 05:38:32.512 - INFO - +---- START KW: Utils.Run Command [ system host-unlock ${controller_name} | True | 60 ]
20190402 05:38:32.513 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:32.513 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:32.513 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:32.513 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:32.514 - INFO - &{result_dict} = { stdout= }
20190402 05:38:32.514 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:32.514 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:32.514 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:32.514 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:32.514 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:32.515 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:32.515 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:32.515 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:38:32.515 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:32.515 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:38:32.515 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:32.517 - INFO - system host-unlock controller-0
20190402 05:38:32.517 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 05:38:32.517 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:37.262 - INFO - +---------------------+--------------------------------------------+
| Property            | Value                                      |
+---------------------+--------------------------------------------+
| action              | none                                       |
| administrative      | locked                                     |
| availability        | online                                     |
| bm_ip               | None                                       |
| bm_type             | None                                       |
| bm_username         | None                                       |
| boot_device         | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0 |
| capabilities        | {u'stor_function': u'monitor'}             |
| config_applied      | 2af14b81-2224-498d-b57d-9ae557db757b       |
| config_status       | Config out-of-date                         |
| config_target       | eb36ffe5-99a6-4d69-9306-79d23c18526d       |
| console             | ttyS0,115200                               |
| created_at          | 2019-04-02T10:06:51.861866+00:00           |
| hostname            | controller-0                               |
| id                  | 1                                          |
| install_output      | text                                       |
| install_state       | None                                       |
| install_state_info  | None                                       |
| invprovision        | provisioned                                |
| location            | {}                                         |
| mgmt_ip             | 10.10.53.3                                 |
| mgmt_mac            | a4:bf:01:55:03:28                          |
| operational         | disabled                                   |
| personality         | controller                                 |
| reserved            | False                                      |
| rootfs_device       | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0 |
| serialid            | None                                       |
| software_load       | 19.01                                      |
| subfunction_avail   | online                                     |
| subfunction_oper    | disabled                                   |
| subfunctions        | controller,worker                          |
| task                | Unlocking                                  |
| tboot               | false                                      |
| ttys_dcd            | None                                       |
| updated_at          | 2019-04-02T11:27:14.996302+00:00           |
| uptime              | 5132                                       |
| uuid                | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd       |
| vim_progress_status | None                                       |
+---------------------+--------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:37.262 - INFO - ${output} = +---------------------+--------------------------------------------+
| Property            | Value                                      |
+---------------------+-------------------------------------...
20190402 05:38:37.262 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (4745)
20190402 05:38:37.262 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:37.263 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:37.263 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:37.263 - INFO - +------ END KW: String.Get Line (0)
20190402 05:38:37.263 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:37.263 - INFO - ${clean_out} = +---------------------+--------------------------------------------+
| Property            | Value                                      |
+---------------------+-------------------------------------...
20190402 05:38:37.263 - INFO - +------ END KW: String.Remove String (0)
20190402 05:38:37.264 - INFO - ${output} = +---------------------+--------------------------------------------+
| Property            | Value                                      |
+---------------------+-------------------------------------...
20190402 05:38:37.264 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 05:38:37.264 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:38:37.264 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:37.265 - INFO - echo $?
20190402 05:38:37.265 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:38:37.265 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:37.266 - INFO - 0
20190402 05:38:37.266 - INFO - ${rc} = 0
20190402 05:38:37.266 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:37.266 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:37.266 - INFO - 0
20190402 05:38:37.266 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:38:37.266 - INFO - ${rc} = 0
20190402 05:38:37.266 - INFO - +----- END KW: Utils.Get Return Code (2)
20190402 05:38:37.266 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:37.267 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:37.267 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:38:37.267 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:37.267 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:37.267 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:38:37.268 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:37.268 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------------+--------------------------------------------+
| Property            | Value                                      |
+---------------------+--------------------------------------------+
| action              | none                                       |
| administrative      | locked                                     |
| availability        | online                                     |
| bm_ip               | None                                       |
| bm_type             | None                                       |
| bm_username         | None                                       |
| boot_device         | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0 |
| capabilities        | {u'stor_function': u'monitor'}             |
| config_applied      | 2af14b81-2224-498d-b57d-9ae557db757b       |
| config_status       | Config out-of-date                         |
| config_target       | eb36ffe5-99a6-4d69-9306-79d23c18526d       |
| console             | ttyS0,115200                               |
| created_at          | 2019-04-02T10:06:51.861866+00:00           |
| hostname            | controller-0                               |
| id                  | 1                                          |
| install_output      | text                                       |
| install_state       | None                                       |
| install_state_info  | None                                       |
| invprovision        | provisioned                                |
| location            | {}                                         |
| mgmt_ip             | 10.10.53.3                                 |
| mgmt_mac            | a4:bf:01:55:03:28                          |
| operational         | disabled                                   |
| personality         | controller                                 |
| reserved            | False                                      |
| rootfs_device       | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0 |
| serialid            | None                                       |
| software_load       | 19.01                                      |
| subfunction_avail   | online                                     |
| subfunction_oper    | disabled                                   |
| subfunctions        | controller,worker                          |
| task                | Unlocking                                  |
| tboot               | false                                      |
| ttys_dcd            | None                                       |
| updated_at          | 2019-04-02T11:27:14.996302+00:00           |
| uptime              | 5132                                       |
| uuid                | 59c2e4e6-5023-4aff-9a6e-5d1452ff28bd       |
| vim_progress_status | None                                       |
+---------------------+--------------------------------------------+
20190402 05:38:37.268 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:38:37.268 - INFO - ${result} = {u'stdout': u"+---------------------+--------------------------------------------+\r\n| Property            | Value                                      |\r\n+---------------------+-------------------...
20190402 05:38:37.268 - INFO - +---- END KW: Utils.Run Command (4756)
20190402 05:38:37.268 - INFO - +--- END KW: Utils.Unlock Controller (5804)
20190402 05:38:37.268 - INFO - +--- START KW: Utils.Wait Until Keyword Fails [ 10 min | 20 sec | ${error_expected} | Run Command | whoami ]
20190402 05:38:37.269 - INFO - +---- START KW: BuiltIn.Wait Until Keyword Succeeds [ ${timeout} | ${retry} | Run Keyword And Expect Error | ${error} | ${keyword} | @{args} ]
20190402 05:38:37.269 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:38:37.269 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:38:37.270 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:37.270 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:38:37.270 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:37.270 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:37.271 - INFO - &{result_dict} = { stdout= }
20190402 05:38:37.271 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:37.271 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:37.271 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:37.271 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:37.271 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:37.272 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:37.272 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:38:37.272 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:38:37.272 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:37.272 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:38:37.272 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:37.273 - INFO - whoami
20190402 05:38:37.273 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:38:37.273 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:37.276 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:37.276 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:37.276 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (3)
20190402 05:38:37.276 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:37.276 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:37.276 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:37.276 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:38:37.277 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:37.277 - INFO - ${clean_out} = wrsroot
20190402 05:38:37.277 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:38:37.277 - INFO - ${output} = wrsroot
20190402 05:38:37.277 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:38:37.277 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:38:37.277 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:37.279 - INFO - echo $?
20190402 05:38:37.279 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:38:37.279 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:37.279 - INFO - 0
20190402 05:38:37.280 - INFO - ${rc} = 0
20190402 05:38:37.280 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:37.280 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:37.280 - INFO - 0
20190402 05:38:37.280 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:38:37.280 - INFO - ${rc} = 0
20190402 05:38:37.280 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:38:37.280 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:37.281 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:37.281 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:37.281 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:38:37.281 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:37.281 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:38:37.281 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:37.281 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:38:37.282 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:38:37.282 - INFO - +------ END KW: Utils.Run Command (13)
20190402 05:38:37.282 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:38:37.282 - DEBUG - Traceback (most recent call last):
  None
20190402 05:38:37.282 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (13)
20190402 05:38:57.283 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:38:57.284 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:38:57.285 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:38:57.286 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:38:57.287 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:38:57.288 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:38:57.289 - INFO - &{result_dict} = { stdout= }
20190402 05:38:57.289 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:38:57.290 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:38:57.291 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:57.292 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:38:57.292 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:57.293 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:38:57.294 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:38:57.294 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:38:57.294 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:57.295 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:38:57.295 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:38:57.300 - INFO - whoami
20190402 05:38:57.301 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:38:57.301 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:38:57.303 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:57.303 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:57.303 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2)
20190402 05:38:57.304 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:38:57.305 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:38:57.305 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:38:57.305 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:38:57.306 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:38:57.306 - INFO - ${clean_out} = wrsroot
20190402 05:38:57.307 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:38:57.307 - INFO - ${output} = wrsroot
20190402 05:38:57.307 - INFO - +------- END KW: Utils.Remove Prompt Line (3)
20190402 05:38:57.307 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:38:57.308 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:38:57.312 - INFO - echo $?
20190402 05:38:57.313 - INFO - +-------- END KW: SSHLibrary.Write (5)
20190402 05:38:57.313 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:38:57.314 - INFO - 0
20190402 05:38:57.314 - INFO - ${rc} = 0
20190402 05:38:57.314 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:38:57.315 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:38:57.315 - INFO - 0
20190402 05:38:57.315 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:38:57.316 - INFO - ${rc} = 0
20190402 05:38:57.316 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 05:38:57.316 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:38:57.317 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:38:57.318 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:57.318 - INFO - +------- END KW: BuiltIn.Run Keyword If (2)
20190402 05:38:57.318 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:38:57.319 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:38:57.319 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:38:57.319 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:38:57.319 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:38:57.320 - INFO - +------ END KW: Utils.Run Command (36)
20190402 05:38:57.320 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:38:57.320 - DEBUG - Traceback (most recent call last):
  None
20190402 05:38:57.320 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (37)
20190402 05:39:17.321 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:39:17.322 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:39:17.324 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:39:17.325 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:39:17.325 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:39:17.326 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:39:17.326 - INFO - &{result_dict} = { stdout= }
20190402 05:39:17.326 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:39:17.326 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:39:17.327 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:39:17.327 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:39:17.327 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:17.327 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:39:17.327 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:39:17.327 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:39:17.327 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:17.328 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:39:17.328 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:39:17.329 - INFO - whoami
20190402 05:39:17.329 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:39:17.329 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:39:17.331 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:17.331 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:17.331 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2)
20190402 05:39:17.331 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:39:17.331 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:39:17.332 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:17.332 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:39:17.332 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:39:17.332 - INFO - ${clean_out} = wrsroot
20190402 05:39:17.332 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:39:17.332 - INFO - ${output} = wrsroot
20190402 05:39:17.333 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:39:17.333 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:39:17.333 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:39:17.334 - INFO - echo $?
20190402 05:39:17.335 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:39:17.335 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:39:17.335 - INFO - 0
20190402 05:39:17.335 - INFO - ${rc} = 0
20190402 05:39:17.335 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:39:17.335 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:39:17.336 - INFO - 0
20190402 05:39:17.336 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:39:17.336 - INFO - ${rc} = 0
20190402 05:39:17.336 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:39:17.336 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:39:17.336 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:39:17.337 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:39:17.337 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:39:17.337 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:39:17.337 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:17.337 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:39:17.337 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:39:17.337 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:39:17.338 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:39:17.338 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:39:17.338 - DEBUG - Traceback (most recent call last):
  None
20190402 05:39:17.338 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (17)
20190402 05:39:37.338 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:39:37.338 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:39:37.339 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:39:37.339 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:39:37.339 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:39:37.340 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:39:37.340 - INFO - &{result_dict} = { stdout= }
20190402 05:39:37.340 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:39:37.340 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:39:37.340 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:37.341 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:39:37.341 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:37.341 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:39:37.341 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:39:37.341 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:39:37.341 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:37.341 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:39:37.342 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:39:37.343 - INFO - whoami
20190402 05:39:37.343 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:39:37.344 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:39:37.345 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:37.345 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:37.345 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:39:37.345 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:39:37.346 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:39:37.346 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:37.346 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:39:37.346 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:39:37.346 - INFO - ${clean_out} = wrsroot
20190402 05:39:37.346 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:39:37.346 - INFO - ${output} = wrsroot
20190402 05:39:37.347 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 05:39:37.347 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:39:37.347 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:39:37.349 - INFO - echo $?
20190402 05:39:37.349 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:39:37.349 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:39:37.349 - INFO - 0
20190402 05:39:37.349 - INFO - ${rc} = 0
20190402 05:39:37.349 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:39:37.350 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:39:37.350 - INFO - 0
20190402 05:39:37.350 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:39:37.350 - INFO - ${rc} = 0
20190402 05:39:37.350 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:39:37.350 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:39:37.351 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:39:37.351 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:37.351 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:39:37.351 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:39:37.351 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:37.351 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:39:37.352 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:39:37.352 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:39:37.352 - INFO - +------ END KW: Utils.Run Command (14)
20190402 05:39:37.352 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:39:37.352 - DEBUG - Traceback (most recent call last):
  None
20190402 05:39:37.352 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (14)
20190402 05:39:57.353 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:39:57.354 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:39:57.355 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:39:57.355 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:39:57.356 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:39:57.356 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:39:57.357 - INFO - &{result_dict} = { stdout= }
20190402 05:39:57.357 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:39:57.358 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:39:57.358 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:57.358 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:39:57.358 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:57.359 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:39:57.359 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 05:39:57.359 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:39:57.359 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:57.359 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:39:57.359 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:39:57.361 - INFO - whoami
20190402 05:39:57.361 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:39:57.361 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:39:57.362 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:57.362 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:57.362 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:39:57.362 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:39:57.363 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:39:57.363 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:39:57.363 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:39:57.363 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:39:57.363 - INFO - ${clean_out} = wrsroot
20190402 05:39:57.363 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:39:57.364 - INFO - ${output} = wrsroot
20190402 05:39:57.364 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 05:39:57.364 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:39:57.364 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:39:57.365 - INFO - echo $?
20190402 05:39:57.366 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:39:57.366 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:39:57.366 - INFO - 0
20190402 05:39:57.366 - INFO - ${rc} = 0
20190402 05:39:57.366 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:39:57.366 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:39:57.366 - INFO - 0
20190402 05:39:57.367 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:39:57.367 - INFO - ${rc} = 0
20190402 05:39:57.367 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:39:57.367 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:39:57.367 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:39:57.367 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:57.368 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:39:57.368 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:39:57.368 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:39:57.368 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:39:57.368 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:39:57.368 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:39:57.368 - INFO - +------ END KW: Utils.Run Command (14)
20190402 05:39:57.368 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:39:57.369 - DEBUG - Traceback (most recent call last):
  None
20190402 05:39:57.369 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (16)
20190402 05:40:17.369 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:40:17.369 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:40:17.370 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:40:17.370 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:40:17.370 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:40:17.370 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:40:17.371 - INFO - &{result_dict} = { stdout= }
20190402 05:40:17.371 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:40:17.371 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:40:17.371 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:17.371 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:40:17.372 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:40:17.372 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:40:17.372 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:40:17.372 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:40:17.372 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:17.372 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:40:17.372 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:40:17.374 - INFO - whoami
20190402 05:40:17.374 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:40:17.374 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:40:17.375 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:17.375 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:17.375 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:40:17.376 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:40:17.376 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:40:17.376 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:17.376 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:40:17.376 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:40:17.376 - INFO - ${clean_out} = wrsroot
20190402 05:40:17.377 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:40:17.377 - INFO - ${output} = wrsroot
20190402 05:40:17.377 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:40:17.377 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:40:17.377 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:40:17.378 - INFO - echo $?
20190402 05:40:17.378 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:40:17.379 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:40:17.379 - INFO - 0
20190402 05:40:17.379 - INFO - ${rc} = 0
20190402 05:40:17.379 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:40:17.379 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:40:17.380 - INFO - 0
20190402 05:40:17.380 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:40:17.380 - INFO - ${rc} = 0
20190402 05:40:17.380 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:40:17.380 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:40:17.380 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:40:17.381 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:40:17.381 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:40:17.381 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:40:17.381 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:17.381 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:40:17.381 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:40:17.381 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:40:17.382 - INFO - +------ END KW: Utils.Run Command (12)
20190402 05:40:17.382 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:40:17.382 - DEBUG - Traceback (most recent call last):
  None
20190402 05:40:17.382 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (13)
20190402 05:40:37.382 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:40:37.383 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:40:37.383 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:40:37.383 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:40:37.383 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:40:37.384 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:40:37.384 - INFO - &{result_dict} = { stdout= }
20190402 05:40:37.384 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:40:37.384 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:40:37.385 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:40:37.385 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:40:37.385 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:37.385 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:40:37.385 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:40:37.385 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:40:37.386 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:37.386 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:40:37.386 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:40:37.387 - INFO - whoami
20190402 05:40:37.388 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 05:40:37.388 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:40:37.389 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:37.389 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:37.389 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:40:37.390 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:40:37.390 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:40:37.390 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:37.390 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:40:37.390 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:40:37.391 - INFO - ${clean_out} = wrsroot
20190402 05:40:37.391 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:40:37.391 - INFO - ${output} = wrsroot
20190402 05:40:37.391 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:40:37.391 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:40:37.391 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:40:37.393 - INFO - echo $?
20190402 05:40:37.393 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:40:37.393 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:40:37.393 - INFO - 0
20190402 05:40:37.393 - INFO - ${rc} = 0
20190402 05:40:37.393 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:40:37.394 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:40:37.394 - INFO - 0
20190402 05:40:37.394 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:40:37.394 - INFO - ${rc} = 0
20190402 05:40:37.394 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:40:37.394 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:40:37.395 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:40:37.395 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:37.395 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:40:37.395 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:40:37.395 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:37.395 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:40:37.396 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 05:40:37.396 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:40:37.396 - INFO - +------ END KW: Utils.Run Command (14)
20190402 05:40:37.396 - FAIL - Expected error '*Socket is closed*' did not occur.
20190402 05:40:37.396 - DEBUG - Traceback (most recent call last):
  None
20190402 05:40:37.396 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (14)
20190402 05:40:57.397 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:40:57.397 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:40:57.397 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:40:57.398 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:40:57.398 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:40:57.398 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:40:57.398 - INFO - &{result_dict} = { stdout= }
20190402 05:40:57.398 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:40:57.399 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:40:57.399 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:57.399 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:40:57.399 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:40:57.399 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:40:57.399 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:40:57.399 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:40:57.400 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:40:57.400 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:40:57.400 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:41:57.400 - FAIL - No match found for '
' in 1 minute
Output:
.
20190402 05:41:57.401 - DEBUG - Traceback (most recent call last):
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1219, in write
    return self._read_and_log(loglevel, self.current.read_until_newline)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1401, in _read_and_log
    raise RuntimeError(e)
20190402 05:41:57.401 - INFO - +------- END KW: SSHLibrary.Write (60001)
20190402 05:41:57.401 - INFO - +------ END KW: Utils.Run Command (60004)
20190402 05:41:57.401 - FAIL - Expected error '*Socket is closed*' but got 'No match found for '
' in 1 minute
Output:
.'.
20190402 05:41:57.401 - DEBUG - Traceback (most recent call last):
  None
20190402 05:41:57.401 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (60004)
20190402 05:42:17.402 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:42:17.403 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:42:17.405 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:42:17.406 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:42:17.406 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:42:17.407 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:42:17.407 - INFO - &{result_dict} = { stdout= }
20190402 05:42:17.407 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:42:17.408 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:42:17.408 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:42:17.408 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:42:17.408 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:42:17.408 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:42:17.408 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:42:17.408 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:42:17.409 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:42:17.409 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:43:17.409 - FAIL - No match found for '
' in 1 minute
Output:
.
20190402 05:43:17.409 - DEBUG - Traceback (most recent call last):
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1219, in write
    return self._read_and_log(loglevel, self.current.read_until_newline)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1401, in _read_and_log
    raise RuntimeError(e)
20190402 05:43:17.410 - INFO - +------- END KW: SSHLibrary.Write (60001)
20190402 05:43:17.410 - INFO - +------ END KW: Utils.Run Command (60007)
20190402 05:43:17.410 - FAIL - Expected error '*Socket is closed*' but got 'No match found for '
' in 1 minute
Output:
.'.
20190402 05:43:17.410 - DEBUG - Traceback (most recent call last):
  None
20190402 05:43:17.410 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (60008)
20190402 05:43:37.411 - INFO - +----- START KW: BuiltIn.Run Keyword And Expect Error [ ${error} | ${keyword} | @{args} ]
20190402 05:43:37.412 - INFO - +------ START KW: Utils.Run Command [ @{args} ]
20190402 05:43:37.413 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:43:37.414 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:43:37.415 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:43:37.415 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:43:37.416 - INFO - &{result_dict} = { stdout= }
20190402 05:43:37.416 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:43:37.416 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:43:37.416 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:37.416 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:43:37.416 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:37.416 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:43:37.417 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:43:37.417 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:43:37.417 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:43:37.417 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:43:37.417 - FAIL - error: Socket is closed
20190402 05:43:37.418 - DEBUG - Traceback (most recent call last):
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1218, in write
    self._write(text, add_newline=True)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1242, in _write
    self.current.write(text, is_truthy(add_newline))
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/abstractclient.py", line 349, in write
    self.shell.write(text)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/pythonclient.py", line 184, in write
    self._shell.sendall(text)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/channel.py", line 846, in sendall
    sent = self.send(s)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/channel.py", line 801, in send
    return self._send(s, m)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/channel.py", line 1180, in _send
    raise socket.error("Socket is closed")
20190402 05:43:37.418 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 05:43:37.418 - INFO - +------ END KW: Utils.Run Command (6)
20190402 05:43:37.418 - INFO - +----- END KW: BuiltIn.Run Keyword And Expect Error (7)
20190402 05:43:37.418 - INFO - +---- END KW: BuiltIn.Wait Until Keyword Succeeds (300149)
20190402 05:43:37.418 - INFO - +--- END KW: Utils.Wait Until Keyword Fails (300150)
20190402 05:43:37.418 - INFO - +--- START KW: SSHLibrary.Close Connection [ ]
20190402 05:43:37.418 - INFO - +--- END KW: SSHLibrary.Close Connection (0)
20190402 05:43:37.418 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 10 min | 30 sec | Open Master Controller Connection ]
20190402 05:43:37.419 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 05:43:37.419 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 05:43:37.419 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 05:43:37.420 - INFO - ${controller_connection} = 1
20190402 05:43:37.420 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190402 05:43:37.420 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 05:43:37.420 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 05:43:37.420 - INFO - Length is 10
20190402 05:43:37.420 - INFO - ${pwd_length} = 10
20190402 05:43:37.420 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190402 05:43:37.420 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 05:43:37.421 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 05:43:37.421 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 05:43:38.574 - INFO - Read output: Last login: Tue Apr  2 11:23:40 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 05:43:38.575 - INFO - +-------- END KW: SSHLibrary.Login (1154)
20190402 05:43:38.575 - INFO - Returning from the enclosing user keyword.
20190402 05:43:38.575 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1155)
20190402 05:43:38.576 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1156)
20190402 05:43:38.577 - INFO - ${master_controller_connection} = 1
20190402 05:43:38.577 - INFO - +----- END KW: Utils.Connect to Controller Node (1158)
20190402 05:43:38.577 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 05:43:38.578 - INFO - ${master_controller_connection} = 1
20190402 05:43:38.579 - INFO - +----- END KW: BuiltIn.Set Suite Variable (1)
20190402 05:43:38.579 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 05:43:38.579 - INFO - 1
20190402 05:43:38.579 - INFO - +----- END KW: BuiltIn.Log (0)
20190402 05:43:38.579 - INFO - +---- END KW: Utils.Open Master Controller Connection (1160)
20190402 05:43:38.579 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (1161)
20190402 05:43:38.580 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 25 min | 30 sec | Check Controller Is Unlocked | ${controller} ]
20190402 05:43:38.580 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:43:38.580 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:43:38.580 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:43:38.581 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:43:38.581 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:43:38.581 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:43:38.581 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:43:38.582 - INFO - &{result_dict} = { stdout= }
20190402 05:43:38.582 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:43:38.582 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:43:38.582 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:38.582 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:43:38.583 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:38.583 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:43:38.583 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:43:38.583 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:43:38.583 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:43:38.583 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:43:38.588 - INFO - source /etc/platform/openrc
20190402 05:43:38.588 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:43:38.588 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:43:38.589 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:43:38.589 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:43:38.589 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:43:38.589 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:43:38.589 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:43:38.590 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:43:38.590 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:43:38.590 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:43:38.590 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:43:38.590 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:43:38.590 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:43:38.590 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:43:38.590 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:43:38.591 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:43:38.593 - INFO - echo $?
20190402 05:43:38.593 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:43:38.593 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:43:38.593 - INFO - 0
20190402 05:43:38.593 - INFO - ${rc} = 0
20190402 05:43:38.593 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:43:38.594 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:43:38.594 - INFO - 0
20190402 05:43:38.594 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:43:38.594 - INFO - ${rc} = 0
20190402 05:43:38.594 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 05:43:38.594 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:43:38.595 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:43:38.595 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:38.595 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:43:38.595 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:43:38.595 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:38.595 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:43:38.596 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:43:38.596 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:43:38.596 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:43:38.596 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (16)
20190402 05:43:38.596 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:43:38.596 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:43:38.597 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:43:38.597 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:43:38.597 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:43:38.597 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:43:38.598 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:43:38.598 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:43:38.598 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:43:38.598 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:43:38.599 - INFO - &{result_dict} = { stdout= }
20190402 05:43:38.599 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:43:38.599 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:43:38.599 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:38.599 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:43:38.600 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:43:38.600 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:43:38.600 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:43:38.600 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:43:38.600 - INFO - controller-0:~$
20190402 05:43:38.600 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:43:38.600 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:43:38.609 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:43:38.610 - INFO - +-------- END KW: SSHLibrary.Write (9)
20190402 05:43:38.610 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:43:39.069 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:43:39.070 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:43:39.070 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (460)
20190402 05:43:39.070 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:43:39.070 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:43:39.070 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:43:39.070 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:43:39.071 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:43:39.071 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:43:39.071 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:43:39.071 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:43:39.071 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:43:39.071 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:43:39.071 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:43:39.073 - INFO - echo $?
20190402 05:43:39.073 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:43:39.073 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:43:39.073 - INFO - 0
20190402 05:43:39.073 - INFO - ${rc} = 0
20190402 05:43:39.073 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:43:39.073 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:43:39.074 - INFO - 0
20190402 05:43:39.074 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:43:39.074 - INFO - ${rc} = 0
20190402 05:43:39.074 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:43:39.074 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:43:39.074 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:43:39.075 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:43:39.075 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:43:39.075 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:43:39.075 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:43:39.075 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:43:39.075 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:43:39.075 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:43:39.075 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:43:39.075 - INFO - +------- END KW: Utils.Run Command (478)
20190402 05:43:39.076 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:43:39.076 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:43:39.076 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:43:39.076 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:43:39.076 - INFO - +------ END KW: Utils.Retrieve Host Property (480)
20190402 05:43:39.076 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:43:39.076 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:43:39.077 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:43:39.077 - DEBUG - Traceback (most recent call last):
  None
20190402 05:43:39.077 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:43:39.077 - INFO - +----- END KW: Utils.Check Property Value (481)
20190402 05:43:39.077 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (497)
20190402 05:44:09.078 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:44:09.079 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:44:09.080 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:44:09.081 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:44:09.082 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:44:09.082 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:44:09.082 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:44:09.083 - INFO - &{result_dict} = { stdout= }
20190402 05:44:09.083 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:44:09.083 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:44:09.083 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.083 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:44:09.084 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:44:09.084 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:44:09.084 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:44:09.084 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:44:09.084 - INFO - controller-0:~$
20190402 05:44:09.084 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:44:09.084 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:44:09.089 - INFO - source /etc/platform/openrc
20190402 05:44:09.090 - INFO - +------- END KW: SSHLibrary.Write (6)
20190402 05:44:09.090 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:44:09.090 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:44:09.091 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:44:09.091 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:44:09.091 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:44:09.091 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:44:09.091 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:44:09.091 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:44:09.091 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:44:09.091 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:44:09.092 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:44:09.092 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:44:09.092 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:44:09.092 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:44:09.092 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:44:09.093 - INFO - echo $?
20190402 05:44:09.093 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:44:09.093 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:44:09.093 - INFO - 0
20190402 05:44:09.093 - INFO - ${rc} = 0
20190402 05:44:09.093 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:44:09.093 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:44:09.093 - INFO - 0
20190402 05:44:09.094 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:44:09.094 - INFO - ${rc} = 0
20190402 05:44:09.094 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 05:44:09.094 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:44:09.094 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:44:09.094 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.095 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:44:09.095 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:44:09.095 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.095 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:44:09.095 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:44:09.095 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:44:09.095 - INFO - +------ END KW: Utils.Run Command (15)
20190402 05:44:09.095 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (16)
20190402 05:44:09.095 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:44:09.096 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:44:09.096 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:44:09.096 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:44:09.096 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:44:09.096 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:44:09.097 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:44:09.097 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:44:09.097 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:44:09.097 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:44:09.098 - INFO - &{result_dict} = { stdout= }
20190402 05:44:09.098 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:44:09.098 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:44:09.098 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.098 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:44:09.098 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.099 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:44:09.099 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:44:09.099 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:44:09.099 - INFO - controller-0:~$
20190402 05:44:09.099 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:44:09.099 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:44:09.100 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:44:09.100 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:44:09.100 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:44:09.544 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:44:09.544 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:44:09.544 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (444)
20190402 05:44:09.544 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:44:09.545 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:44:09.545 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:44:09.545 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:44:09.545 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:44:09.546 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:09.546 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:44:09.546 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:09.546 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 05:44:09.546 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:44:09.546 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:44:09.548 - INFO - echo $?
20190402 05:44:09.548 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:44:09.548 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:44:09.548 - INFO - 0
20190402 05:44:09.548 - INFO - ${rc} = 0
20190402 05:44:09.548 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:44:09.549 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:44:09.549 - INFO - 0
20190402 05:44:09.549 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:44:09.549 - INFO - ${rc} = 0
20190402 05:44:09.549 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:44:09.549 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:44:09.550 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:44:09.550 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.550 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:44:09.550 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:44:09.550 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:09.550 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:44:09.550 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:09.551 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:44:09.551 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:44:09.551 - INFO - +------- END KW: Utils.Run Command (455)
20190402 05:44:09.551 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:44:09.551 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:09.551 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:44:09.551 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:09.551 - INFO - +------ END KW: Utils.Retrieve Host Property (455)
20190402 05:44:09.551 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:44:09.552 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:44:09.552 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:44:09.552 - DEBUG - Traceback (most recent call last):
  None
20190402 05:44:09.552 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:44:09.552 - INFO - +----- END KW: Utils.Check Property Value (457)
20190402 05:44:09.552 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (474)
20190402 05:44:39.553 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:44:39.554 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:44:39.555 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:44:39.556 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:44:39.557 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:44:39.557 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:44:39.558 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:44:39.558 - INFO - &{result_dict} = { stdout= }
20190402 05:44:39.558 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:44:39.558 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:44:39.558 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:39.558 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:44:39.559 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:44:39.559 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:44:39.559 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:44:39.559 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:44:39.559 - INFO - controller-0:~$
20190402 05:44:39.559 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:44:39.559 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:44:39.564 - INFO - source /etc/platform/openrc
20190402 05:44:39.564 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:44:39.565 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:44:39.565 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:44:39.565 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:44:39.566 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:44:39.566 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:44:39.566 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:44:39.566 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:44:39.566 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:44:39.566 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:44:39.567 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:44:39.567 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:44:39.567 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:44:39.567 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:44:39.567 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:44:39.567 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:44:39.569 - INFO - echo $?
20190402 05:44:39.569 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:44:39.569 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:44:39.569 - INFO - 0
20190402 05:44:39.569 - INFO - ${rc} = 0
20190402 05:44:39.569 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:44:39.569 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:44:39.569 - INFO - 0
20190402 05:44:39.569 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:44:39.570 - INFO - ${rc} = 0
20190402 05:44:39.570 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:44:39.570 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:44:39.570 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:44:39.571 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:44:39.571 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:44:39.571 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:44:39.571 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:39.571 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:44:39.571 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:44:39.571 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:44:39.571 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:44:39.572 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (18)
20190402 05:44:39.572 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:44:39.572 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:44:39.572 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:44:39.573 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:44:39.573 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:44:39.573 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:44:39.573 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:44:39.573 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:44:39.573 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:44:39.574 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:44:39.574 - INFO - &{result_dict} = { stdout= }
20190402 05:44:39.574 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:44:39.574 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:44:39.574 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:39.575 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:44:39.575 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:39.575 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:44:39.575 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:44:39.575 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:44:39.575 - INFO - controller-0:~$
20190402 05:44:39.575 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:44:39.575 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:44:39.577 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:44:39.578 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 05:44:39.578 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:44:39.890 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:44:39.890 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:44:39.890 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (312)
20190402 05:44:39.890 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:44:39.891 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:44:39.891 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:44:39.891 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:44:39.891 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:44:39.891 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:39.891 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:44:39.891 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:39.892 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 05:44:39.892 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:44:39.892 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:44:39.892 - INFO - echo $?
20190402 05:44:39.893 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:44:39.893 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:44:39.893 - INFO - 0
20190402 05:44:39.893 - INFO - ${rc} = 0
20190402 05:44:39.893 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:44:39.893 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:44:39.893 - INFO - 0
20190402 05:44:39.894 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:44:39.894 - INFO - ${rc} = 0
20190402 05:44:39.894 - INFO - +-------- END KW: Utils.Get Return Code (2)
20190402 05:44:39.894 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:44:39.894 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:44:39.895 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:39.895 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:44:39.895 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:44:39.895 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:44:39.895 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:44:39.895 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:39.895 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:44:39.895 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:44:39.895 - INFO - +------- END KW: Utils.Run Command (322)
20190402 05:44:39.895 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:44:39.896 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:39.896 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 05:44:39.896 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:44:39.896 - INFO - +------ END KW: Utils.Retrieve Host Property (324)
20190402 05:44:39.896 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:44:39.896 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:44:39.896 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:44:39.896 - DEBUG - Traceback (most recent call last):
  None
20190402 05:44:39.896 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:44:39.896 - INFO - +----- END KW: Utils.Check Property Value (324)
20190402 05:44:39.897 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (344)
20190402 05:45:09.897 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:45:09.898 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:45:09.898 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:45:09.899 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:45:09.899 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:45:09.899 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:45:09.900 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:45:09.900 - INFO - &{result_dict} = { stdout= }
20190402 05:45:09.901 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:45:09.901 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:45:09.901 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:09.901 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:45:09.902 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:45:09.902 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:45:09.902 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 05:45:09.902 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:45:09.903 - INFO - controller-0:~$
20190402 05:45:09.903 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:45:09.903 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:45:09.911 - INFO - source /etc/platform/openrc
20190402 05:45:09.911 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 05:45:09.912 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:45:09.913 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:45:09.913 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:45:09.913 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:45:09.914 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:45:09.914 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:45:09.915 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:45:09.915 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:45:09.915 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:45:09.915 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:45:09.915 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:45:09.916 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:45:09.916 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 05:45:09.916 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:45:09.916 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:45:09.919 - INFO - echo $?
20190402 05:45:09.919 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 05:45:09.919 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:45:09.920 - INFO - 0
20190402 05:45:09.920 - INFO - ${rc} = 0
20190402 05:45:09.920 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:45:09.921 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:45:09.921 - INFO - 0
20190402 05:45:09.921 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:45:09.921 - INFO - ${rc} = 0
20190402 05:45:09.921 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 05:45:09.922 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:45:09.922 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:45:09.923 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:45:09.923 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:45:09.923 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:45:09.924 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:45:09.924 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:45:09.924 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:45:09.924 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:45:09.924 - INFO - +------ END KW: Utils.Run Command (26)
20190402 05:45:09.925 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (27)
20190402 05:45:09.925 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:45:09.925 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:45:09.926 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:45:09.926 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:45:09.926 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:45:09.927 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:45:09.927 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:45:09.928 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:45:09.928 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:45:09.929 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:45:09.929 - INFO - &{result_dict} = { stdout= }
20190402 05:45:09.930 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:45:09.930 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:45:09.930 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:09.930 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:45:09.931 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:45:09.931 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:45:09.931 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 05:45:09.931 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:45:09.931 - INFO - controller-0:~$
20190402 05:45:09.931 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:45:09.932 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:45:09.946 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:45:09.946 - INFO - +-------- END KW: SSHLibrary.Write (14)
20190402 05:45:09.946 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:45:10.245 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:45:10.245 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:45:10.245 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (299)
20190402 05:45:10.245 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:45:10.246 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:45:10.246 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:45:10.246 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:45:10.246 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:45:10.246 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:10.246 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:45:10.246 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:10.246 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:45:10.246 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:45:10.247 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:45:10.248 - INFO - echo $?
20190402 05:45:10.248 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:45:10.248 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:45:10.249 - INFO - 0
20190402 05:45:10.249 - INFO - ${rc} = 0
20190402 05:45:10.249 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:45:10.249 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:45:10.249 - INFO - 0
20190402 05:45:10.249 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:45:10.249 - INFO - ${rc} = 0
20190402 05:45:10.249 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:45:10.249 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:45:10.250 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:45:10.250 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:10.250 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:45:10.250 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:45:10.250 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:10.250 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:45:10.251 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:10.251 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:45:10.251 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:45:10.251 - INFO - +------- END KW: Utils.Run Command (324)
20190402 05:45:10.251 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:45:10.251 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:10.251 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:45:10.251 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:10.252 - INFO - +------ END KW: Utils.Retrieve Host Property (326)
20190402 05:45:10.252 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:45:10.252 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:45:10.252 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:45:10.252 - DEBUG - Traceback (most recent call last):
  None
20190402 05:45:10.252 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:45:10.252 - INFO - +----- END KW: Utils.Check Property Value (327)
20190402 05:45:10.252 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (355)
20190402 05:45:40.253 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:45:40.254 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:45:40.255 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:45:40.257 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:45:40.257 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:45:40.258 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:45:40.258 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:45:40.259 - INFO - &{result_dict} = { stdout= }
20190402 05:45:40.259 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:45:40.259 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:45:40.259 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.259 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:45:40.259 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.260 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:45:40.260 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:45:40.260 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:45:40.260 - INFO - controller-0:~$
20190402 05:45:40.260 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:45:40.260 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:45:40.264 - INFO - source /etc/platform/openrc
20190402 05:45:40.264 - INFO - +------- END KW: SSHLibrary.Write (4)
20190402 05:45:40.264 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:45:40.265 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:45:40.265 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:45:40.265 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:45:40.265 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:45:40.266 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:45:40.266 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:45:40.266 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:45:40.266 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:45:40.266 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:45:40.266 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:45:40.266 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:45:40.266 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:45:40.267 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:45:40.267 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:45:40.268 - INFO - echo $?
20190402 05:45:40.268 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:45:40.269 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:45:40.269 - INFO - 0
20190402 05:45:40.269 - INFO - ${rc} = 0
20190402 05:45:40.269 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:45:40.269 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:45:40.269 - INFO - 0
20190402 05:45:40.269 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:45:40.269 - INFO - ${rc} = 0
20190402 05:45:40.269 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 05:45:40.269 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:45:40.270 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:45:40.270 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.270 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:45:40.270 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:45:40.271 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:45:40.271 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:45:40.271 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:45:40.271 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:45:40.271 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:45:40.271 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (17)
20190402 05:45:40.271 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:45:40.272 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:45:40.272 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:45:40.272 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:45:40.272 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:45:40.272 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:45:40.273 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:45:40.273 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:45:40.273 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:45:40.273 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:45:40.274 - INFO - &{result_dict} = { stdout= }
20190402 05:45:40.274 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:45:40.274 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:45:40.274 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.274 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:45:40.274 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.275 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:45:40.275 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:45:40.275 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:45:40.275 - INFO - controller-0:~$
20190402 05:45:40.275 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:45:40.275 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:45:40.285 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:45:40.285 - INFO - +-------- END KW: SSHLibrary.Write (10)
20190402 05:45:40.285 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:45:40.625 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:45:40.625 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:45:40.625 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (340)
20190402 05:45:40.625 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:45:40.626 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:45:40.626 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:45:40.626 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:45:40.626 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:45:40.627 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:40.627 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:45:40.627 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:40.627 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 05:45:40.627 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:45:40.627 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:45:40.628 - INFO - echo $?
20190402 05:45:40.628 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:45:40.628 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:45:40.629 - INFO - 0
20190402 05:45:40.629 - INFO - ${rc} = 0
20190402 05:45:40.629 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:45:40.629 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:45:40.629 - INFO - 0
20190402 05:45:40.629 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:45:40.629 - INFO - ${rc} = 0
20190402 05:45:40.629 - INFO - +-------- END KW: Utils.Get Return Code (2)
20190402 05:45:40.629 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:45:40.630 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:45:40.630 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.630 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:45:40.630 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:45:40.630 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:45:40.631 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:45:40.631 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:40.631 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:45:40.631 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:45:40.631 - INFO - +------- END KW: Utils.Run Command (359)
20190402 05:45:40.631 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:45:40.631 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:40.631 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:45:40.631 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:45:40.632 - INFO - +------ END KW: Utils.Retrieve Host Property (360)
20190402 05:45:40.632 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:45:40.632 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:45:40.632 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:45:40.632 - DEBUG - Traceback (most recent call last):
  None
20190402 05:45:40.632 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:45:40.632 - INFO - +----- END KW: Utils.Check Property Value (361)
20190402 05:45:40.632 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (379)
20190402 05:46:10.633 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:46:10.634 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:46:10.635 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:46:10.637 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:46:10.638 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:46:10.638 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:46:10.638 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:46:10.639 - INFO - &{result_dict} = { stdout= }
20190402 05:46:10.639 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:46:10.639 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:46:10.639 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.639 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:46:10.639 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.640 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:46:10.640 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:46:10.640 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:46:10.640 - INFO - controller-0:~$
20190402 05:46:10.640 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:46:10.640 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:46:10.645 - INFO - source /etc/platform/openrc
20190402 05:46:10.646 - INFO - +------- END KW: SSHLibrary.Write (6)
20190402 05:46:10.646 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:46:10.647 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:46:10.647 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:46:10.647 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:46:10.647 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:46:10.647 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:46:10.647 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:46:10.647 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:46:10.647 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:46:10.648 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:46:10.648 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:46:10.648 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:46:10.648 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:46:10.648 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:46:10.648 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:46:10.649 - INFO - echo $?
20190402 05:46:10.649 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:46:10.649 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:46:10.649 - INFO - 0
20190402 05:46:10.650 - INFO - ${rc} = 0
20190402 05:46:10.650 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:46:10.650 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:46:10.650 - INFO - 0
20190402 05:46:10.650 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:46:10.650 - INFO - ${rc} = 0
20190402 05:46:10.650 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 05:46:10.650 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:46:10.651 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:46:10.651 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.651 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:46:10.651 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:46:10.651 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.651 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:46:10.652 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:46:10.652 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:46:10.652 - INFO - +------ END KW: Utils.Run Command (17)
20190402 05:46:10.652 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (18)
20190402 05:46:10.652 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:46:10.652 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:46:10.653 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:46:10.653 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:46:10.653 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:46:10.653 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:46:10.653 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:46:10.653 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:46:10.654 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:46:10.654 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:46:10.654 - INFO - &{result_dict} = { stdout= }
20190402 05:46:10.654 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:46:10.654 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:46:10.655 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.655 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:46:10.655 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.655 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:46:10.655 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:46:10.655 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:46:10.655 - INFO - controller-0:~$
20190402 05:46:10.655 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:46:10.655 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:46:10.657 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:46:10.657 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:46:10.657 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:46:10.984 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:46:10.984 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:46:10.984 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (327)
20190402 05:46:10.984 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:46:10.984 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:46:10.985 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:46:10.985 - INFO - +--------- END KW: String.Get Line (1)
20190402 05:46:10.985 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:46:10.985 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:10.985 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:46:10.985 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:10.985 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:46:10.985 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:46:10.985 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:46:10.986 - INFO - echo $?
20190402 05:46:10.987 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:46:10.987 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:46:10.987 - INFO - 0
20190402 05:46:10.987 - INFO - ${rc} = 0
20190402 05:46:10.987 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:46:10.987 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:46:10.987 - INFO - 0
20190402 05:46:10.987 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:46:10.987 - INFO - ${rc} = 0
20190402 05:46:10.988 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:46:10.988 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:46:10.988 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:46:10.988 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:10.988 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:46:10.988 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:46:10.989 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:46:10.989 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:46:10.989 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:10.989 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:46:10.989 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:46:10.989 - INFO - +------- END KW: Utils.Run Command (336)
20190402 05:46:10.989 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:46:10.990 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:10.990 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 05:46:10.990 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:10.990 - INFO - +------ END KW: Utils.Retrieve Host Property (338)
20190402 05:46:10.990 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:46:10.990 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:46:10.990 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:46:10.990 - DEBUG - Traceback (most recent call last):
  None
20190402 05:46:10.990 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:46:10.990 - INFO - +----- END KW: Utils.Check Property Value (338)
20190402 05:46:10.991 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (358)
20190402 05:46:40.991 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:46:40.993 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:46:40.994 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:46:40.995 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:46:40.996 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:46:40.996 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:46:40.996 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:46:40.997 - INFO - &{result_dict} = { stdout= }
20190402 05:46:40.997 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:46:40.997 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:46:40.997 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:40.997 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:46:40.998 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:40.998 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:46:40.998 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:46:40.998 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:46:40.998 - INFO - controller-0:~$
20190402 05:46:40.998 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:46:40.998 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:46:41.003 - INFO - source /etc/platform/openrc
20190402 05:46:41.004 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:46:41.004 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:46:41.005 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:46:41.005 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:46:41.005 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:46:41.005 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:46:41.005 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:46:41.005 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:46:41.005 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:46:41.005 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:46:41.006 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:46:41.006 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:46:41.006 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:46:41.006 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:46:41.006 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:46:41.006 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:46:41.008 - INFO - echo $?
20190402 05:46:41.008 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:46:41.008 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:46:41.009 - INFO - 0
20190402 05:46:41.009 - INFO - ${rc} = 0
20190402 05:46:41.009 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:46:41.009 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:46:41.009 - INFO - 0
20190402 05:46:41.009 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:46:41.009 - INFO - ${rc} = 0
20190402 05:46:41.009 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:46:41.010 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:46:41.010 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:46:41.010 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:41.010 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:46:41.010 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:46:41.011 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:46:41.011 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:46:41.011 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:46:41.011 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:46:41.011 - INFO - +------ END KW: Utils.Run Command (17)
20190402 05:46:41.011 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (18)
20190402 05:46:41.011 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:46:41.012 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:46:41.012 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:46:41.012 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:46:41.012 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:46:41.012 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:46:41.013 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:46:41.013 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:46:41.013 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:46:41.014 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:46:41.014 - INFO - &{result_dict} = { stdout= }
20190402 05:46:41.014 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:46:41.014 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:46:41.014 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:41.014 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:46:41.015 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:46:41.015 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:46:41.015 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:46:41.015 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:46:41.015 - INFO - controller-0:~$
20190402 05:46:41.015 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:46:41.015 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:46:41.017 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:46:41.018 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 05:46:41.018 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:46:41.364 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:46:41.364 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:46:41.364 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (346)
20190402 05:46:41.364 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:46:41.364 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:46:41.364 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:46:41.365 - INFO - +--------- END KW: String.Get Line (1)
20190402 05:46:41.365 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:46:41.365 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:41.365 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:46:41.365 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:41.365 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:46:41.365 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:46:41.365 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:46:41.367 - INFO - echo $?
20190402 05:46:41.367 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:46:41.367 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:46:41.367 - INFO - 0
20190402 05:46:41.368 - INFO - ${rc} = 0
20190402 05:46:41.368 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:46:41.368 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:46:41.368 - INFO - 0
20190402 05:46:41.368 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:46:41.368 - INFO - ${rc} = 0
20190402 05:46:41.368 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:46:41.368 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:46:41.369 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:46:41.369 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:41.369 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:46:41.369 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:46:41.369 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:46:41.369 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:46:41.369 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:41.370 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:46:41.370 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:46:41.370 - INFO - +------- END KW: Utils.Run Command (358)
20190402 05:46:41.370 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:46:41.370 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:41.370 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:46:41.370 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:46:41.370 - INFO - +------ END KW: Utils.Retrieve Host Property (358)
20190402 05:46:41.370 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:46:41.371 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:46:41.371 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:46:41.371 - DEBUG - Traceback (most recent call last):
  None
20190402 05:46:41.371 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:46:41.371 - INFO - +----- END KW: Utils.Check Property Value (360)
20190402 05:46:41.371 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (380)
20190402 05:47:11.371 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:47:11.372 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:47:11.372 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:47:11.373 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:47:11.373 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:47:11.373 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:47:11.374 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:47:11.374 - INFO - &{result_dict} = { stdout= }
20190402 05:47:11.374 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:47:11.375 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:47:11.375 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.375 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:47:11.375 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.376 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:47:11.376 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 05:47:11.376 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:47:11.376 - INFO - controller-0:~$
20190402 05:47:11.376 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:47:11.376 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:47:11.379 - INFO - source /etc/platform/openrc
20190402 05:47:11.379 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 05:47:11.379 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:47:11.382 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:47:11.382 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:47:11.382 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (3)
20190402 05:47:11.382 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:47:11.382 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:47:11.383 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:47:11.383 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:47:11.383 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:47:11.383 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:47:11.383 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:47:11.383 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:47:11.383 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:47:11.383 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:47:11.384 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:47:11.386 - INFO - echo $?
20190402 05:47:11.386 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:47:11.386 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:47:11.386 - INFO - 0
20190402 05:47:11.386 - INFO - ${rc} = 0
20190402 05:47:11.387 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:47:11.387 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:47:11.387 - INFO - 0
20190402 05:47:11.387 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:47:11.387 - INFO - ${rc} = 0
20190402 05:47:11.387 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 05:47:11.387 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:47:11.388 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:47:11.388 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.388 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:47:11.388 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:47:11.388 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.388 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:47:11.388 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:47:11.389 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:47:11.389 - INFO - +------ END KW: Utils.Run Command (17)
20190402 05:47:11.389 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (17)
20190402 05:47:11.389 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:47:11.389 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:47:11.389 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:47:11.390 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:47:11.390 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:47:11.390 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:47:11.390 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:47:11.391 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:47:11.391 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:47:11.391 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:47:11.391 - INFO - &{result_dict} = { stdout= }
20190402 05:47:11.391 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:47:11.391 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:47:11.392 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:47:11.392 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:47:11.392 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.392 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:47:11.392 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:47:11.392 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:47:11.393 - INFO - controller-0:~$
20190402 05:47:11.393 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:47:11.393 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:47:11.395 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:47:11.395 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:47:11.395 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:47:11.707 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:47:11.707 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:47:11.707 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (312)
20190402 05:47:11.707 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:47:11.708 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:47:11.708 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:47:11.708 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:47:11.708 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:47:11.708 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:11.708 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:47:11.708 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:11.708 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:47:11.708 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:47:11.709 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:47:11.710 - INFO - echo $?
20190402 05:47:11.710 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:47:11.710 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:47:11.711 - INFO - 0
20190402 05:47:11.711 - INFO - ${rc} = 0
20190402 05:47:11.711 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:47:11.711 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:47:11.711 - INFO - 0
20190402 05:47:11.711 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:47:11.711 - INFO - ${rc} = 0
20190402 05:47:11.711 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:47:11.711 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:47:11.712 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:47:11.712 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.712 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:47:11.712 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:47:11.712 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:11.712 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:47:11.713 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:11.713 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:47:11.713 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:47:11.713 - INFO - +------- END KW: Utils.Run Command (323)
20190402 05:47:11.713 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:47:11.713 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:11.713 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:47:11.713 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:11.713 - INFO - +------ END KW: Utils.Retrieve Host Property (324)
20190402 05:47:11.714 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:47:11.714 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:47:11.714 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:47:11.714 - DEBUG - Traceback (most recent call last):
  None
20190402 05:47:11.714 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:47:11.714 - INFO - +----- END KW: Utils.Check Property Value (325)
20190402 05:47:11.714 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (343)
20190402 05:47:41.715 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:47:41.716 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:47:41.717 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:47:41.719 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:47:41.720 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:47:41.720 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:47:41.720 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:47:41.721 - INFO - &{result_dict} = { stdout= }
20190402 05:47:41.721 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:47:41.721 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:47:41.721 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:41.721 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:47:41.721 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:41.722 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:47:41.722 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:47:41.722 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:47:41.722 - INFO - controller-0:~$
20190402 05:47:41.722 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:47:41.722 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:47:41.726 - INFO - source /etc/platform/openrc
20190402 05:47:41.727 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:47:41.727 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:47:41.727 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:47:41.728 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:47:41.728 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:47:41.728 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:47:41.728 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:47:41.728 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:47:41.728 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:47:41.728 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:47:41.729 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:47:41.729 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:47:41.729 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:47:41.729 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:47:41.729 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:47:41.729 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:47:41.730 - INFO - echo $?
20190402 05:47:41.731 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:47:41.731 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:47:41.732 - INFO - 0
20190402 05:47:41.732 - INFO - ${rc} = 0
20190402 05:47:41.732 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:47:41.732 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:47:41.732 - INFO - 0
20190402 05:47:41.732 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:47:41.732 - INFO - ${rc} = 0
20190402 05:47:41.732 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:47:41.732 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:47:41.733 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:47:41.733 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:41.733 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:47:41.733 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:47:41.734 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:47:41.734 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:47:41.734 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:47:41.734 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:47:41.734 - INFO - +------ END KW: Utils.Run Command (17)
20190402 05:47:41.734 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (18)
20190402 05:47:41.734 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:47:41.735 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:47:41.735 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:47:41.735 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:47:41.735 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:47:41.735 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:47:41.736 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:47:41.736 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:47:41.736 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:47:41.736 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:47:41.737 - INFO - &{result_dict} = { stdout= }
20190402 05:47:41.737 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:47:41.737 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:47:41.737 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:41.737 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:47:41.737 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:41.738 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:47:41.738 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:47:41.738 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:47:41.738 - INFO - controller-0:~$
20190402 05:47:41.738 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:47:41.738 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:47:41.740 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:47:41.740 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:47:41.740 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:47:42.048 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:47:42.048 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:47:42.048 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (308)
20190402 05:47:42.049 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:47:42.049 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:47:42.049 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:47:42.049 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:47:42.049 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:47:42.049 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:42.050 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:47:42.050 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:42.050 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:47:42.050 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:47:42.050 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:47:42.051 - INFO - echo $?
20190402 05:47:42.052 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:47:42.052 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:47:42.052 - INFO - 0
20190402 05:47:42.052 - INFO - ${rc} = 0
20190402 05:47:42.052 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:47:42.052 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:47:42.053 - INFO - 0
20190402 05:47:42.053 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:47:42.053 - INFO - ${rc} = 0
20190402 05:47:42.053 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:47:42.053 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:47:42.054 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:47:42.054 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:42.054 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:47:42.054 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:47:42.054 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:47:42.054 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:47:42.054 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:42.055 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:47:42.055 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:47:42.055 - INFO - +------- END KW: Utils.Run Command (320)
20190402 05:47:42.055 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:47:42.055 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:42.055 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:47:42.055 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:47:42.055 - INFO - +------ END KW: Utils.Retrieve Host Property (321)
20190402 05:47:42.055 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:47:42.056 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:47:42.056 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:47:42.056 - DEBUG - Traceback (most recent call last):
  None
20190402 05:47:42.056 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:47:42.056 - INFO - +----- END KW: Utils.Check Property Value (322)
20190402 05:47:42.056 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (341)
20190402 05:48:12.057 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:48:12.058 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:48:12.058 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:48:12.059 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:48:12.060 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:48:12.060 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:48:12.061 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:48:12.061 - INFO - &{result_dict} = { stdout= }
20190402 05:48:12.061 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:48:12.061 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:48:12.062 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:48:12.062 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:48:12.062 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:12.062 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:48:12.062 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:48:12.062 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:48:12.063 - INFO - controller-0:~$
20190402 05:48:12.063 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:48:12.063 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:48:12.068 - INFO - source /etc/platform/openrc
20190402 05:48:12.068 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:48:12.068 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:48:12.069 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:48:12.069 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:48:12.069 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:48:12.069 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:48:12.069 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:48:12.070 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:48:12.070 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:48:12.070 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:48:12.070 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:48:12.070 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:48:12.070 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:48:12.070 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:48:12.070 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:48:12.070 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:48:12.071 - INFO - echo $?
20190402 05:48:12.072 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:48:12.072 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:48:12.072 - INFO - 0
20190402 05:48:12.072 - INFO - ${rc} = 0
20190402 05:48:12.072 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:48:12.072 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:48:12.073 - INFO - 0
20190402 05:48:12.073 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:48:12.073 - INFO - ${rc} = 0
20190402 05:48:12.073 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:48:12.073 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:48:12.073 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:48:12.074 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:48:12.074 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:48:12.074 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:48:12.074 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:12.074 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:48:12.074 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:48:12.074 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:48:12.074 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:48:12.075 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (18)
20190402 05:48:12.075 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:48:12.075 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:48:12.075 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:48:12.076 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:48:12.076 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:48:12.076 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:48:12.076 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:48:12.076 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:48:12.077 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:48:12.077 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:48:12.077 - INFO - &{result_dict} = { stdout= }
20190402 05:48:12.077 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:48:12.077 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:48:12.077 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:12.078 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:48:12.078 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:12.078 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:48:12.078 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:48:12.078 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:48:12.078 - INFO - controller-0:~$
20190402 05:48:12.078 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:48:12.078 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:48:12.080 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:48:12.080 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:48:12.080 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:48:12.391 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:48:12.391 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:48:12.391 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (311)
20190402 05:48:12.391 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:48:12.391 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:48:12.392 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:48:12.392 - INFO - +--------- END KW: String.Get Line (1)
20190402 05:48:12.392 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:48:12.392 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:12.392 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:48:12.392 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:12.392 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:48:12.392 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:48:12.392 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:48:12.394 - INFO - echo $?
20190402 05:48:12.394 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:48:12.395 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:48:12.395 - INFO - 0
20190402 05:48:12.395 - INFO - ${rc} = 0
20190402 05:48:12.395 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:48:12.395 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:48:12.395 - INFO - 0
20190402 05:48:12.395 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:48:12.395 - INFO - ${rc} = 0
20190402 05:48:12.395 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:48:12.396 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:48:12.396 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:48:12.396 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:12.396 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:48:12.396 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:48:12.397 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:48:12.397 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:48:12.397 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:12.397 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:48:12.397 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:48:12.397 - INFO - +------- END KW: Utils.Run Command (321)
20190402 05:48:12.397 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:48:12.397 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:12.397 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:48:12.398 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:12.398 - INFO - +------ END KW: Utils.Retrieve Host Property (323)
20190402 05:48:12.398 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:48:12.398 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:48:12.398 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:48:12.398 - DEBUG - Traceback (most recent call last):
  None
20190402 05:48:12.398 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:48:12.398 - INFO - +----- END KW: Utils.Check Property Value (323)
20190402 05:48:12.398 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (342)
20190402 05:48:42.399 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:48:42.400 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:48:42.401 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:48:42.403 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:48:42.404 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 05:48:42.404 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:48:42.404 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:48:42.405 - INFO - &{result_dict} = { stdout= }
20190402 05:48:42.405 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:48:42.405 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:48:42.405 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:42.405 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:48:42.406 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:48:42.406 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:48:42.406 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:48:42.406 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:48:42.406 - INFO - controller-0:~$
20190402 05:48:42.406 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:48:42.406 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:48:42.411 - INFO - source /etc/platform/openrc
20190402 05:48:42.411 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:48:42.411 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:48:42.412 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:48:42.412 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:48:42.412 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:48:42.412 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:48:42.412 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:48:42.412 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:48:42.412 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:48:42.412 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:48:42.413 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:48:42.413 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:48:42.413 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:48:42.413 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:48:42.413 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:48:42.413 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:48:42.415 - INFO - echo $?
20190402 05:48:42.415 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:48:42.415 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:48:42.415 - INFO - 0
20190402 05:48:42.415 - INFO - ${rc} = 0
20190402 05:48:42.415 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:48:42.415 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:48:42.415 - INFO - 0
20190402 05:48:42.416 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:48:42.416 - INFO - ${rc} = 0
20190402 05:48:42.416 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 05:48:42.416 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:48:42.416 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:48:42.416 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:42.416 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:48:42.417 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:48:42.417 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:42.417 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:48:42.417 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:48:42.417 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:48:42.417 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:48:42.417 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (17)
20190402 05:48:42.417 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:48:42.418 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:48:42.418 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:48:42.418 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:48:42.418 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:48:42.418 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:48:42.419 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:48:42.419 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:48:42.419 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:48:42.419 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:48:42.420 - INFO - &{result_dict} = { stdout= }
20190402 05:48:42.420 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:48:42.420 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:48:42.420 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:42.420 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:48:42.421 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:48:42.421 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:48:42.421 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:48:42.421 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:48:42.421 - INFO - controller-0:~$
20190402 05:48:42.421 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:48:42.421 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:48:42.423 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:48:42.423 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:48:42.423 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:48:42.732 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:48:42.733 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:48:42.733 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (310)
20190402 05:48:42.733 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:48:42.733 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:48:42.733 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:48:42.733 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:48:42.734 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:48:42.734 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:42.734 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:48:42.734 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:42.734 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:48:42.734 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:48:42.734 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:48:42.736 - INFO - echo $?
20190402 05:48:42.736 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:48:42.736 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:48:42.736 - INFO - 0
20190402 05:48:42.736 - INFO - ${rc} = 0
20190402 05:48:42.736 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:48:42.736 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:48:42.737 - INFO - 0
20190402 05:48:42.737 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:48:42.737 - INFO - ${rc} = 0
20190402 05:48:42.737 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:48:42.737 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:48:42.737 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:48:42.738 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:48:42.738 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:48:42.738 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:48:42.738 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:48:42.738 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:48:42.738 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:42.738 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:48:42.738 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:48:42.738 - INFO - +------- END KW: Utils.Run Command (320)
20190402 05:48:42.739 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:48:42.739 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:42.739 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:48:42.739 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:48:42.739 - INFO - +------ END KW: Utils.Retrieve Host Property (321)
20190402 05:48:42.739 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:48:42.739 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:48:42.739 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:48:42.739 - DEBUG - Traceback (most recent call last):
  None
20190402 05:48:42.739 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:48:42.740 - INFO - +----- END KW: Utils.Check Property Value (323)
20190402 05:48:42.740 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (341)
20190402 05:49:12.741 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:49:12.742 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:49:12.743 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:49:12.744 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:49:12.745 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:49:12.746 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:49:12.747 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:49:12.748 - INFO - &{result_dict} = { stdout= }
20190402 05:49:12.748 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:49:12.749 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:49:12.749 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:49:12.750 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:49:12.751 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:49:12.752 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:49:12.752 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:49:12.752 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:49:12.753 - INFO - controller-0:~$
20190402 05:49:12.753 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:49:12.753 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:49:12.769 - INFO - source /etc/platform/openrc
20190402 05:49:12.769 - INFO - +------- END KW: SSHLibrary.Write (16)
20190402 05:49:12.769 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:49:12.772 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:49:12.772 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:49:12.772 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (3)
20190402 05:49:12.772 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:49:12.774 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:49:12.774 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:49:12.774 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:49:12.775 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:49:12.775 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:49:12.775 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:49:12.776 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:49:12.776 - INFO - +------- END KW: Utils.Remove Prompt Line (4)
20190402 05:49:12.776 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:49:12.776 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:49:12.778 - INFO - echo $?
20190402 05:49:12.778 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:49:12.778 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:49:12.779 - INFO - 0
20190402 05:49:12.779 - INFO - ${rc} = 0
20190402 05:49:12.779 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:49:12.779 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:49:12.779 - INFO - 0
20190402 05:49:12.780 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:49:12.780 - INFO - ${rc} = 0
20190402 05:49:12.780 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 05:49:12.780 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:49:12.781 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:49:12.781 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:12.781 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:49:12.782 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:49:12.782 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:12.782 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:49:12.782 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:49:12.783 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:49:12.783 - INFO - +------ END KW: Utils.Run Command (40)
20190402 05:49:12.783 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (41)
20190402 05:49:12.783 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:49:12.784 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:49:12.784 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:49:12.785 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:49:12.785 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:49:12.785 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:49:12.785 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:49:12.786 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:49:12.786 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:49:12.786 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:49:12.787 - INFO - &{result_dict} = { stdout= }
20190402 05:49:12.787 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:49:12.787 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:49:12.787 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:12.788 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:49:12.788 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:12.788 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:49:12.788 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:49:12.788 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:49:12.789 - INFO - controller-0:~$
20190402 05:49:12.789 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:49:12.789 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:49:12.791 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:49:12.791 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:49:12.791 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:49:13.111 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:49:13.111 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:49:13.111 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (320)
20190402 05:49:13.111 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:49:13.112 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:49:13.112 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:49:13.112 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:49:13.112 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:49:13.112 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:13.112 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:49:13.112 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:13.112 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:49:13.113 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:49:13.113 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:49:13.114 - INFO - echo $?
20190402 05:49:13.114 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:49:13.114 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:49:13.115 - INFO - 0
20190402 05:49:13.115 - INFO - ${rc} = 0
20190402 05:49:13.115 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:49:13.115 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:49:13.115 - INFO - 0
20190402 05:49:13.116 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 05:49:13.116 - INFO - ${rc} = 0
20190402 05:49:13.116 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:49:13.116 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:49:13.116 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:49:13.116 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:13.117 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:49:13.117 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:49:13.117 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:13.117 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:49:13.117 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:13.117 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:49:13.117 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:49:13.117 - INFO - +------- END KW: Utils.Run Command (332)
20190402 05:49:13.117 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:49:13.118 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:13.118 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 05:49:13.118 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:13.118 - INFO - +------ END KW: Utils.Retrieve Host Property (334)
20190402 05:49:13.118 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:49:13.118 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:49:13.118 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:49:13.118 - DEBUG - Traceback (most recent call last):
  None
20190402 05:49:13.118 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:49:13.119 - INFO - +----- END KW: Utils.Check Property Value (336)
20190402 05:49:13.119 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (379)
20190402 05:49:43.120 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:49:43.121 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:49:43.122 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:49:43.123 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:49:43.124 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:49:43.124 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:49:43.125 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:49:43.127 - INFO - &{result_dict} = { stdout= }
20190402 05:49:43.127 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:49:43.128 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:49:43.129 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:49:43.130 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:49:43.131 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:49:43.132 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:49:43.132 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (8)
20190402 05:49:43.133 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:49:43.133 - INFO - controller-0:~$
20190402 05:49:43.133 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:49:43.134 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:49:43.137 - INFO - source /etc/platform/openrc
20190402 05:49:43.137 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 05:49:43.138 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:49:43.140 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:49:43.140 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:49:43.141 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (4)
20190402 05:49:43.141 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:49:43.142 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:49:43.142 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:49:43.143 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:49:43.143 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:49:43.144 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:49:43.144 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:49:43.144 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:49:43.144 - INFO - +------- END KW: Utils.Remove Prompt Line (3)
20190402 05:49:43.145 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:49:43.145 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:49:43.147 - INFO - echo $?
20190402 05:49:43.147 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:49:43.148 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:49:43.148 - INFO - 0
20190402 05:49:43.149 - INFO - ${rc} = 0
20190402 05:49:43.149 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:49:43.149 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:49:43.149 - INFO - 0
20190402 05:49:43.150 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:49:43.150 - INFO - ${rc} = 0
20190402 05:49:43.150 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 05:49:43.150 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:49:43.151 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:49:43.152 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:49:43.152 - INFO - +------- END KW: BuiltIn.Run Keyword If (2)
20190402 05:49:43.152 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:49:43.153 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:49:43.153 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:49:43.154 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:49:43.154 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:49:43.154 - INFO - +------ END KW: Utils.Run Command (32)
20190402 05:49:43.154 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (33)
20190402 05:49:43.155 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:49:43.155 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:49:43.156 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:49:43.157 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:49:43.157 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:49:43.157 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:49:43.158 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:49:43.158 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:49:43.159 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:49:43.159 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:49:43.160 - INFO - &{result_dict} = { stdout= }
20190402 05:49:43.160 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:49:43.160 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:49:43.160 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:43.161 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:49:43.161 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:43.161 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:49:43.162 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:49:43.162 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:49:43.162 - INFO - controller-0:~$
20190402 05:49:43.162 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:49:43.162 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:49:43.165 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:49:43.165 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 05:49:43.166 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:49:43.471 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:49:43.471 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:49:43.471 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (305)
20190402 05:49:43.471 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:49:43.472 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:49:43.472 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:49:43.472 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:49:43.472 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:49:43.472 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:43.472 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:49:43.472 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:43.472 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:49:43.473 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:49:43.473 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:49:43.474 - INFO - echo $?
20190402 05:49:43.474 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:49:43.474 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:49:43.475 - INFO - 0
20190402 05:49:43.475 - INFO - ${rc} = 0
20190402 05:49:43.475 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:49:43.475 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:49:43.475 - INFO - 0
20190402 05:49:43.475 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:49:43.475 - INFO - ${rc} = 0
20190402 05:49:43.475 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:49:43.475 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:49:43.476 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:49:43.476 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:43.476 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:49:43.476 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:49:43.476 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:49:43.476 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:49:43.477 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:43.477 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:49:43.477 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:49:43.477 - INFO - +------- END KW: Utils.Run Command (320)
20190402 05:49:43.477 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:49:43.477 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:43.477 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:49:43.477 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:49:43.477 - INFO - +------ END KW: Utils.Retrieve Host Property (322)
20190402 05:49:43.478 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:49:43.478 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:49:43.478 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:49:43.478 - DEBUG - Traceback (most recent call last):
  None
20190402 05:49:43.478 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:49:43.478 - INFO - +----- END KW: Utils.Check Property Value (323)
20190402 05:49:43.478 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (359)
20190402 05:50:13.479 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:50:13.480 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:50:13.481 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:50:13.482 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:50:13.484 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 05:50:13.484 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:50:13.485 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:50:13.487 - INFO - &{result_dict} = { stdout= }
20190402 05:50:13.487 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:50:13.487 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:50:13.488 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:50:13.489 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:50:13.489 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:50:13.490 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:50:13.490 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:50:13.491 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:50:13.491 - INFO - controller-0:~$
20190402 05:50:13.491 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:50:13.492 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:50:13.507 - INFO - source /etc/platform/openrc
20190402 05:50:13.508 - INFO - +------- END KW: SSHLibrary.Write (16)
20190402 05:50:13.508 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:50:13.510 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:50:13.510 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:50:13.511 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2)
20190402 05:50:13.511 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:50:13.512 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:50:13.512 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:50:13.512 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:50:13.512 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:50:13.513 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:50:13.513 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:50:13.513 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:50:13.514 - INFO - +------- END KW: Utils.Remove Prompt Line (3)
20190402 05:50:13.514 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:50:13.514 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:50:13.516 - INFO - echo $?
20190402 05:50:13.516 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:50:13.516 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:50:13.517 - INFO - 0
20190402 05:50:13.517 - INFO - ${rc} = 0
20190402 05:50:13.517 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:50:13.517 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:50:13.517 - INFO - 0
20190402 05:50:13.518 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:50:13.518 - INFO - ${rc} = 0
20190402 05:50:13.518 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 05:50:13.518 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:50:13.519 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:50:13.519 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:13.519 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:50:13.520 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:50:13.520 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:13.520 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:50:13.521 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:50:13.521 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 05:50:13.521 - INFO - +------ END KW: Utils.Run Command (40)
20190402 05:50:13.521 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (41)
20190402 05:50:13.521 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:50:13.522 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:50:13.522 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:50:13.523 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:50:13.523 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:50:13.523 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:50:13.524 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:50:13.524 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:50:13.524 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:50:13.524 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:50:13.525 - INFO - &{result_dict} = { stdout= }
20190402 05:50:13.525 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:50:13.525 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:50:13.526 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:50:13.526 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:50:13.526 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:13.527 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:50:13.527 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 05:50:13.527 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:50:13.527 - INFO - controller-0:~$
20190402 05:50:13.527 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:50:13.527 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:50:13.530 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:50:13.530 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 05:50:13.530 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:50:13.840 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:50:13.840 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:50:13.840 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (310)
20190402 05:50:13.840 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:50:13.841 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:50:13.841 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:50:13.841 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:50:13.841 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:50:13.841 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:13.841 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:50:13.841 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:13.841 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:50:13.842 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:50:13.842 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:50:13.843 - INFO - echo $?
20190402 05:50:13.843 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:50:13.843 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:50:13.844 - INFO - 0
20190402 05:50:13.844 - INFO - ${rc} = 0
20190402 05:50:13.844 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:50:13.844 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:50:13.844 - INFO - 0
20190402 05:50:13.844 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:50:13.844 - INFO - ${rc} = 0
20190402 05:50:13.844 - INFO - +-------- END KW: Utils.Get Return Code (2)
20190402 05:50:13.844 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:50:13.845 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:50:13.845 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:13.845 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:50:13.845 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:50:13.845 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:13.845 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:50:13.846 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:13.846 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:50:13.846 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:50:13.846 - INFO - +------- END KW: Utils.Run Command (323)
20190402 05:50:13.846 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:50:13.846 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:13.846 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:50:13.846 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:13.846 - INFO - +------ END KW: Utils.Retrieve Host Property (324)
20190402 05:50:13.847 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:50:13.847 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:50:13.847 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:50:13.847 - DEBUG - Traceback (most recent call last):
  None
20190402 05:50:13.847 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:50:13.847 - INFO - +----- END KW: Utils.Check Property Value (326)
20190402 05:50:13.847 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (368)
20190402 05:50:43.848 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:50:43.849 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:50:43.850 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:50:43.851 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:50:43.852 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:50:43.853 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:50:43.853 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:50:43.854 - INFO - &{result_dict} = { stdout= }
20190402 05:50:43.854 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:50:43.854 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:50:43.854 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:43.854 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:50:43.854 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:43.854 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:50:43.854 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:50:43.855 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:50:43.855 - INFO - controller-0:~$
20190402 05:50:43.855 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:50:43.855 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:50:43.860 - INFO - source /etc/platform/openrc
20190402 05:50:43.860 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 05:50:43.860 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:50:43.861 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:50:43.861 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:50:43.861 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:50:43.861 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:50:43.861 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:50:43.862 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:50:43.862 - INFO - +-------- END KW: String.Get Line (1)
20190402 05:50:43.862 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:50:43.862 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:50:43.862 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:50:43.862 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:50:43.862 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 05:50:43.862 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:50:43.862 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:50:43.863 - INFO - echo $?
20190402 05:50:43.863 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:50:43.863 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:50:43.864 - INFO - 0
20190402 05:50:43.864 - INFO - ${rc} = 0
20190402 05:50:43.864 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:50:43.864 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:50:43.864 - INFO - 0
20190402 05:50:43.864 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:50:43.864 - INFO - ${rc} = 0
20190402 05:50:43.864 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 05:50:43.864 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:50:43.865 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:50:43.865 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:43.865 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:50:43.865 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:50:43.865 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:43.866 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:50:43.866 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:50:43.866 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:50:43.866 - INFO - +------ END KW: Utils.Run Command (16)
20190402 05:50:43.866 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (17)
20190402 05:50:43.866 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:50:43.866 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:50:43.867 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:50:43.867 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:50:43.867 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:50:43.867 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:50:43.867 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:50:43.868 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:50:43.868 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:50:43.868 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:50:43.868 - INFO - &{result_dict} = { stdout= }
20190402 05:50:43.868 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:50:43.868 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:50:43.869 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:50:43.869 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:50:43.869 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:43.869 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:50:43.869 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:50:43.869 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:50:43.869 - INFO - controller-0:~$
20190402 05:50:43.869 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:50:43.870 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:50:43.872 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:50:43.872 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 05:50:43.872 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:50:44.182 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:50:44.183 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:50:44.183 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (311)
20190402 05:50:44.183 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:50:44.183 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:50:44.183 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:50:44.183 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:50:44.184 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:50:44.184 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:44.184 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:50:44.184 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:44.184 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:50:44.184 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:50:44.184 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:50:44.186 - INFO - echo $?
20190402 05:50:44.186 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:50:44.186 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:50:44.186 - INFO - 0
20190402 05:50:44.187 - INFO - ${rc} = 0
20190402 05:50:44.187 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:50:44.187 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:50:44.187 - INFO - 0
20190402 05:50:44.187 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:50:44.187 - INFO - ${rc} = 0
20190402 05:50:44.187 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:50:44.187 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:50:44.187 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:50:44.188 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:50:44.188 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:50:44.188 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:50:44.188 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:50:44.188 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:50:44.188 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:44.188 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:50:44.189 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:50:44.189 - INFO - +------- END KW: Utils.Run Command (322)
20190402 05:50:44.189 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:50:44.189 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:44.189 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:50:44.189 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:50:44.189 - INFO - +------ END KW: Utils.Retrieve Host Property (323)
20190402 05:50:44.189 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:50:44.189 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:50:44.190 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:50:44.190 - DEBUG - Traceback (most recent call last):
  None
20190402 05:50:44.190 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:50:44.190 - INFO - +----- END KW: Utils.Check Property Value (324)
20190402 05:50:44.190 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (342)
20190402 05:51:14.191 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:51:14.192 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:51:14.193 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:51:14.194 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:51:14.195 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:51:14.195 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:51:14.195 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:51:14.196 - INFO - &{result_dict} = { stdout= }
20190402 05:51:14.196 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:51:14.196 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:51:14.196 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:14.196 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:51:14.196 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:14.197 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:51:14.197 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:51:14.197 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:51:14.197 - INFO - controller-0:~$
20190402 05:51:14.197 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:51:14.197 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:51:14.201 - INFO - source /etc/platform/openrc
20190402 05:51:14.201 - INFO - +------- END KW: SSHLibrary.Write (4)
20190402 05:51:14.201 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:51:14.202 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:51:14.202 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:51:14.202 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 05:51:14.202 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:51:14.203 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:51:14.203 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:51:14.203 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:51:14.203 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:51:14.203 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:51:14.203 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:51:14.204 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:51:14.204 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 05:51:14.204 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:51:14.204 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:51:14.204 - INFO - echo $?
20190402 05:51:14.205 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:51:14.205 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:51:14.205 - INFO - 0
20190402 05:51:14.205 - INFO - ${rc} = 0
20190402 05:51:14.205 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:51:14.205 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:51:14.205 - INFO - 0
20190402 05:51:14.206 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:51:14.206 - INFO - ${rc} = 0
20190402 05:51:14.206 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 05:51:14.206 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:51:14.206 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:51:14.207 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:51:14.207 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:51:14.207 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:51:14.207 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:14.207 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:51:14.207 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:51:14.207 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:51:14.207 - INFO - +------ END KW: Utils.Run Command (14)
20190402 05:51:14.207 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (15)
20190402 05:51:14.208 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:51:14.208 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:51:14.208 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:51:14.209 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:51:14.209 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 05:51:14.209 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:51:14.209 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:51:14.209 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:51:14.210 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:51:14.210 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:51:14.210 - INFO - &{result_dict} = { stdout= }
20190402 05:51:14.210 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:51:14.210 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:51:14.211 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:51:14.211 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:51:14.211 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:14.211 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:51:14.211 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:51:14.211 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:51:14.212 - INFO - controller-0:~$
20190402 05:51:14.212 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:51:14.212 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:51:14.213 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:51:14.213 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:51:14.213 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:51:14.525 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:51:14.525 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:51:14.525 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (312)
20190402 05:51:14.525 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:51:14.526 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:51:14.526 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:51:14.526 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:51:14.526 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:51:14.526 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:14.526 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:51:14.526 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:14.526 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:51:14.527 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:51:14.527 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:51:14.528 - INFO - echo $?
20190402 05:51:14.528 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:51:14.528 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:51:14.529 - INFO - 0
20190402 05:51:14.529 - INFO - ${rc} = 0
20190402 05:51:14.529 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:51:14.529 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:51:14.529 - INFO - 0
20190402 05:51:14.529 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:51:14.529 - INFO - ${rc} = 0
20190402 05:51:14.529 - INFO - +-------- END KW: Utils.Get Return Code (2)
20190402 05:51:14.529 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:51:14.530 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:51:14.530 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:14.530 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:51:14.530 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:51:14.530 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:14.530 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:51:14.531 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:14.531 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:51:14.531 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:51:14.531 - INFO - +------- END KW: Utils.Run Command (322)
20190402 05:51:14.531 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:51:14.531 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:14.531 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:51:14.531 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:14.531 - INFO - +------ END KW: Utils.Retrieve Host Property (323)
20190402 05:51:14.531 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:51:14.532 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:51:14.532 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:51:14.532 - DEBUG - Traceback (most recent call last):
  None
20190402 05:51:14.532 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:51:14.532 - INFO - +----- END KW: Utils.Check Property Value (324)
20190402 05:51:14.532 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (341)
20190402 05:51:44.533 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:51:44.534 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:51:44.535 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:51:44.538 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:51:44.539 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:51:44.539 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:51:44.540 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:51:44.542 - INFO - &{result_dict} = { stdout= }
20190402 05:51:44.542 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:51:44.542 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:51:44.543 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:51:44.544 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:51:44.544 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:51:44.545 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:51:44.545 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:51:44.546 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:51:44.546 - INFO - controller-0:~$
20190402 05:51:44.546 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 05:51:44.547 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:51:44.562 - INFO - source /etc/platform/openrc
20190402 05:51:44.563 - INFO - +------- END KW: SSHLibrary.Write (16)
20190402 05:51:44.563 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:51:44.565 - INFO - Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:51:44.565 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
controller-0:~$
20190402 05:51:44.565 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2)
20190402 05:51:44.565 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:51:44.566 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:51:44.566 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:51:44.566 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:51:44.567 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:51:44.567 - INFO - ${clean_out} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:51:44.568 - INFO - +-------- END KW: String.Remove String (1)
20190402 05:51:44.568 - INFO - ${output} = Openstack Admin credentials can only be loaded from the active controller.
20190402 05:51:44.568 - INFO - +------- END KW: Utils.Remove Prompt Line (3)
20190402 05:51:44.568 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:51:44.569 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:51:44.570 - INFO - echo $?
20190402 05:51:44.570 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 05:51:44.570 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:51:44.572 - INFO - 0
20190402 05:51:44.572 - INFO - ${rc} = 0
20190402 05:51:44.572 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 05:51:44.573 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:51:44.573 - INFO - 0
20190402 05:51:44.573 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 05:51:44.573 - INFO - ${rc} = 0
20190402 05:51:44.573 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 05:51:44.573 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:51:44.574 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:51:44.574 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:44.574 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:51:44.575 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:51:44.575 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:44.575 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:51:44.575 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Openstack Admin credentials can only be loaded from the active controller.
20190402 05:51:44.575 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:51:44.575 - INFO - +------ END KW: Utils.Run Command (40)
20190402 05:51:44.576 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (42)
20190402 05:51:44.576 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:51:44.576 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:51:44.577 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:51:44.577 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:51:44.577 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:51:44.577 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:51:44.578 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:51:44.578 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:51:44.578 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:51:44.578 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:51:44.579 - INFO - &{result_dict} = { stdout= }
20190402 05:51:44.579 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:51:44.579 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:51:44.580 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 05:51:44.580 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:51:44.580 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:44.580 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:51:44.580 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:51:44.580 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:51:44.581 - INFO - controller-0:~$
20190402 05:51:44.581 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:51:44.581 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:51:44.594 - INFO - system host-show controller-0|grep -w administrative|awk '{print $4}'
20190402 05:51:44.594 - INFO - +-------- END KW: SSHLibrary.Write (13)
20190402 05:51:44.594 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:51:44.900 - INFO - You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:51:44.900 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
controller-0:~$
20190402 05:51:44.901 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (307)
20190402 05:51:44.901 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:51:44.901 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:51:44.901 - INFO - ${line_to_remove} = controller-0:~$
20190402 05:51:44.901 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:51:44.901 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:51:44.902 - INFO - ${clean_out} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:44.902 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:51:44.902 - INFO - ${output} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:44.902 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:51:44.902 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:51:44.902 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:51:44.904 - INFO - echo $?
20190402 05:51:44.904 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 05:51:44.904 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:51:44.905 - INFO - 0
20190402 05:51:44.905 - INFO - ${rc} = 0
20190402 05:51:44.905 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:51:44.905 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:51:44.905 - INFO - 0
20190402 05:51:44.905 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:51:44.905 - INFO - ${rc} = 0
20190402 05:51:44.905 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 05:51:44.905 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:51:44.906 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:51:44.906 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:44.906 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:51:44.906 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:51:44.906 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:51:44.906 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:51:44.907 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:44.907 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 05:51:44.907 - INFO - ${result} = {u'stdout': u'You must provide a password via either --os-password or via env[OS_PASSWORD]', u'stderr': u'', u'rc': u'0'}
20190402 05:51:44.907 - INFO - +------- END KW: Utils.Run Command (330)
20190402 05:51:44.907 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:51:44.907 - INFO - ${value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:44.907 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 05:51:44.907 - INFO - ${current_value} = You must provide a password via either --os-password or via env[OS_PASSWORD]
20190402 05:51:44.907 - INFO - +------ END KW: Utils.Retrieve Host Property (331)
20190402 05:51:44.907 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:51:44.908 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:51:44.908 - FAIL - You must provide a password via either --os-password or via env[OS_PASSWORD] != unlocked
20190402 05:51:44.908 - DEBUG - Traceback (most recent call last):
  None
20190402 05:51:44.908 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:51:44.908 - INFO - +----- END KW: Utils.Check Property Value (332)
20190402 05:51:44.908 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (375)
20190402 05:52:14.909 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 05:52:14.910 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 05:52:14.911 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 05:52:14.913 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:14.914 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:52:14.914 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:14.915 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:14.916 - INFO - &{result_dict} = { stdout= }
20190402 05:52:14.917 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:52:14.917 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:14.918 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:14.918 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:14.919 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:14.920 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:14.920 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:52:14.920 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 05:52:14.921 - INFO - controller-0:~$
20190402 05:52:14.921 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 05:52:14.921 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:14.936 - INFO - source /etc/platform/openrc
20190402 05:52:14.936 - INFO - +------- END KW: SSHLibrary.Write (15)
20190402 05:52:14.936 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:16.021 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:16.022 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:16.022 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1086)
20190402 05:52:16.022 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:16.023 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:16.023 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:16.023 - INFO - +-------- END KW: String.Get Line (0)
20190402 05:52:16.023 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:16.023 - INFO - ${clean_out} =
20190402 05:52:16.023 - INFO - +-------- END KW: String.Remove String (0)
20190402 05:52:16.023 - INFO - ${output} =
20190402 05:52:16.024 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 05:52:16.024 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 05:52:16.024 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:16.027 - INFO - echo $?
20190402 05:52:16.027 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 05:52:16.027 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:16.028 - INFO - 0
20190402 05:52:16.028 - INFO - ${rc} = 0
20190402 05:52:16.028 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:52:16.028 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:16.028 - INFO - 0
20190402 05:52:16.028 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 05:52:16.029 - INFO - ${rc} = 0
20190402 05:52:16.029 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 05:52:16.029 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:16.029 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:16.029 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:16.029 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:52:16.029 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:16.030 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:16.030 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:16.030 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 05:52:16.030 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 05:52:16.030 - INFO - +------ END KW: Utils.Run Command (1119)
20190402 05:52:16.030 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (1120)
20190402 05:52:16.030 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 05:52:16.031 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:16.031 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:16.031 - INFO - ${system_cmd} = system host-show controller-0|grep -w administrative|awk '{print$4}'
20190402 05:52:16.031 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 05:52:16.031 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:16.032 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:16.032 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:16.032 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:16.032 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:16.033 - INFO - &{result_dict} = { stdout= }
20190402 05:52:16.033 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:52:16.033 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:16.033 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:16.033 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:16.033 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:16.033 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:16.033 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:52:16.034 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:52:16.034 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:16.034 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 05:52:16.034 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:16.046 - INFO - system host-show controller-0|grep -w  administrative|awk '{print$4}'
20190402 05:52:16.046 - INFO - +-------- END KW: SSHLibrary.Write (12)
20190402 05:52:16.046 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:21.755 - INFO - unlocked
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:21.755 - INFO - ${output} = unlocked
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:21.755 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (5709)
20190402 05:52:21.755 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:21.756 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:21.756 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:21.756 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:52:21.756 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:21.756 - INFO - ${clean_out} = unlocked
20190402 05:52:21.756 - INFO - +--------- END KW: String.Remove String (0)
20190402 05:52:21.756 - INFO - ${output} = unlocked
20190402 05:52:21.756 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:21.756 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:52:21.757 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:21.758 - INFO - echo $?
20190402 05:52:21.758 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 05:52:21.758 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:21.765 - INFO - 0
20190402 05:52:21.765 - INFO - ${rc} = 0
20190402 05:52:21.765 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 05:52:21.765 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:21.765 - INFO - 0
20190402 05:52:21.766 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:52:21.766 - INFO - ${rc} = 0
20190402 05:52:21.766 - INFO - +-------- END KW: Utils.Get Return Code (10)
20190402 05:52:21.766 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:21.766 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:21.766 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:21.766 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:52:21.767 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:21.767 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:21.767 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:21.767 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: unlocked
20190402 05:52:21.767 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:52:21.767 - INFO - ${result} = {u'stdout': u'unlocked', u'stderr': u'', u'rc': u'0'}
20190402 05:52:21.767 - INFO - +------- END KW: Utils.Run Command (5736)
20190402 05:52:21.767 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:52:21.768 - INFO - ${value} = unlocked
20190402 05:52:21.768 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 05:52:21.768 - INFO - ${current_value} = unlocked
20190402 05:52:21.768 - INFO - +------ END KW: Utils.Retrieve Host Property (5737)
20190402 05:52:21.768 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:52:21.768 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:52:21.768 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:52:21.768 - INFO - +----- END KW: Utils.Check Property Value (5738)
20190402 05:52:21.768 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (6859)
20190402 05:52:21.768 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (523188)
20190402 05:52:21.769 - INFO - +-- END KW: Utils.Unlock Master Controller (830305)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:52:21.769 - INFO - +-- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 5 sec | Check Ceph Status | HEALTH_WARN ]
20190402 05:52:21.769 - INFO - +--- START KW: Utils.Check Ceph Status [ HEALTH_WARN ]
20190402 05:52:21.769 - INFO - +---- START KW: Utils.Run Command [ ceph -s ]
20190402 05:52:21.770 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:21.770 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:21.770 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:21.770 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:21.770 - INFO - &{result_dict} = { stdout= }
20190402 05:52:21.770 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:21.771 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:21.771 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:52:21.771 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:21.771 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:52:21.771 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:21.771 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:52:21.771 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:52:21.772 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:21.772 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 05:52:21.772 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:21.773 - INFO - ceph -s
20190402 05:52:21.773 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 05:52:21.774 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:22.064 - INFO - cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_WARN
            384 pgs degraded
            64 pgs stuck unclean
            384 pgs undersized
            recovery 1116/2232 objects degraded (50.000%)
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e15: 1 osds: 1 up, 1 in
            flags sortbitwise,require_jewel_osds
      pgmap v19: 384 pgs, 6 pools, 1588 bytes data, 1116 objects
            43424 kB used, 445 GB / 445 GB avail
            1116/2232 objects degraded (50.000%)
                 384 active+undersized+degraded
  client io 374 kB/s rd, 0 B/s wr, 561 op/s rd, 374 op/s wr
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:22.064 - INFO - ${output} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_WARN
            384 pgs degraded
            64 pgs stuck unclean
            384 pgs undersized
            recovery 1116/223...
20190402 05:52:22.064 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (290)
20190402 05:52:22.064 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:22.064 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:22.065 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:22.065 - INFO - +------ END KW: String.Get Line (1)
20190402 05:52:22.065 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:22.065 - INFO - ${clean_out} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_WARN
            384 pgs degraded
            64 pgs stuck unclean
            384 pgs undersized
            recovery 1116/223...
20190402 05:52:22.065 - INFO - +------ END KW: String.Remove String (0)
20190402 05:52:22.065 - INFO - ${output} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_WARN
            384 pgs degraded
            64 pgs stuck unclean
            384 pgs undersized
            recovery 1116/223...
20190402 05:52:22.065 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:22.065 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:52:22.066 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:22.067 - INFO - echo $?
20190402 05:52:22.067 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 05:52:22.067 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:22.070 - INFO - 0
20190402 05:52:22.070 - INFO - ${rc} = 0
20190402 05:52:22.070 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (3)
20190402 05:52:22.070 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:22.070 - INFO - 0
20190402 05:52:22.070 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:52:22.070 - INFO - ${rc} = 0
20190402 05:52:22.070 - INFO - +----- END KW: Utils.Get Return Code (5)
20190402 05:52:22.070 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:22.071 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:22.071 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.071 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:22.071 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:22.071 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.072 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:22.072 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_WARN
            384 pgs degraded
            64 pgs stuck unclean
            384 pgs undersized
            recovery 1116/2232 objects degraded (50.000%)
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e15: 1 osds: 1 up, 1 in
            flags sortbitwise,require_jewel_osds
      pgmap v19: 384 pgs, 6 pools, 1588 bytes data, 1116 objects
            43424 kB used, 445 GB / 445 GB avail
            1116/2232 objects degraded (50.000%)
                 384 active+undersized+degraded
  client io 374 kB/s rd, 0 B/s wr, 561 op/s rd, 374 op/s wr
20190402 05:52:22.072 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 05:52:22.072 - INFO - ${result} = {u'stdout': u'cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7\r\n     health HEALTH_WARN\r\n            384 pgs degraded\r\n            64 pgs stuck unclean\r\n            384 pgs undersized\r\n         ...
20190402 05:52:22.072 - INFO - +---- END KW: Utils.Run Command (303)
20190402 05:52:22.072 - INFO - +---- START KW: BuiltIn.Should Contain [ ${result.stdout} | ${status} ]
20190402 05:52:22.072 - INFO - +---- END KW: BuiltIn.Should Contain (0)
20190402 05:52:22.073 - INFO - +---- START KW: Utils.Run Command [ ceph osd tree | True ]
20190402 05:52:22.073 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:22.073 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:22.073 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:22.074 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:22.074 - INFO - &{result_dict} = { stdout= }
20190402 05:52:22.074 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:22.074 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:22.075 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 05:52:22.075 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:22.075 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.075 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:22.075 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:52:22.076 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 05:52:22.076 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:22.076 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 05:52:22.076 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:22.077 - INFO - ceph osd tree
20190402 05:52:22.078 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 05:52:22.078 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:22.371 - INFO - ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                                         
-4 0.43549         host controller-0                                   
 0 0.43549             osd.0              up  1.00000          1.00000 
-3       0         host controller-1                                   
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:22.371 - INFO - ${output} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                        ...
20190402 05:52:22.371 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (293)
20190402 05:52:22.371 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:22.371 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:22.372 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:22.372 - INFO - +------ END KW: String.Get Line (1)
20190402 05:52:22.372 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:22.372 - INFO - ${clean_out} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                        ...
20190402 05:52:22.372 - INFO - +------ END KW: String.Remove String (0)
20190402 05:52:22.372 - INFO - ${output} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                        ...
20190402 05:52:22.372 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:22.372 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 05:52:22.372 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:22.374 - INFO - echo $?
20190402 05:52:22.374 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 05:52:22.374 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:22.378 - INFO - 0
20190402 05:52:22.378 - INFO - ${rc} = 0
20190402 05:52:22.378 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (4)
20190402 05:52:22.378 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:22.378 - INFO - 0
20190402 05:52:22.378 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 05:52:22.378 - INFO - ${rc} = 0
20190402 05:52:22.378 - INFO - +----- END KW: Utils.Get Return Code (6)
20190402 05:52:22.378 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:22.379 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:22.379 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.379 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:22.379 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:22.379 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.379 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:22.380 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                                         
-4 0.43549         host controller-0                                   
 0 0.43549             osd.0              up  1.00000          1.00000 
-3       0         host controller-1
20190402 05:52:22.380 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 05:52:22.380 - INFO - +---- END KW: Utils.Run Command (307)
20190402 05:52:22.380 - INFO - +--- END KW: Utils.Check Ceph Status (611)
20190402 05:52:22.380 - INFO - +-- END KW: BuiltIn.Wait Until Keyword Succeeds (611)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 05:52:22.380 - INFO - +-- START KW: BuiltIn.Run Keyword If [ '${ENVIRONMENT}'=='virtual' | Install Remaining Nodes Virtual | ELSE | Install Remaining Nodes Baremetal ]
20190402 05:52:22.380 - INFO - +--- START KW: provisioning.Install Remaining Nodes Baremetal [ ]
20190402 05:52:22.381 - INFO - +---- START KW: provisioning.Get List Of Installation Nodes [ ]
20190402 05:52:22.381 - INFO - +----- START KW: Collections.Get Dictionary Keys [ ${NODES} ]
20190402 05:52:22.381 - INFO - ${nodes_list} = ['controller-0', 'controller-1']
20190402 05:52:22.381 - INFO - +----- END KW: Collections.Get Dictionary Keys (0)
20190402 05:52:22.381 - INFO - +----- START KW: Collections.Remove Values From List [ ${nodes_list} | controller-0 ]
20190402 05:52:22.381 - INFO - +----- END KW: Collections.Remove Values From List (0)
20190402 05:52:22.382 - INFO - @{nodes_list} = [ controller-1 ]
20190402 05:52:22.382 - INFO - +---- END KW: provisioning.Get List Of Installation Nodes (1)
20190402 05:52:22.382 - INFO - +---- START KW: ${node} IN [ @{nodes_list} ] [ ]
20190402 05:52:22.382 - INFO - +----- START KW: ${node} = controller-1 [ ]
20190402 05:52:22.382 - INFO - +------ START KW: BuiltIn.Set Variable [ &{NODES}[${node}] ]
20190402 05:52:22.382 - INFO - &{node_data} = { bmc_user=starlingx | bmc_ip=192.168.100.77 | name=controller-1 | pxe_nic_mac=a4:bf:01:55:03:bb | bmc_pswd=Passw0rd | personality=controller }
20190402 05:52:22.382 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 05:52:22.383 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[bmc_ip] ]
20190402 05:52:22.383 - INFO - ${bmc_ip} = 192.168.100.77
20190402 05:52:22.383 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 05:52:22.383 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[bmc_user] ]
20190402 05:52:22.383 - INFO - ${bmc_user} = starlingx
20190402 05:52:22.383 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 05:52:22.383 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[bmc_pswd] ]
20190402 05:52:22.384 - INFO - ${pswd} = Passw0rd
20190402 05:52:22.384 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 05:52:22.384 - INFO - +------ START KW: BuiltIn.Catenate [ ipmitool -H ${bmc_ip} | -U ${bmc_user} -P ${pswd} | -I lanplus chassis bootparam set bootflag force_pxe ]
20190402 05:52:22.384 - INFO - ${set_pxe_boot_device} = ipmitool -H 192.168.100.77 -U starlingx -P Passw0rd -I lanplus chassis bootparam set bootflag force_pxe
20190402 05:52:22.384 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 05:52:22.384 - INFO - +------ START KW: BuiltIn.Catenate [ ipmitool -H ${bmc_ip} -U ${bmc_user} | -P ${pswd} -I lanplus chassis power on ]
20190402 05:52:22.384 - INFO - ${turn_on_node} = ipmitool -H 192.168.100.77 -U starlingx -P Passw0rd -I lanplus chassis power on
20190402 05:52:22.385 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 05:52:22.385 - INFO - +------ START KW: OperatingSystem.Run [ ${set_pxe_boot_device} ]
20190402 05:52:22.386 - INFO - Running command 'ipmitool -H 192.168.100.77 -U starlingx -P Passw0rd -I lanplus chassis bootparam set bootflag force_pxe 2>&1'.
20190402 05:52:22.433 - INFO - +------ END KW: OperatingSystem.Run (48)
20190402 05:52:22.433 - INFO - +------ START KW: OperatingSystem.Run [ ${turn_on_node} ]
20190402 05:52:22.435 - INFO - Running command 'ipmitool -H 192.168.100.77 -U starlingx -P Passw0rd -I lanplus chassis power on 2>&1'.
20190402 05:52:22.464 - INFO - +------ END KW: OperatingSystem.Run (31)
20190402 05:52:22.464 - INFO - +----- END KW: ${node} = controller-1 (82)
20190402 05:52:22.465 - INFO - +---- END KW: ${node} IN [ @{nodes_list} ] (82)
20190402 05:52:22.465 - INFO - +---- START KW: ${node} IN [ @{nodes_list} ] [ ]
20190402 05:52:22.465 - INFO - +----- START KW: ${node} = controller-1 [ ]
20190402 05:52:22.466 - INFO - +------ START KW: BuiltIn.Set Variable [ &{NODES}[${node}] ]
20190402 05:52:22.467 - INFO - &{node_data} = { bmc_user=starlingx | bmc_ip=192.168.100.77 | name=controller-1 | pxe_nic_mac=a4:bf:01:55:03:bb | bmc_pswd=Passw0rd | personality=controller }
20190402 05:52:22.467 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 05:52:22.467 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[name] ]
20190402 05:52:22.468 - INFO - ${name} = controller-1
20190402 05:52:22.468 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 05:52:22.468 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[personality] ]
20190402 05:52:22.469 - INFO - ${personality} = controller
20190402 05:52:22.469 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 05:52:22.470 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[pxe_nic_mac] ]
20190402 05:52:22.470 - INFO - ${mac_address} = a4:bf:01:55:03:bb
20190402 05:52:22.470 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 05:52:22.471 - INFO - +------ START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 5 sec | Run Command | system host-add -n ${name} -p ${personality} -m ${mac_address} | True ]
20190402 05:52:22.472 - INFO - +------- START KW: Utils.Run Command [ system host-add -n ${name} -p ${personality} -m ${mac_address} | True ]
20190402 05:52:22.473 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:22.474 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:22.474 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:22.474 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:22.475 - INFO - &{result_dict} = { stdout= }
20190402 05:52:22.476 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:52:22.476 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:22.476 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.477 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:22.477 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:22.478 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:22.478 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 05:52:22.478 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 05:52:22.479 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:22.479 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 05:52:22.479 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:22.502 - INFO - system host-add -n controller-1 -p con troller -m a4:bf:01:55:03:bb
20190402 05:52:22.502 - INFO - +-------- END KW: SSHLibrary.Write (23)
20190402 05:52:22.502 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:28.117 - INFO - +---------------------+-----------------------------------------+
| Property            | Value                                   |
+---------------------+-----------------------------------------+
| action              | none                                    |
| administrative      | locked                                  |
| availability        | offline                                 |
| bm_ip               | None                                    |
| bm_type             | None                                    |
| bm_username         | None                                    |
| boot_device         | sda                                     |
| capabilities        | {u'Personality': u'Controller-Standby'} |
| config_applied      | None                                    |
| config_status       | None                                    |
| config_target       | None                                    |
| console             | ttyS0,115200                            |
| created_at          | 2019-04-02T11:41:09.555447+00:00        |
| hostname            | controller-1                            |
| id                  | 2                                       |
| install_output      | text                                    |
| install_state       | None                                    |
| install_state_info  | None                                    |
| invprovision        | None                                    |
| location            | {}                                      |
| mgmt_ip             | 10.10.53.4                              |
| mgmt_mac            | a4:bf:01:55:03:bb                       |
| operational         | disabled                                |
| personality         | controller                              |
| reserved            | False                                   |
| rootfs_device       | sda                                     |
| serialid            | None                                    |
| software_load       | 19.01                                   |
| subfunction_avail   | not-installed                           |
| subfunction_oper    | disabled                                |
| subfunctions        | controller,worker                       |
| task                | None                                    |
| tboot               | false                                   |
| ttys_dcd            | None                                    |
| updated_at          | None                                    |
| uptime              | 0                                       |
| uuid                | 7e3e37c8-5ee4-424c-b253-7335a13f97dd    |
| vim_progress_status | None                                    |
+---------------------+-----------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:28.117 - INFO - ${output} = +---------------------+-----------------------------------------+
| Property            | Value                                   |
+---------------------+-----------------------------------------+...
20190402 05:52:28.117 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (5615)
20190402 05:52:28.118 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:28.118 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:28.118 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:28.118 - INFO - +--------- END KW: String.Get Line (0)
20190402 05:52:28.118 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:28.119 - INFO - ${clean_out} = +---------------------+-----------------------------------------+
| Property            | Value                                   |
+---------------------+-----------------------------------------+...
20190402 05:52:28.119 - INFO - +--------- END KW: String.Remove String (1)
20190402 05:52:28.119 - INFO - ${output} = +---------------------+-----------------------------------------+
| Property            | Value                                   |
+---------------------+-----------------------------------------+...
20190402 05:52:28.119 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:28.119 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 05:52:28.119 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:28.122 - INFO - echo $?
20190402 05:52:28.122 - INFO - +--------- END KW: SSHLibrary.Write (3)
20190402 05:52:28.122 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:28.130 - INFO - 0
20190402 05:52:28.130 - INFO - ${rc} = 0
20190402 05:52:28.130 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (8)
20190402 05:52:28.130 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:28.130 - INFO - 0
20190402 05:52:28.130 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 05:52:28.130 - INFO - ${rc} = 0
20190402 05:52:28.130 - INFO - +-------- END KW: Utils.Get Return Code (11)
20190402 05:52:28.131 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:28.131 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:28.131 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:28.131 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:52:28.131 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:28.132 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:28.132 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:28.132 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------------+-----------------------------------------+
| Property            | Value                                   |
+---------------------+-----------------------------------------+
| action              | none                                    |
| administrative      | locked                                  |
| availability        | offline                                 |
| bm_ip               | None                                    |
| bm_type             | None                                    |
| bm_username         | None                                    |
| boot_device         | sda                                     |
| capabilities        | {u'Personality': u'Controller-Standby'} |
| config_applied      | None                                    |
| config_status       | None                                    |
| config_target       | None                                    |
| console             | ttyS0,115200                            |
| created_at          | 2019-04-02T11:41:09.555447+00:00        |
| hostname            | controller-1                            |
| id                  | 2                                       |
| install_output      | text                                    |
| install_state       | None                                    |
| install_state_info  | None                                    |
| invprovision        | None                                    |
| location            | {}                                      |
| mgmt_ip             | 10.10.53.4                              |
| mgmt_mac            | a4:bf:01:55:03:bb                       |
| operational         | disabled                                |
| personality         | controller                              |
| reserved            | False                                   |
| rootfs_device       | sda                                     |
| serialid            | None                                    |
| software_load       | 19.01                                   |
| subfunction_avail   | not-installed                           |
| subfunction_oper    | disabled                                |
| subfunctions        | controller,worker                       |
| task                | None                                    |
| tboot               | false                                   |
| ttys_dcd            | None                                    |
| updated_at          | None                                    |
| uptime              | 0                                       |
| uuid                | 7e3e37c8-5ee4-424c-b253-7335a13f97dd    |
| vim_progress_status | None                                    |
+---------------------+-----------------------------------------+
20190402 05:52:28.132 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 05:52:28.132 - INFO - +------- END KW: Utils.Run Command (5660)
20190402 05:52:28.132 - INFO - +------ END KW: BuiltIn.Wait Until Keyword Succeeds (5661)
20190402 05:52:28.132 - INFO - +----- END KW: ${node} = controller-1 (5667)
20190402 05:52:28.132 - INFO - +---- END KW: ${node} IN [ @{nodes_list} ] (5667)
20190402 05:52:28.132 - INFO - +---- START KW: ${node} IN [ @{nodes_list} ] [ ]
20190402 05:52:28.132 - INFO - +----- START KW: ${node} = controller-1 [ ]
20190402 05:52:28.132 - INFO - +------ START KW: BuiltIn.Set Variable [ &{NODES}[${node}] ]
20190402 05:52:28.133 - INFO - &{node_data} = { bmc_user=starlingx | bmc_ip=192.168.100.77 | name=controller-1 | pxe_nic_mac=a4:bf:01:55:03:bb | bmc_pswd=Passw0rd | personality=controller }
20190402 05:52:28.133 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 05:52:28.133 - INFO - +------ START KW: BuiltIn.Set Variable [ &{node_data}[name] ]
20190402 05:52:28.133 - INFO - ${name} = controller-1
20190402 05:52:28.133 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 05:52:28.133 - INFO - +------ START KW: BuiltIn.Wait Until Keyword Succeeds [ 20 min | 5 sec | Check Property Value | ${name} | install_state | completed ]
20190402 05:52:28.134 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:52:28.134 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:28.134 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:28.135 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:52:28.135 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:52:28.135 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:28.135 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:28.135 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:28.135 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:28.136 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:28.136 - INFO - &{result_dict} = { stdout= }
20190402 05:52:28.136 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:28.136 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:28.136 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:28.136 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:28.137 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:28.137 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:28.137 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:52:28.137 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:52:28.137 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:28.137 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:52:28.137 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:28.147 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:52:28.147 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:52:28.147 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:29.930 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:29.930 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:29.930 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1783)
20190402 05:52:29.930 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:29.931 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:29.931 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:29.931 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:52:29.931 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:29.932 - INFO - ${clean_out} = None
20190402 05:52:29.932 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:52:29.932 - INFO - ${output} = None
20190402 05:52:29.932 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:52:29.932 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:52:29.932 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:29.933 - INFO - echo $?
20190402 05:52:29.933 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:52:29.933 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:29.939 - INFO - 0
20190402 05:52:29.940 - INFO - ${rc} = 0
20190402 05:52:29.940 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 05:52:29.940 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:29.940 - INFO - 0
20190402 05:52:29.940 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:52:29.940 - INFO - ${rc} = 0
20190402 05:52:29.940 - INFO - +---------- END KW: Utils.Get Return Code (8)
20190402 05:52:29.940 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:29.941 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:29.941 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:29.941 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:29.941 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:29.941 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:29.941 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:29.942 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:52:29.942 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:52:29.942 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:52:29.942 - INFO - +--------- END KW: Utils.Run Command (1807)
20190402 05:52:29.942 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:52:29.942 - INFO - ${value} = None
20190402 05:52:29.942 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:52:29.942 - INFO - ${current_value} = None
20190402 05:52:29.942 - INFO - +-------- END KW: Utils.Retrieve Host Property (1808)
20190402 05:52:29.943 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:52:29.943 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:52:29.943 - FAIL - None != completed
20190402 05:52:29.943 - DEBUG - Traceback (most recent call last):
  None
20190402 05:52:29.943 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:52:29.943 - INFO - +------- END KW: Utils.Check Property Value (1809)
20190402 05:52:34.944 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:52:34.945 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:34.947 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:34.948 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:52:34.948 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:52:34.948 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:34.949 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:34.950 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:52:34.950 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:34.950 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:34.950 - INFO - &{result_dict} = { stdout= }
20190402 05:52:34.950 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:34.950 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:34.951 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:34.951 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:34.951 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:34.951 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:34.951 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:52:34.951 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:52:34.951 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:34.951 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:52:34.952 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:34.953 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:52:34.953 - INFO - +---------- END KW: SSHLibrary.Write (1)
20190402 05:52:34.953 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:36.051 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:36.051 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:36.052 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1098)
20190402 05:52:36.052 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:36.052 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:36.052 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:36.052 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:52:36.052 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:36.053 - INFO - ${clean_out} = None
20190402 05:52:36.053 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:52:36.053 - INFO - ${output} = None
20190402 05:52:36.053 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:36.053 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:52:36.054 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:36.054 - INFO - echo $?
20190402 05:52:36.054 - INFO - +----------- END KW: SSHLibrary.Write (0)
20190402 05:52:36.055 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:36.055 - INFO - 0
20190402 05:52:36.055 - INFO - ${rc} = 0
20190402 05:52:36.055 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:52:36.056 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:36.056 - INFO - 0
20190402 05:52:36.056 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:52:36.056 - INFO - ${rc} = 0
20190402 05:52:36.056 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:52:36.056 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:36.057 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:36.057 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:36.057 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:36.057 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:36.057 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:36.057 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:36.058 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:52:36.058 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:52:36.058 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:52:36.058 - INFO - +--------- END KW: Utils.Run Command (1110)
20190402 05:52:36.058 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:52:36.058 - INFO - ${value} = None
20190402 05:52:36.058 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:52:36.058 - INFO - ${current_value} = None
20190402 05:52:36.058 - INFO - +-------- END KW: Utils.Retrieve Host Property (1113)
20190402 05:52:36.059 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:52:36.059 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:52:36.059 - FAIL - None != completed
20190402 05:52:36.059 - DEBUG - Traceback (most recent call last):
  None
20190402 05:52:36.059 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:52:36.059 - INFO - +------- END KW: Utils.Check Property Value (1115)
20190402 05:52:41.060 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:52:41.061 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:41.063 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:41.064 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:52:41.064 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:52:41.064 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:41.065 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:41.065 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:41.066 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:41.066 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:41.066 - INFO - &{result_dict} = { stdout= }
20190402 05:52:41.066 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:41.066 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:41.067 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:41.067 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:41.067 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:41.067 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:41.067 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:52:41.067 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:52:41.067 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:41.067 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:52:41.067 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:41.078 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:52:41.078 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:52:41.078 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:42.174 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:42.174 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:42.174 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1096)
20190402 05:52:42.174 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:42.175 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:42.175 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:42.175 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:52:42.175 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:42.175 - INFO - ${clean_out} = None
20190402 05:52:42.175 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:52:42.175 - INFO - ${output} = None
20190402 05:52:42.175 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:42.176 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:52:42.176 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:42.177 - INFO - echo $?
20190402 05:52:42.177 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:52:42.177 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:42.178 - INFO - 0
20190402 05:52:42.178 - INFO - ${rc} = 0
20190402 05:52:42.178 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:52:42.178 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:42.178 - INFO - 0
20190402 05:52:42.179 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:52:42.179 - INFO - ${rc} = 0
20190402 05:52:42.179 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:52:42.179 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:42.179 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:42.180 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:42.180 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:42.180 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:42.180 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:42.180 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:42.180 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:52:42.180 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:52:42.180 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:52:42.181 - INFO - +--------- END KW: Utils.Run Command (1116)
20190402 05:52:42.181 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:52:42.181 - INFO - ${value} = None
20190402 05:52:42.181 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:52:42.181 - INFO - ${current_value} = None
20190402 05:52:42.181 - INFO - +-------- END KW: Utils.Retrieve Host Property (1120)
20190402 05:52:42.181 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:52:42.181 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:52:42.181 - FAIL - None != completed
20190402 05:52:42.181 - DEBUG - Traceback (most recent call last):
  None
20190402 05:52:42.182 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:52:42.182 - INFO - +------- END KW: Utils.Check Property Value (1122)
20190402 05:52:47.182 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:52:47.183 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:47.184 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:47.185 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:52:47.185 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:52:47.186 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:47.187 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:47.187 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:47.188 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:47.188 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:47.189 - INFO - &{result_dict} = { stdout= }
20190402 05:52:47.189 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:52:47.190 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:47.190 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:47.191 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:47.191 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:47.192 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:47.192 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 05:52:47.192 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:52:47.193 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:47.193 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:52:47.193 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:47.218 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:52:47.218 - INFO - +---------- END KW: SSHLibrary.Write (25)
20190402 05:52:47.219 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:48.204 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:48.204 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:48.204 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (985)
20190402 05:52:48.204 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:48.205 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:48.205 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:48.205 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:52:48.205 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:48.205 - INFO - ${clean_out} = None
20190402 05:52:48.205 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:52:48.206 - INFO - ${output} = None
20190402 05:52:48.206 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:52:48.206 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:52:48.206 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:48.207 - INFO - echo $?
20190402 05:52:48.207 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:52:48.207 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:48.208 - INFO - 0
20190402 05:52:48.208 - INFO - ${rc} = 0
20190402 05:52:48.208 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:52:48.208 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:48.208 - INFO - 0
20190402 05:52:48.208 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:52:48.208 - INFO - ${rc} = 0
20190402 05:52:48.208 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:52:48.208 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:48.209 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:48.209 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:48.209 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:48.209 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:48.210 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:48.210 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:48.210 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:52:48.210 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:52:48.210 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:52:48.210 - INFO - +--------- END KW: Utils.Run Command (1025)
20190402 05:52:48.210 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:52:48.210 - INFO - ${value} = None
20190402 05:52:48.211 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:52:48.211 - INFO - ${current_value} = None
20190402 05:52:48.211 - INFO - +-------- END KW: Utils.Retrieve Host Property (1028)
20190402 05:52:48.211 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:52:48.211 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:52:48.211 - FAIL - None != completed
20190402 05:52:48.211 - DEBUG - Traceback (most recent call last):
  None
20190402 05:52:48.211 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:52:48.211 - INFO - +------- END KW: Utils.Check Property Value (1029)
20190402 05:52:53.212 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:52:53.213 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:53.214 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:53.215 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:52:53.215 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:52:53.215 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:53.217 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:53.217 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:53.217 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:53.218 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:53.218 - INFO - &{result_dict} = { stdout= }
20190402 05:52:53.218 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:53.218 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:53.218 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:53.218 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:53.219 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:53.219 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:53.219 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:52:53.219 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:52:53.219 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:53.219 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:52:53.219 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:53.230 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:52:53.230 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:52:53.230 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:52:54.241 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:54.241 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:54.241 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1011)
20190402 05:52:54.241 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:52:54.242 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:52:54.242 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:54.242 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:52:54.242 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:52:54.242 - INFO - ${clean_out} = None
20190402 05:52:54.242 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:52:54.242 - INFO - ${output} = None
20190402 05:52:54.242 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:52:54.242 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:52:54.243 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:52:54.244 - INFO - echo $?
20190402 05:52:54.244 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:52:54.245 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:52:54.245 - INFO - 0
20190402 05:52:54.245 - INFO - ${rc} = 0
20190402 05:52:54.245 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:52:54.245 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:52:54.245 - INFO - 0
20190402 05:52:54.245 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:52:54.245 - INFO - ${rc} = 0
20190402 05:52:54.245 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:52:54.246 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:52:54.246 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:52:54.246 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:54.246 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:52:54.246 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:52:54.247 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:54.247 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:52:54.247 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:52:54.247 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:52:54.247 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:52:54.247 - INFO - +--------- END KW: Utils.Run Command (1032)
20190402 05:52:54.247 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:52:54.248 - INFO - ${value} = None
20190402 05:52:54.248 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:52:54.248 - INFO - ${current_value} = None
20190402 05:52:54.248 - INFO - +-------- END KW: Utils.Retrieve Host Property (1035)
20190402 05:52:54.248 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:52:54.248 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:52:54.248 - FAIL - None != completed
20190402 05:52:54.248 - DEBUG - Traceback (most recent call last):
  None
20190402 05:52:54.248 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:52:54.248 - INFO - +------- END KW: Utils.Check Property Value (1036)
20190402 05:52:59.249 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:52:59.250 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:52:59.251 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:52:59.252 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:52:59.252 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:52:59.253 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:52:59.254 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:52:59.254 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:52:59.254 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:52:59.255 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:52:59.255 - INFO - &{result_dict} = { stdout= }
20190402 05:52:59.255 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:52:59.255 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:52:59.255 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:52:59.255 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:52:59.256 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:52:59.256 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:52:59.256 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:52:59.256 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:52:59.256 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:52:59.256 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:52:59.256 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:52:59.268 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:52:59.268 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:52:59.268 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:00.268 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:00.268 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:00.268 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1000)
20190402 05:53:00.268 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:00.269 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:00.269 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:00.269 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:00.269 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:00.269 - INFO - ${clean_out} = None
20190402 05:53:00.269 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:00.269 - INFO - ${output} = None
20190402 05:53:00.269 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:00.269 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:00.270 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:00.271 - INFO - echo $?
20190402 05:53:00.271 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:53:00.271 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:00.271 - INFO - 0
20190402 05:53:00.271 - INFO - ${rc} = 0
20190402 05:53:00.272 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:53:00.272 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:00.272 - INFO - 0
20190402 05:53:00.272 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:00.272 - INFO - ${rc} = 0
20190402 05:53:00.272 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:53:00.272 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:00.272 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:00.273 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:00.273 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:00.273 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:00.273 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:00.273 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:00.273 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:00.273 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:00.274 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:00.274 - INFO - +--------- END KW: Utils.Run Command (1021)
20190402 05:53:00.274 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:00.274 - INFO - ${value} = None
20190402 05:53:00.274 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:00.274 - INFO - ${current_value} = None
20190402 05:53:00.274 - INFO - +-------- END KW: Utils.Retrieve Host Property (1024)
20190402 05:53:00.274 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:00.274 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:00.275 - FAIL - None != completed
20190402 05:53:00.275 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:00.275 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:53:00.275 - INFO - +------- END KW: Utils.Check Property Value (1026)
20190402 05:53:05.276 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:05.280 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:05.281 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:05.282 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:05.282 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:05.282 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:05.284 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:05.285 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:05.285 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:05.286 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:05.287 - INFO - &{result_dict} = { stdout= }
20190402 05:53:05.287 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:53:05.288 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:05.289 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:05.289 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:05.290 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:05.290 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:05.291 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:53:05.291 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:05.291 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:05.292 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:05.292 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:05.320 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:05.320 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 05:53:05.320 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:06.339 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:06.339 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:06.339 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1019)
20190402 05:53:06.339 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:06.339 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:06.340 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:06.340 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:53:06.340 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:06.340 - INFO - ${clean_out} = None
20190402 05:53:06.340 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:06.340 - INFO - ${output} = None
20190402 05:53:06.340 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:06.340 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:06.341 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:06.342 - INFO - echo $?
20190402 05:53:06.342 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:53:06.342 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:06.343 - INFO - 0
20190402 05:53:06.343 - INFO - ${rc} = 0
20190402 05:53:06.343 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:53:06.343 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:06.343 - INFO - 0
20190402 05:53:06.343 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:06.343 - INFO - ${rc} = 0
20190402 05:53:06.343 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:53:06.343 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:06.344 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:06.344 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:06.344 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:06.344 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:06.344 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:06.344 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:06.345 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:06.345 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:53:06.345 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:06.345 - INFO - +--------- END KW: Utils.Run Command (1063)
20190402 05:53:06.345 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:06.345 - INFO - ${value} = None
20190402 05:53:06.345 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:06.345 - INFO - ${current_value} = None
20190402 05:53:06.345 - INFO - +-------- END KW: Utils.Retrieve Host Property (1068)
20190402 05:53:06.346 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:06.346 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:06.346 - FAIL - None != completed
20190402 05:53:06.346 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:06.346 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:06.346 - INFO - +------- END KW: Utils.Check Property Value (1070)
20190402 05:53:11.347 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:11.348 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:11.349 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:11.351 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:11.351 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:53:11.351 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:11.352 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:11.352 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:53:11.352 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:11.352 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:11.353 - INFO - &{result_dict} = { stdout= }
20190402 05:53:11.353 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:53:11.353 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:11.353 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:11.353 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:11.353 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:11.353 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:11.354 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:11.354 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:11.354 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:11.354 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:53:11.354 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:11.364 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:11.365 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:53:11.365 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:12.387 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:12.387 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:12.387 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1022)
20190402 05:53:12.387 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:12.388 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:12.388 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:12.388 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:12.388 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:12.388 - INFO - ${clean_out} = None
20190402 05:53:12.388 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:12.388 - INFO - ${output} = None
20190402 05:53:12.389 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:53:12.389 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:12.389 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:12.390 - INFO - echo $?
20190402 05:53:12.390 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:53:12.390 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:12.391 - INFO - 0
20190402 05:53:12.391 - INFO - ${rc} = 0
20190402 05:53:12.391 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:53:12.391 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:12.391 - INFO - 0
20190402 05:53:12.391 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:12.391 - INFO - ${rc} = 0
20190402 05:53:12.391 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:53:12.391 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:12.392 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:12.392 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:12.392 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:12.392 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:12.392 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:12.393 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:12.393 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:12.393 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:12.393 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:12.393 - INFO - +--------- END KW: Utils.Run Command (1042)
20190402 05:53:12.393 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:12.393 - INFO - ${value} = None
20190402 05:53:12.393 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:12.393 - INFO - ${current_value} = None
20190402 05:53:12.394 - INFO - +-------- END KW: Utils.Retrieve Host Property (1046)
20190402 05:53:12.394 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:12.394 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:12.394 - FAIL - None != completed
20190402 05:53:12.394 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:12.394 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:12.394 - INFO - +------- END KW: Utils.Check Property Value (1047)
20190402 05:53:17.395 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:17.396 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:17.398 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:17.399 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:17.399 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:17.399 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:17.400 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:17.401 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:17.401 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:17.401 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:17.401 - INFO - &{result_dict} = { stdout= }
20190402 05:53:17.402 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:53:17.402 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:17.402 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:17.402 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:17.402 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:17.402 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:17.402 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:17.403 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:17.403 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:17.403 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:53:17.403 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:17.417 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:17.417 - INFO - +---------- END KW: SSHLibrary.Write (14)
20190402 05:53:17.417 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:18.562 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:18.562 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:18.562 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1145)
20190402 05:53:18.562 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:18.563 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:18.563 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:18.563 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:18.563 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:18.563 - INFO - ${clean_out} = None
20190402 05:53:18.563 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:18.563 - INFO - ${output} = None
20190402 05:53:18.563 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:18.563 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:18.564 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:18.565 - INFO - echo $?
20190402 05:53:18.565 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:53:18.565 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:18.568 - INFO - 0
20190402 05:53:18.568 - INFO - ${rc} = 0
20190402 05:53:18.568 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 05:53:18.568 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:18.568 - INFO - 0
20190402 05:53:18.568 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:18.568 - INFO - ${rc} = 0
20190402 05:53:18.568 - INFO - +---------- END KW: Utils.Get Return Code (5)
20190402 05:53:18.569 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:18.569 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:18.569 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:18.569 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:53:18.569 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:18.570 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:18.570 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:18.570 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:18.570 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:18.570 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:18.570 - INFO - +--------- END KW: Utils.Run Command (1171)
20190402 05:53:18.570 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:18.570 - INFO - ${value} = None
20190402 05:53:18.570 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:18.570 - INFO - ${current_value} = None
20190402 05:53:18.571 - INFO - +-------- END KW: Utils.Retrieve Host Property (1175)
20190402 05:53:18.571 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:18.571 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:18.571 - FAIL - None != completed
20190402 05:53:18.571 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:18.571 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:18.571 - INFO - +------- END KW: Utils.Check Property Value (1176)
20190402 05:53:23.572 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:23.573 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:23.574 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:23.575 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:23.576 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:53:23.576 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:23.577 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:23.577 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:53:23.578 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:23.578 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:23.578 - INFO - &{result_dict} = { stdout= }
20190402 05:53:23.578 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:53:23.579 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:23.579 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:23.579 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:23.579 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:23.579 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:23.579 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:23.579 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:23.580 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:23.580 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:23.580 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:23.592 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:23.592 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:53:23.592 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:24.757 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:24.757 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:24.757 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1165)
20190402 05:53:24.757 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:24.758 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:24.758 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:24.758 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:24.758 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:24.758 - INFO - ${clean_out} = None
20190402 05:53:24.758 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:24.758 - INFO - ${output} = None
20190402 05:53:24.758 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:24.758 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:24.759 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:24.760 - INFO - echo $?
20190402 05:53:24.760 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:53:24.761 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:24.761 - INFO - 0
20190402 05:53:24.761 - INFO - ${rc} = 0
20190402 05:53:24.761 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:53:24.761 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:24.761 - INFO - 0
20190402 05:53:24.761 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:24.762 - INFO - ${rc} = 0
20190402 05:53:24.762 - INFO - +---------- END KW: Utils.Get Return Code (4)
20190402 05:53:24.762 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:24.762 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:24.762 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:24.762 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:53:24.763 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:24.763 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:24.763 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:24.763 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:24.763 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:24.763 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:24.763 - INFO - +--------- END KW: Utils.Run Command (1187)
20190402 05:53:24.764 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:24.764 - INFO - ${value} = None
20190402 05:53:24.764 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:24.764 - INFO - ${current_value} = None
20190402 05:53:24.764 - INFO - +-------- END KW: Utils.Retrieve Host Property (1191)
20190402 05:53:24.764 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:24.764 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:24.765 - FAIL - None != completed
20190402 05:53:24.765 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:24.765 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:53:24.765 - INFO - +------- END KW: Utils.Check Property Value (1193)
20190402 05:53:29.766 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:29.767 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:29.768 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:29.769 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:29.770 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:29.770 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:29.771 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:29.772 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:29.773 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:29.774 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:29.775 - INFO - &{result_dict} = { stdout= }
20190402 05:53:29.775 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:53:29.776 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:29.776 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:29.777 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:29.778 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:29.779 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:29.779 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:53:29.780 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:29.780 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:29.780 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:29.781 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:29.809 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:29.810 - INFO - +---------- END KW: SSHLibrary.Write (30)
20190402 05:53:29.810 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:30.965 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:30.965 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:30.965 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1155)
20190402 05:53:30.965 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:30.966 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:30.966 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:30.966 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:30.966 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:30.966 - INFO - ${clean_out} = None
20190402 05:53:30.966 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:30.966 - INFO - ${output} = None
20190402 05:53:30.966 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:30.967 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:30.967 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:30.968 - INFO - echo $?
20190402 05:53:30.968 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:53:30.968 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:30.969 - INFO - 0
20190402 05:53:30.969 - INFO - ${rc} = 0
20190402 05:53:30.969 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:53:30.969 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:30.969 - INFO - 0
20190402 05:53:30.969 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:30.969 - INFO - ${rc} = 0
20190402 05:53:30.969 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:53:30.969 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:30.970 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:30.970 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:30.970 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:30.970 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:30.970 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:30.970 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:30.971 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:30.971 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:53:30.971 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:30.971 - INFO - +--------- END KW: Utils.Run Command (1201)
20190402 05:53:30.971 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:30.971 - INFO - ${value} = None
20190402 05:53:30.971 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:30.971 - INFO - ${current_value} = None
20190402 05:53:30.971 - INFO - +-------- END KW: Utils.Retrieve Host Property (1204)
20190402 05:53:30.972 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:30.972 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:30.972 - FAIL - None != completed
20190402 05:53:30.972 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:30.972 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:30.972 - INFO - +------- END KW: Utils.Check Property Value (1206)
20190402 05:53:35.973 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:35.974 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:35.975 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:35.976 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:35.976 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:35.976 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:35.977 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:35.978 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:35.978 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:35.978 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:35.978 - INFO - &{result_dict} = { stdout= }
20190402 05:53:35.978 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:53:35.978 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:35.979 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:35.979 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:35.979 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:35.979 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:35.979 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:35.979 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:35.979 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:35.980 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:35.980 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:35.989 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:35.989 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:53:35.990 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:37.148 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:37.148 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:37.148 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1158)
20190402 05:53:37.148 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:37.149 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:37.149 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:37.149 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:37.149 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:37.149 - INFO - ${clean_out} = None
20190402 05:53:37.149 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:37.149 - INFO - ${output} = None
20190402 05:53:37.149 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:37.149 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:37.150 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:37.151 - INFO - echo $?
20190402 05:53:37.151 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:53:37.151 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:37.151 - INFO - 0
20190402 05:53:37.152 - INFO - ${rc} = 0
20190402 05:53:37.152 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:53:37.152 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:37.152 - INFO - 0
20190402 05:53:37.152 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:37.152 - INFO - ${rc} = 0
20190402 05:53:37.152 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:53:37.152 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:37.153 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:37.153 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:37.153 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:37.153 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:37.153 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:37.153 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:37.153 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:37.154 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:37.154 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:37.154 - INFO - +--------- END KW: Utils.Run Command (1178)
20190402 05:53:37.154 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:37.154 - INFO - ${value} = None
20190402 05:53:37.154 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:37.154 - INFO - ${current_value} = None
20190402 05:53:37.154 - INFO - +-------- END KW: Utils.Retrieve Host Property (1180)
20190402 05:53:37.154 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:37.155 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:37.155 - FAIL - None != completed
20190402 05:53:37.155 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:37.155 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:53:37.155 - INFO - +------- END KW: Utils.Check Property Value (1182)
20190402 05:53:42.156 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:42.157 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:42.158 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:42.159 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:42.159 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:42.160 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:42.160 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:42.161 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:42.161 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:42.161 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:42.161 - INFO - &{result_dict} = { stdout= }
20190402 05:53:42.161 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:53:42.161 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:42.162 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:42.162 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:42.162 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:42.162 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:42.162 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:42.162 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:42.163 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:42.163 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:42.163 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:42.173 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:42.173 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:53:42.173 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:43.403 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:43.403 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:43.403 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1230)
20190402 05:53:43.404 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:43.404 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:43.404 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:43.405 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:53:43.405 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:43.405 - INFO - ${clean_out} = None
20190402 05:53:43.405 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:43.405 - INFO - ${output} = None
20190402 05:53:43.405 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:43.405 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:43.405 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:43.407 - INFO - echo $?
20190402 05:53:43.407 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:53:43.407 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:43.407 - INFO - 0
20190402 05:53:43.407 - INFO - ${rc} = 0
20190402 05:53:43.407 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:53:43.407 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:43.408 - INFO - 0
20190402 05:53:43.408 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:53:43.408 - INFO - ${rc} = 0
20190402 05:53:43.408 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:53:43.408 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:43.408 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:43.409 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:43.409 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:43.409 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:43.409 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:43.409 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:43.409 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:43.409 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:43.409 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:43.409 - INFO - +--------- END KW: Utils.Run Command (1249)
20190402 05:53:43.410 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:43.410 - INFO - ${value} = None
20190402 05:53:43.410 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:43.410 - INFO - ${current_value} = None
20190402 05:53:43.410 - INFO - +-------- END KW: Utils.Retrieve Host Property (1253)
20190402 05:53:43.410 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:43.410 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:43.410 - FAIL - None != completed
20190402 05:53:43.410 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:43.410 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:43.411 - INFO - +------- END KW: Utils.Check Property Value (1255)
20190402 05:53:48.411 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:48.413 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:48.414 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:48.415 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:48.415 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:48.415 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:48.416 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:48.417 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:48.417 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:48.417 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:48.417 - INFO - &{result_dict} = { stdout= }
20190402 05:53:48.417 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:53:48.417 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:48.418 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:48.418 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:48.418 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:48.418 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:48.418 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:48.418 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:48.419 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:48.419 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:48.419 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:48.429 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:48.429 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:53:48.429 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:49.590 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:49.590 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:49.590 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1161)
20190402 05:53:49.590 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:49.590 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:49.591 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:49.591 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:53:49.591 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:49.591 - INFO - ${clean_out} = None
20190402 05:53:49.591 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:49.591 - INFO - ${output} = None
20190402 05:53:49.591 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:49.591 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:49.592 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:49.594 - INFO - echo $?
20190402 05:53:49.594 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:53:49.594 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:49.594 - INFO - 0
20190402 05:53:49.594 - INFO - ${rc} = 0
20190402 05:53:49.594 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:53:49.594 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:49.594 - INFO - 0
20190402 05:53:49.594 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:49.595 - INFO - ${rc} = 0
20190402 05:53:49.595 - INFO - +---------- END KW: Utils.Get Return Code (4)
20190402 05:53:49.595 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:49.595 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:49.595 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:49.595 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:53:49.595 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:49.596 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:49.596 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:49.596 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:49.596 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:53:49.596 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:49.596 - INFO - +--------- END KW: Utils.Run Command (1181)
20190402 05:53:49.596 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:49.596 - INFO - ${value} = None
20190402 05:53:49.597 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:53:49.597 - INFO - ${current_value} = None
20190402 05:53:49.597 - INFO - +-------- END KW: Utils.Retrieve Host Property (1184)
20190402 05:53:49.597 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:49.597 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:49.597 - FAIL - None != completed
20190402 05:53:49.597 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:49.597 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:49.597 - INFO - +------- END KW: Utils.Check Property Value (1186)
20190402 05:53:54.598 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:53:54.600 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:53:54.601 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:53:54.602 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:53:54.602 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:53:54.603 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:53:54.603 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:53:54.604 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:53:54.604 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:53:54.604 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:53:54.604 - INFO - &{result_dict} = { stdout= }
20190402 05:53:54.604 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:53:54.604 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:53:54.605 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:54.605 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:53:54.605 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:54.605 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:53:54.605 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:53:54.605 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:53:54.606 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:54.606 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:53:54.606 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:53:54.607 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:53:54.608 - INFO - +---------- END KW: SSHLibrary.Write (2)
20190402 05:53:54.608 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:53:55.673 - INFO - None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:55.673 - INFO - ${output} = None
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:55.673 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1065)
20190402 05:53:55.673 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:53:55.673 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:53:55.674 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:53:55.674 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:53:55.674 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:53:55.674 - INFO - ${clean_out} = None
20190402 05:53:55.674 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:53:55.674 - INFO - ${output} = None
20190402 05:53:55.674 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:53:55.674 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:53:55.674 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:53:55.676 - INFO - echo $?
20190402 05:53:55.676 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:53:55.676 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:53:55.676 - INFO - 0
20190402 05:53:55.676 - INFO - ${rc} = 0
20190402 05:53:55.677 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:53:55.677 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:53:55.677 - INFO - 0
20190402 05:53:55.677 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:53:55.677 - INFO - ${rc} = 0
20190402 05:53:55.677 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:53:55.677 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:53:55.678 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:53:55.678 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:53:55.678 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:53:55.678 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:53:55.678 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:53:55.678 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:53:55.679 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: None
20190402 05:53:55.679 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:53:55.679 - INFO - ${result} = {u'stdout': u'None', u'stderr': u'', u'rc': u'0'}
20190402 05:53:55.679 - INFO - +--------- END KW: Utils.Run Command (1076)
20190402 05:53:55.679 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:53:55.679 - INFO - ${value} = None
20190402 05:53:55.679 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:53:55.679 - INFO - ${current_value} = None
20190402 05:53:55.679 - INFO - +-------- END KW: Utils.Retrieve Host Property (1079)
20190402 05:53:55.680 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:53:55.680 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:53:55.680 - FAIL - None != completed
20190402 05:53:55.680 - DEBUG - Traceback (most recent call last):
  None
20190402 05:53:55.680 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:53:55.680 - INFO - +------- END KW: Utils.Check Property Value (1082)
20190402 05:54:00.681 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:00.682 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:00.683 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:00.684 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:00.684 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:54:00.685 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:00.685 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:00.686 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:54:00.686 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:00.686 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:00.686 - INFO - &{result_dict} = { stdout= }
20190402 05:54:00.686 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:54:00.686 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:00.687 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:00.687 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:00.687 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:00.687 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:00.687 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:54:00.687 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:00.687 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:00.688 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:54:00.688 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:00.698 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:00.698 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:54:00.699 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:01.847 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:01.847 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:01.847 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1148)
20190402 05:54:01.847 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:01.848 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:01.848 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:01.848 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:01.848 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:01.848 - INFO - ${clean_out} = preinstall
20190402 05:54:01.848 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:54:01.849 - INFO - ${output} = preinstall
20190402 05:54:01.849 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:54:01.849 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:01.849 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:01.850 - INFO - echo $?
20190402 05:54:01.850 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:54:01.850 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:01.851 - INFO - 0
20190402 05:54:01.851 - INFO - ${rc} = 0
20190402 05:54:01.851 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:54:01.851 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:01.851 - INFO - 0
20190402 05:54:01.851 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:01.851 - INFO - ${rc} = 0
20190402 05:54:01.851 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:54:01.851 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:01.852 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:01.852 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:01.852 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:01.852 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:01.852 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:01.852 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:01.853 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:01.853 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:54:01.853 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:01.853 - INFO - +--------- END KW: Utils.Run Command (1168)
20190402 05:54:01.853 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:01.853 - INFO - ${value} = preinstall
20190402 05:54:01.853 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:01.853 - INFO - ${current_value} = preinstall
20190402 05:54:01.853 - INFO - +-------- END KW: Utils.Retrieve Host Property (1171)
20190402 05:54:01.853 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:01.854 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:01.854 - FAIL - preinstall != completed
20190402 05:54:01.854 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:01.854 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:54:01.854 - INFO - +------- END KW: Utils.Check Property Value (1173)
20190402 05:54:06.855 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:06.856 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:06.858 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:06.859 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:06.859 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:54:06.859 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:06.860 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:06.860 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:06.860 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:06.860 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:06.860 - INFO - &{result_dict} = { stdout= }
20190402 05:54:06.861 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:54:06.861 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:06.861 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:06.861 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:06.861 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:06.861 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:06.861 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:54:06.861 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:06.862 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:06.862 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:54:06.862 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:06.872 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:06.872 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:54:06.872 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:08.207 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:08.208 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:08.208 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1336)
20190402 05:54:08.208 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:08.208 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:08.208 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:08.209 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:08.209 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:08.209 - INFO - ${clean_out} = preinstall
20190402 05:54:08.209 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:54:08.209 - INFO - ${output} = preinstall
20190402 05:54:08.209 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:08.209 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:08.209 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:08.211 - INFO - echo $?
20190402 05:54:08.211 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:54:08.211 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:08.211 - INFO - 0
20190402 05:54:08.211 - INFO - ${rc} = 0
20190402 05:54:08.212 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:54:08.212 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:08.212 - INFO - 0
20190402 05:54:08.212 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:08.212 - INFO - ${rc} = 0
20190402 05:54:08.212 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:08.212 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:08.212 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:08.213 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:08.213 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:08.213 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:08.213 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:08.213 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:08.213 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:08.213 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:08.214 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:08.214 - INFO - +--------- END KW: Utils.Run Command (1355)
20190402 05:54:08.214 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:08.214 - INFO - ${value} = preinstall
20190402 05:54:08.214 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:08.214 - INFO - ${current_value} = preinstall
20190402 05:54:08.214 - INFO - +-------- END KW: Utils.Retrieve Host Property (1358)
20190402 05:54:08.214 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:08.214 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:08.215 - FAIL - preinstall != completed
20190402 05:54:08.215 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:08.215 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:54:08.215 - INFO - +------- END KW: Utils.Check Property Value (1360)
20190402 05:54:13.216 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:13.217 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:13.219 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:13.220 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:13.220 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:54:13.221 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:13.222 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:13.223 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:54:13.223 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:13.224 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:13.226 - INFO - &{result_dict} = { stdout= }
20190402 05:54:13.226 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:54:13.226 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:13.227 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:13.227 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:13.228 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:13.229 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:13.229 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:54:13.230 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:13.230 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:13.230 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:54:13.231 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:13.259 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:13.259 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 05:54:13.259 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:14.317 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:14.317 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:14.317 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1058)
20190402 05:54:14.318 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:14.318 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:14.318 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:14.318 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:14.318 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:14.319 - INFO - ${clean_out} = preinstall
20190402 05:54:14.319 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:54:14.319 - INFO - ${output} = preinstall
20190402 05:54:14.319 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:14.319 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:14.319 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:14.320 - INFO - echo $?
20190402 05:54:14.321 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:54:14.321 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:14.321 - INFO - 0
20190402 05:54:14.321 - INFO - ${rc} = 0
20190402 05:54:14.321 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:54:14.321 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:14.321 - INFO - 0
20190402 05:54:14.321 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:14.321 - INFO - ${rc} = 0
20190402 05:54:14.322 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:14.322 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:14.322 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:14.322 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:14.322 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:54:14.322 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:14.323 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:14.323 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:14.323 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:14.323 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:14.323 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:14.323 - INFO - +--------- END KW: Utils.Run Command (1102)
20190402 05:54:14.323 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:14.323 - INFO - ${value} = preinstall
20190402 05:54:14.323 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:14.324 - INFO - ${current_value} = preinstall
20190402 05:54:14.324 - INFO - +-------- END KW: Utils.Retrieve Host Property (1107)
20190402 05:54:14.324 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:14.324 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:14.324 - FAIL - preinstall != completed
20190402 05:54:14.324 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:14.324 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:14.324 - INFO - +------- END KW: Utils.Check Property Value (1108)
20190402 05:54:19.325 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:19.327 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:19.328 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:19.329 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:19.329 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:54:19.330 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:19.331 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:19.331 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:19.331 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:19.331 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:19.332 - INFO - &{result_dict} = { stdout= }
20190402 05:54:19.332 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:54:19.332 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:19.332 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:19.332 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:19.332 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:19.333 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:19.333 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:54:19.333 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:19.333 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:19.333 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:54:19.333 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:19.342 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:19.342 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:54:19.342 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:20.402 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:20.402 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:20.402 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1060)
20190402 05:54:20.403 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:20.403 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:20.403 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:20.403 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:20.403 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:20.404 - INFO - ${clean_out} = preinstall
20190402 05:54:20.404 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:54:20.404 - INFO - ${output} = preinstall
20190402 05:54:20.404 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:20.404 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:20.404 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:20.405 - INFO - echo $?
20190402 05:54:20.405 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:54:20.406 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:20.406 - INFO - 0
20190402 05:54:20.406 - INFO - ${rc} = 0
20190402 05:54:20.406 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:54:20.406 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:20.406 - INFO - 0
20190402 05:54:20.406 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:20.406 - INFO - ${rc} = 0
20190402 05:54:20.406 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:54:20.407 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:20.407 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:20.407 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:20.407 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:54:20.407 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:20.408 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:20.408 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:20.408 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:20.408 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:20.408 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:20.408 - INFO - +--------- END KW: Utils.Run Command (1078)
20190402 05:54:20.408 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:20.408 - INFO - ${value} = preinstall
20190402 05:54:20.408 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:20.409 - INFO - ${current_value} = preinstall
20190402 05:54:20.409 - INFO - +-------- END KW: Utils.Retrieve Host Property (1082)
20190402 05:54:20.409 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:20.409 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:20.409 - FAIL - preinstall != completed
20190402 05:54:20.409 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:20.409 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:20.409 - INFO - +------- END KW: Utils.Check Property Value (1084)
20190402 05:54:25.410 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:25.412 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:25.414 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:25.414 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:25.414 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:54:25.415 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:25.415 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:25.415 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:25.415 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:25.416 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:25.417 - INFO - &{result_dict} = { stdout= }
20190402 05:54:25.417 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:54:25.417 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:25.417 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:25.417 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:25.418 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:25.418 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:25.418 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 05:54:25.418 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:25.418 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:25.418 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:54:25.418 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:25.427 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:25.427 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:54:25.427 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:26.448 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:26.449 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:26.449 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1022)
20190402 05:54:26.449 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:26.449 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:26.449 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:26.449 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:26.450 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:26.450 - INFO - ${clean_out} = preinstall
20190402 05:54:26.450 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:54:26.450 - INFO - ${output} = preinstall
20190402 05:54:26.450 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:26.450 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:26.450 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:26.452 - INFO - echo $?
20190402 05:54:26.452 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:54:26.452 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:26.452 - INFO - 0
20190402 05:54:26.452 - INFO - ${rc} = 0
20190402 05:54:26.452 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:54:26.452 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:26.453 - INFO - 0
20190402 05:54:26.453 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:54:26.453 - INFO - ${rc} = 0
20190402 05:54:26.453 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:26.453 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:26.453 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:26.453 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:26.454 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:26.454 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:26.454 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:26.454 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:26.454 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:26.454 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:26.454 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:26.454 - INFO - +--------- END KW: Utils.Run Command (1039)
20190402 05:54:26.454 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:26.455 - INFO - ${value} = preinstall
20190402 05:54:26.455 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:54:26.455 - INFO - ${current_value} = preinstall
20190402 05:54:26.455 - INFO - +-------- END KW: Utils.Retrieve Host Property (1043)
20190402 05:54:26.455 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:26.455 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:26.455 - FAIL - preinstall != completed
20190402 05:54:26.455 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:26.455 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:26.456 - INFO - +------- END KW: Utils.Check Property Value (1045)
20190402 05:54:31.456 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:31.456 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:31.457 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:31.457 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:31.457 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:54:31.457 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:31.458 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:31.458 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:54:31.458 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:31.458 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:31.474 - INFO - &{result_dict} = { stdout= }
20190402 05:54:31.474 - INFO - +----------- END KW: BuiltIn.Create Dictionary (16)
20190402 05:54:31.474 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:31.475 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:31.475 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:31.475 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:31.475 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:31.475 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (17)
20190402 05:54:31.475 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:31.476 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:31.476 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:54:31.476 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:31.487 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:31.487 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:54:31.487 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:32.535 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:32.535 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:32.535 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1048)
20190402 05:54:32.535 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:32.536 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:32.536 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:32.536 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:32.536 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:32.537 - INFO - ${clean_out} = preinstall
20190402 05:54:32.537 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:54:32.537 - INFO - ${output} = preinstall
20190402 05:54:32.537 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:54:32.537 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:32.538 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:32.540 - INFO - echo $?
20190402 05:54:32.540 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:54:32.540 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:32.540 - INFO - 0
20190402 05:54:32.541 - INFO - ${rc} = 0
20190402 05:54:32.541 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:54:32.541 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:32.541 - INFO - 0
20190402 05:54:32.541 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:32.542 - INFO - ${rc} = 0
20190402 05:54:32.542 - INFO - +---------- END KW: Utils.Get Return Code (5)
20190402 05:54:32.542 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:32.543 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:32.543 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:32.543 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:32.543 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:32.544 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:32.544 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:32.544 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:32.544 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:32.544 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:32.545 - INFO - +--------- END KW: Utils.Run Command (1087)
20190402 05:54:32.545 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:32.545 - INFO - ${value} = preinstall
20190402 05:54:32.545 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:32.545 - INFO - ${current_value} = preinstall
20190402 05:54:32.546 - INFO - +-------- END KW: Utils.Retrieve Host Property (1089)
20190402 05:54:32.546 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:32.546 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:32.546 - FAIL - preinstall != completed
20190402 05:54:32.546 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:32.546 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:32.547 - INFO - +------- END KW: Utils.Check Property Value (1091)
20190402 05:54:37.547 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:37.547 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:37.548 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:37.548 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:37.548 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:54:37.548 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:37.549 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:37.549 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:37.549 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:37.549 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:37.550 - INFO - &{result_dict} = { stdout= }
20190402 05:54:37.550 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:54:37.550 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:37.550 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:37.550 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:37.551 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:37.551 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:37.551 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:54:37.551 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:37.551 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:37.551 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:54:37.551 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:37.562 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:37.562 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:54:37.562 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:38.582 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:38.582 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:38.582 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1020)
20190402 05:54:38.582 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:38.582 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:38.583 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:38.583 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:54:38.583 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:38.583 - INFO - ${clean_out} = preinstall
20190402 05:54:38.583 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:54:38.583 - INFO - ${output} = preinstall
20190402 05:54:38.583 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:38.583 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:38.584 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:38.585 - INFO - echo $?
20190402 05:54:38.585 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:54:38.585 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:38.586 - INFO - 0
20190402 05:54:38.586 - INFO - ${rc} = 0
20190402 05:54:38.586 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:54:38.586 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:38.586 - INFO - 0
20190402 05:54:38.586 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:38.586 - INFO - ${rc} = 0
20190402 05:54:38.586 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:38.586 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:38.587 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:38.587 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:38.587 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:38.587 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:38.587 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:38.588 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:38.588 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:38.588 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:38.588 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:38.588 - INFO - +--------- END KW: Utils.Run Command (1040)
20190402 05:54:38.588 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:38.588 - INFO - ${value} = preinstall
20190402 05:54:38.588 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:38.588 - INFO - ${current_value} = preinstall
20190402 05:54:38.589 - INFO - +-------- END KW: Utils.Retrieve Host Property (1042)
20190402 05:54:38.589 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:38.589 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:38.589 - FAIL - preinstall != completed
20190402 05:54:38.589 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:38.589 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:38.589 - INFO - +------- END KW: Utils.Check Property Value (1042)
20190402 05:54:43.589 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:43.590 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:43.590 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:43.591 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:43.591 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:54:43.591 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:43.591 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:43.591 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:43.591 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:43.592 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:43.592 - INFO - &{result_dict} = { stdout= }
20190402 05:54:43.592 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:54:43.592 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:43.593 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:43.593 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:43.593 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:43.593 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:43.593 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:54:43.594 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:43.594 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:43.594 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:54:43.594 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:43.604 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:43.605 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:54:43.605 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:44.634 - INFO - preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:44.634 - INFO - ${output} = preinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:44.635 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 05:54:44.635 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:44.635 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:44.635 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:44.635 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:44.635 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:44.636 - INFO - ${clean_out} = preinstall
20190402 05:54:44.636 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:54:44.636 - INFO - ${output} = preinstall
20190402 05:54:44.636 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:44.636 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:44.636 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:44.638 - INFO - echo $?
20190402 05:54:44.638 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:54:44.638 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:44.638 - INFO - 0
20190402 05:54:44.638 - INFO - ${rc} = 0
20190402 05:54:44.638 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:54:44.639 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:44.639 - INFO - 0
20190402 05:54:44.639 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:54:44.639 - INFO - ${rc} = 0
20190402 05:54:44.639 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:44.639 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:44.639 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:44.640 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:44.640 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:44.640 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:44.640 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:44.640 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:44.640 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: preinstall
20190402 05:54:44.640 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:44.641 - INFO - ${result} = {u'stdout': u'preinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:54:44.641 - INFO - +--------- END KW: Utils.Run Command (1050)
20190402 05:54:44.641 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:44.641 - INFO - ${value} = preinstall
20190402 05:54:44.641 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:44.641 - INFO - ${current_value} = preinstall
20190402 05:54:44.641 - INFO - +-------- END KW: Utils.Retrieve Host Property (1051)
20190402 05:54:44.641 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:44.641 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:44.642 - FAIL - preinstall != completed
20190402 05:54:44.642 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:44.642 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:54:44.642 - INFO - +------- END KW: Utils.Check Property Value (1053)
20190402 05:54:49.642 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:49.643 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:49.643 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:49.643 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:49.643 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:54:49.643 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:49.644 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:49.644 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:49.644 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:49.644 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:49.645 - INFO - &{result_dict} = { stdout= }
20190402 05:54:49.645 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:54:49.645 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:49.645 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:49.645 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:49.646 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:49.646 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:49.646 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:54:49.646 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:49.646 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:49.647 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:54:49.647 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:49.657 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:49.657 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:54:49.657 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:50.711 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:50.711 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:50.711 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1054)
20190402 05:54:50.711 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:50.712 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:50.712 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:50.712 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:54:50.712 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:50.712 - INFO - ${clean_out} = installing
20190402 05:54:50.712 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:54:50.712 - INFO - ${output} = installing
20190402 05:54:50.712 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:50.712 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:50.713 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:50.714 - INFO - echo $?
20190402 05:54:50.714 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:54:50.714 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:50.715 - INFO - 0
20190402 05:54:50.715 - INFO - ${rc} = 0
20190402 05:54:50.715 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:54:50.715 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:50.715 - INFO - 0
20190402 05:54:50.715 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:50.715 - INFO - ${rc} = 0
20190402 05:54:50.715 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:50.716 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:50.716 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:50.716 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:50.716 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:54:50.716 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:50.717 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:50.717 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:50.717 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:54:50.717 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:50.717 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:54:50.717 - INFO - +--------- END KW: Utils.Run Command (1074)
20190402 05:54:50.717 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:50.717 - INFO - ${value} = installing
20190402 05:54:50.717 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:50.718 - INFO - ${current_value} = installing
20190402 05:54:50.718 - INFO - +-------- END KW: Utils.Retrieve Host Property (1075)
20190402 05:54:50.718 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:50.718 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:50.718 - FAIL - installing != completed
20190402 05:54:50.718 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:50.718 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:50.718 - INFO - +------- END KW: Utils.Check Property Value (1076)
20190402 05:54:55.719 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:54:55.719 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:54:55.720 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:54:55.720 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:54:55.720 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:54:55.721 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:54:55.721 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:54:55.722 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:54:55.722 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:54:55.722 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:54:55.723 - INFO - &{result_dict} = { stdout= }
20190402 05:54:55.723 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:54:55.723 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:54:55.723 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:55.723 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:54:55.724 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:55.724 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:54:55.724 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:54:55.724 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:54:55.725 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:55.725 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:54:55.725 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:54:55.740 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:54:55.740 - INFO - +---------- END KW: SSHLibrary.Write (15)
20190402 05:54:55.740 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:54:56.724 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:56.724 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:56.725 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (984)
20190402 05:54:56.725 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:54:56.725 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:54:56.725 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:54:56.726 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:54:56.726 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:54:56.726 - INFO - ${clean_out} = installing
20190402 05:54:56.726 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:54:56.726 - INFO - ${output} = installing
20190402 05:54:56.726 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:54:56.726 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:54:56.726 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:54:56.728 - INFO - echo $?
20190402 05:54:56.728 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:54:56.729 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:54:56.729 - INFO - 0
20190402 05:54:56.729 - INFO - ${rc} = 0
20190402 05:54:56.729 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:54:56.729 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:54:56.729 - INFO - 0
20190402 05:54:56.729 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:54:56.729 - INFO - ${rc} = 0
20190402 05:54:56.729 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:54:56.729 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:54:56.730 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:54:56.730 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:54:56.730 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:54:56.730 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:54:56.731 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:54:56.731 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:54:56.731 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:54:56.731 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:54:56.731 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:54:56.731 - INFO - +--------- END KW: Utils.Run Command (1010)
20190402 05:54:56.731 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:54:56.731 - INFO - ${value} = installing
20190402 05:54:56.731 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:54:56.732 - INFO - ${current_value} = installing
20190402 05:54:56.732 - INFO - +-------- END KW: Utils.Retrieve Host Property (1013)
20190402 05:54:56.732 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:54:56.732 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:54:56.732 - FAIL - installing != completed
20190402 05:54:56.732 - DEBUG - Traceback (most recent call last):
  None
20190402 05:54:56.732 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:54:56.732 - INFO - +------- END KW: Utils.Check Property Value (1013)
20190402 05:55:01.733 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:01.733 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:01.733 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:01.734 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:01.734 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:55:01.734 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:01.734 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:01.735 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:55:01.735 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:01.735 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:01.735 - INFO - &{result_dict} = { stdout= }
20190402 05:55:01.735 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:55:01.736 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:01.736 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:01.736 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:01.736 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:01.736 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:01.736 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:55:01.736 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:01.737 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:01.737 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:55:01.737 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:01.746 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:01.747 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:55:01.747 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:02.745 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:02.745 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:02.745 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (998)
20190402 05:55:02.745 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:02.746 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:02.746 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:02.746 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:02.746 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:02.747 - INFO - ${clean_out} = installing
20190402 05:55:02.747 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:55:02.747 - INFO - ${output} = installing
20190402 05:55:02.747 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:55:02.747 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:02.747 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:02.749 - INFO - echo $?
20190402 05:55:02.749 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:55:02.749 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:02.749 - INFO - 0
20190402 05:55:02.749 - INFO - ${rc} = 0
20190402 05:55:02.749 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:55:02.750 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:02.750 - INFO - 0
20190402 05:55:02.750 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:02.750 - INFO - ${rc} = 0
20190402 05:55:02.750 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:02.750 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:02.750 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:02.751 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:02.751 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:02.751 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:02.751 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:02.751 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:02.751 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:02.751 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:02.752 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:02.752 - INFO - +--------- END KW: Utils.Run Command (1018)
20190402 05:55:02.752 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:02.752 - INFO - ${value} = installing
20190402 05:55:02.752 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:02.752 - INFO - ${current_value} = installing
20190402 05:55:02.752 - INFO - +-------- END KW: Utils.Retrieve Host Property (1019)
20190402 05:55:02.752 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:02.753 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:02.753 - FAIL - installing != completed
20190402 05:55:02.753 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:02.753 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:55:02.753 - INFO - +------- END KW: Utils.Check Property Value (1020)
20190402 05:55:07.754 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:07.755 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:07.756 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:07.756 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:07.757 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:55:07.757 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:07.758 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:07.759 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:55:07.759 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:07.760 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:07.761 - INFO - &{result_dict} = { stdout= }
20190402 05:55:07.761 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:55:07.761 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:07.762 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:07.762 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:07.763 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:07.763 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:07.763 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 05:55:07.764 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:07.764 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:07.764 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:07.764 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:07.792 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:07.792 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 05:55:07.792 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:08.786 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:08.787 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:08.787 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (995)
20190402 05:55:08.787 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:08.787 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:08.787 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:08.787 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:08.788 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:08.788 - INFO - ${clean_out} = installing
20190402 05:55:08.788 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:55:08.788 - INFO - ${output} = installing
20190402 05:55:08.788 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:08.788 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:08.788 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:08.790 - INFO - echo $?
20190402 05:55:08.790 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:55:08.790 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:08.790 - INFO - 0
20190402 05:55:08.790 - INFO - ${rc} = 0
20190402 05:55:08.791 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:55:08.791 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:08.791 - INFO - 0
20190402 05:55:08.791 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:08.791 - INFO - ${rc} = 0
20190402 05:55:08.791 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:08.791 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:08.791 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:08.792 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:08.792 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:08.792 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:08.792 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:08.792 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:08.792 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:08.792 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:08.793 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:08.793 - INFO - +--------- END KW: Utils.Run Command (1036)
20190402 05:55:08.793 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:08.793 - INFO - ${value} = installing
20190402 05:55:08.793 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:08.793 - INFO - ${current_value} = installing
20190402 05:55:08.793 - INFO - +-------- END KW: Utils.Retrieve Host Property (1038)
20190402 05:55:08.793 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:08.793 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:08.793 - FAIL - installing != completed
20190402 05:55:08.794 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:08.794 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:55:08.794 - INFO - +------- END KW: Utils.Check Property Value (1040)
20190402 05:55:13.794 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:13.795 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:13.796 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:13.797 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:13.797 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:55:13.798 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:13.799 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:13.799 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:55:13.799 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:13.800 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:13.800 - INFO - &{result_dict} = { stdout= }
20190402 05:55:13.800 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:55:13.800 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:13.800 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:13.801 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:13.801 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:13.801 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:13.801 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:55:13.801 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:13.801 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:13.801 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:13.801 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:13.813 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:13.813 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:55:13.813 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:14.816 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:14.816 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:14.816 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1003)
20190402 05:55:14.816 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:14.817 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:14.817 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:14.817 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:14.817 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:14.817 - INFO - ${clean_out} = installing
20190402 05:55:14.817 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:55:14.818 - INFO - ${output} = installing
20190402 05:55:14.818 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:55:14.818 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:14.818 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:14.819 - INFO - echo $?
20190402 05:55:14.820 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:55:14.820 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:14.820 - INFO - 0
20190402 05:55:14.820 - INFO - ${rc} = 0
20190402 05:55:14.820 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:55:14.820 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:14.820 - INFO - 0
20190402 05:55:14.820 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:14.820 - INFO - ${rc} = 0
20190402 05:55:14.821 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:55:14.821 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:14.821 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:14.821 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:14.822 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:14.822 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:14.822 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:14.822 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:14.822 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:14.822 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:14.822 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:14.822 - INFO - +--------- END KW: Utils.Run Command (1024)
20190402 05:55:14.822 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:14.823 - INFO - ${value} = installing
20190402 05:55:14.823 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:55:14.823 - INFO - ${current_value} = installing
20190402 05:55:14.823 - INFO - +-------- END KW: Utils.Retrieve Host Property (1028)
20190402 05:55:14.823 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:14.823 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:14.823 - FAIL - installing != completed
20190402 05:55:14.823 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:14.823 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:55:14.824 - INFO - +------- END KW: Utils.Check Property Value (1029)
20190402 05:55:19.824 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:19.826 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:19.827 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:19.828 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:19.828 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:55:19.829 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:19.829 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:19.830 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:55:19.830 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:19.830 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:19.830 - INFO - &{result_dict} = { stdout= }
20190402 05:55:19.830 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:55:19.830 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:19.831 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:19.831 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:19.831 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:19.831 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:19.831 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:55:19.832 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:19.832 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:19.832 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:19.832 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:19.841 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:19.842 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:55:19.842 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:20.841 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:20.842 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:20.842 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1000)
20190402 05:55:20.842 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:20.842 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:20.842 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:20.842 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:20.842 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:20.843 - INFO - ${clean_out} = installing
20190402 05:55:20.843 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:55:20.843 - INFO - ${output} = installing
20190402 05:55:20.843 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:20.843 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:20.843 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:20.844 - INFO - echo $?
20190402 05:55:20.844 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:55:20.844 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:20.845 - INFO - 0
20190402 05:55:20.845 - INFO - ${rc} = 0
20190402 05:55:20.845 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:55:20.845 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:20.845 - INFO - 0
20190402 05:55:20.845 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:20.845 - INFO - ${rc} = 0
20190402 05:55:20.845 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:55:20.845 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:20.846 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:20.846 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:20.846 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:20.846 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:20.847 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:20.847 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:20.847 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:20.847 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:20.847 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:20.848 - INFO - +--------- END KW: Utils.Run Command (1019)
20190402 05:55:20.848 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:20.848 - INFO - ${value} = installing
20190402 05:55:20.848 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:20.848 - INFO - ${current_value} = installing
20190402 05:55:20.848 - INFO - +-------- END KW: Utils.Retrieve Host Property (1022)
20190402 05:55:20.848 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:20.848 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:20.849 - FAIL - installing != completed
20190402 05:55:20.849 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:20.849 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:55:20.849 - INFO - +------- END KW: Utils.Check Property Value (1025)
20190402 05:55:25.850 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:25.851 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:25.852 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:25.853 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:25.854 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:55:25.854 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:25.855 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:25.855 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:55:25.855 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:25.855 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:25.855 - INFO - &{result_dict} = { stdout= }
20190402 05:55:25.855 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:55:25.856 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:25.856 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:25.856 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:25.856 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:25.856 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:25.856 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:55:25.856 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:25.857 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:25.857 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:55:25.857 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:25.871 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:25.871 - INFO - +---------- END KW: SSHLibrary.Write (14)
20190402 05:55:25.871 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:26.877 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:26.877 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:26.877 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1006)
20190402 05:55:26.877 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:26.878 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:26.878 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:26.878 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:26.878 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:26.878 - INFO - ${clean_out} = installing
20190402 05:55:26.878 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:55:26.878 - INFO - ${output} = installing
20190402 05:55:26.878 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:26.879 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:26.879 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:26.881 - INFO - echo $?
20190402 05:55:26.881 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:55:26.881 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:26.881 - INFO - 0
20190402 05:55:26.881 - INFO - ${rc} = 0
20190402 05:55:26.881 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:55:26.881 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:26.882 - INFO - 0
20190402 05:55:26.882 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:55:26.882 - INFO - ${rc} = 0
20190402 05:55:26.882 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:26.882 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:26.882 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:26.883 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:26.883 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:26.883 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:26.883 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:26.883 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:26.883 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:26.883 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:26.883 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:26.883 - INFO - +--------- END KW: Utils.Run Command (1029)
20190402 05:55:26.884 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:26.884 - INFO - ${value} = installing
20190402 05:55:26.884 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:26.884 - INFO - ${current_value} = installing
20190402 05:55:26.884 - INFO - +-------- END KW: Utils.Retrieve Host Property (1033)
20190402 05:55:26.884 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:26.884 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:26.884 - FAIL - installing != completed
20190402 05:55:26.884 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:26.884 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:55:26.885 - INFO - +------- END KW: Utils.Check Property Value (1035)
20190402 05:55:31.885 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:31.887 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:31.888 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:31.889 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:31.889 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:55:31.889 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:31.890 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:31.891 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:55:31.891 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:31.891 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:31.891 - INFO - &{result_dict} = { stdout= }
20190402 05:55:31.891 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:55:31.891 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:31.892 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:31.892 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:31.892 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:31.892 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:31.892 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:55:31.892 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:31.892 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:31.892 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:31.893 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:31.907 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:31.907 - INFO - +---------- END KW: SSHLibrary.Write (14)
20190402 05:55:31.907 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:32.939 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:32.939 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:32.939 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1032)
20190402 05:55:32.940 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:32.940 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:32.940 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:32.940 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:32.940 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:32.940 - INFO - ${clean_out} = installing
20190402 05:55:32.941 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:55:32.941 - INFO - ${output} = installing
20190402 05:55:32.941 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:32.941 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:32.941 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:32.943 - INFO - echo $?
20190402 05:55:32.943 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:55:32.943 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:32.943 - INFO - 0
20190402 05:55:32.943 - INFO - ${rc} = 0
20190402 05:55:32.944 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:55:32.944 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:32.944 - INFO - 0
20190402 05:55:32.944 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:32.944 - INFO - ${rc} = 0
20190402 05:55:32.944 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:32.944 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:32.944 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:32.945 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:32.945 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:32.945 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:32.945 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:32.945 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:32.945 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:32.945 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:32.946 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:32.946 - INFO - +--------- END KW: Utils.Run Command (1057)
20190402 05:55:32.946 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:32.946 - INFO - ${value} = installing
20190402 05:55:32.946 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:32.946 - INFO - ${current_value} = installing
20190402 05:55:32.946 - INFO - +-------- END KW: Utils.Retrieve Host Property (1059)
20190402 05:55:32.946 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:32.946 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:32.947 - FAIL - installing != completed
20190402 05:55:32.947 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:32.947 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:55:32.947 - INFO - +------- END KW: Utils.Check Property Value (1062)
20190402 05:55:37.948 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:37.949 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:37.950 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:37.951 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:37.952 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:55:37.952 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:37.953 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:37.954 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:55:37.955 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:37.956 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:37.957 - INFO - &{result_dict} = { stdout= }
20190402 05:55:37.957 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:55:37.957 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:37.958 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:37.958 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:37.959 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:37.960 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:37.960 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 05:55:37.960 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:37.961 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:37.961 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:55:37.961 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:37.987 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:37.987 - INFO - +---------- END KW: SSHLibrary.Write (26)
20190402 05:55:37.987 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:38.978 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:38.978 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:38.978 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (991)
20190402 05:55:38.979 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:38.979 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:38.979 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:38.979 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:38.979 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:38.980 - INFO - ${clean_out} = installing
20190402 05:55:38.980 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:55:38.980 - INFO - ${output} = installing
20190402 05:55:38.980 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:38.980 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:38.980 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:38.982 - INFO - echo $?
20190402 05:55:38.982 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:55:38.982 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:38.982 - INFO - 0
20190402 05:55:38.982 - INFO - ${rc} = 0
20190402 05:55:38.982 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:55:38.982 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:38.982 - INFO - 0
20190402 05:55:38.983 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:38.983 - INFO - ${rc} = 0
20190402 05:55:38.983 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:38.983 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:38.983 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:38.983 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:38.983 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:55:38.984 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:38.984 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:38.984 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:38.984 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:38.984 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:38.984 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:38.984 - INFO - +--------- END KW: Utils.Run Command (1032)
20190402 05:55:38.984 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:38.985 - INFO - ${value} = installing
20190402 05:55:38.985 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:55:38.985 - INFO - ${current_value} = installing
20190402 05:55:38.985 - INFO - +-------- END KW: Utils.Retrieve Host Property (1036)
20190402 05:55:38.985 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:38.985 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:38.985 - FAIL - installing != completed
20190402 05:55:38.985 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:38.985 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:55:38.985 - INFO - +------- END KW: Utils.Check Property Value (1038)
20190402 05:55:43.986 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:43.988 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:43.989 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:43.990 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:43.991 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:55:43.991 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:43.993 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:43.994 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:55:43.994 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:43.995 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:43.997 - INFO - &{result_dict} = { stdout= }
20190402 05:55:43.997 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:55:43.997 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:43.998 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:43.998 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:43.999 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:44.000 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:44.000 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:55:44.001 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:44.001 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:44.001 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:44.002 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:44.028 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:44.028 - INFO - +---------- END KW: SSHLibrary.Write (26)
20190402 05:55:44.028 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:45.014 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:45.014 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:45.014 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (986)
20190402 05:55:45.014 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:45.014 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:45.015 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:45.015 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:55:45.015 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:45.015 - INFO - ${clean_out} = installing
20190402 05:55:45.015 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:55:45.015 - INFO - ${output} = installing
20190402 05:55:45.015 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:45.015 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:45.016 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:45.017 - INFO - echo $?
20190402 05:55:45.017 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:55:45.018 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:45.018 - INFO - 0
20190402 05:55:45.018 - INFO - ${rc} = 0
20190402 05:55:45.018 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:55:45.018 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:45.018 - INFO - 0
20190402 05:55:45.018 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:45.018 - INFO - ${rc} = 0
20190402 05:55:45.018 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:45.018 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:45.019 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:45.019 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:45.019 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:45.019 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:45.019 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:45.020 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:45.020 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:45.020 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:55:45.020 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:45.020 - INFO - +--------- END KW: Utils.Run Command (1029)
20190402 05:55:45.020 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:45.020 - INFO - ${value} = installing
20190402 05:55:45.020 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:45.020 - INFO - ${current_value} = installing
20190402 05:55:45.021 - INFO - +-------- END KW: Utils.Retrieve Host Property (1032)
20190402 05:55:45.021 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:45.021 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:45.021 - FAIL - installing != completed
20190402 05:55:45.021 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:45.021 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:55:45.021 - INFO - +------- END KW: Utils.Check Property Value (1035)
20190402 05:55:50.022 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:50.023 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:50.024 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:50.025 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:50.026 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:55:50.026 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:50.027 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:50.028 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:55:50.028 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:50.028 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:50.029 - INFO - &{result_dict} = { stdout= }
20190402 05:55:50.029 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:55:50.029 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:50.029 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:50.029 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:50.029 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:50.030 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:50.030 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:55:50.030 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:50.030 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:50.030 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:50.030 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:50.040 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:50.040 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:55:50.040 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:51.044 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:51.044 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:51.044 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1004)
20190402 05:55:51.044 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:51.045 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:51.045 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:51.045 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:51.045 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:51.045 - INFO - ${clean_out} = installing
20190402 05:55:51.045 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:55:51.045 - INFO - ${output} = installing
20190402 05:55:51.045 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:51.045 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:51.046 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:51.047 - INFO - echo $?
20190402 05:55:51.047 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:55:51.047 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:51.048 - INFO - 0
20190402 05:55:51.048 - INFO - ${rc} = 0
20190402 05:55:51.048 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:55:51.048 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:51.048 - INFO - 0
20190402 05:55:51.048 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:51.048 - INFO - ${rc} = 0
20190402 05:55:51.048 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:55:51.048 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:51.049 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:51.049 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:51.049 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:55:51.049 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:51.049 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:51.049 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:51.050 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:51.050 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:55:51.050 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:51.050 - INFO - +--------- END KW: Utils.Run Command (1024)
20190402 05:55:51.050 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:51.050 - INFO - ${value} = installing
20190402 05:55:51.050 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:51.050 - INFO - ${current_value} = installing
20190402 05:55:51.050 - INFO - +-------- END KW: Utils.Retrieve Host Property (1027)
20190402 05:55:51.050 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:51.051 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:51.051 - FAIL - installing != completed
20190402 05:55:51.051 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:51.051 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:55:51.051 - INFO - +------- END KW: Utils.Check Property Value (1029)
20190402 05:55:56.051 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:55:56.052 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:55:56.052 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:55:56.052 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:55:56.053 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 05:55:56.053 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:55:56.053 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:55:56.053 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:55:56.053 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:55:56.054 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:55:56.054 - INFO - &{result_dict} = { stdout= }
20190402 05:55:56.054 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:55:56.054 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:55:56.055 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:56.055 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:55:56.055 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:56.055 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:55:56.055 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:55:56.056 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:55:56.056 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:56.056 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:55:56.056 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:55:56.067 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:55:56.067 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:55:56.067 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:55:57.112 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:57.113 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:57.113 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1046)
20190402 05:55:57.113 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:55:57.113 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:55:57.113 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:55:57.113 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:55:57.113 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:55:57.114 - INFO - ${clean_out} = installing
20190402 05:55:57.114 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:55:57.114 - INFO - ${output} = installing
20190402 05:55:57.114 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:55:57.114 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:55:57.114 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:55:57.115 - INFO - echo $?
20190402 05:55:57.116 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:55:57.116 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:55:57.116 - INFO - 0
20190402 05:55:57.116 - INFO - ${rc} = 0
20190402 05:55:57.116 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:55:57.116 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:55:57.116 - INFO - 0
20190402 05:55:57.116 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:55:57.116 - INFO - ${rc} = 0
20190402 05:55:57.116 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:55:57.117 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:55:57.117 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:55:57.117 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:55:57.117 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:55:57.117 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:55:57.118 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:55:57.118 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:55:57.118 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:55:57.118 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:55:57.118 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:55:57.118 - INFO - +--------- END KW: Utils.Run Command (1065)
20190402 05:55:57.118 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:55:57.118 - INFO - ${value} = installing
20190402 05:55:57.118 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:55:57.119 - INFO - ${current_value} = installing
20190402 05:55:57.119 - INFO - +-------- END KW: Utils.Retrieve Host Property (1067)
20190402 05:55:57.119 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:55:57.119 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:55:57.119 - FAIL - installing != completed
20190402 05:55:57.119 - DEBUG - Traceback (most recent call last):
  None
20190402 05:55:57.119 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:55:57.119 - INFO - +------- END KW: Utils.Check Property Value (1068)
20190402 05:56:02.120 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:02.121 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:02.123 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:02.124 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:02.124 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:56:02.124 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:02.125 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:02.126 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:56:02.126 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:02.126 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:02.126 - INFO - &{result_dict} = { stdout= }
20190402 05:56:02.126 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:56:02.126 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:02.127 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:02.127 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:02.127 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:02.127 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:02.127 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:56:02.127 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:02.127 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:02.127 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:02.128 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:02.136 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:02.136 - INFO - +---------- END KW: SSHLibrary.Write (8)
20190402 05:56:02.137 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:03.129 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:03.129 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:03.129 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (992)
20190402 05:56:03.129 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:03.129 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:03.130 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:03.130 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:56:03.130 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:03.130 - INFO - ${clean_out} = installing
20190402 05:56:03.130 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:03.130 - INFO - ${output} = installing
20190402 05:56:03.130 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:03.130 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:03.131 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:03.132 - INFO - echo $?
20190402 05:56:03.132 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:03.132 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:03.132 - INFO - 0
20190402 05:56:03.133 - INFO - ${rc} = 0
20190402 05:56:03.133 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:03.133 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:03.133 - INFO - 0
20190402 05:56:03.133 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:03.133 - INFO - ${rc} = 0
20190402 05:56:03.133 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:03.133 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:03.134 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:03.134 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:03.134 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:03.134 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:03.134 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:03.134 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:03.135 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:03.135 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:56:03.135 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:03.135 - INFO - +--------- END KW: Utils.Run Command (1011)
20190402 05:56:03.135 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:03.135 - INFO - ${value} = installing
20190402 05:56:03.135 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:03.135 - INFO - ${current_value} = installing
20190402 05:56:03.135 - INFO - +-------- END KW: Utils.Retrieve Host Property (1014)
20190402 05:56:03.135 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:03.136 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:03.136 - FAIL - installing != completed
20190402 05:56:03.136 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:03.136 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:56:03.136 - INFO - +------- END KW: Utils.Check Property Value (1016)
20190402 05:56:08.137 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:08.138 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:08.139 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:08.140 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:08.141 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:56:08.141 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:08.142 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:08.142 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:56:08.142 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:08.142 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:08.142 - INFO - &{result_dict} = { stdout= }
20190402 05:56:08.143 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:56:08.143 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:08.143 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:08.143 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:08.143 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:08.143 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:08.143 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:56:08.143 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:08.144 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:08.144 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:56:08.144 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:08.154 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:08.154 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:56:08.154 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:09.152 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:09.152 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:09.152 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (998)
20190402 05:56:09.152 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:09.153 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:09.153 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:09.153 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:09.153 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:09.153 - INFO - ${clean_out} = installing
20190402 05:56:09.154 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:09.154 - INFO - ${output} = installing
20190402 05:56:09.154 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:56:09.154 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:09.154 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:09.156 - INFO - echo $?
20190402 05:56:09.156 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:56:09.156 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:09.156 - INFO - 0
20190402 05:56:09.156 - INFO - ${rc} = 0
20190402 05:56:09.156 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:56:09.156 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:09.156 - INFO - 0
20190402 05:56:09.156 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:09.157 - INFO - ${rc} = 0
20190402 05:56:09.157 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:09.157 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:09.157 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:09.157 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:09.157 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:56:09.157 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:09.158 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:09.158 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:09.158 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:09.158 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:56:09.158 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:09.158 - INFO - +--------- END KW: Utils.Run Command (1017)
20190402 05:56:09.158 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:09.158 - INFO - ${value} = installing
20190402 05:56:09.159 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:09.159 - INFO - ${current_value} = installing
20190402 05:56:09.159 - INFO - +-------- END KW: Utils.Retrieve Host Property (1021)
20190402 05:56:09.159 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:09.159 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:09.159 - FAIL - installing != completed
20190402 05:56:09.159 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:09.159 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:09.159 - INFO - +------- END KW: Utils.Check Property Value (1022)
20190402 05:56:14.160 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:14.162 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:14.163 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:14.164 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:14.164 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:56:14.164 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:14.165 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:14.166 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:56:14.166 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:14.166 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:14.166 - INFO - &{result_dict} = { stdout= }
20190402 05:56:14.166 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:56:14.166 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:14.167 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:14.167 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:14.167 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:14.167 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:14.167 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:56:14.167 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:14.167 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:14.168 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:56:14.168 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:14.180 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:14.180 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:56:14.180 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:15.177 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:15.177 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:15.178 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (997)
20190402 05:56:15.178 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:15.178 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:15.178 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:15.178 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:15.178 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:15.179 - INFO - ${clean_out} = installing
20190402 05:56:15.179 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:56:15.179 - INFO - ${output} = installing
20190402 05:56:15.179 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:15.179 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:15.179 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:15.181 - INFO - echo $?
20190402 05:56:15.181 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:56:15.181 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:15.182 - INFO - 0
20190402 05:56:15.182 - INFO - ${rc} = 0
20190402 05:56:15.182 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:15.182 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:15.182 - INFO - 0
20190402 05:56:15.182 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:15.182 - INFO - ${rc} = 0
20190402 05:56:15.182 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:15.182 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:15.183 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:15.183 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:15.183 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:15.183 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:15.183 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:15.183 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:15.184 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:15.184 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:56:15.184 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:15.184 - INFO - +--------- END KW: Utils.Run Command (1020)
20190402 05:56:15.184 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:15.184 - INFO - ${value} = installing
20190402 05:56:15.184 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:15.184 - INFO - ${current_value} = installing
20190402 05:56:15.184 - INFO - +-------- END KW: Utils.Retrieve Host Property (1022)
20190402 05:56:15.185 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:15.185 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:15.185 - FAIL - installing != completed
20190402 05:56:15.185 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:15.185 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:15.185 - INFO - +------- END KW: Utils.Check Property Value (1025)
20190402 05:56:20.186 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:20.187 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:20.188 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:20.189 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:20.189 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:56:20.190 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:20.191 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:20.191 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:56:20.191 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:20.191 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:20.191 - INFO - &{result_dict} = { stdout= }
20190402 05:56:20.192 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:56:20.192 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:20.192 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:20.192 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:20.192 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:20.192 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:20.192 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:56:20.193 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:20.193 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:20.193 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:20.193 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:20.205 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:20.205 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:56:20.205 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:21.193 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:21.193 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:21.193 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (988)
20190402 05:56:21.193 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:21.193 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:21.194 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:21.194 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:56:21.194 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:21.194 - INFO - ${clean_out} = installing
20190402 05:56:21.194 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:21.194 - INFO - ${output} = installing
20190402 05:56:21.194 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:21.194 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:21.195 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:21.196 - INFO - echo $?
20190402 05:56:21.196 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:21.196 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:21.197 - INFO - 0
20190402 05:56:21.197 - INFO - ${rc} = 0
20190402 05:56:21.197 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:21.197 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:21.197 - INFO - 0
20190402 05:56:21.197 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:21.197 - INFO - ${rc} = 0
20190402 05:56:21.197 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:21.197 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:21.198 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:21.198 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:21.198 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:21.198 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:21.199 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:21.199 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:21.199 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:21.199 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:56:21.199 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:21.199 - INFO - +--------- END KW: Utils.Run Command (1009)
20190402 05:56:21.199 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:21.199 - INFO - ${value} = installing
20190402 05:56:21.199 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:21.199 - INFO - ${current_value} = installing
20190402 05:56:21.200 - INFO - +-------- END KW: Utils.Retrieve Host Property (1013)
20190402 05:56:21.200 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:21.200 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:21.200 - FAIL - installing != completed
20190402 05:56:21.200 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:21.200 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:21.200 - INFO - +------- END KW: Utils.Check Property Value (1014)
20190402 05:56:26.201 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:26.202 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:26.203 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:26.204 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:26.204 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:56:26.205 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:26.206 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:26.207 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:56:26.207 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:26.208 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:26.209 - INFO - &{result_dict} = { stdout= }
20190402 05:56:26.210 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:56:26.210 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:26.211 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:26.211 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:26.212 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:26.213 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:26.213 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:56:26.213 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:26.213 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:26.214 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:56:26.214 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:26.241 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:26.241 - INFO - +---------- END KW: SSHLibrary.Write (27)
20190402 05:56:26.241 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:27.228 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:27.228 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:27.228 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (987)
20190402 05:56:27.228 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:27.229 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:27.229 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:27.229 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:27.229 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:27.229 - INFO - ${clean_out} = installing
20190402 05:56:27.229 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:27.229 - INFO - ${output} = installing
20190402 05:56:27.229 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:27.230 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:27.230 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:27.231 - INFO - echo $?
20190402 05:56:27.231 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:27.231 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:27.232 - INFO - 0
20190402 05:56:27.232 - INFO - ${rc} = 0
20190402 05:56:27.232 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:27.232 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:27.232 - INFO - 0
20190402 05:56:27.232 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:27.232 - INFO - ${rc} = 0
20190402 05:56:27.232 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:56:27.232 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:27.233 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:27.233 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:27.233 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:27.233 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:27.233 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:27.234 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:27.234 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:27.234 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:56:27.234 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:27.234 - INFO - +--------- END KW: Utils.Run Command (1029)
20190402 05:56:27.234 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:27.234 - INFO - ${value} = installing
20190402 05:56:27.234 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:27.234 - INFO - ${current_value} = installing
20190402 05:56:27.234 - INFO - +-------- END KW: Utils.Retrieve Host Property (1032)
20190402 05:56:27.235 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:27.235 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:27.235 - FAIL - installing != completed
20190402 05:56:27.235 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:27.235 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:27.235 - INFO - +------- END KW: Utils.Check Property Value (1034)
20190402 05:56:32.236 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:32.238 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:32.239 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:32.240 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:32.240 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:56:32.240 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:32.241 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:32.242 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:56:32.242 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:32.242 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:32.242 - INFO - &{result_dict} = { stdout= }
20190402 05:56:32.242 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:56:32.242 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:32.243 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:32.243 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:32.243 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:32.243 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:32.243 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:56:32.243 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:32.243 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:32.244 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:32.244 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:32.255 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:32.255 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:56:32.255 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:33.246 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:33.247 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:33.247 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (992)
20190402 05:56:33.247 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:33.247 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:33.247 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:33.247 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:33.247 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:33.248 - INFO - ${clean_out} = installing
20190402 05:56:33.248 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:56:33.248 - INFO - ${output} = installing
20190402 05:56:33.248 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:33.248 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:33.248 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:33.250 - INFO - echo $?
20190402 05:56:33.250 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:56:33.250 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:33.250 - INFO - 0
20190402 05:56:33.250 - INFO - ${rc} = 0
20190402 05:56:33.250 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:56:33.250 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:33.251 - INFO - 0
20190402 05:56:33.251 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:56:33.251 - INFO - ${rc} = 0
20190402 05:56:33.251 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:33.251 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:33.251 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:33.252 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:33.252 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:33.252 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:33.252 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:33.252 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:33.252 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:33.252 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:56:33.252 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:33.252 - INFO - +--------- END KW: Utils.Run Command (1012)
20190402 05:56:33.253 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:33.253 - INFO - ${value} = installing
20190402 05:56:33.253 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:56:33.253 - INFO - ${current_value} = installing
20190402 05:56:33.253 - INFO - +-------- END KW: Utils.Retrieve Host Property (1016)
20190402 05:56:33.253 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:33.253 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:33.253 - FAIL - installing != completed
20190402 05:56:33.253 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:33.253 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:33.254 - INFO - +------- END KW: Utils.Check Property Value (1018)
20190402 05:56:38.254 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:38.256 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:38.258 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:38.259 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:38.259 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:56:38.259 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:38.260 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:38.261 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:56:38.262 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:38.262 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:38.264 - INFO - &{result_dict} = { stdout= }
20190402 05:56:38.264 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:56:38.264 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:38.265 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:38.266 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:38.266 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:38.267 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:38.267 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 05:56:38.268 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:38.268 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:38.268 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:38.269 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:38.295 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:38.295 - INFO - +---------- END KW: SSHLibrary.Write (27)
20190402 05:56:38.295 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:39.274 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:39.274 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:39.274 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (979)
20190402 05:56:39.274 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:39.275 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:39.275 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:39.275 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:39.275 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:39.275 - INFO - ${clean_out} = installing
20190402 05:56:39.275 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:39.275 - INFO - ${output} = installing
20190402 05:56:39.275 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:39.275 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:39.276 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:39.277 - INFO - echo $?
20190402 05:56:39.277 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:39.277 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:39.277 - INFO - 0
20190402 05:56:39.278 - INFO - ${rc} = 0
20190402 05:56:39.278 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:39.278 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:39.278 - INFO - 0
20190402 05:56:39.278 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:39.278 - INFO - ${rc} = 0
20190402 05:56:39.278 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:39.278 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:39.279 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:39.279 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:39.279 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:39.279 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:39.279 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:39.279 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:39.279 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:39.280 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:56:39.280 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:39.280 - INFO - +--------- END KW: Utils.Run Command (1021)
20190402 05:56:39.280 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:39.280 - INFO - ${value} = installing
20190402 05:56:39.280 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:39.280 - INFO - ${current_value} = installing
20190402 05:56:39.280 - INFO - +-------- END KW: Utils.Retrieve Host Property (1024)
20190402 05:56:39.280 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:39.281 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:39.281 - FAIL - installing != completed
20190402 05:56:39.281 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:39.281 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:56:39.281 - INFO - +------- END KW: Utils.Check Property Value (1027)
20190402 05:56:44.282 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:44.283 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:44.285 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:44.286 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:44.286 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:56:44.286 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:44.287 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:44.287 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:56:44.287 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:44.287 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:44.288 - INFO - &{result_dict} = { stdout= }
20190402 05:56:44.288 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:56:44.288 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:44.288 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:44.288 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:44.288 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:44.289 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:44.289 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:56:44.289 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:44.289 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:44.289 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:44.289 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:44.298 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:44.298 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:56:44.298 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:45.327 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:45.327 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:45.327 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 05:56:45.328 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:45.328 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:45.328 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:45.328 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:45.328 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:45.328 - INFO - ${clean_out} = installing
20190402 05:56:45.328 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:45.329 - INFO - ${output} = installing
20190402 05:56:45.329 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:45.329 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:45.329 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:45.330 - INFO - echo $?
20190402 05:56:45.330 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:45.330 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:45.330 - INFO - 0
20190402 05:56:45.330 - INFO - ${rc} = 0
20190402 05:56:45.331 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:56:45.331 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:45.331 - INFO - 0
20190402 05:56:45.331 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:45.331 - INFO - ${rc} = 0
20190402 05:56:45.331 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:56:45.331 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:45.331 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:45.332 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:56:45.332 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:45.332 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:45.332 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:45.332 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:45.332 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:45.332 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:56:45.333 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:45.333 - INFO - +--------- END KW: Utils.Run Command (1047)
20190402 05:56:45.333 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:45.333 - INFO - ${value} = installing
20190402 05:56:45.333 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:45.333 - INFO - ${current_value} = installing
20190402 05:56:45.333 - INFO - +-------- END KW: Utils.Retrieve Host Property (1050)
20190402 05:56:45.333 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:45.333 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:45.334 - FAIL - installing != completed
20190402 05:56:45.334 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:45.334 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:56:45.334 - INFO - +------- END KW: Utils.Check Property Value (1052)
20190402 05:56:50.335 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:50.336 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:50.337 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:50.338 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:50.339 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:56:50.339 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:50.340 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:50.340 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:56:50.340 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:50.340 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:50.341 - INFO - &{result_dict} = { stdout= }
20190402 05:56:50.341 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:56:50.341 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:50.341 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:50.341 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:50.341 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:50.342 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:50.342 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:56:50.342 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:50.342 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:50.342 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:50.342 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:50.352 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:50.352 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:56:50.352 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:51.360 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:51.360 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:51.360 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1008)
20190402 05:56:51.360 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:51.361 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:51.361 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:51.361 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:51.361 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:51.361 - INFO - ${clean_out} = installing
20190402 05:56:51.361 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:51.361 - INFO - ${output} = installing
20190402 05:56:51.361 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:56:51.361 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:51.362 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:51.363 - INFO - echo $?
20190402 05:56:51.363 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:51.363 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:51.364 - INFO - 0
20190402 05:56:51.364 - INFO - ${rc} = 0
20190402 05:56:51.364 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:51.364 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:51.364 - INFO - 0
20190402 05:56:51.364 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:51.364 - INFO - ${rc} = 0
20190402 05:56:51.364 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:56:51.364 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:51.365 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:51.365 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:51.365 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:51.365 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:51.365 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:51.365 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:51.366 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:51.366 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:56:51.366 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:51.366 - INFO - +--------- END KW: Utils.Run Command (1027)
20190402 05:56:51.366 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:51.366 - INFO - ${value} = installing
20190402 05:56:51.366 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:51.366 - INFO - ${current_value} = installing
20190402 05:56:51.366 - INFO - +-------- END KW: Utils.Retrieve Host Property (1030)
20190402 05:56:51.367 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:51.367 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:51.367 - FAIL - installing != completed
20190402 05:56:51.367 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:51.367 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:51.367 - INFO - +------- END KW: Utils.Check Property Value (1032)
20190402 05:56:56.368 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:56:56.369 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:56:56.371 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:56:56.372 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:56:56.372 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:56:56.372 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:56:56.373 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:56:56.373 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:56:56.373 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:56:56.373 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:56:56.374 - INFO - &{result_dict} = { stdout= }
20190402 05:56:56.374 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:56:56.374 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:56:56.374 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:56.374 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:56:56.374 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:56.375 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:56:56.375 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:56:56.375 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:56:56.375 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:56.375 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:56:56.375 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:56:56.384 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:56:56.384 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:56:56.384 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:56:57.390 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:57.390 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:57.390 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1006)
20190402 05:56:57.390 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:56:57.391 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:56:57.391 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:56:57.391 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:56:57.391 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:56:57.391 - INFO - ${clean_out} = installing
20190402 05:56:57.391 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:56:57.392 - INFO - ${output} = installing
20190402 05:56:57.392 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:56:57.392 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:56:57.392 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:56:57.393 - INFO - echo $?
20190402 05:56:57.393 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:56:57.393 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:56:57.394 - INFO - 0
20190402 05:56:57.394 - INFO - ${rc} = 0
20190402 05:56:57.394 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:56:57.394 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:56:57.394 - INFO - 0
20190402 05:56:57.394 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:56:57.394 - INFO - ${rc} = 0
20190402 05:56:57.394 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:56:57.394 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:56:57.395 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:56:57.395 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:57.395 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:56:57.395 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:56:57.395 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:56:57.395 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:56:57.396 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:56:57.396 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:56:57.396 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:56:57.396 - INFO - +--------- END KW: Utils.Run Command (1024)
20190402 05:56:57.396 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:56:57.396 - INFO - ${value} = installing
20190402 05:56:57.396 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:56:57.397 - INFO - ${current_value} = installing
20190402 05:56:57.397 - INFO - +-------- END KW: Utils.Retrieve Host Property (1028)
20190402 05:56:57.397 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:56:57.397 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:56:57.397 - FAIL - installing != completed
20190402 05:56:57.397 - DEBUG - Traceback (most recent call last):
  None
20190402 05:56:57.397 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:56:57.397 - INFO - +------- END KW: Utils.Check Property Value (1029)
20190402 05:57:02.398 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:02.400 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:02.401 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:02.402 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:02.402 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:02.403 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:02.403 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:02.404 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:02.404 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:02.404 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:02.405 - INFO - &{result_dict} = { stdout= }
20190402 05:57:02.405 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:57:02.405 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:02.405 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:02.405 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:02.406 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:02.406 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:02.406 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:57:02.406 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:02.406 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:02.406 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:57:02.406 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:02.416 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:02.417 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:57:02.417 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:03.431 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:03.431 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:03.432 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1015)
20190402 05:57:03.432 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:03.432 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:03.432 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:03.432 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:03.432 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:03.433 - INFO - ${clean_out} = installing
20190402 05:57:03.433 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:57:03.433 - INFO - ${output} = installing
20190402 05:57:03.433 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:03.433 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:03.433 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:03.435 - INFO - echo $?
20190402 05:57:03.435 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:03.435 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:03.435 - INFO - 0
20190402 05:57:03.435 - INFO - ${rc} = 0
20190402 05:57:03.435 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:57:03.435 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:03.436 - INFO - 0
20190402 05:57:03.436 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:57:03.436 - INFO - ${rc} = 0
20190402 05:57:03.436 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:03.436 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:03.436 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:03.437 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:03.437 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:03.437 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:03.437 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:03.437 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:03.437 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:03.437 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:03.437 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:03.437 - INFO - +--------- END KW: Utils.Run Command (1035)
20190402 05:57:03.438 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:03.438 - INFO - ${value} = installing
20190402 05:57:03.438 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:57:03.438 - INFO - ${current_value} = installing
20190402 05:57:03.438 - INFO - +-------- END KW: Utils.Retrieve Host Property (1038)
20190402 05:57:03.438 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:03.438 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:03.438 - FAIL - installing != completed
20190402 05:57:03.438 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:03.438 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:03.439 - INFO - +------- END KW: Utils.Check Property Value (1041)
20190402 05:57:08.440 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:08.441 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:08.442 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:08.443 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:08.444 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:08.444 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:08.444 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:08.445 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:08.445 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:08.445 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:08.445 - INFO - &{result_dict} = { stdout= }
20190402 05:57:08.445 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:57:08.446 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:08.446 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:08.446 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:08.446 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:08.446 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:08.446 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:57:08.446 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:08.447 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:08.447 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:57:08.447 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:08.456 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:08.457 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:57:08.457 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:09.455 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:09.456 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:09.456 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (999)
20190402 05:57:09.456 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:09.456 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:09.456 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:09.456 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:09.457 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:09.457 - INFO - ${clean_out} = installing
20190402 05:57:09.457 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:09.457 - INFO - ${output} = installing
20190402 05:57:09.457 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:09.457 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:09.457 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:09.459 - INFO - echo $?
20190402 05:57:09.459 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:09.459 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:09.459 - INFO - 0
20190402 05:57:09.459 - INFO - ${rc} = 0
20190402 05:57:09.459 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:57:09.459 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:09.460 - INFO - 0
20190402 05:57:09.460 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:57:09.460 - INFO - ${rc} = 0
20190402 05:57:09.460 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:09.460 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:09.460 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:09.461 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:09.461 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:09.461 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:09.461 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:09.461 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:09.461 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:09.461 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:09.461 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:09.461 - INFO - +--------- END KW: Utils.Run Command (1017)
20190402 05:57:09.462 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:09.462 - INFO - ${value} = installing
20190402 05:57:09.462 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:09.462 - INFO - ${current_value} = installing
20190402 05:57:09.462 - INFO - +-------- END KW: Utils.Retrieve Host Property (1021)
20190402 05:57:09.462 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:09.462 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:09.462 - FAIL - installing != completed
20190402 05:57:09.462 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:09.462 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:09.463 - INFO - +------- END KW: Utils.Check Property Value (1024)
20190402 05:57:14.464 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:14.465 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:14.466 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:14.467 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:14.468 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:14.468 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:14.468 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:14.469 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:14.469 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:14.469 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:14.469 - INFO - &{result_dict} = { stdout= }
20190402 05:57:14.469 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:57:14.470 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:14.470 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:14.470 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:14.470 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:14.470 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:14.470 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:57:14.470 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:14.471 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:14.471 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:57:14.471 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:14.481 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:14.481 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:57:14.481 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:15.526 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:15.526 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:15.526 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1045)
20190402 05:57:15.526 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:15.527 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:15.527 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:15.527 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:15.527 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:15.527 - INFO - ${clean_out} = installing
20190402 05:57:15.527 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:15.528 - INFO - ${output} = installing
20190402 05:57:15.528 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:57:15.528 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:15.528 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:15.530 - INFO - echo $?
20190402 05:57:15.530 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:15.530 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:15.530 - INFO - 0
20190402 05:57:15.530 - INFO - ${rc} = 0
20190402 05:57:15.530 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:57:15.530 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:15.530 - INFO - 0
20190402 05:57:15.530 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:57:15.531 - INFO - ${rc} = 0
20190402 05:57:15.531 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:15.531 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:15.531 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:15.531 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:15.531 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:57:15.531 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:15.532 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:15.532 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:15.532 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:15.532 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:15.532 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:15.532 - INFO - +--------- END KW: Utils.Run Command (1064)
20190402 05:57:15.532 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:15.532 - INFO - ${value} = installing
20190402 05:57:15.532 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:15.533 - INFO - ${current_value} = installing
20190402 05:57:15.533 - INFO - +-------- END KW: Utils.Retrieve Host Property (1068)
20190402 05:57:15.533 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:15.533 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:15.533 - FAIL - installing != completed
20190402 05:57:15.533 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:15.533 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:15.533 - INFO - +------- END KW: Utils.Check Property Value (1070)
20190402 05:57:20.534 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:20.536 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:20.537 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:20.538 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:20.538 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:20.538 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:20.539 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:20.540 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:20.540 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:20.540 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:20.540 - INFO - &{result_dict} = { stdout= }
20190402 05:57:20.540 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:57:20.540 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:20.541 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:20.541 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:20.541 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:20.541 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:20.541 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:57:20.541 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:20.541 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:20.542 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:57:20.542 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:20.553 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:20.553 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:57:20.553 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:21.555 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:21.555 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:21.555 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1002)
20190402 05:57:21.555 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:21.555 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:21.556 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:21.556 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:57:21.556 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:21.556 - INFO - ${clean_out} = installing
20190402 05:57:21.556 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:21.556 - INFO - ${output} = installing
20190402 05:57:21.556 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:21.556 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:21.557 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:21.558 - INFO - echo $?
20190402 05:57:21.558 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:21.558 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:21.559 - INFO - 0
20190402 05:57:21.559 - INFO - ${rc} = 0
20190402 05:57:21.559 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:57:21.559 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:21.559 - INFO - 0
20190402 05:57:21.559 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:57:21.559 - INFO - ${rc} = 0
20190402 05:57:21.559 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:21.559 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:21.560 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:21.560 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:21.560 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:21.560 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:21.560 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:21.560 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:21.561 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:21.561 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:57:21.561 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:21.561 - INFO - +--------- END KW: Utils.Run Command (1023)
20190402 05:57:21.561 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:21.561 - INFO - ${value} = installing
20190402 05:57:21.561 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:21.561 - INFO - ${current_value} = installing
20190402 05:57:21.561 - INFO - +-------- END KW: Utils.Retrieve Host Property (1026)
20190402 05:57:21.561 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:21.562 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:21.562 - FAIL - installing != completed
20190402 05:57:21.562 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:21.562 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:57:21.562 - INFO - +------- END KW: Utils.Check Property Value (1028)
20190402 05:57:26.563 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:26.564 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:26.565 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:26.566 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:26.567 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:26.567 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:26.568 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:26.569 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:26.570 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:26.570 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:26.572 - INFO - &{result_dict} = { stdout= }
20190402 05:57:26.572 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:57:26.573 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:26.574 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:26.574 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:26.575 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:26.576 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:26.576 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:57:26.576 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:26.577 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:26.577 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:57:26.577 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:26.605 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:26.605 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 05:57:26.605 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:27.580 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:27.580 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:27.580 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (975)
20190402 05:57:27.580 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:27.581 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:27.581 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:27.581 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:27.581 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:27.581 - INFO - ${clean_out} = installing
20190402 05:57:27.581 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:27.582 - INFO - ${output} = installing
20190402 05:57:27.582 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:57:27.582 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:27.582 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:27.583 - INFO - echo $?
20190402 05:57:27.583 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:57:27.583 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:27.584 - INFO - 0
20190402 05:57:27.584 - INFO - ${rc} = 0
20190402 05:57:27.584 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:57:27.584 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:27.584 - INFO - 0
20190402 05:57:27.584 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:57:27.584 - INFO - ${rc} = 0
20190402 05:57:27.584 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:57:27.584 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:27.585 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:27.585 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:27.585 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:27.585 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:27.586 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:27.586 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:27.586 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:27.586 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:27.586 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:27.586 - INFO - +--------- END KW: Utils.Run Command (1019)
20190402 05:57:27.586 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:27.586 - INFO - ${value} = installing
20190402 05:57:27.586 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:27.587 - INFO - ${current_value} = installing
20190402 05:57:27.587 - INFO - +-------- END KW: Utils.Retrieve Host Property (1023)
20190402 05:57:27.587 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:27.587 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:27.587 - FAIL - installing != completed
20190402 05:57:27.587 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:27.587 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:27.587 - INFO - +------- END KW: Utils.Check Property Value (1024)
20190402 05:57:32.588 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:32.590 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:32.591 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:32.592 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:32.592 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:32.592 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:32.594 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:32.595 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:32.595 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:32.596 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:32.598 - INFO - &{result_dict} = { stdout= }
20190402 05:57:32.598 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:57:32.598 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:32.599 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:32.599 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:32.600 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:32.601 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:32.601 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:57:32.601 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:32.602 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:32.602 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:57:32.602 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:32.630 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:32.631 - INFO - +---------- END KW: SSHLibrary.Write (29)
20190402 05:57:32.631 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:33.606 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:33.606 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:33.606 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (975)
20190402 05:57:33.606 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:33.606 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:33.607 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:33.607 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:57:33.607 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:33.607 - INFO - ${clean_out} = installing
20190402 05:57:33.607 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:33.607 - INFO - ${output} = installing
20190402 05:57:33.607 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:33.607 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:33.607 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:33.609 - INFO - echo $?
20190402 05:57:33.609 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:33.609 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:33.609 - INFO - 0
20190402 05:57:33.610 - INFO - ${rc} = 0
20190402 05:57:33.610 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:57:33.610 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:33.610 - INFO - 0
20190402 05:57:33.610 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:57:33.610 - INFO - ${rc} = 0
20190402 05:57:33.610 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:33.610 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:33.611 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:33.611 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:33.611 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:33.611 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:33.611 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:33.611 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:33.611 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:33.612 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:57:33.612 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:33.612 - INFO - +--------- END KW: Utils.Run Command (1020)
20190402 05:57:33.612 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:33.612 - INFO - ${value} = installing
20190402 05:57:33.612 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:33.612 - INFO - ${current_value} = installing
20190402 05:57:33.613 - INFO - +-------- END KW: Utils.Retrieve Host Property (1024)
20190402 05:57:33.613 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:33.613 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:33.613 - FAIL - installing != completed
20190402 05:57:33.613 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:33.613 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:33.613 - INFO - +------- END KW: Utils.Check Property Value (1025)
20190402 05:57:38.614 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:38.615 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:38.616 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:38.617 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:38.618 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:57:38.618 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:38.619 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:38.619 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:57:38.620 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:38.620 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:38.620 - INFO - &{result_dict} = { stdout= }
20190402 05:57:38.620 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:57:38.620 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:38.621 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:38.621 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:38.621 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:38.621 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:38.621 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:57:38.621 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:38.621 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:38.621 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:57:38.621 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:38.631 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:38.631 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:57:38.631 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:39.645 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:39.645 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:39.646 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1014)
20190402 05:57:39.646 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:39.646 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:39.646 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:39.646 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:39.646 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:39.647 - INFO - ${clean_out} = installing
20190402 05:57:39.647 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:57:39.647 - INFO - ${output} = installing
20190402 05:57:39.647 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:39.647 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:39.647 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:39.649 - INFO - echo $?
20190402 05:57:39.649 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:39.649 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:39.649 - INFO - 0
20190402 05:57:39.649 - INFO - ${rc} = 0
20190402 05:57:39.649 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:57:39.649 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:39.650 - INFO - 0
20190402 05:57:39.650 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:57:39.650 - INFO - ${rc} = 0
20190402 05:57:39.650 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:39.650 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:39.650 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:39.651 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:39.651 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:39.651 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:39.651 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:39.651 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:39.651 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:39.651 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:39.651 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:39.651 - INFO - +--------- END KW: Utils.Run Command (1033)
20190402 05:57:39.652 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:39.652 - INFO - ${value} = installing
20190402 05:57:39.652 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:39.652 - INFO - ${current_value} = installing
20190402 05:57:39.652 - INFO - +-------- END KW: Utils.Retrieve Host Property (1037)
20190402 05:57:39.652 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:39.652 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:39.652 - FAIL - installing != completed
20190402 05:57:39.652 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:39.652 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:39.653 - INFO - +------- END KW: Utils.Check Property Value (1039)
20190402 05:57:44.653 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:44.655 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:44.657 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:44.658 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:44.658 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:44.658 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:44.659 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:44.659 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:57:44.659 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:44.659 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:44.660 - INFO - &{result_dict} = { stdout= }
20190402 05:57:44.660 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:57:44.660 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:44.660 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:44.660 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:44.660 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:44.660 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:44.660 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:57:44.661 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:44.661 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:44.661 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:57:44.661 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:44.672 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:44.672 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:57:44.672 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:45.677 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:45.677 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:45.678 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1006)
20190402 05:57:45.678 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:45.678 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:45.678 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:45.678 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:45.678 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:45.679 - INFO - ${clean_out} = installing
20190402 05:57:45.679 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:57:45.679 - INFO - ${output} = installing
20190402 05:57:45.679 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:45.679 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:45.679 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:45.681 - INFO - echo $?
20190402 05:57:45.681 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:57:45.681 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:45.681 - INFO - 0
20190402 05:57:45.681 - INFO - ${rc} = 0
20190402 05:57:45.681 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:57:45.682 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:45.682 - INFO - 0
20190402 05:57:45.682 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:57:45.682 - INFO - ${rc} = 0
20190402 05:57:45.682 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:45.682 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:45.682 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:45.683 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:45.683 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:45.683 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:45.683 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:45.683 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:45.683 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:45.683 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:45.683 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:45.684 - INFO - +--------- END KW: Utils.Run Command (1026)
20190402 05:57:45.684 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:45.684 - INFO - ${value} = installing
20190402 05:57:45.684 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:45.684 - INFO - ${current_value} = installing
20190402 05:57:45.684 - INFO - +-------- END KW: Utils.Retrieve Host Property (1029)
20190402 05:57:45.684 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:45.684 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:45.684 - FAIL - installing != completed
20190402 05:57:45.685 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:45.685 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:57:45.685 - INFO - +------- END KW: Utils.Check Property Value (1032)
20190402 05:57:50.686 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:50.687 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:50.688 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:50.690 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:50.690 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:57:50.690 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:50.691 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:50.691 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:57:50.691 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:50.691 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:50.692 - INFO - &{result_dict} = { stdout= }
20190402 05:57:50.692 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:57:50.692 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:50.692 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:50.692 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:50.692 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:50.692 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:50.693 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:57:50.693 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:50.693 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:50.693 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:57:50.693 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:50.703 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:50.703 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:57:50.703 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:51.818 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:51.818 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:51.818 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1115)
20190402 05:57:51.818 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:51.819 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:51.819 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:51.819 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:51.819 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:51.819 - INFO - ${clean_out} = installing
20190402 05:57:51.819 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:51.819 - INFO - ${output} = installing
20190402 05:57:51.819 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:57:51.819 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:51.820 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:51.821 - INFO - echo $?
20190402 05:57:51.821 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:57:51.821 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:51.821 - INFO - 0
20190402 05:57:51.821 - INFO - ${rc} = 0
20190402 05:57:51.821 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:57:51.822 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:51.822 - INFO - 0
20190402 05:57:51.822 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:57:51.822 - INFO - ${rc} = 0
20190402 05:57:51.822 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:57:51.822 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:51.822 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:51.823 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:57:51.823 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:51.823 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:51.823 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:51.823 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:51.823 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:51.823 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:57:51.823 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:51.823 - INFO - +--------- END KW: Utils.Run Command (1133)
20190402 05:57:51.824 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:51.824 - INFO - ${value} = installing
20190402 05:57:51.824 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:51.824 - INFO - ${current_value} = installing
20190402 05:57:51.824 - INFO - +-------- END KW: Utils.Retrieve Host Property (1137)
20190402 05:57:51.824 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:51.824 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:51.824 - FAIL - installing != completed
20190402 05:57:51.824 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:51.825 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:51.825 - INFO - +------- END KW: Utils.Check Property Value (1140)
20190402 05:57:56.826 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:57:56.827 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:57:56.828 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:57:56.829 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:57:56.829 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:57:56.830 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:57:56.830 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:57:56.831 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:57:56.831 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:57:56.831 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:57:56.832 - INFO - &{result_dict} = { stdout= }
20190402 05:57:56.832 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:57:56.832 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:57:56.832 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:56.832 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:57:56.832 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:56.832 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:57:56.833 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:57:56.833 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:57:56.833 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:56.833 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:57:56.833 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:57:56.842 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:57:56.842 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:57:56.842 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:57:57.837 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:57.837 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:57.837 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (995)
20190402 05:57:57.837 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:57:57.838 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:57:57.838 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:57:57.838 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:57:57.838 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:57:57.838 - INFO - ${clean_out} = installing
20190402 05:57:57.838 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:57:57.839 - INFO - ${output} = installing
20190402 05:57:57.839 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:57:57.839 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:57:57.839 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:57:57.840 - INFO - echo $?
20190402 05:57:57.840 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:57:57.840 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:57:57.841 - INFO - 0
20190402 05:57:57.841 - INFO - ${rc} = 0
20190402 05:57:57.841 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:57:57.841 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:57:57.841 - INFO - 0
20190402 05:57:57.841 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:57:57.841 - INFO - ${rc} = 0
20190402 05:57:57.841 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:57:57.841 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:57:57.842 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:57:57.842 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:57.842 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:57:57.842 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:57:57.842 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:57:57.842 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:57:57.843 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:57:57.843 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:57:57.843 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:57:57.843 - INFO - +--------- END KW: Utils.Run Command (1013)
20190402 05:57:57.843 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:57:57.843 - INFO - ${value} = installing
20190402 05:57:57.843 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:57:57.843 - INFO - ${current_value} = installing
20190402 05:57:57.843 - INFO - +-------- END KW: Utils.Retrieve Host Property (1016)
20190402 05:57:57.844 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:57:57.844 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:57:57.844 - FAIL - installing != completed
20190402 05:57:57.844 - DEBUG - Traceback (most recent call last):
  None
20190402 05:57:57.844 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:57:57.844 - INFO - +------- END KW: Utils.Check Property Value (1019)
20190402 05:58:02.845 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:02.846 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:02.847 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:02.848 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:02.849 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:58:02.849 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:02.850 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:02.850 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:58:02.850 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:02.850 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:02.851 - INFO - &{result_dict} = { stdout= }
20190402 05:58:02.851 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:58:02.851 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:02.851 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:02.851 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:02.851 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:02.852 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:02.852 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:58:02.852 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:02.852 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:02.852 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:02.852 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:02.863 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:02.863 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:58:02.863 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:03.891 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:03.891 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:03.891 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1028)
20190402 05:58:03.891 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:03.892 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:03.892 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:03.892 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:03.892 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:03.892 - INFO - ${clean_out} = installing
20190402 05:58:03.892 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:03.893 - INFO - ${output} = installing
20190402 05:58:03.893 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:58:03.893 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:03.893 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:03.894 - INFO - echo $?
20190402 05:58:03.894 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:58:03.895 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:03.895 - INFO - 0
20190402 05:58:03.895 - INFO - ${rc} = 0
20190402 05:58:03.895 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:03.895 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:03.895 - INFO - 0
20190402 05:58:03.895 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:03.895 - INFO - ${rc} = 0
20190402 05:58:03.895 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:58:03.895 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:03.896 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:03.896 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:03.896 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:03.896 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:03.896 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:03.897 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:03.897 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:58:03.897 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:58:03.897 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:58:03.897 - INFO - +--------- END KW: Utils.Run Command (1048)
20190402 05:58:03.897 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:03.897 - INFO - ${value} = installing
20190402 05:58:03.897 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:58:03.897 - INFO - ${current_value} = installing
20190402 05:58:03.898 - INFO - +-------- END KW: Utils.Retrieve Host Property (1051)
20190402 05:58:03.898 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:03.898 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:03.898 - FAIL - installing != completed
20190402 05:58:03.898 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:03.898 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:03.898 - INFO - +------- END KW: Utils.Check Property Value (1053)
20190402 05:58:08.899 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:08.900 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:08.901 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:08.902 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:08.903 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:08.903 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:08.904 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:08.905 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:58:08.905 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:08.906 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:08.908 - INFO - &{result_dict} = { stdout= }
20190402 05:58:08.908 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:58:08.908 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:08.909 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:08.909 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:08.911 - INFO - +----------- END KW: Collections.Set To Dictionary (2)
20190402 05:58:08.911 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:08.912 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:58:08.912 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:08.912 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:08.912 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:08.913 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:08.940 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:08.940 - INFO - +---------- END KW: SSHLibrary.Write (27)
20190402 05:58:08.941 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:09.922 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:09.922 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:09.922 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (981)
20190402 05:58:09.922 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:09.923 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:09.923 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:09.923 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:09.923 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:09.923 - INFO - ${clean_out} = installing
20190402 05:58:09.923 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:09.923 - INFO - ${output} = installing
20190402 05:58:09.923 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:09.924 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:09.924 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:09.925 - INFO - echo $?
20190402 05:58:09.925 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:58:09.926 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:09.926 - INFO - 0
20190402 05:58:09.926 - INFO - ${rc} = 0
20190402 05:58:09.926 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:09.926 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:09.926 - INFO - 0
20190402 05:58:09.926 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:09.926 - INFO - ${rc} = 0
20190402 05:58:09.926 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:58:09.926 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:09.927 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:09.927 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:09.927 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:09.927 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:09.928 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:09.928 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:09.928 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:58:09.928 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:09.928 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:58:09.928 - INFO - +--------- END KW: Utils.Run Command (1025)
20190402 05:58:09.928 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:09.928 - INFO - ${value} = installing
20190402 05:58:09.928 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:58:09.929 - INFO - ${current_value} = installing
20190402 05:58:09.929 - INFO - +-------- END KW: Utils.Retrieve Host Property (1029)
20190402 05:58:09.929 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:09.929 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:09.929 - FAIL - installing != completed
20190402 05:58:09.929 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:09.929 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:09.929 - INFO - +------- END KW: Utils.Check Property Value (1030)
20190402 05:58:14.930 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:14.931 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:14.932 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:14.933 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:14.933 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:14.933 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:14.935 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:14.935 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:58:14.935 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:14.936 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:14.936 - INFO - &{result_dict} = { stdout= }
20190402 05:58:14.936 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:58:14.936 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:14.936 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:14.936 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:14.937 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:14.937 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:14.937 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:58:14.937 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:14.937 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:14.937 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:14.937 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:14.948 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:14.948 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:58:14.948 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:15.950 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:15.950 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:15.950 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1002)
20190402 05:58:15.951 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:15.951 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:15.951 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:15.951 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:15.951 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:15.951 - INFO - ${clean_out} = installing
20190402 05:58:15.952 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:58:15.952 - INFO - ${output} = installing
20190402 05:58:15.952 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:15.952 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:15.952 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:15.953 - INFO - echo $?
20190402 05:58:15.954 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:58:15.954 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:15.954 - INFO - 0
20190402 05:58:15.954 - INFO - ${rc} = 0
20190402 05:58:15.954 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:15.954 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:15.954 - INFO - 0
20190402 05:58:15.954 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:15.955 - INFO - ${rc} = 0
20190402 05:58:15.955 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:58:15.955 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:15.955 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:15.955 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:15.955 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:58:15.956 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:15.956 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:15.956 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:15.956 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:58:15.956 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:15.956 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:58:15.956 - INFO - +--------- END KW: Utils.Run Command (1023)
20190402 05:58:15.956 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:15.957 - INFO - ${value} = installing
20190402 05:58:15.957 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:58:15.957 - INFO - ${current_value} = installing
20190402 05:58:15.957 - INFO - +-------- END KW: Utils.Retrieve Host Property (1026)
20190402 05:58:15.957 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:15.957 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:15.957 - FAIL - installing != completed
20190402 05:58:15.957 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:15.957 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:15.957 - INFO - +------- END KW: Utils.Check Property Value (1027)
20190402 05:58:20.958 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:20.960 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:20.961 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:20.962 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:20.962 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:20.962 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:20.963 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:20.964 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:58:20.964 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:20.964 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:20.964 - INFO - &{result_dict} = { stdout= }
20190402 05:58:20.964 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:58:20.964 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:20.965 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:20.965 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:20.965 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:20.965 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:20.965 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:58:20.965 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:20.965 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:20.966 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:58:20.966 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:20.976 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:20.976 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:58:20.976 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:22.027 - INFO - installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:22.027 - INFO - ${output} = installing
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:22.027 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1051)
20190402 05:58:22.028 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:22.028 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:22.028 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:22.028 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:22.029 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:22.029 - INFO - ${clean_out} = installing
20190402 05:58:22.029 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:58:22.029 - INFO - ${output} = installing
20190402 05:58:22.029 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:22.029 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:22.029 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:22.031 - INFO - echo $?
20190402 05:58:22.031 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:58:22.031 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:22.031 - INFO - 0
20190402 05:58:22.031 - INFO - ${rc} = 0
20190402 05:58:22.032 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:58:22.032 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:22.032 - INFO - 0
20190402 05:58:22.032 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:22.032 - INFO - ${rc} = 0
20190402 05:58:22.032 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:58:22.032 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:22.032 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:22.033 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:22.033 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:22.033 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:22.033 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:22.033 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:22.033 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: installing
20190402 05:58:22.033 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:22.034 - INFO - ${result} = {u'stdout': u'installing', u'stderr': u'', u'rc': u'0'}
20190402 05:58:22.034 - INFO - +--------- END KW: Utils.Run Command (1072)
20190402 05:58:22.034 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:22.034 - INFO - ${value} = installing
20190402 05:58:22.034 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:58:22.034 - INFO - ${current_value} = installing
20190402 05:58:22.034 - INFO - +-------- END KW: Utils.Retrieve Host Property (1074)
20190402 05:58:22.034 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:22.034 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:22.035 - FAIL - installing != completed
20190402 05:58:22.035 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:22.035 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:58:22.035 - INFO - +------- END KW: Utils.Check Property Value (1077)
20190402 05:58:27.036 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:27.037 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:27.038 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:27.039 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:27.039 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:27.040 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:27.040 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:27.041 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:58:27.041 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:27.041 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:27.041 - INFO - &{result_dict} = { stdout= }
20190402 05:58:27.041 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:58:27.042 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:27.042 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:27.042 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:27.042 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:27.042 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:27.042 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:58:27.043 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:27.043 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:27.043 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:27.043 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:27.053 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:27.054 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:58:27.054 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:28.079 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:28.080 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:28.080 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1026)
20190402 05:58:28.080 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:28.080 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:28.080 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:28.080 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:28.081 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:28.081 - INFO - ${clean_out} = postinstall
20190402 05:58:28.081 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:28.081 - INFO - ${output} = postinstall
20190402 05:58:28.081 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:28.081 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:28.082 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:28.083 - INFO - echo $?
20190402 05:58:28.084 - INFO - +----------- END KW: SSHLibrary.Write (3)
20190402 05:58:28.084 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:28.084 - INFO - 0
20190402 05:58:28.084 - INFO - ${rc} = 0
20190402 05:58:28.084 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:28.084 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:28.084 - INFO - 0
20190402 05:58:28.084 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:28.085 - INFO - ${rc} = 0
20190402 05:58:28.085 - INFO - +---------- END KW: Utils.Get Return Code (4)
20190402 05:58:28.085 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:28.085 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:28.085 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:28.085 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:58:28.086 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:28.086 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:28.086 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:28.086 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:58:28.086 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:28.086 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:58:28.086 - INFO - +--------- END KW: Utils.Run Command (1046)
20190402 05:58:28.086 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:28.087 - INFO - ${value} = postinstall
20190402 05:58:28.087 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:58:28.087 - INFO - ${current_value} = postinstall
20190402 05:58:28.087 - INFO - +-------- END KW: Utils.Retrieve Host Property (1050)
20190402 05:58:28.087 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:28.087 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:28.087 - FAIL - postinstall != completed
20190402 05:58:28.087 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:28.087 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:28.087 - INFO - +------- END KW: Utils.Check Property Value (1052)
20190402 05:58:33.088 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:33.089 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:33.090 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:33.091 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:33.091 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:33.092 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:33.093 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:33.093 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:58:33.093 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:33.094 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:33.094 - INFO - &{result_dict} = { stdout= }
20190402 05:58:33.094 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:58:33.094 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:33.094 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:33.095 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:33.095 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:33.095 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:33.095 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:58:33.095 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:33.095 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:33.095 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:33.095 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:33.105 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:33.105 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:58:33.105 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:34.120 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:34.120 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:34.121 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1015)
20190402 05:58:34.121 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:34.121 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:34.121 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:34.121 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:34.121 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:34.122 - INFO - ${clean_out} = postinstall
20190402 05:58:34.122 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:58:34.122 - INFO - ${output} = postinstall
20190402 05:58:34.122 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:34.122 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:34.122 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:34.124 - INFO - echo $?
20190402 05:58:34.124 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:58:34.124 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:34.124 - INFO - 0
20190402 05:58:34.124 - INFO - ${rc} = 0
20190402 05:58:34.124 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:34.124 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:34.124 - INFO - 0
20190402 05:58:34.125 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:58:34.125 - INFO - ${rc} = 0
20190402 05:58:34.125 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:58:34.125 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:34.125 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:34.126 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:34.126 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:34.126 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:34.126 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:34.126 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:34.126 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:58:34.126 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:34.127 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:58:34.127 - INFO - +--------- END KW: Utils.Run Command (1035)
20190402 05:58:34.127 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:34.127 - INFO - ${value} = postinstall
20190402 05:58:34.127 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:58:34.127 - INFO - ${current_value} = postinstall
20190402 05:58:34.127 - INFO - +-------- END KW: Utils.Retrieve Host Property (1038)
20190402 05:58:34.127 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:34.127 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:34.128 - FAIL - postinstall != completed
20190402 05:58:34.128 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:34.128 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:58:34.128 - INFO - +------- END KW: Utils.Check Property Value (1040)
20190402 05:58:39.129 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:39.130 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:39.131 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:39.132 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:39.132 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:39.133 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:39.133 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:39.134 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:58:39.134 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:39.134 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:39.134 - INFO - &{result_dict} = { stdout= }
20190402 05:58:39.134 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:58:39.135 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:39.135 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:39.135 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:39.135 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:39.135 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:39.135 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:58:39.135 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:39.136 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:39.136 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:58:39.136 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:39.145 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:39.145 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 05:58:39.145 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:40.156 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:40.156 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:40.156 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1011)
20190402 05:58:40.156 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:40.157 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:40.157 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:40.157 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:40.157 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:40.157 - INFO - ${clean_out} = postinstall
20190402 05:58:40.157 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:40.157 - INFO - ${output} = postinstall
20190402 05:58:40.157 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:40.158 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:40.158 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:40.159 - INFO - echo $?
20190402 05:58:40.159 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:58:40.160 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:40.160 - INFO - 0
20190402 05:58:40.160 - INFO - ${rc} = 0
20190402 05:58:40.160 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:40.160 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:40.160 - INFO - 0
20190402 05:58:40.160 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:40.160 - INFO - ${rc} = 0
20190402 05:58:40.160 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:58:40.160 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:40.161 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:40.161 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:40.161 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:40.161 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:40.161 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:40.161 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:40.162 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:58:40.162 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:58:40.162 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:58:40.162 - INFO - +--------- END KW: Utils.Run Command (1029)
20190402 05:58:40.162 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:40.162 - INFO - ${value} = postinstall
20190402 05:58:40.162 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:58:40.163 - INFO - ${current_value} = postinstall
20190402 05:58:40.163 - INFO - +-------- END KW: Utils.Retrieve Host Property (1033)
20190402 05:58:40.163 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:40.163 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:40.163 - FAIL - postinstall != completed
20190402 05:58:40.163 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:40.163 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:40.163 - INFO - +------- END KW: Utils.Check Property Value (1034)
20190402 05:58:45.164 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:45.165 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:45.167 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:45.168 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:45.168 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:45.168 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:45.169 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:45.170 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:58:45.170 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:45.170 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:45.170 - INFO - &{result_dict} = { stdout= }
20190402 05:58:45.170 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:58:45.170 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:45.171 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:45.171 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:45.171 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:45.171 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:45.171 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:58:45.171 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:45.171 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:45.172 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:58:45.172 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:45.183 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:45.183 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:58:45.183 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:46.197 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:46.197 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:46.197 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1014)
20190402 05:58:46.197 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:46.197 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:46.197 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:46.198 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:58:46.198 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:46.198 - INFO - ${clean_out} = postinstall
20190402 05:58:46.198 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:46.198 - INFO - ${output} = postinstall
20190402 05:58:46.198 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:46.198 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:46.198 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:46.200 - INFO - echo $?
20190402 05:58:46.201 - INFO - +----------- END KW: SSHLibrary.Write (3)
20190402 05:58:46.201 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:46.201 - INFO - 0
20190402 05:58:46.201 - INFO - ${rc} = 0
20190402 05:58:46.201 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:46.201 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:46.201 - INFO - 0
20190402 05:58:46.202 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:46.202 - INFO - ${rc} = 0
20190402 05:58:46.202 - INFO - +---------- END KW: Utils.Get Return Code (4)
20190402 05:58:46.202 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:46.202 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:46.202 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:46.202 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:58:46.203 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:46.203 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:46.203 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:46.203 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:58:46.203 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:46.203 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:58:46.203 - INFO - +--------- END KW: Utils.Run Command (1035)
20190402 05:58:46.203 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:46.204 - INFO - ${value} = postinstall
20190402 05:58:46.204 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:58:46.204 - INFO - ${current_value} = postinstall
20190402 05:58:46.204 - INFO - +-------- END KW: Utils.Retrieve Host Property (1039)
20190402 05:58:46.204 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:46.204 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:46.204 - FAIL - postinstall != completed
20190402 05:58:46.204 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:46.204 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:46.204 - INFO - +------- END KW: Utils.Check Property Value (1040)
20190402 05:58:51.205 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:51.207 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:51.209 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:51.210 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:51.210 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:58:51.210 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:51.212 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:51.212 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:58:51.213 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:51.214 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:51.215 - INFO - &{result_dict} = { stdout= }
20190402 05:58:51.215 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:58:51.215 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:51.216 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:51.217 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:51.217 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:51.218 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:51.218 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 05:58:51.219 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:51.219 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:51.219 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:51.220 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:51.250 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:51.250 - INFO - +---------- END KW: SSHLibrary.Write (30)
20190402 05:58:51.251 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:52.244 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:52.244 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:52.245 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (994)
20190402 05:58:52.245 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:52.245 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:52.245 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:52.245 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:52.246 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:52.246 - INFO - ${clean_out} = postinstall
20190402 05:58:52.246 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:52.246 - INFO - ${output} = postinstall
20190402 05:58:52.246 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:52.246 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:52.246 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:52.248 - INFO - echo $?
20190402 05:58:52.248 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:58:52.248 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:52.248 - INFO - 0
20190402 05:58:52.248 - INFO - ${rc} = 0
20190402 05:58:52.248 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:58:52.248 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:52.248 - INFO - 0
20190402 05:58:52.249 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:58:52.249 - INFO - ${rc} = 0
20190402 05:58:52.249 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:58:52.249 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:52.249 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:52.250 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:58:52.250 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:52.250 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:52.250 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:52.250 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:52.250 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:58:52.250 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:58:52.250 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:58:52.250 - INFO - +--------- END KW: Utils.Run Command (1040)
20190402 05:58:52.251 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:52.251 - INFO - ${value} = postinstall
20190402 05:58:52.251 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:58:52.251 - INFO - ${current_value} = postinstall
20190402 05:58:52.251 - INFO - +-------- END KW: Utils.Retrieve Host Property (1044)
20190402 05:58:52.251 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:52.251 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:52.251 - FAIL - postinstall != completed
20190402 05:58:52.251 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:52.251 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:52.252 - INFO - +------- END KW: Utils.Check Property Value (1047)
20190402 05:58:57.252 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:58:57.254 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:58:57.255 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:58:57.257 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:58:57.257 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:58:57.257 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:58:57.258 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:58:57.258 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:58:57.258 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:58:57.258 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:58:57.258 - INFO - &{result_dict} = { stdout= }
20190402 05:58:57.259 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:58:57.259 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:58:57.259 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:57.259 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:58:57.259 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:57.259 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:58:57.259 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:58:57.260 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:58:57.260 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:57.260 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:58:57.260 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:58:57.272 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:58:57.272 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:58:57.272 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:58:58.258 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:58.258 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:58.258 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (986)
20190402 05:58:58.259 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:58:58.259 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:58:58.259 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:58:58.259 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:58:58.259 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:58:58.259 - INFO - ${clean_out} = postinstall
20190402 05:58:58.260 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:58:58.260 - INFO - ${output} = postinstall
20190402 05:58:58.260 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:58:58.260 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:58:58.260 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:58:58.261 - INFO - echo $?
20190402 05:58:58.261 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:58:58.261 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:58:58.262 - INFO - 0
20190402 05:58:58.262 - INFO - ${rc} = 0
20190402 05:58:58.262 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:58:58.262 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:58:58.262 - INFO - 0
20190402 05:58:58.262 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:58:58.262 - INFO - ${rc} = 0
20190402 05:58:58.262 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:58:58.262 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:58:58.263 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:58:58.263 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:58.263 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:58:58.263 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:58:58.263 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:58:58.264 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:58:58.264 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:58:58.264 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:58:58.264 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:58:58.264 - INFO - +--------- END KW: Utils.Run Command (1007)
20190402 05:58:58.264 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:58:58.264 - INFO - ${value} = postinstall
20190402 05:58:58.264 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:58:58.264 - INFO - ${current_value} = postinstall
20190402 05:58:58.264 - INFO - +-------- END KW: Utils.Retrieve Host Property (1010)
20190402 05:58:58.265 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:58:58.265 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:58:58.265 - FAIL - postinstall != completed
20190402 05:58:58.265 - DEBUG - Traceback (most recent call last):
  None
20190402 05:58:58.265 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:58:58.265 - INFO - +------- END KW: Utils.Check Property Value (1013)
20190402 05:59:03.266 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:03.267 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:03.269 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:03.269 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:03.270 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:59:03.270 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:03.271 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:03.271 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:03.271 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:03.271 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:03.272 - INFO - &{result_dict} = { stdout= }
20190402 05:59:03.272 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:59:03.272 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:03.272 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:03.272 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:03.272 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:03.273 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:03.273 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:59:03.273 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:03.273 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:03.273 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:03.273 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:03.283 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:03.283 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:59:03.283 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:04.293 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:04.293 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:04.294 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1010)
20190402 05:59:04.294 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:04.294 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:04.294 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:04.294 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:04.294 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:04.295 - INFO - ${clean_out} = postinstall
20190402 05:59:04.295 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:59:04.295 - INFO - ${output} = postinstall
20190402 05:59:04.295 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:04.295 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:04.295 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:04.297 - INFO - echo $?
20190402 05:59:04.297 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:59:04.297 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:04.297 - INFO - 0
20190402 05:59:04.297 - INFO - ${rc} = 0
20190402 05:59:04.297 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:59:04.297 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:04.297 - INFO - 0
20190402 05:59:04.298 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:59:04.298 - INFO - ${rc} = 0
20190402 05:59:04.298 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:59:04.298 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:04.298 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:04.298 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:04.299 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:04.299 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:04.299 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:04.299 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:04.299 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:59:04.299 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:04.299 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:59:04.299 - INFO - +--------- END KW: Utils.Run Command (1029)
20190402 05:59:04.299 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:04.300 - INFO - ${value} = postinstall
20190402 05:59:04.300 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:59:04.300 - INFO - ${current_value} = postinstall
20190402 05:59:04.300 - INFO - +-------- END KW: Utils.Retrieve Host Property (1033)
20190402 05:59:04.300 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:04.300 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:04.300 - FAIL - postinstall != completed
20190402 05:59:04.300 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:04.300 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:04.301 - INFO - +------- END KW: Utils.Check Property Value (1034)
20190402 05:59:09.301 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:09.303 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:09.304 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:09.305 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:09.306 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:59:09.306 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:09.307 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:09.307 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:09.307 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:09.307 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:09.308 - INFO - &{result_dict} = { stdout= }
20190402 05:59:09.308 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:59:09.308 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:09.308 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:09.308 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:09.308 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:09.309 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:09.309 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:59:09.309 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:09.309 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:09.309 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:09.309 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:09.319 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:09.319 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:59:09.320 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:10.365 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:10.365 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:10.365 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1045)
20190402 05:59:10.365 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:10.366 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:10.366 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:10.366 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:10.366 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:10.366 - INFO - ${clean_out} = postinstall
20190402 05:59:10.366 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:10.366 - INFO - ${output} = postinstall
20190402 05:59:10.366 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:10.367 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:10.367 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:10.368 - INFO - echo $?
20190402 05:59:10.368 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:59:10.369 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:10.369 - INFO - 0
20190402 05:59:10.369 - INFO - ${rc} = 0
20190402 05:59:10.369 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:59:10.369 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:10.369 - INFO - 0
20190402 05:59:10.369 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:10.369 - INFO - ${rc} = 0
20190402 05:59:10.369 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:59:10.369 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:10.370 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:10.370 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:10.370 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:10.370 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:10.370 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:10.371 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:10.371 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:59:10.371 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:10.371 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:59:10.371 - INFO - +--------- END KW: Utils.Run Command (1065)
20190402 05:59:10.371 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:10.371 - INFO - ${value} = postinstall
20190402 05:59:10.371 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:10.371 - INFO - ${current_value} = postinstall
20190402 05:59:10.372 - INFO - +-------- END KW: Utils.Retrieve Host Property (1068)
20190402 05:59:10.372 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:10.372 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:10.372 - FAIL - postinstall != completed
20190402 05:59:10.372 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:10.372 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:10.372 - INFO - +------- END KW: Utils.Check Property Value (1071)
20190402 05:59:15.373 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:15.374 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:15.376 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:15.377 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:15.377 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:59:15.377 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:15.379 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:15.380 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:59:15.380 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:15.381 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:15.383 - INFO - &{result_dict} = { stdout= }
20190402 05:59:15.383 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:59:15.384 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:15.385 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:15.385 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:15.387 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:59:15.387 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:15.388 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (7)
20190402 05:59:15.388 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:15.388 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:15.389 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:59:15.389 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:15.416 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:15.417 - INFO - +---------- END KW: SSHLibrary.Write (27)
20190402 05:59:15.417 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:16.401 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:16.402 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:16.402 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (985)
20190402 05:59:16.402 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:16.402 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:16.402 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:16.402 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:16.403 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:16.403 - INFO - ${clean_out} = postinstall
20190402 05:59:16.403 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:16.403 - INFO - ${output} = postinstall
20190402 05:59:16.403 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:16.403 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:16.403 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:16.405 - INFO - echo $?
20190402 05:59:16.405 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:59:16.405 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:16.405 - INFO - 0
20190402 05:59:16.406 - INFO - ${rc} = 0
20190402 05:59:16.406 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:59:16.406 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:16.406 - INFO - 0
20190402 05:59:16.406 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:16.406 - INFO - ${rc} = 0
20190402 05:59:16.406 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:59:16.406 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:16.407 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:16.407 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:16.407 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:16.407 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:16.407 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:16.407 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:16.407 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:59:16.408 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:16.408 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:59:16.408 - INFO - +--------- END KW: Utils.Run Command (1031)
20190402 05:59:16.408 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:16.408 - INFO - ${value} = postinstall
20190402 05:59:16.408 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:16.408 - INFO - ${current_value} = postinstall
20190402 05:59:16.408 - INFO - +-------- END KW: Utils.Retrieve Host Property (1034)
20190402 05:59:16.408 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:16.409 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:16.409 - FAIL - postinstall != completed
20190402 05:59:16.409 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:16.409 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 05:59:16.409 - INFO - +------- END KW: Utils.Check Property Value (1036)
20190402 05:59:21.410 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:21.411 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:21.412 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:21.413 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:21.414 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:59:21.414 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:21.415 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:21.415 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:21.415 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:21.415 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:21.416 - INFO - &{result_dict} = { stdout= }
20190402 05:59:21.416 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:59:21.416 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:21.416 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:21.416 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:21.416 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:21.417 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:21.417 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:59:21.417 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:21.417 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:21.417 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:21.417 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:21.428 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:21.429 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:59:21.429 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:22.449 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:22.449 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:22.449 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1020)
20190402 05:59:22.449 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:22.450 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:22.450 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:22.450 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:22.450 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:22.450 - INFO - ${clean_out} = postinstall
20190402 05:59:22.450 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:22.450 - INFO - ${output} = postinstall
20190402 05:59:22.450 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:22.451 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:22.451 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:22.452 - INFO - echo $?
20190402 05:59:22.452 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:59:22.453 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:22.453 - INFO - 0
20190402 05:59:22.453 - INFO - ${rc} = 0
20190402 05:59:22.453 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:59:22.453 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:22.453 - INFO - 0
20190402 05:59:22.453 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:22.453 - INFO - ${rc} = 0
20190402 05:59:22.453 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:59:22.453 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:22.454 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:22.454 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:22.454 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:22.454 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:22.454 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:22.455 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:22.455 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:59:22.455 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:22.455 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:59:22.455 - INFO - +--------- END KW: Utils.Run Command (1041)
20190402 05:59:22.455 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:22.455 - INFO - ${value} = postinstall
20190402 05:59:22.455 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:22.455 - INFO - ${current_value} = postinstall
20190402 05:59:22.456 - INFO - +-------- END KW: Utils.Retrieve Host Property (1044)
20190402 05:59:22.456 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:22.456 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:22.456 - FAIL - postinstall != completed
20190402 05:59:22.456 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:22.456 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:22.456 - INFO - +------- END KW: Utils.Check Property Value (1046)
20190402 05:59:27.457 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:27.458 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:27.459 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:27.460 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:27.461 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:59:27.461 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:27.462 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:27.463 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:27.463 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:27.463 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:27.463 - INFO - &{result_dict} = { stdout= }
20190402 05:59:27.463 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:59:27.463 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:27.464 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:27.464 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:27.464 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:27.464 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:27.464 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:59:27.464 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:27.464 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:27.464 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:27.464 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:27.476 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:27.476 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 05:59:27.476 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:28.562 - INFO - postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:28.562 - INFO - ${output} = postinstall
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:28.562 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1086)
20190402 05:59:28.562 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:28.562 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:28.563 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:28.563 - INFO - +----------- END KW: String.Get Line (1)
20190402 05:59:28.563 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:28.563 - INFO - ${clean_out} = postinstall
20190402 05:59:28.563 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:28.563 - INFO - ${output} = postinstall
20190402 05:59:28.564 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:59:28.564 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:28.564 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:28.565 - INFO - echo $?
20190402 05:59:28.566 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:59:28.566 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:28.566 - INFO - 0
20190402 05:59:28.566 - INFO - ${rc} = 0
20190402 05:59:28.566 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:59:28.566 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:28.566 - INFO - 0
20190402 05:59:28.566 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:28.566 - INFO - ${rc} = 0
20190402 05:59:28.566 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:59:28.566 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:28.567 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:28.567 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:28.567 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:28.567 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:28.567 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:28.568 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:28.568 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: postinstall
20190402 05:59:28.568 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:28.568 - INFO - ${result} = {u'stdout': u'postinstall', u'stderr': u'', u'rc': u'0'}
20190402 05:59:28.568 - INFO - +--------- END KW: Utils.Run Command (1107)
20190402 05:59:28.568 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:28.568 - INFO - ${value} = postinstall
20190402 05:59:28.568 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:28.568 - INFO - ${current_value} = postinstall
20190402 05:59:28.569 - INFO - +-------- END KW: Utils.Retrieve Host Property (1110)
20190402 05:59:28.569 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:28.569 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:28.569 - FAIL - postinstall != completed
20190402 05:59:28.569 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:28.569 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:28.569 - INFO - +------- END KW: Utils.Check Property Value (1112)
20190402 05:59:33.570 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:33.571 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:33.573 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:33.574 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:33.574 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:59:33.574 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:33.575 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:33.575 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:33.575 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:33.575 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:33.576 - INFO - &{result_dict} = { stdout= }
20190402 05:59:33.576 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:59:33.576 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:33.576 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:33.576 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:33.576 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:33.576 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:33.577 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 05:59:33.577 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:33.577 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:33.577 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:33.577 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:33.587 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:33.588 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 05:59:33.588 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:34.585 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:34.585 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:34.585 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (997)
20190402 05:59:34.585 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:34.586 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:34.586 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:34.586 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:34.586 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:34.586 - INFO - ${clean_out} = booting
20190402 05:59:34.586 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:34.586 - INFO - ${output} = booting
20190402 05:59:34.587 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:34.587 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:34.587 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:34.588 - INFO - echo $?
20190402 05:59:34.589 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:59:34.589 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:34.589 - INFO - 0
20190402 05:59:34.589 - INFO - ${rc} = 0
20190402 05:59:34.589 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:59:34.589 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:34.589 - INFO - 0
20190402 05:59:34.589 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:34.589 - INFO - ${rc} = 0
20190402 05:59:34.589 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:59:34.590 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:34.590 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:34.590 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:34.590 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 05:59:34.590 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:34.591 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 05:59:34.591 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:34.591 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 05:59:34.591 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:34.591 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 05:59:34.591 - INFO - +--------- END KW: Utils.Run Command (1017)
20190402 05:59:34.591 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:34.591 - INFO - ${value} = booting
20190402 05:59:34.591 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:34.592 - INFO - ${current_value} = booting
20190402 05:59:34.592 - INFO - +-------- END KW: Utils.Retrieve Host Property (1021)
20190402 05:59:34.592 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:34.592 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:34.592 - FAIL - booting != completed
20190402 05:59:34.592 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:34.592 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:34.592 - INFO - +------- END KW: Utils.Check Property Value (1022)
20190402 05:59:39.593 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:39.595 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:39.596 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:39.597 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:39.597 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:59:39.597 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:39.598 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:39.599 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:59:39.599 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:39.599 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:39.599 - INFO - &{result_dict} = { stdout= }
20190402 05:59:39.599 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 05:59:39.599 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:39.600 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:59:39.600 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:39.600 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:39.600 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:39.600 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:59:39.600 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:39.600 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:39.601 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:59:39.601 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:39.611 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:39.611 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:59:39.611 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:40.677 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:40.678 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:40.678 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1067)
20190402 05:59:40.678 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:40.678 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:40.678 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:40.678 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:40.679 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:40.679 - INFO - ${clean_out} = booting
20190402 05:59:40.679 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:40.679 - INFO - ${output} = booting
20190402 05:59:40.679 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:40.679 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:40.679 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:40.680 - INFO - echo $?
20190402 05:59:40.681 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:59:40.681 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:40.681 - INFO - 0
20190402 05:59:40.681 - INFO - ${rc} = 0
20190402 05:59:40.681 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:59:40.681 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:40.681 - INFO - 0
20190402 05:59:40.681 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:40.682 - INFO - ${rc} = 0
20190402 05:59:40.682 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:59:40.682 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:40.682 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:40.683 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:59:40.683 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:40.683 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:40.683 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:40.683 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:40.683 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 05:59:40.683 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:40.683 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 05:59:40.683 - INFO - +--------- END KW: Utils.Run Command (1086)
20190402 05:59:40.684 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:40.684 - INFO - ${value} = booting
20190402 05:59:40.684 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:40.684 - INFO - ${current_value} = booting
20190402 05:59:40.684 - INFO - +-------- END KW: Utils.Retrieve Host Property (1089)
20190402 05:59:40.684 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:40.684 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:40.684 - FAIL - booting != completed
20190402 05:59:40.684 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:40.684 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:40.685 - INFO - +------- END KW: Utils.Check Property Value (1092)
20190402 05:59:45.685 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:45.687 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:45.688 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:45.689 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:45.690 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 05:59:45.690 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:45.691 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:45.691 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:45.691 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:45.691 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:45.691 - INFO - &{result_dict} = { stdout= }
20190402 05:59:45.692 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:59:45.692 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:45.692 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:45.692 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:45.692 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:45.692 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:45.692 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:59:45.693 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:45.693 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:45.693 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:45.693 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:45.703 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:45.703 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:59:45.703 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:46.699 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:46.699 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:46.699 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (996)
20190402 05:59:46.700 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:46.700 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:46.700 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:46.700 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:46.700 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:46.700 - INFO - ${clean_out} = booting
20190402 05:59:46.701 - INFO - +----------- END KW: String.Remove String (1)
20190402 05:59:46.701 - INFO - ${output} = booting
20190402 05:59:46.701 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:46.701 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:46.701 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:46.702 - INFO - echo $?
20190402 05:59:46.702 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:59:46.702 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:46.703 - INFO - 0
20190402 05:59:46.703 - INFO - ${rc} = 0
20190402 05:59:46.703 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:59:46.703 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:46.703 - INFO - 0
20190402 05:59:46.703 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:46.703 - INFO - ${rc} = 0
20190402 05:59:46.703 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:59:46.703 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:46.704 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:46.704 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:46.704 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:46.704 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:46.704 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:46.704 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:46.705 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 05:59:46.705 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 05:59:46.705 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 05:59:46.705 - INFO - +--------- END KW: Utils.Run Command (1015)
20190402 05:59:46.705 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:46.706 - INFO - ${value} = booting
20190402 05:59:46.706 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:59:46.706 - INFO - ${current_value} = booting
20190402 05:59:46.706 - INFO - +-------- END KW: Utils.Retrieve Host Property (1019)
20190402 05:59:46.706 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:46.706 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:46.706 - FAIL - booting != completed
20190402 05:59:46.706 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:46.707 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:46.707 - INFO - +------- END KW: Utils.Check Property Value (1022)
20190402 05:59:51.708 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:51.709 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:51.710 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:51.711 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:51.712 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:59:51.712 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:51.713 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:51.714 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 05:59:51.715 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:51.716 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:51.717 - INFO - &{result_dict} = { stdout= }
20190402 05:59:51.717 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 05:59:51.718 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:51.719 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:59:51.719 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:51.720 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 05:59:51.721 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:51.721 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 05:59:51.721 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:51.722 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:51.722 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 05:59:51.722 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:51.750 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:51.751 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 05:59:51.751 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:52.756 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:52.756 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:52.756 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1005)
20190402 05:59:52.756 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:52.757 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:52.757 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:52.757 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:52.757 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:52.757 - INFO - ${clean_out} = booting
20190402 05:59:52.757 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:52.758 - INFO - ${output} = booting
20190402 05:59:52.758 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 05:59:52.758 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:52.758 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:52.760 - INFO - echo $?
20190402 05:59:52.760 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 05:59:52.760 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:52.760 - INFO - 0
20190402 05:59:52.760 - INFO - ${rc} = 0
20190402 05:59:52.760 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 05:59:52.760 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:52.760 - INFO - 0
20190402 05:59:52.761 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 05:59:52.761 - INFO - ${rc} = 0
20190402 05:59:52.761 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 05:59:52.761 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:52.761 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:52.762 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:52.762 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:52.762 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:52.762 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:52.762 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:52.762 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 05:59:52.762 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:52.762 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 05:59:52.762 - INFO - +--------- END KW: Utils.Run Command (1050)
20190402 05:59:52.762 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:52.763 - INFO - ${value} = booting
20190402 05:59:52.763 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 05:59:52.763 - INFO - ${current_value} = booting
20190402 05:59:52.763 - INFO - +-------- END KW: Utils.Retrieve Host Property (1054)
20190402 05:59:52.763 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:52.763 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:52.763 - FAIL - booting != completed
20190402 05:59:52.763 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:52.763 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:52.764 - INFO - +------- END KW: Utils.Check Property Value (1056)
20190402 05:59:57.764 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 05:59:57.766 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 05:59:57.768 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 05:59:57.769 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 05:59:57.769 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 05:59:57.769 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 05:59:57.770 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 05:59:57.770 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 05:59:57.770 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 05:59:57.770 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 05:59:57.771 - INFO - &{result_dict} = { stdout= }
20190402 05:59:57.771 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 05:59:57.771 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 05:59:57.771 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:57.771 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 05:59:57.771 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:57.771 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 05:59:57.772 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 05:59:57.772 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 05:59:57.772 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:57.772 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 05:59:57.772 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 05:59:57.782 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 05:59:57.782 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 05:59:57.783 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 05:59:58.793 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:58.793 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:58.793 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1011)
20190402 05:59:58.793 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 05:59:58.794 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 05:59:58.794 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 05:59:58.794 - INFO - +----------- END KW: String.Get Line (0)
20190402 05:59:58.794 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 05:59:58.794 - INFO - ${clean_out} = booting
20190402 05:59:58.794 - INFO - +----------- END KW: String.Remove String (0)
20190402 05:59:58.794 - INFO - ${output} = booting
20190402 05:59:58.794 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 05:59:58.795 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 05:59:58.795 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 05:59:58.796 - INFO - echo $?
20190402 05:59:58.796 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 05:59:58.796 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 05:59:58.797 - INFO - 0
20190402 05:59:58.797 - INFO - ${rc} = 0
20190402 05:59:58.797 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 05:59:58.797 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 05:59:58.797 - INFO - 0
20190402 05:59:58.797 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 05:59:58.797 - INFO - ${rc} = 0
20190402 05:59:58.797 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 05:59:58.797 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 05:59:58.798 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 05:59:58.798 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:58.798 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 05:59:58.798 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 05:59:58.798 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 05:59:58.799 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 05:59:58.799 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 05:59:58.799 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 05:59:58.799 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 05:59:58.799 - INFO - +--------- END KW: Utils.Run Command (1030)
20190402 05:59:58.799 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 05:59:58.799 - INFO - ${value} = booting
20190402 05:59:58.799 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 05:59:58.799 - INFO - ${current_value} = booting
20190402 05:59:58.799 - INFO - +-------- END KW: Utils.Retrieve Host Property (1033)
20190402 05:59:58.800 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 05:59:58.800 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 05:59:58.800 - FAIL - booting != completed
20190402 05:59:58.800 - DEBUG - Traceback (most recent call last):
  None
20190402 05:59:58.800 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 05:59:58.800 - INFO - +------- END KW: Utils.Check Property Value (1036)
20190402 06:00:03.801 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:03.802 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:03.804 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:03.805 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:03.805 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:03.805 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:03.806 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:03.806 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:00:03.806 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:03.806 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:03.807 - INFO - &{result_dict} = { stdout= }
20190402 06:00:03.807 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:00:03.807 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:03.807 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:03.807 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:03.807 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:03.808 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:03.808 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:00:03.808 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:03.808 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:03.808 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:00:03.808 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:03.818 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:03.818 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 06:00:03.818 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:04.842 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:04.842 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:04.843 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1024)
20190402 06:00:04.843 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:04.843 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:04.843 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:04.843 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:04.843 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:04.844 - INFO - ${clean_out} = booting
20190402 06:00:04.844 - INFO - +----------- END KW: String.Remove String (1)
20190402 06:00:04.844 - INFO - ${output} = booting
20190402 06:00:04.844 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:04.844 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:04.844 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:04.846 - INFO - echo $?
20190402 06:00:04.846 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:04.846 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:04.846 - INFO - 0
20190402 06:00:04.846 - INFO - ${rc} = 0
20190402 06:00:04.846 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:04.846 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:04.846 - INFO - 0
20190402 06:00:04.847 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:04.847 - INFO - ${rc} = 0
20190402 06:00:04.847 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:04.847 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:04.847 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:04.847 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:04.847 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:00:04.848 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:04.848 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:04.848 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:04.848 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:04.848 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:04.848 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:04.848 - INFO - +--------- END KW: Utils.Run Command (1043)
20190402 06:00:04.848 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:04.849 - INFO - ${value} = booting
20190402 06:00:04.849 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 06:00:04.849 - INFO - ${current_value} = booting
20190402 06:00:04.849 - INFO - +-------- END KW: Utils.Retrieve Host Property (1047)
20190402 06:00:04.849 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:04.849 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:04.849 - FAIL - booting != completed
20190402 06:00:04.849 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:04.849 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:00:04.849 - INFO - +------- END KW: Utils.Check Property Value (1048)
20190402 06:00:09.850 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:09.851 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:09.853 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:09.853 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:09.854 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 06:00:09.854 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:09.855 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:09.857 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 06:00:09.857 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:09.858 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:09.859 - INFO - &{result_dict} = { stdout= }
20190402 06:00:09.860 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:00:09.860 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:09.861 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:09.861 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:09.862 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:09.862 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:09.863 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 06:00:09.863 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:09.863 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:09.863 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:00:09.864 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:09.892 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:09.892 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 06:00:09.892 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:10.913 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:10.913 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:10.913 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1021)
20190402 06:00:10.914 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:10.914 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:10.914 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:10.914 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:10.914 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:10.914 - INFO - ${clean_out} = booting
20190402 06:00:10.914 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:00:10.915 - INFO - ${output} = booting
20190402 06:00:10.915 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:10.915 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:10.915 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:10.916 - INFO - echo $?
20190402 06:00:10.916 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 06:00:10.916 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:10.916 - INFO - 0
20190402 06:00:10.917 - INFO - ${rc} = 0
20190402 06:00:10.917 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:00:10.917 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:10.917 - INFO - 0
20190402 06:00:10.917 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:10.917 - INFO - ${rc} = 0
20190402 06:00:10.917 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 06:00:10.917 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:10.917 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:10.918 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:10.918 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:00:10.918 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:10.918 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:10.918 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:10.918 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:10.918 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:10.919 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:10.919 - INFO - +--------- END KW: Utils.Run Command (1065)
20190402 06:00:10.919 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:10.919 - INFO - ${value} = booting
20190402 06:00:10.919 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:00:10.919 - INFO - ${current_value} = booting
20190402 06:00:10.919 - INFO - +-------- END KW: Utils.Retrieve Host Property (1068)
20190402 06:00:10.919 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:10.920 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:10.920 - FAIL - booting != completed
20190402 06:00:10.920 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:10.920 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:00:10.920 - INFO - +------- END KW: Utils.Check Property Value (1070)
20190402 06:00:15.921 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:15.922 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:15.923 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:15.924 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:15.925 - INFO - +--------- END KW: BuiltIn.Catenate (2)
20190402 06:00:15.925 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:15.926 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:15.926 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:00:15.926 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:15.926 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:15.927 - INFO - &{result_dict} = { stdout= }
20190402 06:00:15.927 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:00:15.927 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:15.927 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:15.927 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:15.927 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:15.928 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:15.928 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:00:15.928 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:15.928 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:15.928 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:00:15.928 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:15.937 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:15.938 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 06:00:15.938 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:16.936 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:16.936 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:16.936 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (998)
20190402 06:00:16.936 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:16.937 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:16.937 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:16.937 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:16.937 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:16.937 - INFO - ${clean_out} = booting
20190402 06:00:16.937 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:00:16.937 - INFO - ${output} = booting
20190402 06:00:16.938 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:16.938 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:16.938 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:16.939 - INFO - echo $?
20190402 06:00:16.939 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 06:00:16.940 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:16.940 - INFO - 0
20190402 06:00:16.940 - INFO - ${rc} = 0
20190402 06:00:16.940 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:16.940 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:16.940 - INFO - 0
20190402 06:00:16.940 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:16.940 - INFO - ${rc} = 0
20190402 06:00:16.940 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 06:00:16.940 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:16.941 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:16.941 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:16.941 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:00:16.941 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:16.941 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:16.942 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:16.942 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:16.942 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 06:00:16.942 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:16.942 - INFO - +--------- END KW: Utils.Run Command (1017)
20190402 06:00:16.942 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:16.942 - INFO - ${value} = booting
20190402 06:00:16.942 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:00:16.942 - INFO - ${current_value} = booting
20190402 06:00:16.943 - INFO - +-------- END KW: Utils.Retrieve Host Property (1020)
20190402 06:00:16.943 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:16.943 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:16.943 - FAIL - booting != completed
20190402 06:00:16.943 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:16.943 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:00:16.943 - INFO - +------- END KW: Utils.Check Property Value (1022)
20190402 06:00:21.944 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:21.945 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:21.947 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:21.948 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:21.948 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:21.948 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:21.949 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:21.949 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:00:21.949 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:21.949 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:21.950 - INFO - &{result_dict} = { stdout= }
20190402 06:00:21.950 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:00:21.950 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:21.950 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:21.950 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:21.950 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:21.951 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:21.951 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:00:21.951 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:21.951 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:21.951 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:00:21.951 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:21.963 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:21.963 - INFO - +---------- END KW: SSHLibrary.Write (12)
20190402 06:00:21.963 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:22.995 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:22.995 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:22.995 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1032)
20190402 06:00:22.996 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:22.996 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:22.996 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:22.996 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:22.996 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:22.997 - INFO - ${clean_out} = booting
20190402 06:00:22.997 - INFO - +----------- END KW: String.Remove String (1)
20190402 06:00:22.997 - INFO - ${output} = booting
20190402 06:00:22.997 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:22.997 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:22.997 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:22.999 - INFO - echo $?
20190402 06:00:22.999 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:22.999 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:22.999 - INFO - 0
20190402 06:00:22.999 - INFO - ${rc} = 0
20190402 06:00:22.999 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:22.999 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:22.999 - INFO - 0
20190402 06:00:22.999 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:23.000 - INFO - ${rc} = 0
20190402 06:00:23.000 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:23.000 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:23.000 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:23.000 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:23.000 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:00:23.001 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:23.001 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:23.001 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:23.001 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:23.001 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:23.001 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:23.001 - INFO - +--------- END KW: Utils.Run Command (1053)
20190402 06:00:23.001 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:23.002 - INFO - ${value} = booting
20190402 06:00:23.002 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 06:00:23.002 - INFO - ${current_value} = booting
20190402 06:00:23.002 - INFO - +-------- END KW: Utils.Retrieve Host Property (1057)
20190402 06:00:23.002 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:23.002 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:23.002 - FAIL - booting != completed
20190402 06:00:23.002 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:23.002 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:00:23.002 - INFO - +------- END KW: Utils.Check Property Value (1058)
20190402 06:00:28.003 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:28.005 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:28.006 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:28.007 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:28.007 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:28.007 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:28.008 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:28.009 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:00:28.009 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:28.009 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:28.009 - INFO - &{result_dict} = { stdout= }
20190402 06:00:28.009 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:00:28.009 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:28.010 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:28.010 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:28.010 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:28.010 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:28.010 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:00:28.010 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:28.011 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:28.011 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 06:00:28.011 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:28.021 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:28.021 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 06:00:28.021 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:29.013 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:29.013 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:29.013 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (992)
20190402 06:00:29.013 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:29.013 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:29.014 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:29.014 - INFO - +----------- END KW: String.Get Line (1)
20190402 06:00:29.014 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:29.014 - INFO - ${clean_out} = booting
20190402 06:00:29.014 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:00:29.014 - INFO - ${output} = booting
20190402 06:00:29.014 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:29.014 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:29.014 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:29.016 - INFO - echo $?
20190402 06:00:29.016 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:29.016 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:29.016 - INFO - 0
20190402 06:00:29.016 - INFO - ${rc} = 0
20190402 06:00:29.017 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:29.017 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:29.017 - INFO - 0
20190402 06:00:29.017 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:29.017 - INFO - ${rc} = 0
20190402 06:00:29.017 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:29.017 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:29.018 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:29.018 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:29.018 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:00:29.018 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:29.018 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:29.018 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:29.018 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:29.019 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:29.019 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:29.019 - INFO - +--------- END KW: Utils.Run Command (1012)
20190402 06:00:29.019 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:29.019 - INFO - ${value} = booting
20190402 06:00:29.019 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:00:29.019 - INFO - ${current_value} = booting
20190402 06:00:29.019 - INFO - +-------- END KW: Utils.Retrieve Host Property (1014)
20190402 06:00:29.019 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:29.020 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:29.020 - FAIL - booting != completed
20190402 06:00:29.020 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:29.020 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:00:29.020 - INFO - +------- END KW: Utils.Check Property Value (1017)
20190402 06:00:34.021 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:34.022 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:34.023 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:34.024 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:34.025 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:34.025 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:34.025 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:34.026 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:00:34.026 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:34.026 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:34.026 - INFO - &{result_dict} = { stdout= }
20190402 06:00:34.026 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:00:34.027 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:34.027 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:34.027 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:34.027 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:34.027 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:34.027 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:00:34.027 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:34.028 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:34.028 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 06:00:34.028 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:34.039 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:34.039 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 06:00:34.039 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:35.057 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:35.057 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:35.058 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1018)
20190402 06:00:35.058 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:35.058 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:35.058 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:35.059 - INFO - +----------- END KW: String.Get Line (1)
20190402 06:00:35.059 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:35.059 - INFO - ${clean_out} = booting
20190402 06:00:35.059 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:00:35.059 - INFO - ${output} = booting
20190402 06:00:35.059 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:35.059 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:35.059 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:35.061 - INFO - echo $?
20190402 06:00:35.061 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:35.061 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:35.061 - INFO - 0
20190402 06:00:35.061 - INFO - ${rc} = 0
20190402 06:00:35.061 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:35.062 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:35.062 - INFO - 0
20190402 06:00:35.062 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:35.062 - INFO - ${rc} = 0
20190402 06:00:35.062 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:35.062 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:35.062 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:35.063 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:35.063 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:00:35.063 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:35.063 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:35.063 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:35.063 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:35.063 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:35.063 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:35.064 - INFO - +--------- END KW: Utils.Run Command (1038)
20190402 06:00:35.064 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:35.064 - INFO - ${value} = booting
20190402 06:00:35.064 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:00:35.064 - INFO - ${current_value} = booting
20190402 06:00:35.064 - INFO - +-------- END KW: Utils.Retrieve Host Property (1042)
20190402 06:00:35.064 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:35.064 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:35.064 - FAIL - booting != completed
20190402 06:00:35.064 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:35.065 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:00:35.065 - INFO - +------- END KW: Utils.Check Property Value (1044)
20190402 06:00:40.065 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:40.067 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:40.068 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:40.069 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:40.069 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:40.070 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:40.070 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:40.071 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:00:40.071 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:40.071 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:40.071 - INFO - &{result_dict} = { stdout= }
20190402 06:00:40.071 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:00:40.072 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:40.072 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:40.072 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:40.072 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:40.072 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:40.072 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:00:40.072 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:40.073 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:40.073 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 06:00:40.073 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:40.083 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:40.083 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 06:00:40.083 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:41.115 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:41.115 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:41.115 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1032)
20190402 06:00:41.115 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:41.116 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:41.116 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:41.116 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:41.116 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:41.116 - INFO - ${clean_out} = booting
20190402 06:00:41.116 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:00:41.116 - INFO - ${output} = booting
20190402 06:00:41.116 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:41.116 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:41.117 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:41.118 - INFO - echo $?
20190402 06:00:41.118 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 06:00:41.118 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:41.119 - INFO - 0
20190402 06:00:41.119 - INFO - ${rc} = 0
20190402 06:00:41.119 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:00:41.119 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:41.119 - INFO - 0
20190402 06:00:41.120 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 06:00:41.120 - INFO - ${rc} = 0
20190402 06:00:41.120 - INFO - +---------- END KW: Utils.Get Return Code (4)
20190402 06:00:41.120 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:41.120 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:41.120 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:41.121 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:00:41.121 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:41.121 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:41.121 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:41.121 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:41.121 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:41.121 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:41.121 - INFO - +--------- END KW: Utils.Run Command (1051)
20190402 06:00:41.121 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:41.122 - INFO - ${value} = booting
20190402 06:00:41.122 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 06:00:41.122 - INFO - ${current_value} = booting
20190402 06:00:41.122 - INFO - +-------- END KW: Utils.Retrieve Host Property (1055)
20190402 06:00:41.122 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:41.122 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:41.122 - FAIL - booting != completed
20190402 06:00:41.122 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:41.122 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:00:41.123 - INFO - +------- END KW: Utils.Check Property Value (1057)
20190402 06:00:46.123 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:46.125 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:46.126 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:46.127 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:46.127 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:46.128 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:46.129 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:46.130 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:00:46.130 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:46.131 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:46.133 - INFO - &{result_dict} = { stdout= }
20190402 06:00:46.133 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:00:46.134 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:46.135 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:46.135 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:46.136 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:46.137 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:46.137 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (7)
20190402 06:00:46.137 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:46.138 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:46.138 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 06:00:46.138 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:46.166 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:46.166 - INFO - +---------- END KW: SSHLibrary.Write (28)
20190402 06:00:46.167 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:47.166 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:47.166 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:47.167 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (999)
20190402 06:00:47.167 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:47.167 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:47.167 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:47.167 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:47.167 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:47.168 - INFO - ${clean_out} = booting
20190402 06:00:47.168 - INFO - +----------- END KW: String.Remove String (1)
20190402 06:00:47.168 - INFO - ${output} = booting
20190402 06:00:47.168 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:47.168 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:47.168 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:47.169 - INFO - echo $?
20190402 06:00:47.170 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:47.170 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:47.170 - INFO - 0
20190402 06:00:47.170 - INFO - ${rc} = 0
20190402 06:00:47.170 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:47.170 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:47.170 - INFO - 0
20190402 06:00:47.170 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:47.171 - INFO - ${rc} = 0
20190402 06:00:47.171 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:47.171 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:47.171 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:47.172 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:47.172 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:00:47.172 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:47.172 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:47.172 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:47.172 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:47.172 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:47.172 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:47.173 - INFO - +--------- END KW: Utils.Run Command (1044)
20190402 06:00:47.173 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:47.173 - INFO - ${value} = booting
20190402 06:00:47.173 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:00:47.173 - INFO - ${current_value} = booting
20190402 06:00:47.173 - INFO - +-------- END KW: Utils.Retrieve Host Property (1048)
20190402 06:00:47.173 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:47.173 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:47.173 - FAIL - booting != completed
20190402 06:00:47.173 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:47.174 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:00:47.174 - INFO - +------- END KW: Utils.Check Property Value (1051)
20190402 06:00:52.174 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:52.176 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:52.177 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:52.178 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:52.178 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:52.179 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:52.179 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:52.180 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:00:52.180 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:52.180 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:52.180 - INFO - &{result_dict} = { stdout= }
20190402 06:00:52.180 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:00:52.180 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:52.181 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:00:52.181 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:52.181 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:52.181 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:52.181 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:00:52.181 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:52.182 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:52.182 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 06:00:52.182 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:52.192 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:52.192 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 06:00:52.192 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:53.262 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:53.262 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:53.263 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1070)
20190402 06:00:53.263 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:53.263 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:53.263 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:53.263 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:53.263 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:53.264 - INFO - ${clean_out} = booting
20190402 06:00:53.264 - INFO - +----------- END KW: String.Remove String (1)
20190402 06:00:53.264 - INFO - ${output} = booting
20190402 06:00:53.264 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:53.264 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:53.264 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:53.266 - INFO - echo $?
20190402 06:00:53.266 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:53.266 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:53.266 - INFO - 0
20190402 06:00:53.266 - INFO - ${rc} = 0
20190402 06:00:53.266 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:00:53.266 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:53.266 - INFO - 0
20190402 06:00:53.267 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 06:00:53.267 - INFO - ${rc} = 0
20190402 06:00:53.267 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:53.267 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:53.267 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:53.267 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:53.267 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:00:53.268 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:53.268 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:53.268 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:53.268 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:53.268 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:00:53.268 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:53.268 - INFO - +--------- END KW: Utils.Run Command (1089)
20190402 06:00:53.268 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:53.269 - INFO - ${value} = booting
20190402 06:00:53.269 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 06:00:53.269 - INFO - ${current_value} = booting
20190402 06:00:53.269 - INFO - +-------- END KW: Utils.Retrieve Host Property (1093)
20190402 06:00:53.269 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:53.269 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:53.269 - FAIL - booting != completed
20190402 06:00:53.269 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:53.270 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:00:53.270 - INFO - +------- END KW: Utils.Check Property Value (1096)
20190402 06:00:58.271 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:00:58.272 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:00:58.273 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:00:58.274 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:00:58.274 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:00:58.275 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:00:58.275 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:00:58.276 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:00:58.276 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:00:58.276 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:00:58.276 - INFO - &{result_dict} = { stdout= }
20190402 06:00:58.276 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:00:58.277 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:00:58.277 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:58.277 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:00:58.277 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:58.277 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:00:58.277 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:00:58.277 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:00:58.278 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:58.278 - INFO - +---------- END KW: SSHLibrary.Read (1)
20190402 06:00:58.278 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:00:58.287 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:00:58.287 - INFO - +---------- END KW: SSHLibrary.Write (9)
20190402 06:00:58.288 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:00:59.303 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:59.303 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:59.304 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1016)
20190402 06:00:59.304 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:00:59.304 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:00:59.304 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:00:59.304 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:00:59.304 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:00:59.305 - INFO - ${clean_out} = booting
20190402 06:00:59.305 - INFO - +----------- END KW: String.Remove String (1)
20190402 06:00:59.305 - INFO - ${output} = booting
20190402 06:00:59.305 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:00:59.305 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:00:59.305 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:00:59.307 - INFO - echo $?
20190402 06:00:59.307 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:00:59.307 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:00:59.307 - INFO - 0
20190402 06:00:59.307 - INFO - ${rc} = 0
20190402 06:00:59.308 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:00:59.308 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:00:59.308 - INFO - 0
20190402 06:00:59.308 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:00:59.308 - INFO - ${rc} = 0
20190402 06:00:59.308 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:00:59.308 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:00:59.309 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:00:59.309 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:59.309 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:00:59.309 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:00:59.309 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:00:59.309 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:00:59.309 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:00:59.310 - INFO - +---------- END KW: Collections.Log Dictionary (1)
20190402 06:00:59.310 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:00:59.310 - INFO - +--------- END KW: Utils.Run Command (1035)
20190402 06:00:59.310 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:00:59.310 - INFO - ${value} = booting
20190402 06:00:59.310 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:00:59.310 - INFO - ${current_value} = booting
20190402 06:00:59.310 - INFO - +-------- END KW: Utils.Retrieve Host Property (1038)
20190402 06:00:59.310 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:00:59.311 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:00:59.311 - FAIL - booting != completed
20190402 06:00:59.311 - DEBUG - Traceback (most recent call last):
  None
20190402 06:00:59.311 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:00:59.311 - INFO - +------- END KW: Utils.Check Property Value (1041)
20190402 06:01:04.312 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:01:04.313 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:01:04.315 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:04.316 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:01:04.316 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:01:04.316 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:01:04.317 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:04.317 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:04.317 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:04.317 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:04.318 - INFO - &{result_dict} = { stdout= }
20190402 06:01:04.318 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:04.318 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:04.318 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:04.318 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:04.318 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:04.319 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:04.319 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:04.319 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:01:04.319 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:04.319 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:01:04.319 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:04.330 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:01:04.330 - INFO - +---------- END KW: SSHLibrary.Write (11)
20190402 06:01:04.330 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:05.414 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:05.414 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:05.414 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1084)
20190402 06:01:05.414 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:05.415 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:05.415 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:05.415 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:01:05.415 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:05.415 - INFO - ${clean_out} = booting
20190402 06:01:05.415 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:01:05.415 - INFO - ${output} = booting
20190402 06:01:05.416 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:05.416 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:01:05.416 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:05.418 - INFO - echo $?
20190402 06:01:05.418 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:01:05.418 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:05.418 - INFO - 0
20190402 06:01:05.418 - INFO - ${rc} = 0
20190402 06:01:05.418 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:05.418 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:05.418 - INFO - 0
20190402 06:01:05.418 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:01:05.419 - INFO - ${rc} = 0
20190402 06:01:05.419 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:01:05.419 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:05.419 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:05.419 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:05.419 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:05.420 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:05.420 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:05.420 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:05.420 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:01:05.420 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:01:05.420 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:01:05.420 - INFO - +--------- END KW: Utils.Run Command (1104)
20190402 06:01:05.420 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:05.421 - INFO - ${value} = booting
20190402 06:01:05.421 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 06:01:05.421 - INFO - ${current_value} = booting
20190402 06:01:05.421 - INFO - +-------- END KW: Utils.Retrieve Host Property (1108)
20190402 06:01:05.421 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:05.421 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:05.421 - FAIL - booting != completed
20190402 06:01:05.421 - DEBUG - Traceback (most recent call last):
  None
20190402 06:01:05.421 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:05.421 - INFO - +------- END KW: Utils.Check Property Value (1109)
20190402 06:01:10.422 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:01:10.424 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:01:10.425 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:10.426 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:01:10.426 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:01:10.426 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:01:10.428 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:10.428 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:10.428 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:10.428 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:10.429 - INFO - &{result_dict} = { stdout= }
20190402 06:01:10.429 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:10.429 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:10.429 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:10.429 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:10.429 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:10.430 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:10.430 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:10.430 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:01:10.430 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:10.430 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:01:10.430 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:10.443 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:01:10.443 - INFO - +---------- END KW: SSHLibrary.Write (13)
20190402 06:01:10.443 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:11.451 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:11.451 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:11.451 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1008)
20190402 06:01:11.451 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:11.452 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:11.452 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:11.452 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:01:11.452 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:11.452 - INFO - ${clean_out} = booting
20190402 06:01:11.452 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:01:11.452 - INFO - ${output} = booting
20190402 06:01:11.452 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:11.453 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:01:11.453 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:11.454 - INFO - echo $?
20190402 06:01:11.454 - INFO - +----------- END KW: SSHLibrary.Write (1)
20190402 06:01:11.454 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:11.455 - INFO - 0
20190402 06:01:11.455 - INFO - ${rc} = 0
20190402 06:01:11.455 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:11.455 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:11.455 - INFO - 0
20190402 06:01:11.455 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:01:11.455 - INFO - ${rc} = 0
20190402 06:01:11.455 - INFO - +---------- END KW: Utils.Get Return Code (2)
20190402 06:01:11.456 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:11.456 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:11.456 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:11.456 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:11.456 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:11.457 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:11.457 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:11.457 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:01:11.457 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:01:11.457 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:01:11.457 - INFO - +--------- END KW: Utils.Run Command (1031)
20190402 06:01:11.457 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:11.457 - INFO - ${value} = booting
20190402 06:01:11.457 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:11.458 - INFO - ${current_value} = booting
20190402 06:01:11.458 - INFO - +-------- END KW: Utils.Retrieve Host Property (1034)
20190402 06:01:11.458 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:11.458 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:11.458 - FAIL - booting != completed
20190402 06:01:11.458 - DEBUG - Traceback (most recent call last):
  None
20190402 06:01:11.458 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:11.458 - INFO - +------- END KW: Utils.Check Property Value (1036)
20190402 06:01:16.459 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:01:16.460 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:01:16.461 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:16.462 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:01:16.462 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:01:16.463 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:01:16.464 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:16.465 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:16.465 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:16.467 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:16.468 - INFO - &{result_dict} = { stdout= }
20190402 06:01:16.468 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:16.469 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:16.470 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:16.470 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:16.471 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:16.471 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:16.472 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (7)
20190402 06:01:16.472 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:01:16.472 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:16.473 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:01:16.473 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:16.499 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:01:16.499 - INFO - +---------- END KW: SSHLibrary.Write (26)
20190402 06:01:16.499 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:17.500 - INFO - booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:17.500 - INFO - ${output} = booting
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:17.500 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1001)
20190402 06:01:17.501 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:17.501 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:17.501 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:17.501 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:01:17.501 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:17.501 - INFO - ${clean_out} = booting
20190402 06:01:17.501 - INFO - +----------- END KW: String.Remove String (0)
20190402 06:01:17.502 - INFO - ${output} = booting
20190402 06:01:17.502 - INFO - +---------- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:17.502 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:01:17.502 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:17.504 - INFO - echo $?
20190402 06:01:17.504 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:01:17.504 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:17.504 - INFO - 0
20190402 06:01:17.504 - INFO - ${rc} = 0
20190402 06:01:17.504 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:17.504 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:17.505 - INFO - 0
20190402 06:01:17.505 - INFO - +----------- END KW: BuiltIn.Log (1)
20190402 06:01:17.505 - INFO - ${rc} = 0
20190402 06:01:17.505 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:01:17.505 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:17.505 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:17.506 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:17.506 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:17.506 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:17.506 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:17.506 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:17.506 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: booting
20190402 06:01:17.506 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:01:17.506 - INFO - ${result} = {u'stdout': u'booting', u'stderr': u'', u'rc': u'0'}
20190402 06:01:17.506 - INFO - +--------- END KW: Utils.Run Command (1043)
20190402 06:01:17.507 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:17.507 - INFO - ${value} = booting
20190402 06:01:17.507 - INFO - +--------- END KW: Collections.Get From Dictionary (1)
20190402 06:01:17.507 - INFO - ${current_value} = booting
20190402 06:01:17.507 - INFO - +-------- END KW: Utils.Retrieve Host Property (1047)
20190402 06:01:17.507 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:17.507 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:17.507 - FAIL - booting != completed
20190402 06:01:17.507 - DEBUG - Traceback (most recent call last):
  None
20190402 06:01:17.507 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:17.508 - INFO - +------- END KW: Utils.Check Property Value (1049)
20190402 06:01:22.508 - INFO - +------- START KW: Utils.Check Property Value [ ${name} | install_state | completed ]
20190402 06:01:22.510 - INFO - +-------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:01:22.511 - INFO - +--------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:22.512 - INFO - ${system_cmd} = system host-show controller-1|grep -w install_state|awk '{print$4}'
20190402 06:01:22.512 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 06:01:22.513 - INFO - +--------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:01:22.514 - INFO - +---------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:22.514 - INFO - +---------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:22.514 - INFO - +---------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:22.514 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:22.515 - INFO - &{result_dict} = { stdout= }
20190402 06:01:22.515 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:22.515 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:22.515 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:22.515 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:22.515 - INFO - +----------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:22.516 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:22.516 - INFO - +---------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:22.516 - INFO - +---------- START KW: SSHLibrary.Read [ ]
20190402 06:01:22.516 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:22.516 - INFO - +---------- END KW: SSHLibrary.Read (0)
20190402 06:01:22.516 - INFO - +---------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:22.526 - INFO - system host-show controller-1|grep -w  install_state|awk '{print$4}'
20190402 06:01:22.526 - INFO - +---------- END KW: SSHLibrary.Write (10)
20190402 06:01:22.526 - INFO - +---------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:23.529 - INFO - completed
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.529 - INFO - ${output} = completed
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.530 - INFO - +---------- END KW: SSHLibrary.Read Until Prompt (1004)
20190402 06:01:23.530 - INFO - +---------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:23.530 - INFO - +----------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:23.530 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.530 - INFO - +----------- END KW: String.Get Line (0)
20190402 06:01:23.530 - INFO - +----------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:23.531 - INFO - ${clean_out} = completed
20190402 06:01:23.531 - INFO - +----------- END KW: String.Remove String (1)
20190402 06:01:23.531 - INFO - ${output} = completed
20190402 06:01:23.531 - INFO - +---------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:23.531 - INFO - +---------- START KW: Utils.Get Return Code [ ]
20190402 06:01:23.531 - INFO - +----------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:23.533 - INFO - echo $?
20190402 06:01:23.533 - INFO - +----------- END KW: SSHLibrary.Write (2)
20190402 06:01:23.533 - INFO - +----------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:23.533 - INFO - 0
20190402 06:01:23.533 - INFO - ${rc} = 0
20190402 06:01:23.534 - INFO - +----------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:23.534 - INFO - +----------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:23.534 - INFO - 0
20190402 06:01:23.534 - INFO - +----------- END KW: BuiltIn.Log (0)
20190402 06:01:23.534 - INFO - ${rc} = 0
20190402 06:01:23.534 - INFO - +---------- END KW: Utils.Get Return Code (3)
20190402 06:01:23.534 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:23.534 - INFO - +----------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:23.535 - INFO - +----------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:23.535 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:23.535 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:23.535 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.535 - INFO - +---------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:23.535 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: completed
20190402 06:01:23.535 - INFO - +---------- END KW: Collections.Log Dictionary (0)
20190402 06:01:23.536 - INFO - ${result} = {u'stdout': u'completed', u'stderr': u'', u'rc': u'0'}
20190402 06:01:23.536 - INFO - +--------- END KW: Utils.Run Command (1023)
20190402 06:01:23.536 - INFO - +--------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:23.536 - INFO - ${value} = completed
20190402 06:01:23.536 - INFO - +--------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:23.536 - INFO - ${current_value} = completed
20190402 06:01:23.536 - INFO - +-------- END KW: Utils.Retrieve Host Property (1026)
20190402 06:01:23.536 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:23.536 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:23.537 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:23.537 - INFO - +------- END KW: Utils.Check Property Value (1029)
20190402 06:01:23.537 - INFO - +------ END KW: BuiltIn.Wait Until Keyword Succeeds (535404)
20190402 06:01:23.537 - INFO - +----- END KW: ${node} = controller-1 (535405)
20190402 06:01:23.537 - INFO - +---- END KW: ${node} IN [ @{nodes_list} ] (535405)
20190402 06:01:23.537 - INFO - +--- END KW: provisioning.Install Remaining Nodes Baremetal (541157)
20190402 06:01:23.537 - INFO - +-- END KW: BuiltIn.Run Keyword If (541157)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:01:23.537 - INFO - +-- START KW: Utils.Configure Data Interfaces [ ${second_controller} | ${data0if} | ${data1if} | ${physnet0} | ${physnet1} | ${mtu} ]
20190402 06:01:23.538 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-1' | Run Keywords | Provide OAM Network Interface | ${host} | AND | Setup Cluster-host Interfaces | ${host} ]
20190402 06:01:23.538 - INFO - +---- START KW: BuiltIn.Run Keywords [ Provide OAM Network Interface | ${host} | AND | Setup Cluster-host Interfaces | ${host} ]
20190402 06:01:23.538 - INFO - +----- START KW: Utils.Provide OAM Network Interface [ ${host} ]
20190402 06:01:23.538 - INFO - +------ START KW: BuiltIn.Set Variable [ oam ]
20190402 06:01:23.538 - INFO - ${net_type} = oam
20190402 06:01:23.538 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 06:01:23.539 - INFO - +------ START KW: BuiltIn.Set Variable [ platform ]
20190402 06:01:23.539 - INFO - ${class} = platform
20190402 06:01:23.539 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 06:01:23.539 - INFO - +------ START KW: Utils.Get OAM Interface Name [ ]
20190402 06:01:23.539 - INFO - +------- START KW: Utils.Get Release Version [ ]
20190402 06:01:23.539 - INFO - +-------- START KW: BuiltIn.Catenate [ cat /etc/build.info | | grep SW_VERSION | awk '{ split($1, v, "="); print v[2]}' ]
20190402 06:01:23.539 - INFO - ${cmd_current_version} = cat /etc/build.info | grep SW_VERSION | awk '{ split($1, v, "="); print v[2]}'
20190402 06:01:23.539 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 06:01:23.540 - INFO - +-------- START KW: Utils.Run Command [ ${cmd_current_version} | True ]
20190402 06:01:23.540 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:23.540 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:23.540 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:23.541 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:23.541 - INFO - &{result_dict} = { stdout= }
20190402 06:01:23.541 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:23.541 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:23.541 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.541 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:23.542 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:23.542 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:23.542 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:23.542 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 06:01:23.542 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.542 - INFO - +--------- END KW: SSHLibrary.Read (0)
20190402 06:01:23.542 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:23.552 - INFO - cat /etc/build.info | grep SW_VERSION  | awk '{ split($1, v, "="); print v[2]}'
20190402 06:01:23.552 - INFO - +--------- END KW: SSHLibrary.Write (10)
20190402 06:01:23.552 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:23.553 - INFO - "19.01"
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.553 - INFO - ${output} = "19.01"
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.553 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 06:01:23.553 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:23.553 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:23.554 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.554 - INFO - +---------- END KW: String.Get Line (1)
20190402 06:01:23.554 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:23.554 - INFO - ${clean_out} = "19.01"
20190402 06:01:23.554 - INFO - +---------- END KW: String.Remove String (0)
20190402 06:01:23.554 - INFO - ${output} = "19.01"
20190402 06:01:23.554 - INFO - +--------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:23.554 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 06:01:23.554 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:23.556 - INFO - echo $?
20190402 06:01:23.556 - INFO - +---------- END KW: SSHLibrary.Write (2)
20190402 06:01:23.556 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:23.557 - INFO - 0
20190402 06:01:23.557 - INFO - ${rc} = 0
20190402 06:01:23.557 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:23.557 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:23.557 - INFO - 0
20190402 06:01:23.557 - INFO - +---------- END KW: BuiltIn.Log (0)
20190402 06:01:23.557 - INFO - ${rc} = 0
20190402 06:01:23.557 - INFO - +--------- END KW: Utils.Get Return Code (3)
20190402 06:01:23.557 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:23.558 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:23.558 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.558 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:23.558 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:23.558 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.558 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:23.558 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: "19.01"
20190402 06:01:23.559 - INFO - +--------- END KW: Collections.Log Dictionary (0)
20190402 06:01:23.559 - INFO - &{result} = { stdout="19.01" | stderr= | rc=0 }
20190402 06:01:23.559 - INFO - +-------- END KW: Utils.Run Command (19)
20190402 06:01:23.559 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:23.559 - INFO - ${current_version} = "19.01"
20190402 06:01:23.559 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:23.559 - INFO - ${sw_version} = 19.01
20190402 06:01:23.559 - INFO - +------- END KW: Utils.Get Release Version (20)
20190402 06:01:23.559 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | cat /opt/platform/config/${sw_version}/cgcs_config | grep EXTERNAL_OAM_INTERFACE_NAME | awk '{ split($1, v, "="); print v[2]}' ]
20190402 06:01:23.560 - INFO - ${command} = cat /opt/platform/config/19.01/cgcs_config|grep EXTERNAL_OAM_INTERFACE_NAME|awk '{ split($1, v, "="); print v[2]}'
20190402 06:01:23.560 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 06:01:23.560 - INFO - +------- START KW: Utils.Run Command [ ${command} | True ]
20190402 06:01:23.560 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:23.560 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:23.560 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:23.561 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:23.561 - INFO - &{result_dict} = { stdout= }
20190402 06:01:23.561 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:23.561 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:23.561 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.561 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:23.562 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:23.562 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:23.562 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:23.562 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 06:01:23.562 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.562 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 06:01:23.562 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:23.564 - INFO - cat /opt/platform/config/19.01/cgcs_co nfig|grep EXTERNAL_OAM_INTERFACE_NAME|awk '{ split($1, v, "="); print v[2]}'
20190402 06:01:23.564 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:01:23.565 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:23.567 - INFO - eno1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.567 - INFO - ${output} = eno1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.567 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (2)
20190402 06:01:23.567 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:23.567 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:23.568 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.568 - INFO - +--------- END KW: String.Get Line (1)
20190402 06:01:23.568 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:23.568 - INFO - ${clean_out} = eno1
20190402 06:01:23.568 - INFO - +--------- END KW: String.Remove String (0)
20190402 06:01:23.568 - INFO - ${output} = eno1
20190402 06:01:23.568 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:23.568 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 06:01:23.568 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:23.570 - INFO - echo $?
20190402 06:01:23.570 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 06:01:23.570 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:23.570 - INFO - 0
20190402 06:01:23.570 - INFO - ${rc} = 0
20190402 06:01:23.570 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:23.570 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:23.571 - INFO - 0
20190402 06:01:23.571 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 06:01:23.571 - INFO - ${rc} = 0
20190402 06:01:23.571 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 06:01:23.571 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:23.571 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:23.572 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:23.572 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:23.572 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:23.572 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.572 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:23.572 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: eno1
20190402 06:01:23.572 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 06:01:23.572 - INFO - ${result} = {u'stdout': u'eno1', u'stderr': u'', u'rc': u'0'}
20190402 06:01:23.572 - INFO - +------- END KW: Utils.Run Command (12)
20190402 06:01:23.573 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:23.573 - INFO - ${oam_if} = eno1
20190402 06:01:23.573 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:23.573 - INFO - ${oam_if} = eno1
20190402 06:01:23.573 - INFO - +------ END KW: Utils.Get OAM Interface Name (34)
20190402 06:01:23.573 - INFO - +------ START KW: Utils.Modify Host Interface [ ${net_type} | ${class} | ${controller} | ${oam_if} ]
20190402 06:01:23.573 - INFO - +------- START KW: BuiltIn.Catenate [ system host-if-modify | -n oam0 -c ${class} --networks ${net_type} | ${host} | ${interface} ]
20190402 06:01:23.574 - INFO - ${system_cmd} = system host-if-modify -n oam0 -c platform --networks oam controller-1 eno1
20190402 06:01:23.574 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 06:01:23.574 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} | True ]
20190402 06:01:23.574 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:23.574 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:23.574 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:23.575 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:23.575 - INFO - &{result_dict} = { stdout= }
20190402 06:01:23.575 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:23.575 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:23.575 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:23.575 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:23.576 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:23.576 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:23.576 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:23.576 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 06:01:23.576 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:23.576 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 06:01:23.576 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:23.587 - INFO - system host-if-modify -n oam0 -c platf orm --networks oam controller-1 eno1
20190402 06:01:23.587 - INFO - +-------- END KW: SSHLibrary.Write (11)
20190402 06:01:23.587 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:25.368 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | oam0                                 |
| iftype       | ethernet                             |
| ports        | [u'eno1']                            |
| datanetworks | []                                   |
| imac         | a4:bf:01:55:03:ba                    |
| imtu         | 1500                                 |
| ifclass      | platform                             |
| networks     | oam                                  |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | ec158d70-2710-41fa-8e3e-ef75e5764e47 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.636810+00:00     |
| updated_at   | 2019-04-02T11:50:09.673004+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | static                               |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:25.368 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | oam0        ...
20190402 06:01:25.368 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1781)
20190402 06:01:25.369 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:25.369 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:25.369 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:25.369 - INFO - +--------- END KW: String.Get Line (0)
20190402 06:01:25.369 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:25.370 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | oam0        ...
20190402 06:01:25.370 - INFO - +--------- END KW: String.Remove String (1)
20190402 06:01:25.370 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | oam0        ...
20190402 06:01:25.370 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:25.370 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 06:01:25.370 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:25.372 - INFO - echo $?
20190402 06:01:25.372 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 06:01:25.372 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:25.372 - INFO - 0
20190402 06:01:25.372 - INFO - ${rc} = 0
20190402 06:01:25.372 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:25.372 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:25.373 - INFO - 0
20190402 06:01:25.373 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 06:01:25.373 - INFO - ${rc} = 0
20190402 06:01:25.373 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 06:01:25.373 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:25.373 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:25.374 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:25.374 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:25.374 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:25.374 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:25.374 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:25.374 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | oam0                                 |
| iftype       | ethernet                             |
| ports        | [u'eno1']                            |
| datanetworks | []                                   |
| imac         | a4:bf:01:55:03:ba                    |
| imtu         | 1500                                 |
| ifclass      | platform                             |
| networks     | oam                                  |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | ec158d70-2710-41fa-8e3e-ef75e5764e47 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.636810+00:00     |
| updated_at   | 2019-04-02T11:50:09.673004+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | static                               |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
20190402 06:01:25.374 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 06:01:25.374 - INFO - +------- END KW: Utils.Run Command (1800)
20190402 06:01:25.374 - INFO - +------ END KW: Utils.Modify Host Interface (1801)
20190402 06:01:25.375 - INFO - +----- END KW: Utils.Provide OAM Network Interface (1837)
20190402 06:01:25.375 - INFO - +----- START KW: Utils.Setup Cluster-host Interfaces [ ${host} ]
20190402 06:01:25.375 - INFO - +------ START KW: Utils.Run Command [ system host-if-modify ${host} mgmt0 --networks cluster-host | True ]
20190402 06:01:25.375 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:25.376 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:25.376 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:25.376 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:25.376 - INFO - &{result_dict} = { stdout= }
20190402 06:01:25.376 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:25.376 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:25.377 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:25.377 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:25.377 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:25.377 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:25.377 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:25.377 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:01:25.377 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:25.377 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:01:25.378 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:25.387 - INFO - system host-if-modify controller-1 mgm t0 --networks cluster-host
20190402 06:01:25.387 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:01:25.387 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:27.248 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | mgmt0                                |
| iftype       | ethernet                             |
| ports        | [u'eno2']                            |
| datanetworks | []                                   |
| imac         | a4:bf:01:55:03:bb                    |
| imtu         | 1500                                 |
| ifclass      | platform                             |
| networks     | mgmt,cluster-host                    |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | ca2bd5bd-bfa6-4bb0-93ab-efe0697a7b20 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.730286+00:00     |
| updated_at   | 2019-04-02T11:50:11.456640+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | static                               |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:27.248 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | mgmt0       ...
20190402 06:01:27.248 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1861)
20190402 06:01:27.248 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:27.249 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:27.249 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:27.249 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:01:27.249 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:27.249 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | mgmt0       ...
20190402 06:01:27.249 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:01:27.250 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | mgmt0       ...
20190402 06:01:27.250 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:27.250 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:01:27.250 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:27.252 - INFO - echo $?
20190402 06:01:27.252 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:01:27.252 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:27.252 - INFO - 0
20190402 06:01:27.252 - INFO - ${rc} = 0
20190402 06:01:27.252 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:27.252 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:27.252 - INFO - 0
20190402 06:01:27.252 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:01:27.253 - INFO - ${rc} = 0
20190402 06:01:27.253 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:01:27.253 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:27.253 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:27.253 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:27.253 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:27.254 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:27.254 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:27.254 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:27.254 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | mgmt0                                |
| iftype       | ethernet                             |
| ports        | [u'eno2']                            |
| datanetworks | []                                   |
| imac         | a4:bf:01:55:03:bb                    |
| imtu         | 1500                                 |
| ifclass      | platform                             |
| networks     | mgmt,cluster-host                    |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | ca2bd5bd-bfa6-4bb0-93ab-efe0697a7b20 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.730286+00:00     |
| updated_at   | 2019-04-02T11:50:11.456640+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | static                               |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
20190402 06:01:27.254 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:01:27.254 - INFO - +------ END KW: Utils.Run Command (1879)
20190402 06:01:27.254 - INFO - +----- END KW: Utils.Setup Cluster-host Interfaces (1879)
20190402 06:01:27.254 - INFO - +---- END KW: BuiltIn.Run Keywords (3716)
20190402 06:01:27.254 - INFO - +--- END KW: BuiltIn.Run Keyword If (3716)
20190402 06:01:27.255 - INFO - +--- START KW: Utils.Get Interface Information [ ${host} | ${data0if} ]
20190402 06:01:27.255 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-port-list ${host} --nowrap | grep ${interface} | awk '{ print $2,$4,$8}' ]
20190402 06:01:27.255 - INFO - ${cmd} = system host-port-list controller-1 --nowrap|grep enp24s0f0|awk '{ print $2,$4,$8}'
20190402 06:01:27.255 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:27.255 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:27.256 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:27.256 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:27.256 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:27.256 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:27.257 - INFO - &{result_dict} = { stdout= }
20190402 06:01:27.257 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:27.257 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:27.257 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:27.257 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:27.258 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:27.258 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:27.258 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:27.258 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:27.258 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:27.258 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:27.258 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:27.261 - INFO - system host-port-list controller-1 --n owrap|grep enp24s0f0|awk '{ print $2,$4,$8}'
20190402 06:01:27.261 - INFO - +----- END KW: SSHLibrary.Write (3)
20190402 06:01:27.261 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:28.296 - INFO - 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:28.296 - INFO - ${output} = 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:28.297 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1035)
20190402 06:01:28.297 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:28.297 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:28.297 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:28.297 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:28.298 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:28.298 - INFO - ${clean_out} = 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0
20190402 06:01:28.298 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:28.298 - INFO - ${output} = 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0
20190402 06:01:28.298 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:28.298 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:28.298 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:28.300 - INFO - echo $?
20190402 06:01:28.300 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:28.300 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:28.300 - INFO - 0
20190402 06:01:28.301 - INFO - ${rc} = 0
20190402 06:01:28.301 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:28.301 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:28.301 - INFO - 0
20190402 06:01:28.301 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:28.301 - INFO - ${rc} = 0
20190402 06:01:28.301 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:28.301 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:28.302 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:28.302 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:28.302 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:28.302 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:28.302 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:28.303 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:28.303 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0
20190402 06:01:28.303 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:28.303 - INFO - ${info} = {u'stdout': u'737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0', u'stderr': u'', u'rc': u'0'}
20190402 06:01:28.303 - INFO - +---- END KW: Utils.Run Command (1048)
20190402 06:01:28.303 - INFO - +---- START KW: Utils.Convert Response To List [ ${info} ]
20190402 06:01:28.303 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:28.304 - INFO - ${response} = 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 enp24s0f0 0000:18:00.0
20190402 06:01:28.304 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 06:01:28.304 - INFO - +----- START KW: String.Split String [ ${response} ]
20190402 06:01:28.304 - INFO - @{res_in_list} = [ 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59 | enp24s0f0 | 0000:18:00.0 ]
20190402 06:01:28.304 - INFO - +----- END KW: String.Split String (0)
20190402 06:01:28.304 - INFO - ${info} = [u'737a48da-0d5a-4d0d-aab1-d5a09fa6ae59', u'enp24s0f0', u'0000:18:00.0']
20190402 06:01:28.304 - INFO - +---- END KW: Utils.Convert Response To List (1)
20190402 06:01:28.304 - INFO - ${iface_info} = [u'737a48da-0d5a-4d0d-aab1-d5a09fa6ae59', u'enp24s0f0', u'0000:18:00.0']
20190402 06:01:28.304 - INFO - +--- END KW: Utils.Get Interface Information (1049)
20190402 06:01:28.305 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 0 ]
20190402 06:01:28.305 - INFO - ${data0portuuid} = 737a48da-0d5a-4d0d-aab1-d5a09fa6ae59
20190402 06:01:28.305 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:01:28.305 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 1 ]
20190402 06:01:28.305 - INFO - ${data0portname} = enp24s0f0
20190402 06:01:28.305 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:01:28.305 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 2 ]
20190402 06:01:28.305 - INFO - ${data0pciaddr} = 0000:18:00.0
20190402 06:01:28.305 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:01:28.306 - INFO - +--- START KW: Utils.Get Interface Information [ ${host} | ${data1if} ]
20190402 06:01:28.306 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-port-list ${host} --nowrap | grep ${interface} | awk '{ print $2,$4,$8}' ]
20190402 06:01:28.306 - INFO - ${cmd} = system host-port-list controller-1 --nowrap|grep enp24s0f1|awk '{ print $2,$4,$8}'
20190402 06:01:28.306 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:28.306 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:28.307 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:28.307 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:28.307 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:28.307 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:28.308 - INFO - &{result_dict} = { stdout= }
20190402 06:01:28.308 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:28.308 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:28.308 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:28.308 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:28.309 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:28.309 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:28.309 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:28.309 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:28.309 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:28.309 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:28.309 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:28.323 - INFO - system host-port-list controller-1 --n owrap|grep enp24s0f1|awk '{ print $2,$4,$8}'
20190402 06:01:28.323 - INFO - +----- END KW: SSHLibrary.Write (14)
20190402 06:01:28.323 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:29.337 - INFO - 46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:29.337 - INFO - ${output} = 46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:29.337 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1014)
20190402 06:01:29.337 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:29.338 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:29.338 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:29.338 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:29.338 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:29.338 - INFO - ${clean_out} = 46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1
20190402 06:01:29.338 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:29.339 - INFO - ${output} = 46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1
20190402 06:01:29.339 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:29.339 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:29.339 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:29.340 - INFO - echo $?
20190402 06:01:29.341 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:29.341 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:29.341 - INFO - 0
20190402 06:01:29.341 - INFO - ${rc} = 0
20190402 06:01:29.341 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:29.341 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:29.341 - INFO - 0
20190402 06:01:29.341 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:29.342 - INFO - ${rc} = 0
20190402 06:01:29.342 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:29.342 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:29.342 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:29.342 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:29.342 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:29.342 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:29.343 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 06:01:29.343 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:29.343 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1
20190402 06:01:29.343 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:29.343 - INFO - ${info} = {u'stdout': u'46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1', u'stderr': u'', u'rc': u'0'}
20190402 06:01:29.343 - INFO - +---- END KW: Utils.Run Command (1037)
20190402 06:01:29.343 - INFO - +---- START KW: Utils.Convert Response To List [ ${info} ]
20190402 06:01:29.344 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:29.344 - INFO - ${response} = 46893fa1-c5ce-4cc0-a27d-f98030cca42d enp24s0f1 0000:18:00.1
20190402 06:01:29.344 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 06:01:29.344 - INFO - +----- START KW: String.Split String [ ${response} ]
20190402 06:01:29.344 - INFO - @{res_in_list} = [ 46893fa1-c5ce-4cc0-a27d-f98030cca42d | enp24s0f1 | 0000:18:00.1 ]
20190402 06:01:29.344 - INFO - +----- END KW: String.Split String (0)
20190402 06:01:29.344 - INFO - ${info} = [u'46893fa1-c5ce-4cc0-a27d-f98030cca42d', u'enp24s0f1', u'0000:18:00.1']
20190402 06:01:29.344 - INFO - +---- END KW: Utils.Convert Response To List (1)
20190402 06:01:29.344 - INFO - ${iface_info} = [u'46893fa1-c5ce-4cc0-a27d-f98030cca42d', u'enp24s0f1', u'0000:18:00.1']
20190402 06:01:29.345 - INFO - +--- END KW: Utils.Get Interface Information (1038)
20190402 06:01:29.345 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 0 ]
20190402 06:01:29.345 - INFO - ${data1portuuid} = 46893fa1-c5ce-4cc0-a27d-f98030cca42d
20190402 06:01:29.345 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:01:29.345 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 1 ]
20190402 06:01:29.345 - INFO - ${data1portname} = enp24s0f1
20190402 06:01:29.345 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:01:29.345 - INFO - +--- START KW: Collections.Get From List [ ${iface_info} | 2 ]
20190402 06:01:29.345 - INFO - ${data1pciaddr} = 0000:18:00.1
20190402 06:01:29.345 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:01:29.346 - INFO - +--- START KW: Utils.Get Interface UUID [ ${host} | ${data0portname} ]
20190402 06:01:29.346 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-if-list -a ${host} | grep ${port_name} | awk '{print $2}' ]
20190402 06:01:29.346 - INFO - ${cmd} = system host-if-list -a controller-1|grep enp24s0f0|awk '{print $2}'
20190402 06:01:29.346 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:29.346 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:29.347 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:29.347 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:29.347 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:29.347 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:29.348 - INFO - &{result_dict} = { stdout= }
20190402 06:01:29.348 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:29.348 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:29.348 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:29.348 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:29.348 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:29.349 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:29.349 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:29.349 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:29.349 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:29.349 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:29.349 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:29.351 - INFO - system host-if-list -a controller-1|gr ep enp24s0f0|awk '{print $2}'
20190402 06:01:29.351 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:29.351 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:30.555 - INFO - 85355b1b-deea-49ce-b6c0-e43fc2b1c943
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:30.555 - INFO - ${output} = 85355b1b-deea-49ce-b6c0-e43fc2b1c943
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:30.556 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1204)
20190402 06:01:30.556 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:30.556 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:30.556 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:30.556 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:30.556 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:30.557 - INFO - ${clean_out} = 85355b1b-deea-49ce-b6c0-e43fc2b1c943
20190402 06:01:30.557 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:30.557 - INFO - ${output} = 85355b1b-deea-49ce-b6c0-e43fc2b1c943
20190402 06:01:30.557 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:30.557 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:30.557 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:30.558 - INFO - echo $?
20190402 06:01:30.559 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:30.559 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:30.559 - INFO - 0
20190402 06:01:30.559 - INFO - ${rc} = 0
20190402 06:01:30.559 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:30.559 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:30.560 - INFO - 0
20190402 06:01:30.560 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 06:01:30.560 - INFO - ${rc} = 0
20190402 06:01:30.560 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:30.560 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:30.560 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:30.561 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:30.561 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:30.561 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:30.561 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:30.561 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:30.561 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 85355b1b-deea-49ce-b6c0-e43fc2b1c943
20190402 06:01:30.561 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:30.561 - INFO - ${uuid} = {u'stdout': u'85355b1b-deea-49ce-b6c0-e43fc2b1c943', u'stderr': u'', u'rc': u'0'}
20190402 06:01:30.561 - INFO - +---- END KW: Utils.Run Command (1215)
20190402 06:01:30.562 - INFO - ${data0ifuuid} = 85355b1b-deea-49ce-b6c0-e43fc2b1c943
20190402 06:01:30.562 - INFO - +--- END KW: Utils.Get Interface UUID (1216)
20190402 06:01:30.562 - INFO - +--- START KW: Utils.Get Interface UUID [ ${host} | ${data1portname} ]
20190402 06:01:30.562 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-if-list -a ${host} | grep ${port_name} | awk '{print $2}' ]
20190402 06:01:30.562 - INFO - ${cmd} = system host-if-list -a controller-1|grep enp24s0f1|awk '{print $2}'
20190402 06:01:30.562 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:30.562 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:30.563 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:30.563 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:30.563 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:30.563 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:30.564 - INFO - &{result_dict} = { stdout= }
20190402 06:01:30.564 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:30.564 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:30.564 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:30.564 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:30.565 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:30.565 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:30.565 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:30.565 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:30.565 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:30.565 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:30.565 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:30.567 - INFO - system host-if-list -a controller-1|gr ep enp24s0f1|awk '{print $2}'
20190402 06:01:30.567 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:30.567 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:31.716 - INFO - c836334b-2c07-4687-a09c-a337212a6f06
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:31.716 - INFO - ${output} = c836334b-2c07-4687-a09c-a337212a6f06
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:31.716 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1149)
20190402 06:01:31.716 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:31.717 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:31.717 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:31.717 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:31.717 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:31.717 - INFO - ${clean_out} = c836334b-2c07-4687-a09c-a337212a6f06
20190402 06:01:31.717 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:31.718 - INFO - ${output} = c836334b-2c07-4687-a09c-a337212a6f06
20190402 06:01:31.718 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:31.718 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:31.718 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:31.719 - INFO - echo $?
20190402 06:01:31.720 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:31.720 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:31.720 - INFO - 0
20190402 06:01:31.720 - INFO - ${rc} = 0
20190402 06:01:31.720 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:31.720 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:31.720 - INFO - 0
20190402 06:01:31.720 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:31.720 - INFO - ${rc} = 0
20190402 06:01:31.720 - INFO - +----- END KW: Utils.Get Return Code (2)
20190402 06:01:31.721 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:31.721 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:31.721 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:31.721 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:31.721 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:31.722 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 06:01:31.722 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:31.722 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: c836334b-2c07-4687-a09c-a337212a6f06
20190402 06:01:31.722 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:31.722 - INFO - ${uuid} = {u'stdout': u'c836334b-2c07-4687-a09c-a337212a6f06', u'stderr': u'', u'rc': u'0'}
20190402 06:01:31.722 - INFO - +---- END KW: Utils.Run Command (1160)
20190402 06:01:31.722 - INFO - ${data1ifuuid} = c836334b-2c07-4687-a09c-a337212a6f06
20190402 06:01:31.722 - INFO - +--- END KW: Utils.Get Interface UUID (1160)
20190402 06:01:31.722 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-0' or '${host}'=='compute-0' | Run Keywords | Run Command | system datanetwork-add ${physnet0} vlan | True | AND | Run Command | system datanetwork-add ${physnet1} vlan | True ]
20190402 06:01:31.723 - INFO - +--- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:31.723 - INFO - +--- START KW: Utils.Add Interface To Data Network [ ${mtu} | data0 | ${physnet0} | ${host} | ${data0ifuuid} ]
20190402 06:01:31.723 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${host}'=='controler-0' | -d | -p ]
20190402 06:01:31.723 - INFO - ${option} = -p
20190402 06:01:31.723 - INFO - +---- END KW: BuiltIn.Set Variable If (0)
20190402 06:01:31.724 - INFO - +---- START KW: BuiltIn.Catenate [ system host-if-modify | -m ${mtu} | -n ${if_name} | ${option} ${datanetwork} | -c data | ${host} | ${uuid} ]
20190402 06:01:31.724 - INFO - ${cmd} = system host-if-modify -m 1500 -n data0 -p physnet0 -c data controller-1 85355b1b-deea-49ce-b6c0-e43fc2b1c943
20190402 06:01:31.724 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:31.724 - INFO - +---- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 06:01:31.724 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:31.725 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:31.725 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:31.725 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:31.725 - INFO - &{result_dict} = { stdout= }
20190402 06:01:31.725 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:31.725 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:31.726 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:31.726 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:31.726 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:31.726 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:31.726 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:31.726 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:31.726 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:31.726 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:31.727 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:31.729 - INFO - system host-if-modify -m 1500 -n data0  -p physnet0 -c data controller-1 85355b1b-deea-49ce-b6c0-e43fc2b1c943
20190402 06:01:31.729 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:31.729 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:33.307 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f0']                       |
| datanetworks | [u'physnet0']                        |
| imac         | 3c:fd:fe:be:e0:e4                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | 85355b1b-deea-49ce-b6c0-e43fc2b1c943 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.436439+00:00     |
| updated_at   | 2019-04-02T11:50:17.655715+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:33.307 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0       ...
20190402 06:01:33.307 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1578)
20190402 06:01:33.307 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:33.308 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:33.308 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:33.308 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:33.308 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:33.308 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0       ...
20190402 06:01:33.309 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:33.309 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0       ...
20190402 06:01:33.309 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:33.309 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:33.309 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:33.311 - INFO - echo $?
20190402 06:01:33.311 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:33.311 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:33.311 - INFO - 0
20190402 06:01:33.311 - INFO - ${rc} = 0
20190402 06:01:33.311 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:33.312 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:33.312 - INFO - 0
20190402 06:01:33.312 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:33.312 - INFO - ${rc} = 0
20190402 06:01:33.312 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:33.312 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:33.312 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:33.313 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:33.313 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:33.313 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:33.313 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:33.313 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:33.313 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data0                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f0']                       |
| datanetworks | [u'physnet0']                        |
| imac         | 3c:fd:fe:be:e0:e4                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | 85355b1b-deea-49ce-b6c0-e43fc2b1c943 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.436439+00:00     |
| updated_at   | 2019-04-02T11:50:17.655715+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
20190402 06:01:33.313 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:33.314 - INFO - +---- END KW: Utils.Run Command (1589)
20190402 06:01:33.314 - INFO - +--- END KW: Utils.Add Interface To Data Network (1591)
20190402 06:01:33.314 - INFO - +--- START KW: Utils.Add Interface To Data Network [ ${mtu} | data1 | ${physnet1} | ${host} | ${data1ifuuid} ]
20190402 06:01:33.314 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${host}'=='controler-0' | -d | -p ]
20190402 06:01:33.314 - INFO - ${option} = -p
20190402 06:01:33.314 - INFO - +---- END KW: BuiltIn.Set Variable If (0)
20190402 06:01:33.314 - INFO - +---- START KW: BuiltIn.Catenate [ system host-if-modify | -m ${mtu} | -n ${if_name} | ${option} ${datanetwork} | -c data | ${host} | ${uuid} ]
20190402 06:01:33.315 - INFO - ${cmd} = system host-if-modify -m 1500 -n data1 -p physnet1 -c data controller-1 c836334b-2c07-4687-a09c-a337212a6f06
20190402 06:01:33.315 - INFO - +---- END KW: BuiltIn.Catenate (1)
20190402 06:01:33.315 - INFO - +---- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 06:01:33.315 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:33.316 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:33.316 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:33.316 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:33.316 - INFO - &{result_dict} = { stdout= }
20190402 06:01:33.316 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:33.316 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:33.317 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:33.317 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:33.317 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:33.317 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:33.317 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:33.317 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:33.317 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:33.317 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:33.318 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:33.320 - INFO - system host-if-modify -m 1500 -n data1  -p physnet1 -c data controller-1 c836334b-2c07-4687-a09c-a337212a6f06
20190402 06:01:33.320 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:33.320 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:34.903 - INFO - +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f1']                       |
| datanetworks | [u'physnet1']                        |
| imac         | 3c:fd:fe:be:e0:e5                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | c836334b-2c07-4687-a09c-a337212a6f06 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.541842+00:00     |
| updated_at   | 2019-04-02T11:50:19.250904+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:34.903 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1       ...
20190402 06:01:34.903 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1583)
20190402 06:01:34.903 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:34.904 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:34.904 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:34.904 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:34.904 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:34.904 - INFO - ${clean_out} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1       ...
20190402 06:01:34.904 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:34.904 - INFO - ${output} = +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1       ...
20190402 06:01:34.904 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:34.904 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:34.905 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:34.906 - INFO - echo $?
20190402 06:01:34.906 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:34.906 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:34.907 - INFO - 0
20190402 06:01:34.907 - INFO - ${rc} = 0
20190402 06:01:34.907 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:34.907 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:34.907 - INFO - 0
20190402 06:01:34.907 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:34.907 - INFO - ${rc} = 0
20190402 06:01:34.907 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:34.907 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:34.908 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:34.908 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:34.908 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:34.908 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:34.909 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:34.909 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:34.909 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------+--------------------------------------+
| Property     | Value                                |
+--------------+--------------------------------------+
| ifname       | data1                                |
| iftype       | ethernet                             |
| ports        | [u'enp24s0f1']                       |
| datanetworks | [u'physnet1']                        |
| imac         | 3c:fd:fe:be:e0:e5                    |
| imtu         | 1500                                 |
| ifclass      | data                                 |
| networks     |                                      |
| aemode       | None                                 |
| schedpolicy  | None                                 |
| txhashpolicy | None                                 |
| uuid         | c836334b-2c07-4687-a09c-a337212a6f06 |
| ihost_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vlan_id      | None                                 |
| uses         | []                                   |
| used_by      | []                                   |
| created_at   | 2019-04-02T11:49:47.541842+00:00     |
| updated_at   | 2019-04-02T11:50:19.250904+00:00     |
| sriov_numvfs | 0                                    |
| ipv4_mode    | disabled                             |
| ipv6_mode    | disabled                             |
| accelerated  | [True]                               |
+--------------+--------------------------------------+
20190402 06:01:34.909 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:34.909 - INFO - +---- END KW: Utils.Run Command (1594)
20190402 06:01:34.909 - INFO - +--- END KW: Utils.Add Interface To Data Network (1595)
20190402 06:01:34.909 - INFO - +-- END KW: Utils.Configure Data Interfaces (11372)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:01:34.909 - INFO - +-- START KW: Utils.Enable Containerized Services [ ${second_controller} ]
20190402 06:01:34.910 - INFO - +--- START KW: BuiltIn.Evaluate [ "controller" in """${host}""" ]
20190402 06:01:34.910 - INFO - ${is_controller} = True
20190402 06:01:34.910 - INFO - +--- END KW: BuiltIn.Evaluate (0)
20190402 06:01:34.910 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==True | Run Command | system host-label-assign ${host} openstack-control-plane=enabled | True ]
20190402 06:01:34.910 - INFO - +---- START KW: Utils.Run Command [ system host-label-assign ${host} openstack-control-plane=enabled | True ]
20190402 06:01:34.911 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:34.911 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:34.911 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:34.911 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:34.912 - INFO - &{result_dict} = { stdout= }
20190402 06:01:34.912 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:34.912 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:34.912 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:34.912 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:34.912 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:34.912 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:34.913 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:34.913 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:34.913 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:34.913 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:34.913 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:34.914 - INFO - system host-label-assign controller-1  openstack-control-plane=enabled
20190402 06:01:34.914 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 06:01:34.915 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:35.987 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | e12da53e-fd74-4d6e-ab3c-c56e1020559f |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | openstack-control-plane              |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:35.987 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | e12da53e-fd74-4d...
20190402 06:01:35.987 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1072)
20190402 06:01:35.987 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:35.988 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:35.988 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:35.988 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:35.988 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:35.988 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | e12da53e-fd74-4d...
20190402 06:01:35.988 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:35.988 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | e12da53e-fd74-4d...
20190402 06:01:35.988 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:35.989 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:35.989 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:35.990 - INFO - echo $?
20190402 06:01:35.991 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:35.991 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:35.991 - INFO - 0
20190402 06:01:35.991 - INFO - ${rc} = 0
20190402 06:01:35.991 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:35.991 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:35.991 - INFO - 0
20190402 06:01:35.991 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:35.992 - INFO - ${rc} = 0
20190402 06:01:35.992 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:35.992 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:35.992 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:35.992 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:35.992 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:35.992 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:35.993 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 06:01:35.993 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:35.993 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | e12da53e-fd74-4d6e-ab3c-c56e1020559f |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | openstack-control-plane              |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 06:01:35.993 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:35.993 - INFO - +---- END KW: Utils.Run Command (1083)
20190402 06:01:35.993 - INFO - +--- END KW: BuiltIn.Run Keyword If (1083)
20190402 06:01:35.993 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}'=='Simplex' or '${CONFIGURATION_TYPE}'=='Duplex' or ${is_controller}==False | Run Keywords | Run Command | system host-label-assign ${host} openstack-compute-node=enabled | True | AND | Run Command | system host-label-assign ${host} openvswitch=enabled | True | AND | Run Command | system host-label-assign ${host} sriov=enabled | True ]
20190402 06:01:35.994 - INFO - +---- START KW: BuiltIn.Run Keywords [ Run Command | system host-label-assign ${host} openstack-compute-node=enabled | True | AND | Run Command | system host-label-assign ${host} openvswitch=enabled | True | AND | Run Command | system host-label-assign ${host} sriov=enabled | True ]
20190402 06:01:35.995 - INFO - +----- START KW: Utils.Run Command [ system host-label-assign ${host} openstack-compute-node=enabled | True ]
20190402 06:01:35.995 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:35.995 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:35.995 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:35.996 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:35.996 - INFO - &{result_dict} = { stdout= }
20190402 06:01:35.996 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:35.996 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:35.996 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:35.996 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:35.997 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:35.997 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:35.997 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:35.997 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:01:35.997 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:35.997 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:01:35.997 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:35.999 - INFO - system host-label-assign controller-1  openstack-compute-node=enabled
20190402 06:01:35.999 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:36.000 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:37.061 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | fea96396-98ed-427b-939e-c131673acfc8 |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | openstack-compute-node               |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:37.062 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | fea96396-98ed-42...
20190402 06:01:37.062 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1063)
20190402 06:01:37.062 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:37.062 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:37.062 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:37.062 - INFO - +------- END KW: String.Get Line (0)
20190402 06:01:37.063 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:37.063 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | fea96396-98ed-42...
20190402 06:01:37.063 - INFO - +------- END KW: String.Remove String (0)
20190402 06:01:37.063 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | fea96396-98ed-42...
20190402 06:01:37.063 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:01:37.063 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:01:37.063 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:37.065 - INFO - echo $?
20190402 06:01:37.065 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:01:37.065 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:37.066 - INFO - 0
20190402 06:01:37.066 - INFO - ${rc} = 0
20190402 06:01:37.066 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:37.066 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:37.066 - INFO - 0
20190402 06:01:37.066 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:01:37.066 - INFO - ${rc} = 0
20190402 06:01:37.066 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:01:37.066 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:37.067 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:37.067 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:37.067 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:37.067 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:37.067 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:37.067 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:37.068 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | fea96396-98ed-427b-939e-c131673acfc8 |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | openstack-compute-node               |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 06:01:37.068 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 06:01:37.068 - INFO - +----- END KW: Utils.Run Command (1073)
20190402 06:01:37.068 - INFO - +----- START KW: Utils.Run Command [ system host-label-assign ${host} openvswitch=enabled | True ]
20190402 06:01:37.068 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:37.069 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:37.069 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:37.069 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:37.069 - INFO - &{result_dict} = { stdout= }
20190402 06:01:37.069 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:37.069 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:37.070 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:37.070 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:37.070 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:37.070 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:37.070 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:37.070 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:01:37.071 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:37.071 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 06:01:37.071 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:37.072 - INFO - system host-label-assign controller-1  openvswitch=enabled
20190402 06:01:37.072 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:37.072 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:38.139 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | c9a19d5d-1095-4685-bfcc-8af6bb276be9 |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | openvswitch                          |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:38.140 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | c9a19d5d-1095-46...
20190402 06:01:38.140 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1068)
20190402 06:01:38.140 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:38.140 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:38.140 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:38.140 - INFO - +------- END KW: String.Get Line (0)
20190402 06:01:38.141 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:38.141 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | c9a19d5d-1095-46...
20190402 06:01:38.141 - INFO - +------- END KW: String.Remove String (0)
20190402 06:01:38.141 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | c9a19d5d-1095-46...
20190402 06:01:38.141 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:01:38.141 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:01:38.141 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:38.143 - INFO - echo $?
20190402 06:01:38.143 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:01:38.143 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:38.143 - INFO - 0
20190402 06:01:38.143 - INFO - ${rc} = 0
20190402 06:01:38.143 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:38.143 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:38.144 - INFO - 0
20190402 06:01:38.144 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 06:01:38.144 - INFO - ${rc} = 0
20190402 06:01:38.144 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:01:38.144 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:38.144 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:38.145 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:38.145 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:38.145 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:38.145 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:38.145 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:38.145 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | c9a19d5d-1095-4685-bfcc-8af6bb276be9 |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | openvswitch                          |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 06:01:38.145 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:01:38.145 - INFO - +----- END KW: Utils.Run Command (1077)
20190402 06:01:38.146 - INFO - +----- START KW: Utils.Run Command [ system host-label-assign ${host} sriov=enabled | True ]
20190402 06:01:38.146 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:38.146 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:38.146 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:38.146 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:38.147 - INFO - &{result_dict} = { stdout= }
20190402 06:01:38.147 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:38.147 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:38.147 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:38.147 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:38.148 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:38.148 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:38.148 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:38.148 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:01:38.148 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:38.148 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:01:38.148 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:38.149 - INFO - system host-label-assign controller-1  sriov=enabled
20190402 06:01:38.150 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:38.150 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:39.207 - INFO - +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 46f512db-2d81-4e68-87d9-3c2b4966b011 |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | sriov                                |
| label_value | enabled                              |
+-------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:39.208 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 46f512db-2d81-4e...
20190402 06:01:39.208 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1058)
20190402 06:01:39.208 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:39.208 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:39.208 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:39.208 - INFO - +------- END KW: String.Get Line (0)
20190402 06:01:39.208 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:39.209 - INFO - ${clean_out} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 46f512db-2d81-4e...
20190402 06:01:39.209 - INFO - +------- END KW: String.Remove String (1)
20190402 06:01:39.209 - INFO - ${output} = +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 46f512db-2d81-4e...
20190402 06:01:39.209 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:01:39.209 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:01:39.209 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:39.211 - INFO - echo $?
20190402 06:01:39.211 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:01:39.211 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:39.211 - INFO - 0
20190402 06:01:39.212 - INFO - ${rc} = 0
20190402 06:01:39.212 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:39.212 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:39.212 - INFO - 0
20190402 06:01:39.212 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:01:39.212 - INFO - ${rc} = 0
20190402 06:01:39.212 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:01:39.212 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:39.213 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:39.213 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:39.213 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:39.213 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:39.213 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:39.213 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:39.213 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------+
| Property    | Value                                |
+-------------+--------------------------------------+
| uuid        | 46f512db-2d81-4e68-87d9-3c2b4966b011 |
| host_uuid   | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| label_key   | sriov                                |
| label_value | enabled                              |
+-------------+--------------------------------------+
20190402 06:01:39.214 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:01:39.214 - INFO - +----- END KW: Utils.Run Command (1068)
20190402 06:01:39.214 - INFO - +---- END KW: BuiltIn.Run Keywords (3220)
20190402 06:01:39.214 - INFO - +--- END KW: BuiltIn.Run Keyword If (3221)
20190402 06:01:39.214 - INFO - +-- END KW: Utils.Enable Containerized Services (4305)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:01:39.214 - INFO - +-- START KW: Utils.Setup Partitions [ ${second_controller} | ${lgv_name} | ${nova_size} | ${cgts_part_size} ]
20190402 06:01:39.214 - INFO - +--- START KW: Utils.Get Root Disk Device [ ${host} ]
20190402 06:01:39.215 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${host} | grep rootfs | awk '{print $4}' ]
20190402 06:01:39.215 - INFO - ${cmd} = system host-show controller-1|grep rootfs|awk '{print $4}'
20190402 06:01:39.215 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:39.215 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:39.215 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:39.216 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:39.216 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:39.216 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:39.216 - INFO - &{result_dict} = { stdout= }
20190402 06:01:39.216 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:39.217 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:39.217 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:39.217 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:39.217 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:39.217 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:39.217 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:39.217 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:39.218 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:39.218 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 06:01:39.218 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:39.219 - INFO - system host-show controller-1|grep roo tfs|awk '{print $4}'
20190402 06:01:39.219 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 06:01:39.219 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:40.244 - INFO - sda
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:40.244 - INFO - ${output} = sda
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:40.245 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1025)
20190402 06:01:40.245 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:40.245 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:40.245 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:40.245 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:40.245 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:40.246 - INFO - ${clean_out} = sda
20190402 06:01:40.246 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:40.246 - INFO - ${output} = sda
20190402 06:01:40.246 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:40.246 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:40.246 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:40.248 - INFO - echo $?
20190402 06:01:40.248 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:40.248 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:40.248 - INFO - 0
20190402 06:01:40.248 - INFO - ${rc} = 0
20190402 06:01:40.248 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:40.248 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:40.249 - INFO - 0
20190402 06:01:40.249 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 06:01:40.249 - INFO - ${rc} = 0
20190402 06:01:40.249 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:40.249 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:40.249 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:40.250 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:40.250 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:40.250 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:40.250 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:40.250 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:40.250 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: sda
20190402 06:01:40.250 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:40.250 - INFO - ${result} = {u'stdout': u'sda', u'stderr': u'', u'rc': u'0'}
20190402 06:01:40.250 - INFO - +---- END KW: Utils.Run Command (1035)
20190402 06:01:40.251 - INFO - +---- START KW: BuiltIn.Set Variable [ ${result.stdout.strip()} ]
20190402 06:01:40.251 - INFO - ${root_disk} = sda
20190402 06:01:40.251 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 06:01:40.251 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-disk-list ${host} --nowrap | grep ${root_disk} | awk '{print $4}' ]
20190402 06:01:40.251 - INFO - ${cmd} = system host-disk-list controller-1 --nowrap|grep sda|awk '{print $4}'
20190402 06:01:40.251 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:40.252 - INFO - +---- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:40.252 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:40.252 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:40.252 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:40.252 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:40.253 - INFO - &{result_dict} = { stdout= }
20190402 06:01:40.253 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:40.253 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:40.253 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:40.253 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:40.253 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:40.254 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:40.254 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:40.254 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:40.254 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:40.254 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:40.254 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:40.256 - INFO - system host-disk-list controller-1 --n owrap|grep sda|awk '{print $4}'
20190402 06:01:40.256 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:40.256 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:41.297 - INFO - /dev/sda
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:41.298 - INFO - ${output} = /dev/sda
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:41.298 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1042)
20190402 06:01:41.298 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:41.298 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:41.298 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:41.298 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:41.298 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:41.299 - INFO - ${clean_out} = /dev/sda
20190402 06:01:41.299 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:41.299 - INFO - ${output} = /dev/sda
20190402 06:01:41.299 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:41.299 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:41.299 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:41.301 - INFO - echo $?
20190402 06:01:41.301 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:41.301 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:41.301 - INFO - 0
20190402 06:01:41.301 - INFO - ${rc} = 0
20190402 06:01:41.301 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:41.301 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:41.301 - INFO - 0
20190402 06:01:41.302 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 06:01:41.302 - INFO - ${rc} = 0
20190402 06:01:41.302 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:41.302 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:41.302 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:41.302 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:41.303 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:41.303 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:41.303 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:41.303 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:41.303 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: /dev/sda
20190402 06:01:41.303 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:41.303 - INFO - ${root_disk_device} = {u'stdout': u'/dev/sda', u'stderr': u'', u'rc': u'0'}
20190402 06:01:41.303 - INFO - +---- END KW: Utils.Run Command (1051)
20190402 06:01:41.304 - INFO - ${root_disk_device} = /dev/sda
20190402 06:01:41.304 - INFO - +--- END KW: Utils.Get Root Disk Device (2090)
20190402 06:01:41.304 - INFO - +--- START KW: Utils.Get Disk List UID [ ${host} | ${root_disk_device} ]
20190402 06:01:41.304 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-disk-list ${host} | grep ${device_node} | awk '{print $2}' ]
20190402 06:01:41.304 - INFO - ${system_cmd} = system host-disk-list controller-1|grep /dev/sda|awk '{print $2}'
20190402 06:01:41.304 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:41.304 - INFO - +---- START KW: Utils.Run Command [ ${system_cmd} | True ]
20190402 06:01:41.305 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:41.305 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:41.305 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:41.305 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:41.306 - INFO - &{result_dict} = { stdout= }
20190402 06:01:41.306 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:41.306 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:41.306 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:41.306 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:41.307 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:41.307 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:41.307 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:41.307 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:41.307 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:41.307 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:41.307 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:41.309 - INFO - system host-disk-list controller-1|gre p /dev/sda|awk '{print $2}'
20190402 06:01:41.309 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:41.309 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:42.367 - INFO - 37ba36e6-9632-4ee8-88af-c64401a4c681
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:42.367 - INFO - ${output} = 37ba36e6-9632-4ee8-88af-c64401a4c681
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:42.367 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1058)
20190402 06:01:42.367 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:42.368 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:42.368 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:42.368 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:42.368 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:42.368 - INFO - ${clean_out} = 37ba36e6-9632-4ee8-88af-c64401a4c681
20190402 06:01:42.368 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:42.368 - INFO - ${output} = 37ba36e6-9632-4ee8-88af-c64401a4c681
20190402 06:01:42.368 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:42.368 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:42.369 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:42.370 - INFO - echo $?
20190402 06:01:42.370 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:42.370 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:42.371 - INFO - 0
20190402 06:01:42.371 - INFO - ${rc} = 0
20190402 06:01:42.371 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:42.371 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:42.371 - INFO - 0
20190402 06:01:42.371 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:42.371 - INFO - ${rc} = 0
20190402 06:01:42.371 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:42.371 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:42.372 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:42.372 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:42.372 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:42.372 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:42.372 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:42.373 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:42.373 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 37ba36e6-9632-4ee8-88af-c64401a4c681
20190402 06:01:42.373 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:01:42.373 - INFO - &{result} = { stdout=37ba36e6-9632-4ee8-88af-c64401a4c681 | stderr= | rc=0 }
20190402 06:01:42.373 - INFO - +---- END KW: Utils.Run Command (1069)
20190402 06:01:42.373 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:42.373 - INFO - ${uid} = 37ba36e6-9632-4ee8-88af-c64401a4c681
20190402 06:01:42.373 - INFO - +---- END KW: Collections.Get From Dictionary (0)
20190402 06:01:42.374 - INFO - ${root_disk_uuid} = 37ba36e6-9632-4ee8-88af-c64401a4c681
20190402 06:01:42.374 - INFO - +--- END KW: Utils.Get Disk List UID (1070)
20190402 06:01:42.374 - INFO - +--- START KW: BuiltIn.Set Variable If [ '${host}'=='controller-0' | Ready | Creating ]
20190402 06:01:42.374 - INFO - ${part_status} = Creating
20190402 06:01:42.374 - INFO - +--- END KW: BuiltIn.Set Variable If (0)
20190402 06:01:42.374 - INFO - +--- START KW: BuiltIn.Evaluate [ "controller" in """${host}""" ]
20190402 06:01:42.374 - INFO - ${is_controller} = True
20190402 06:01:42.374 - INFO - +--- END KW: BuiltIn.Evaluate (0)
20190402 06:01:42.374 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${nova_size}==True | Calcultae Nova Partition Size For Computes | ${host} | ${root_disk_uuid} | ${cgts_part_size} | ELSE | Set Variable | ${nova_size} ]
20190402 06:01:42.375 - INFO - +---- START KW: BuiltIn.Set Variable [ ${nova_size} ]
20190402 06:01:42.375 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 06:01:42.375 - INFO - ${nova_size} = 100
20190402 06:01:42.375 - INFO - +--- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:42.375 - INFO - +--- START KW: Utils.Add Disk Partition [ ${host} | ${root_disk_uuid} | ${nova_size} | ${part_status} ]
20190402 06:01:42.375 - INFO - +---- START KW: Utils.Run Command [ system host-disk-partition-add ${host} ${uid} ${size} -t lvm_phys_vol | True ]
20190402 06:01:42.376 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:42.376 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:42.376 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:42.376 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:42.377 - INFO - &{result_dict} = { stdout= }
20190402 06:01:42.377 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:42.377 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:42.377 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:42.377 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:42.378 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:42.378 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:42.378 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:42.378 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:42.378 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:42.378 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:42.378 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:42.380 - INFO - system host-disk-partition-add control ler-1 37ba36e6-9632-4ee8-88af-c64401a4c681 100 -t lvm_phys_vol
20190402 06:01:42.380 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:01:42.381 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:43.518 - INFO - +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| device_node | /dev/sda5                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 102400                                           |
| uuid        | 85333ee6-2ead-46da-8e3e-bd41bf58c04e             |
| ihost_uuid  | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| idisk_uuid  | 37ba36e6-9632-4ee8-88af-c64401a4c681             |
| ipv_uuid    | None                                             |
| status      | Creating (on unlock)                             |
| created_at  | 2019-04-02T11:50:27.919492+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:43.518 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 06:01:43.518 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1137)
20190402 06:01:43.518 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:43.519 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:43.519 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:43.519 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:43.519 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:43.519 - INFO - ${clean_out} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 06:01:43.519 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:43.520 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 06:01:43.520 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:43.520 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:43.520 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:43.521 - INFO - echo $?
20190402 06:01:43.521 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:43.521 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:43.522 - INFO - 0
20190402 06:01:43.522 - INFO - ${rc} = 0
20190402 06:01:43.522 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:43.522 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:43.522 - INFO - 0
20190402 06:01:43.522 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:43.522 - INFO - ${rc} = 0
20190402 06:01:43.522 - INFO - +----- END KW: Utils.Get Return Code (2)
20190402 06:01:43.522 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:43.523 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:43.523 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:43.523 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:43.523 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:43.523 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:43.523 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:43.524 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| device_node | /dev/sda5                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 102400                                           |
| uuid        | 85333ee6-2ead-46da-8e3e-bd41bf58c04e             |
| ihost_uuid  | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| idisk_uuid  | 37ba36e6-9632-4ee8-88af-c64401a4c681             |
| ipv_uuid    | None                                             |
| status      | Creating (on unlock)                             |
| created_at  | 2019-04-02T11:50:27.919492+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
20190402 06:01:43.524 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:01:43.524 - INFO - ${result} = {u'stdout': u'+-------------+--------------------------------------------------+\r\n| Property    | Value                                            |\r\n+-------------+-------------------------------...
20190402 06:01:43.524 - INFO - +---- END KW: Utils.Run Command (1149)
20190402 06:01:43.524 - INFO - +---- START KW: Utils.Get Property From Result [ ${result} | uuid ]
20190402 06:01:43.524 - INFO - +----- START KW: common.String To Dict [ ${result} ]
20190402 06:01:43.525 - INFO - ${dict} = {'Property': {'status': {'Value': 'Creating (on unlock)'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '85333ee6-2ea...
20190402 06:01:43.525 - INFO - +----- END KW: common.String To Dict (1)
20190402 06:01:43.525 - INFO - +----- START KW: Collections.Get From Dictionary [ ${dict} | Property ]
20190402 06:01:43.525 - INFO - ${dict} = {'status': {'Value': 'Creating (on unlock)'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '85333ee6-2ead-46da-8e3e-b...
20190402 06:01:43.525 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 06:01:43.525 - INFO - +----- START KW: Collections.Get From Dictionary [ ${dict} | ${property} ]
20190402 06:01:43.525 - INFO - ${dict} = {'Value': '85333ee6-2ead-46da-8e3e-bd41bf58c04e'}
20190402 06:01:43.525 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 06:01:43.525 - INFO - +----- START KW: Collections.Get From Dictionary [ ${dict} | Value ]
20190402 06:01:43.526 - INFO - ${dict} = 85333ee6-2ead-46da-8e3e-bd41bf58c04e
20190402 06:01:43.526 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 06:01:43.526 - INFO - ${new_uid} = 85333ee6-2ead-46da-8e3e-bd41bf58c04e
20190402 06:01:43.526 - INFO - +---- END KW: Utils.Get Property From Result (2)
20190402 06:01:43.526 - INFO - +---- START KW: BuiltIn.Wait Until Keyword Succeeds [ 30 min | 10 sec | Check Property Value Of Command | system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 06:01:43.526 - INFO - +----- START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 06:01:43.527 - INFO - +------ START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 06:01:43.527 - INFO - +------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:43.527 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:43.527 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:43.528 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:43.528 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:43.528 - INFO - &{result_dict} = { stdout= }
20190402 06:01:43.528 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:43.528 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:43.529 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:43.529 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:43.529 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:43.529 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:43.529 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:43.529 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 06:01:43.529 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:43.530 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 06:01:43.530 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:43.545 - INFO - system host-disk-partition-show contro ller-1 85333ee6-2ead-46da-8e3e-bd41bf58c04e | grep -w status | awk '{print$4}'
20190402 06:01:43.546 - INFO - +-------- END KW: SSHLibrary.Write (15)
20190402 06:01:43.546 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:44.579 - INFO - Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:44.579 - INFO - ${output} = Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:44.579 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1033)
20190402 06:01:44.579 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:44.580 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:44.580 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:44.580 - INFO - +--------- END KW: String.Get Line (0)
20190402 06:01:44.580 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:44.580 - INFO - ${clean_out} = Creating
20190402 06:01:44.580 - INFO - +--------- END KW: String.Remove String (0)
20190402 06:01:44.580 - INFO - ${output} = Creating
20190402 06:01:44.580 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:44.581 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 06:01:44.581 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:44.582 - INFO - echo $?
20190402 06:01:44.582 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 06:01:44.582 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:44.583 - INFO - 0
20190402 06:01:44.583 - INFO - ${rc} = 0
20190402 06:01:44.583 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:44.583 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:44.583 - INFO - 0
20190402 06:01:44.583 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 06:01:44.583 - INFO - ${rc} = 0
20190402 06:01:44.583 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 06:01:44.583 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:44.584 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:44.584 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:44.584 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:44.584 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:44.584 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:44.584 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:44.584 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Creating
20190402 06:01:44.585 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 06:01:44.585 - INFO - ${result} = {u'stdout': u'Creating', u'stderr': u'', u'rc': u'0'}
20190402 06:01:44.585 - INFO - +------- END KW: Utils.Run Command (1058)
20190402 06:01:44.585 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:44.585 - INFO - ${value} = Creating
20190402 06:01:44.585 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:44.585 - INFO - ${current_value} = Creating
20190402 06:01:44.585 - INFO - +------ END KW: Utils.Get Property Value Of Command (1059)
20190402 06:01:44.586 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:44.586 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:44.586 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:44.586 - INFO - +----- END KW: Utils.Check Property Value Of Command (1060)
20190402 06:01:44.586 - INFO - +---- END KW: BuiltIn.Wait Until Keyword Succeeds (1060)
20190402 06:01:44.586 - INFO - ${nova_partition_uuid} = 85333ee6-2ead-46da-8e3e-bd41bf58c04e
20190402 06:01:44.586 - INFO - +--- END KW: Utils.Add Disk Partition (2211)
20190402 06:01:44.586 - INFO - +--- START KW: Utils.Add Local Volume Group [ ${host} | ${lgv_name} ]
20190402 06:01:44.586 - INFO - +---- START KW: Utils.Run Command [ system host-lvg-add ${host} ${lvg_name} | True ]
20190402 06:01:44.587 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:44.587 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:44.587 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:44.587 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:44.588 - INFO - &{result_dict} = { stdout= }
20190402 06:01:44.588 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:44.588 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:44.588 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:44.588 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:44.588 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:44.589 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:44.589 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:44.589 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:44.589 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:44.589 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:44.589 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:44.596 - INFO - system host-lvg-add controller-1 nova- local
20190402 06:01:44.596 - INFO - +----- END KW: SSHLibrary.Write (7)
20190402 06:01:44.596 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:45.626 - INFO - +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+-----------------------+-------------------------------------------------------------------+
| lvm_vg_name           | nova-local                                                        |
| vg_state              | adding                                                            |
| uuid                  | 279cb262-73cb-4e03-9ec8-7d4f6654b571                              |
| ihost_uuid            | 7e3e37c8-5ee4-424c-b253-7335a13f97dd                              |
| lvm_vg_access         | None                                                              |
| lvm_max_lv            | 0                                                                 |
| lvm_cur_lv            | 0                                                                 |
| lvm_max_pv            | 0                                                                 |
| lvm_cur_pv            | 0                                                                 |
| lvm_vg_size_gib       | 0.0                                                               |
| lvm_vg_avail_size_gib | 0.0                                                               |
| lvm_vg_total_pe       | 0                                                                 |
| lvm_vg_free_pe        | 0                                                                 |
| created_at            | 2019-04-02T11:50:30.035126+00:00                                  |
| updated_at            | None                                                              |
| parameters            | {u'concurrent_disk_operations': 2, u'instance_backing': u'image'} |
+-----------------------+-------------------------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:45.627 - INFO - ${output} = +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+---------...
20190402 06:01:45.627 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1031)
20190402 06:01:45.627 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:45.627 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:45.628 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:45.628 - INFO - +------ END KW: String.Get Line (1)
20190402 06:01:45.628 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:45.628 - INFO - ${clean_out} = +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+---------...
20190402 06:01:45.628 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:45.628 - INFO - ${output} = +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+---------...
20190402 06:01:45.628 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:45.628 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:45.629 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:45.630 - INFO - echo $?
20190402 06:01:45.630 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:45.630 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:45.631 - INFO - 0
20190402 06:01:45.631 - INFO - ${rc} = 0
20190402 06:01:45.631 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:45.631 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:45.632 - INFO - 0
20190402 06:01:45.632 - INFO - +------ END KW: BuiltIn.Log (1)
20190402 06:01:45.632 - INFO - ${rc} = 0
20190402 06:01:45.632 - INFO - +----- END KW: Utils.Get Return Code (4)
20190402 06:01:45.632 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:45.633 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:45.633 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:45.633 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:45.633 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:45.633 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:45.633 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:45.633 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-----------------------+-------------------------------------------------------------------+
| Property              | Value                                                             |
+-----------------------+-------------------------------------------------------------------+
| lvm_vg_name           | nova-local                                                        |
| vg_state              | adding                                                            |
| uuid                  | 279cb262-73cb-4e03-9ec8-7d4f6654b571                              |
| ihost_uuid            | 7e3e37c8-5ee4-424c-b253-7335a13f97dd                              |
| lvm_vg_access         | None                                                              |
| lvm_max_lv            | 0                                                                 |
| lvm_cur_lv            | 0                                                                 |
| lvm_max_pv            | 0                                                                 |
| lvm_cur_pv            | 0                                                                 |
| lvm_vg_size_gib       | 0.0                                                               |
| lvm_vg_avail_size_gib | 0.0                                                               |
| lvm_vg_total_pe       | 0                                                                 |
| lvm_vg_free_pe        | 0                                                                 |
| created_at            | 2019-04-02T11:50:30.035126+00:00                                  |
| updated_at            | None                                                              |
| parameters            | {u'concurrent_disk_operations': 2, u'instance_backing': u'image'} |
+-----------------------+-------------------------------------------------------------------+
20190402 06:01:45.634 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:01:45.634 - INFO - +---- END KW: Utils.Run Command (1048)
20190402 06:01:45.634 - INFO - +--- END KW: Utils.Add Local Volume Group (1048)
20190402 06:01:45.634 - INFO - +--- START KW: Utils.Add Physical Volume [ ${host} | ${lgv_name} | ${nova_partition_uuid} ]
20190402 06:01:45.634 - INFO - +---- START KW: Utils.Run Command [ system host-pv-add ${host} ${lvg name} ${uid} | True ]
20190402 06:01:45.635 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:45.635 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:45.635 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:45.635 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:45.636 - INFO - &{result_dict} = { stdout= }
20190402 06:01:45.636 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:45.636 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:45.636 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:45.636 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:45.636 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:45.636 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:45.637 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:45.637 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:45.637 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:45.637 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:45.637 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:45.649 - INFO - system host-pv-add controller-1 nova-l ocal 85333ee6-2ead-46da-8e3e-bd41bf58c04e
20190402 06:01:45.649 - INFO - +----- END KW: SSHLibrary.Write (12)
20190402 06:01:45.649 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:46.774 - INFO - +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | 4cffa7fa-cac2-4ef9-8ca2-62ff3c67aea8             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 85333ee6-2ead-46da-8e3e-bd41bf58c04e             |
| disk_or_part_device_node | /dev/sda5                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| lvm_pv_name              | /dev/sda5                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| created_at               | 2019-04-02T11:50:31.168707+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:46.774 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 06:01:46.775 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1125)
20190402 06:01:46.775 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:46.775 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:46.775 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:46.775 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:46.775 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:46.776 - INFO - ${clean_out} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 06:01:46.776 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:46.776 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 06:01:46.776 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:46.776 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:46.776 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:46.778 - INFO - echo $?
20190402 06:01:46.778 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:46.778 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:46.778 - INFO - 0
20190402 06:01:46.778 - INFO - ${rc} = 0
20190402 06:01:46.779 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:46.779 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:46.779 - INFO - 0
20190402 06:01:46.779 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:46.779 - INFO - ${rc} = 0
20190402 06:01:46.779 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:46.779 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:46.780 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:46.780 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:46.780 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:46.780 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:46.780 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:46.780 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:46.781 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | 4cffa7fa-cac2-4ef9-8ca2-62ff3c67aea8             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 85333ee6-2ead-46da-8e3e-bd41bf58c04e             |
| disk_or_part_device_node | /dev/sda5                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part5 |
| lvm_pv_name              | /dev/sda5                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| created_at               | 2019-04-02T11:50:31.168707+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
20190402 06:01:46.781 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:01:46.781 - INFO - +---- END KW: Utils.Run Command (1147)
20190402 06:01:46.781 - INFO - +--- END KW: Utils.Add Physical Volume (1147)
20190402 06:01:46.781 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==False | Modify LVG Attributes | -b image | ${host} | ${lgv_name} ]
20190402 06:01:46.781 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:46.781 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==True or ${setup_cgts}==True | Add Disk Partition | ${host} | ${root_disk_uuid} | ${cgts_part_size} | ${part_status} ]
20190402 06:01:46.782 - INFO - +---- START KW: Utils.Add Disk Partition [ ${host} | ${root_disk_uuid} | ${cgts_part_size} | ${part_status} ]
20190402 06:01:46.782 - INFO - +----- START KW: Utils.Run Command [ system host-disk-partition-add ${host} ${uid} ${size} -t lvm_phys_vol | True ]
20190402 06:01:46.782 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:46.783 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:46.783 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:46.783 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:46.783 - INFO - &{result_dict} = { stdout= }
20190402 06:01:46.783 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:46.783 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:46.784 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:46.784 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:46.784 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:46.784 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:46.784 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:46.784 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:01:46.785 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:46.785 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 06:01:46.785 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:46.800 - INFO - system host-disk-partition-add control ler-1 37ba36e6-9632-4ee8-88af-c64401a4c681 20 -t lvm_phys_vol
20190402 06:01:46.800 - INFO - +------ END KW: SSHLibrary.Write (15)
20190402 06:01:46.800 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:47.919 - INFO - +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| device_node | /dev/sda6                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 20480                                            |
| uuid        | 957717fd-e652-48a8-8124-e774cdeb76b9             |
| ihost_uuid  | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| idisk_uuid  | 37ba36e6-9632-4ee8-88af-c64401a4c681             |
| ipv_uuid    | None                                             |
| status      | Creating (on unlock)                             |
| created_at  | 2019-04-02T11:50:32.323080+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:47.920 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 06:01:47.920 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1120)
20190402 06:01:47.920 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:47.920 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:47.920 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:47.921 - INFO - +------- END KW: String.Get Line (0)
20190402 06:01:47.921 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:47.921 - INFO - ${clean_out} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 06:01:47.921 - INFO - +------- END KW: String.Remove String (0)
20190402 06:01:47.921 - INFO - ${output} = +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+-------------------------------------------------...
20190402 06:01:47.921 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:01:47.921 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:01:47.921 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:47.923 - INFO - echo $?
20190402 06:01:47.923 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:01:47.923 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:47.924 - INFO - 0
20190402 06:01:47.924 - INFO - ${rc} = 0
20190402 06:01:47.924 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:47.924 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:47.924 - INFO - 0
20190402 06:01:47.924 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:01:47.924 - INFO - ${rc} = 0
20190402 06:01:47.924 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:01:47.924 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:47.925 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:47.925 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:47.925 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:47.925 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:47.925 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:47.925 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:47.925 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +-------------+--------------------------------------------------+
| Property    | Value                                            |
+-------------+--------------------------------------------------+
| device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| device_node | /dev/sda6                                        |
| type_guid   | ba5eba11-0000-1111-2222-000000000001             |
| type_name   | None                                             |
| start_mib   | None                                             |
| end_mib     | None                                             |
| size_mib    | 20480                                            |
| uuid        | 957717fd-e652-48a8-8124-e774cdeb76b9             |
| ihost_uuid  | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| idisk_uuid  | 37ba36e6-9632-4ee8-88af-c64401a4c681             |
| ipv_uuid    | None                                             |
| status      | Creating (on unlock)                             |
| created_at  | 2019-04-02T11:50:32.323080+00:00                 |
| updated_at  | None                                             |
+-------------+--------------------------------------------------+
20190402 06:01:47.926 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 06:01:47.926 - INFO - ${result} = {u'stdout': u'+-------------+--------------------------------------------------+\r\n| Property    | Value                                            |\r\n+-------------+-------------------------------...
20190402 06:01:47.926 - INFO - +----- END KW: Utils.Run Command (1144)
20190402 06:01:47.926 - INFO - +----- START KW: Utils.Get Property From Result [ ${result} | uuid ]
20190402 06:01:47.926 - INFO - +------ START KW: common.String To Dict [ ${result} ]
20190402 06:01:47.927 - INFO - ${dict} = {'Property': {'status': {'Value': 'Creating (on unlock)'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '957717fd-e65...
20190402 06:01:47.927 - INFO - +------ END KW: common.String To Dict (1)
20190402 06:01:47.927 - INFO - +------ START KW: Collections.Get From Dictionary [ ${dict} | Property ]
20190402 06:01:47.927 - INFO - ${dict} = {'status': {'Value': 'Creating (on unlock)'}, 'device_path': {'Value': '/dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6'}, 'start_mib': {'Value': 'None'}, 'uuid': {'Value': '957717fd-e652-48a8-8124-e...
20190402 06:01:47.927 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:01:47.927 - INFO - +------ START KW: Collections.Get From Dictionary [ ${dict} | ${property} ]
20190402 06:01:47.927 - INFO - ${dict} = {'Value': '957717fd-e652-48a8-8124-e774cdeb76b9'}
20190402 06:01:47.927 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:01:47.928 - INFO - +------ START KW: Collections.Get From Dictionary [ ${dict} | Value ]
20190402 06:01:47.928 - INFO - ${dict} = 957717fd-e652-48a8-8124-e774cdeb76b9
20190402 06:01:47.928 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:01:47.928 - INFO - ${new_uid} = 957717fd-e652-48a8-8124-e774cdeb76b9
20190402 06:01:47.928 - INFO - +----- END KW: Utils.Get Property From Result (2)
20190402 06:01:47.928 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 30 min | 10 sec | Check Property Value Of Command | system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 06:01:47.928 - INFO - +------ START KW: Utils.Check Property Value Of Command [ system host-disk-partition-show ${host} ${new_uid} | status | ${status} ]
20190402 06:01:47.929 - INFO - +------- START KW: Utils.Get Property Value Of Command [ ${cmd} | ${property} ]
20190402 06:01:47.929 - INFO - +-------- START KW: Utils.Run Command [ ${cmd} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:47.929 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:47.930 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:47.930 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:47.930 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:47.930 - INFO - &{result_dict} = { stdout= }
20190402 06:01:47.930 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:47.930 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:47.931 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:47.931 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:47.931 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:47.931 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:47.931 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:47.931 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 06:01:47.931 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:47.932 - INFO - +--------- END KW: SSHLibrary.Read (0)
20190402 06:01:47.932 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:47.934 - INFO - system host-disk-partition-show contro ller-1 957717fd-e652-48a8-8124-e774cdeb76b9 | grep -w status | awk '{print$4}'
20190402 06:01:47.934 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 06:01:47.934 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:48.942 - INFO - Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:48.942 - INFO - ${output} = Creating
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:48.942 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (1008)
20190402 06:01:48.942 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:48.942 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:48.943 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:48.943 - INFO - +---------- END KW: String.Get Line (1)
20190402 06:01:48.943 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:48.943 - INFO - ${clean_out} = Creating
20190402 06:01:48.943 - INFO - +---------- END KW: String.Remove String (0)
20190402 06:01:48.943 - INFO - ${output} = Creating
20190402 06:01:48.943 - INFO - +--------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:48.943 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 06:01:48.944 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:48.945 - INFO - echo $?
20190402 06:01:48.945 - INFO - +---------- END KW: SSHLibrary.Write (2)
20190402 06:01:48.945 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:48.946 - INFO - 0
20190402 06:01:48.946 - INFO - ${rc} = 0
20190402 06:01:48.946 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:48.946 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:48.946 - INFO - 0
20190402 06:01:48.946 - INFO - +---------- END KW: BuiltIn.Log (0)
20190402 06:01:48.946 - INFO - ${rc} = 0
20190402 06:01:48.946 - INFO - +--------- END KW: Utils.Get Return Code (3)
20190402 06:01:48.946 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:48.947 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:48.947 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:48.947 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:48.947 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:48.948 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:48.948 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:48.948 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Creating
20190402 06:01:48.948 - INFO - +--------- END KW: Collections.Log Dictionary (0)
20190402 06:01:48.948 - INFO - ${result} = {u'stdout': u'Creating', u'stderr': u'', u'rc': u'0'}
20190402 06:01:48.948 - INFO - +-------- END KW: Utils.Run Command (1019)
20190402 06:01:48.948 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:48.948 - INFO - ${value} = Creating
20190402 06:01:48.948 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:48.949 - INFO - ${current_value} = Creating
20190402 06:01:48.949 - INFO - +------- END KW: Utils.Get Property Value Of Command (1020)
20190402 06:01:48.949 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:48.949 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:48.949 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:48.949 - INFO - +------ END KW: Utils.Check Property Value Of Command (1021)
20190402 06:01:48.949 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1021)
20190402 06:01:48.949 - INFO - +---- END KW: Utils.Add Disk Partition (2167)
20190402 06:01:48.949 - INFO - ${cgts_partition_uuid} = 957717fd-e652-48a8-8124-e774cdeb76b9
20190402 06:01:48.949 - INFO - +--- END KW: BuiltIn.Run Keyword If (2168)
20190402 06:01:48.950 - INFO - +--- START KW: BuiltIn.Run Keyword If [ ${is_controller}==True or ${setup_cgts}==True | Add Physical Volume | ${host} | ${lgv_name} | ${cgts_partition_uuid} ]
20190402 06:01:48.950 - INFO - +---- START KW: Utils.Add Physical Volume [ ${host} | ${lgv_name} | ${cgts_partition_uuid} ]
20190402 06:01:48.950 - INFO - +----- START KW: Utils.Run Command [ system host-pv-add ${host} ${lvg name} ${uid} | True ]
20190402 06:01:48.951 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:48.951 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:48.951 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:48.951 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:48.951 - INFO - &{result_dict} = { stdout= }
20190402 06:01:48.952 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:48.952 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:48.952 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:48.952 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:48.952 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:48.952 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:48.953 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:48.953 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:01:48.953 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:48.953 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:01:48.953 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:48.964 - INFO - system host-pv-add controller-1 nova-l ocal 957717fd-e652-48a8-8124-e774cdeb76b9
20190402 06:01:48.964 - INFO - +------ END KW: SSHLibrary.Write (11)
20190402 06:01:48.964 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:50.084 - INFO - +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | ea9ca8a5-2157-4a2e-9ca2-de1e6659ef4c             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 957717fd-e652-48a8-8124-e774cdeb76b9             |
| disk_or_part_device_node | /dev/sda6                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| lvm_pv_name              | /dev/sda6                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| created_at               | 2019-04-02T11:50:34.469002+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:50.084 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 06:01:50.084 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1120)
20190402 06:01:50.084 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:50.084 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:50.085 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:50.085 - INFO - +------- END KW: String.Get Line (1)
20190402 06:01:50.085 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:50.085 - INFO - ${clean_out} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 06:01:50.085 - INFO - +------- END KW: String.Remove String (0)
20190402 06:01:50.085 - INFO - ${output} = +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+----------...
20190402 06:01:50.085 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:01:50.085 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:01:50.086 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:50.087 - INFO - echo $?
20190402 06:01:50.087 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 06:01:50.087 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:50.087 - INFO - 0
20190402 06:01:50.088 - INFO - ${rc} = 0
20190402 06:01:50.088 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:50.088 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:50.088 - INFO - 0
20190402 06:01:50.088 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:01:50.088 - INFO - ${rc} = 0
20190402 06:01:50.088 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:01:50.088 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:50.089 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:50.089 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:50.089 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:50.089 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:50.089 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:50.089 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:50.089 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +--------------------------+--------------------------------------------------+
| Property                 | Value                                            |
+--------------------------+--------------------------------------------------+
| uuid                     | ea9ca8a5-2157-4a2e-9ca2-de1e6659ef4c             |
| pv_state                 | adding                                           |
| pv_type                  | partition                                        |
| disk_or_part_uuid        | 957717fd-e652-48a8-8124-e774cdeb76b9             |
| disk_or_part_device_node | /dev/sda6                                        |
| disk_or_part_device_path | /dev/disk/by-path/pci-0000:00:17.0-ata-1.0-part6 |
| lvm_pv_name              | /dev/sda6                                        |
| lvm_vg_name              | nova-local                                       |
| lvm_pv_uuid              | None                                             |
| lvm_pv_size_gib          | 0.0                                              |
| lvm_pe_total             | 0                                                |
| lvm_pe_alloced           | 0                                                |
| ihost_uuid               | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| created_at               | 2019-04-02T11:50:34.469002+00:00                 |
| updated_at               | None                                             |
+--------------------------+--------------------------------------------------+
20190402 06:01:50.090 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:01:50.090 - INFO - +----- END KW: Utils.Run Command (1140)
20190402 06:01:50.090 - INFO - +---- END KW: Utils.Add Physical Volume (1140)
20190402 06:01:50.090 - INFO - +--- END KW: BuiltIn.Run Keyword If (1140)
20190402 06:01:50.090 - INFO - +-- END KW: Utils.Setup Partitions (10876)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:01:50.090 - INFO - +-- START KW: Utils.Configure Ceph [ ${second_controller} | ${backend_type} ]
20190402 06:01:50.090 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-0' | Run Keywords | Add LVM Storage Backend | ${backend_type} | --confirmed | AND | Check Ceph Status | HEALTH_ERR ]
20190402 06:01:50.091 - INFO - +--- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:50.091 - INFO - +--- START KW: Utils.Add ODS To Tier [ ${host} ]
20190402 06:01:50.091 - INFO - +---- START KW: BuiltIn.Set Variable [ /dev/sdb ]
20190402 06:01:50.091 - INFO - ${device} = /dev/sdb
20190402 06:01:50.091 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 06:01:50.091 - INFO - +---- START KW: BuiltIn.Set Variable [ ceph_cluster ]
20190402 06:01:50.091 - INFO - ${tier_name} = ceph_cluster
20190402 06:01:50.091 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 06:01:50.092 - INFO - +---- START KW: BuiltIn.Set Variable [ ${SPACE} ]
20190402 06:01:50.092 - INFO - ${tier_opt} =
20190402 06:01:50.092 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 06:01:50.092 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-disk-list ${host} | grep ${device} | awk '{print $2}' ]
20190402 06:01:50.092 - INFO - ${cmd} = system host-disk-list controller-1|grep /dev/sdb|awk '{print $2}'
20190402 06:01:50.092 - INFO - +---- END KW: BuiltIn.Catenate (0)
20190402 06:01:50.092 - INFO - +---- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 06:01:50.093 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:50.093 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:50.093 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:50.093 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:50.094 - INFO - &{result_dict} = { stdout= }
20190402 06:01:50.094 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:50.094 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:50.094 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:50.094 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:50.094 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:50.095 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:50.095 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:50.095 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:50.095 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:50.095 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:50.095 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:50.106 - INFO - system host-disk-list controller-1|gre p /dev/sdb|awk '{print $2}'
20190402 06:01:50.106 - INFO - +----- END KW: SSHLibrary.Write (11)
20190402 06:01:50.106 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:51.190 - INFO - 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:51.190 - INFO - ${output} = 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:51.190 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1084)
20190402 06:01:51.190 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:51.190 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:51.191 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:51.191 - INFO - +------ END KW: String.Get Line (1)
20190402 06:01:51.191 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:51.191 - INFO - ${clean_out} = 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3
20190402 06:01:51.191 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:51.191 - INFO - ${output} = 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3
20190402 06:01:51.191 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:51.191 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:51.192 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:51.193 - INFO - echo $?
20190402 06:01:51.193 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:51.193 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:51.193 - INFO - 0
20190402 06:01:51.193 - INFO - ${rc} = 0
20190402 06:01:51.194 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:51.194 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:51.194 - INFO - 0
20190402 06:01:51.194 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:51.194 - INFO - ${rc} = 0
20190402 06:01:51.194 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:51.194 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:51.195 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:51.195 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:51.195 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:51.195 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:51.195 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:51.195 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:51.195 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3
20190402 06:01:51.196 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:51.196 - INFO - ${result} = {u'stdout': u'1e1d7bd5-1096-4eb8-b25d-4de20eb121f3', u'stderr': u'', u'rc': u'0'}
20190402 06:01:51.196 - INFO - +---- END KW: Utils.Run Command (1104)
20190402 06:01:51.196 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${host}'=='controller-1' | Get Tier UUID | ${tier_name} ]
20190402 06:01:51.196 - INFO - +----- START KW: Utils.Get Tier UUID [ ${tier_name} ]
20190402 06:01:51.196 - INFO - +------ START KW: BuiltIn.Set Variable [ storage ]
20190402 06:01:51.197 - INFO - ${name} = storage
20190402 06:01:51.197 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 06:01:51.197 - INFO - +------ START KW: BuiltIn.Catenate [ system storage-tier-list | ${tier_name} | |grep ${name} | |awk '{print $2}' ]
20190402 06:01:51.197 - INFO - ${cmd} = system storage-tier-list ceph_cluster |grep storage |awk '{print $2}'
20190402 06:01:51.197 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:01:51.197 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:01:51.198 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:51.198 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:01:51.198 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:51.198 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:51.199 - INFO - &{result_dict} = { stdout= }
20190402 06:01:51.199 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:51.199 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:51.199 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:51.199 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:51.200 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:51.200 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:51.200 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:51.200 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:01:51.200 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:51.200 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:01:51.200 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:51.210 - INFO - system storage-tier-list ceph_cluster  |grep storage |awk '{print $2}'
20190402 06:01:51.210 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:01:51.210 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:52.285 - INFO - 02919f4d-97d2-40f4-a470-5beb3b7558c1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:52.285 - INFO - ${output} = 02919f4d-97d2-40f4-a470-5beb3b7558c1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:52.285 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1075)
20190402 06:01:52.285 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:52.286 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:52.286 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:52.286 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:01:52.286 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:52.286 - INFO - ${clean_out} = 02919f4d-97d2-40f4-a470-5beb3b7558c1
20190402 06:01:52.286 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:01:52.287 - INFO - ${output} = 02919f4d-97d2-40f4-a470-5beb3b7558c1
20190402 06:01:52.287 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:01:52.287 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:01:52.287 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:52.288 - INFO - echo $?
20190402 06:01:52.288 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:01:52.288 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:52.289 - INFO - 0
20190402 06:01:52.289 - INFO - ${rc} = 0
20190402 06:01:52.289 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:52.289 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:52.289 - INFO - 0
20190402 06:01:52.289 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:01:52.289 - INFO - ${rc} = 0
20190402 06:01:52.289 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 06:01:52.289 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:52.290 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:52.290 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:52.290 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:52.290 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:52.290 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:52.290 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:52.291 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: 02919f4d-97d2-40f4-a470-5beb3b7558c1
20190402 06:01:52.291 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:01:52.291 - INFO - ${uuid} = {u'stdout': u'02919f4d-97d2-40f4-a470-5beb3b7558c1', u'stderr': u'', u'rc': u'0'}
20190402 06:01:52.291 - INFO - +------ END KW: Utils.Run Command (1094)
20190402 06:01:52.291 - INFO - +----- END KW: Utils.Get Tier UUID (1095)
20190402 06:01:52.291 - INFO - ${tier_uuid} = 02919f4d-97d2-40f4-a470-5beb3b7558c1
20190402 06:01:52.291 - INFO - +---- END KW: BuiltIn.Run Keyword If (1095)
20190402 06:01:52.291 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${host}'=='controller-1' | --tier-uuid ${tier_uuid} | ${EMPTY} ]
20190402 06:01:52.291 - INFO - ${tier_opt} = --tier-uuid 02919f4d-97d2-40f4-a470-5beb3b7558c1
20190402 06:01:52.292 - INFO - +---- END KW: BuiltIn.Set Variable If (1)
20190402 06:01:52.292 - INFO - +---- START KW: Utils.Run Command [ system host-stor-add ${host} ${result.stdout.strip()} ${tier_opt} | True ]
20190402 06:01:52.292 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:52.292 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:52.292 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:52.293 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:52.293 - INFO - &{result_dict} = { stdout= }
20190402 06:01:52.293 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:52.293 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:52.293 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:52.293 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:52.294 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:52.294 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:52.294 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:52.294 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:52.294 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:52.294 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:52.294 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:52.296 - INFO - system host-stor-add controller-1 1e1d 7bd5-1096-4eb8-b25d-4de20eb121f3 --tier-uuid 02919f4d-97d2-40f4-a470-5beb3b7558c 1
20190402 06:01:52.297 - INFO - +----- END KW: SSHLibrary.Write (3)
20190402 06:01:52.297 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:53.779 - INFO - +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+--------------------------------------------------+
| osdid            | 1                                                |
| function         | osd                                              |
| state            | configuring-on-unlock                            |
| journal_location | 7d514bed-c6d8-43db-8ed9-fd7afd79d455             |
| journal_size_gib | 1024                                             |
| journal_path     | /dev/disk/by-path/pci-0000:00:17.0-ata-2.0-part2 |
| journal_node     | /dev/sdb2                                        |
| uuid             | 7d514bed-c6d8-43db-8ed9-fd7afd79d455             |
| ihost_uuid       | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| idisk_uuid       | 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3             |
| tier_uuid        | 02919f4d-97d2-40f4-a470-5beb3b7558c1             |
| tier_name        | storage                                          |
| created_at       | 2019-04-02T11:50:37.815261+00:00                 |
| updated_at       | 2019-04-02T11:50:38.024821+00:00                 |
+------------------+--------------------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:53.779 - INFO - ${output} = +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+----------------------------------...
20190402 06:01:53.779 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (1482)
20190402 06:01:53.779 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:53.780 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:53.780 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:53.780 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:53.780 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:53.780 - INFO - ${clean_out} = +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+----------------------------------...
20190402 06:01:53.780 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:53.780 - INFO - ${output} = +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+----------------------------------...
20190402 06:01:53.780 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:53.781 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:53.781 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:53.782 - INFO - echo $?
20190402 06:01:53.782 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:53.782 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:53.783 - INFO - 0
20190402 06:01:53.783 - INFO - ${rc} = 0
20190402 06:01:53.783 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:53.783 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:53.783 - INFO - 0
20190402 06:01:53.783 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:53.783 - INFO - ${rc} = 0
20190402 06:01:53.783 - INFO - +----- END KW: Utils.Get Return Code (2)
20190402 06:01:53.783 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:53.784 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:53.784 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.784 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:53.784 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:53.784 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.784 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:53.785 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +------------------+--------------------------------------------------+
| Property         | Value                                            |
+------------------+--------------------------------------------------+
| osdid            | 1                                                |
| function         | osd                                              |
| state            | configuring-on-unlock                            |
| journal_location | 7d514bed-c6d8-43db-8ed9-fd7afd79d455             |
| journal_size_gib | 1024                                             |
| journal_path     | /dev/disk/by-path/pci-0000:00:17.0-ata-2.0-part2 |
| journal_node     | /dev/sdb2                                        |
| uuid             | 7d514bed-c6d8-43db-8ed9-fd7afd79d455             |
| ihost_uuid       | 7e3e37c8-5ee4-424c-b253-7335a13f97dd             |
| idisk_uuid       | 1e1d7bd5-1096-4eb8-b25d-4de20eb121f3             |
| tier_uuid        | 02919f4d-97d2-40f4-a470-5beb3b7558c1             |
| tier_name        | storage                                          |
| created_at       | 2019-04-02T11:50:37.815261+00:00                 |
| updated_at       | 2019-04-02T11:50:38.024821+00:00                 |
+------------------+--------------------------------------------------+
20190402 06:01:53.785 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:01:53.785 - INFO - +---- END KW: Utils.Run Command (1493)
20190402 06:01:53.785 - INFO - +---- START KW: Utils.Run Command [ ceph osd tree | True ]
20190402 06:01:53.785 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:53.785 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:53.786 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:53.786 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:53.786 - INFO - &{result_dict} = { stdout= }
20190402 06:01:53.786 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:01:53.786 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:53.787 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:01:53.787 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:53.787 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.787 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:53.787 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:53.787 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:53.787 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:53.787 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:53.787 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:53.788 - INFO - ceph osd tree
20190402 06:01:53.788 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 06:01:53.788 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:53.924 - INFO - ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                                         
-4 0.43549         host controller-0                                   
 0 0.43549             osd.0              up  1.00000          1.00000 
-3       0         host controller-1                                   
 1       0 osd.1                        down        0          1.00000 
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:53.924 - INFO - ${output} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                        ...
20190402 06:01:53.924 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (136)
20190402 06:01:53.924 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:53.924 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:53.925 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:53.925 - INFO - +------ END KW: String.Get Line (1)
20190402 06:01:53.925 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:53.925 - INFO - ${clean_out} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                        ...
20190402 06:01:53.925 - INFO - +------ END KW: String.Remove String (0)
20190402 06:01:53.925 - INFO - ${output} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                        ...
20190402 06:01:53.925 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:53.925 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:53.926 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:53.927 - INFO - echo $?
20190402 06:01:53.927 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:01:53.927 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:53.928 - INFO - 0
20190402 06:01:53.928 - INFO - ${rc} = 0
20190402 06:01:53.928 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:53.928 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:53.928 - INFO - 0
20190402 06:01:53.928 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:53.928 - INFO - ${rc} = 0
20190402 06:01:53.928 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:53.928 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:53.929 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:53.929 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.929 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:01:53.929 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:53.929 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.929 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:53.930 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.43549 root storage-tier                                           
-2 0.43549     chassis group-0                                         
-4 0.43549         host controller-0                                   
 0 0.43549             osd.0              up  1.00000          1.00000 
-3       0         host controller-1                                   
 1       0 osd.1                        down        0          1.00000
20190402 06:01:53.930 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:01:53.930 - INFO - +---- END KW: Utils.Run Command (145)
20190402 06:01:53.930 - INFO - +--- END KW: Utils.Add ODS To Tier (3839)
20190402 06:01:53.930 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}'=='Simplex' | Set Ceph Pool Replication ]
20190402 06:01:53.930 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:53.931 - INFO - +-- END KW: Utils.Configure Ceph (3840)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:01:53.931 - INFO - +-- START KW: Utils.Unlock Second Controller [ ${second_controller} ]
20190402 06:01:53.931 - INFO - +--- START KW: Utils.Unlock Controller [ ${controller} ]
20190402 06:01:53.931 - INFO - +---- START KW: BuiltIn.Wait Until Keyword Succeeds [ 15 min | 10 sec | Check Property Value | ${controller_name} | availability | online ]
20190402 06:01:53.931 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | availability | online ]
20190402 06:01:53.932 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:01:53.932 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:01:53.932 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:01:53.932 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 06:01:53.932 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:01:53.933 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:53.933 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:53.933 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:53.933 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:53.934 - INFO - &{result_dict} = { stdout= }
20190402 06:01:53.934 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:53.934 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:53.934 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.934 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:53.934 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:53.935 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:53.935 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:53.935 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 06:01:53.935 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:53.935 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 06:01:53.935 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:53.937 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:01:53.937 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:01:53.937 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:54.927 - INFO - online
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:54.927 - INFO - ${output} = online
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:54.927 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (990)
20190402 06:01:54.927 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:54.927 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:54.928 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:54.928 - INFO - +--------- END KW: String.Get Line (1)
20190402 06:01:54.928 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:54.928 - INFO - ${clean_out} = online
20190402 06:01:54.928 - INFO - +--------- END KW: String.Remove String (0)
20190402 06:01:54.928 - INFO - ${output} = online
20190402 06:01:54.928 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:54.928 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 06:01:54.929 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:54.930 - INFO - echo $?
20190402 06:01:54.930 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 06:01:54.930 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:54.931 - INFO - 0
20190402 06:01:54.931 - INFO - ${rc} = 0
20190402 06:01:54.931 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:01:54.931 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:54.931 - INFO - 0
20190402 06:01:54.931 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 06:01:54.931 - INFO - ${rc} = 0
20190402 06:01:54.932 - INFO - +-------- END KW: Utils.Get Return Code (4)
20190402 06:01:54.932 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:54.932 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:54.932 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:54.932 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:54.932 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:54.933 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:01:54.933 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:54.933 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: online
20190402 06:01:54.933 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 06:01:54.933 - INFO - ${result} = {u'stdout': u'online', u'stderr': u'', u'rc': u'0'}
20190402 06:01:54.933 - INFO - +------- END KW: Utils.Run Command (1001)
20190402 06:01:54.933 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:01:54.933 - INFO - ${value} = online
20190402 06:01:54.933 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 06:01:54.934 - INFO - ${current_value} = online
20190402 06:01:54.934 - INFO - +------ END KW: Utils.Retrieve Host Property (1002)
20190402 06:01:54.934 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:01:54.934 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:01:54.934 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:01:54.934 - INFO - +----- END KW: Utils.Check Property Value (1003)
20190402 06:01:54.934 - INFO - +---- END KW: BuiltIn.Wait Until Keyword Succeeds (1003)
20190402 06:01:54.934 - INFO - +---- START KW: Utils.Run Command [ system host-unlock ${controller_name} | True | 60 ]
20190402 06:01:54.935 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:54.935 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:54.935 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:54.935 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:54.936 - INFO - &{result_dict} = { stdout= }
20190402 06:01:54.936 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:54.936 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:54.936 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:54.936 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:54.936 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:54.936 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:54.936 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:01:54.937 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:01:54.937 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:54.937 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:01:54.937 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:54.938 - INFO - system host-unlock controller-1
20190402 06:01:54.938 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 06:01:54.938 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:01:59.937 - INFO - +---------------------+--------------------------------------+
| Property            | Value                                |
+---------------------+--------------------------------------+
| action              | none                                 |
| administrative      | locked                               |
| availability        | online                               |
| bm_ip               | None                                 |
| bm_type             | None                                 |
| bm_username         | None                                 |
| boot_device         | sda                                  |
| capabilities        | {u'stor_function': u'monitor'}       |
| config_applied      | None                                 |
| config_status       | Config out-of-date                   |
| config_target       | e514ec48-293f-4bb5-9ea7-a333f37ea8d3 |
| console             | ttyS0,115200                         |
| created_at          | 2019-04-02T11:41:09.555447+00:00     |
| hostname            | controller-1                         |
| id                  | 2                                    |
| install_output      | text                                 |
| install_state       | completed                            |
| install_state_info  | None                                 |
| invprovision        | unprovisioned                        |
| location            | {}                                   |
| mgmt_ip             | 10.10.53.4                           |
| mgmt_mac            | a4:bf:01:55:03:bb                    |
| operational         | disabled                             |
| personality         | controller                           |
| reserved            | False                                |
| rootfs_device       | sda                                  |
| serialid            | None                                 |
| software_load       | 19.01                                |
| subfunction_avail   | online                               |
| subfunction_oper    | disabled                             |
| subfunctions        | controller,worker                    |
| task                | Unlocking                            |
| tboot               | false                                |
| ttys_dcd            | None                                 |
| updated_at          | 2019-04-02T11:50:38.100561+00:00     |
| uptime              | 48                                   |
| uuid                | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vim_progress_status | None                                 |
+---------------------+--------------------------------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:59.937 - INFO - ${output} = +---------------------+--------------------------------------+
| Property            | Value                                |
+---------------------+--------------------------------------+
| action...
20190402 06:01:59.937 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (4999)
20190402 06:01:59.938 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:01:59.938 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:01:59.938 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:59.938 - INFO - +------ END KW: String.Get Line (0)
20190402 06:01:59.938 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:01:59.939 - INFO - ${clean_out} = +---------------------+--------------------------------------+
| Property            | Value                                |
+---------------------+--------------------------------------+
| action...
20190402 06:01:59.939 - INFO - +------ END KW: String.Remove String (1)
20190402 06:01:59.939 - INFO - ${output} = +---------------------+--------------------------------------+
| Property            | Value                                |
+---------------------+--------------------------------------+
| action...
20190402 06:01:59.939 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:01:59.939 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:01:59.939 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:01:59.941 - INFO - echo $?
20190402 06:01:59.941 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:01:59.941 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:01:59.941 - INFO - 0
20190402 06:01:59.941 - INFO - ${rc} = 0
20190402 06:01:59.941 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:01:59.941 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:01:59.941 - INFO - 0
20190402 06:01:59.941 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:01:59.942 - INFO - ${rc} = 0
20190402 06:01:59.942 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:01:59.942 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:01:59.942 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:01:59.942 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:01:59.942 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 06:01:59.943 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:01:59.943 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:01:59.943 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:01:59.943 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------------+--------------------------------------+
| Property            | Value                                |
+---------------------+--------------------------------------+
| action              | none                                 |
| administrative      | locked                               |
| availability        | online                               |
| bm_ip               | None                                 |
| bm_type             | None                                 |
| bm_username         | None                                 |
| boot_device         | sda                                  |
| capabilities        | {u'stor_function': u'monitor'}       |
| config_applied      | None                                 |
| config_status       | Config out-of-date                   |
| config_target       | e514ec48-293f-4bb5-9ea7-a333f37ea8d3 |
| console             | ttyS0,115200                         |
| created_at          | 2019-04-02T11:41:09.555447+00:00     |
| hostname            | controller-1                         |
| id                  | 2                                    |
| install_output      | text                                 |
| install_state       | completed                            |
| install_state_info  | None                                 |
| invprovision        | unprovisioned                        |
| location            | {}                                   |
| mgmt_ip             | 10.10.53.4                           |
| mgmt_mac            | a4:bf:01:55:03:bb                    |
| operational         | disabled                             |
| personality         | controller                           |
| reserved            | False                                |
| rootfs_device       | sda                                  |
| serialid            | None                                 |
| software_load       | 19.01                                |
| subfunction_avail   | online                               |
| subfunction_oper    | disabled                             |
| subfunctions        | controller,worker                    |
| task                | Unlocking                            |
| tboot               | false                                |
| ttys_dcd            | None                                 |
| updated_at          | 2019-04-02T11:50:38.100561+00:00     |
| uptime              | 48                                   |
| uuid                | 7e3e37c8-5ee4-424c-b253-7335a13f97dd |
| vim_progress_status | None                                 |
+---------------------+--------------------------------------+
20190402 06:01:59.943 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:01:59.943 - INFO - ${result} = {u'stdout': u"+---------------------+--------------------------------------+\r\n| Property            | Value                                |\r\n+---------------------+-------------------------------...
20190402 06:01:59.943 - INFO - +---- END KW: Utils.Run Command (5009)
20190402 06:01:59.943 - INFO - +--- END KW: Utils.Unlock Controller (6012)
20190402 06:01:59.944 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 40 min | 30 sec | Check Controller Is Unlocked | ${controller} ]
20190402 06:01:59.944 - INFO - +---- START KW: Utils.Check Controller Is Unlocked [ ${controller} ]
20190402 06:01:59.944 - INFO - +----- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 06:01:59.944 - INFO - +------ START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 06:01:59.945 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:01:59.945 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:01:59.945 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:01:59.945 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:01:59.946 - INFO - &{result_dict} = { stdout= }
20190402 06:01:59.946 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:01:59.946 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:01:59.946 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:59.946 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:01:59.946 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:01:59.947 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:01:59.947 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:01:59.947 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:01:59.947 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:01:59.947 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:01:59.947 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:01:59.951 - INFO - source /etc/platform/openrc
20190402 06:01:59.951 - INFO - +------- END KW: SSHLibrary.Write (4)
20190402 06:01:59.951 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:02:00.441 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:00.441 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:00.441 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (490)
20190402 06:02:00.441 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:02:00.442 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:02:00.442 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:00.442 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:02:00.442 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:02:00.442 - INFO - ${clean_out} =
20190402 06:02:00.442 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:02:00.442 - INFO - ${output} =
20190402 06:02:00.442 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:02:00.442 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:02:00.443 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:02:00.444 - INFO - echo $?
20190402 06:02:00.444 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:02:00.444 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:02:00.444 - INFO - 0
20190402 06:02:00.445 - INFO - ${rc} = 0
20190402 06:02:00.445 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:02:00.445 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:02:00.445 - INFO - 0
20190402 06:02:00.445 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:02:00.445 - INFO - ${rc} = 0
20190402 06:02:00.445 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:02:00.445 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:02:00.446 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:02:00.446 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:00.446 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:02:00.446 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:02:00.446 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:00.446 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:02:00.447 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 06:02:00.447 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:02:00.447 - INFO - +------ END KW: Utils.Run Command (503)
20190402 06:02:00.447 - INFO - +----- END KW: Utils.Set Env Vars From Openrc (503)
20190402 06:02:00.447 - INFO - +----- START KW: Utils.Check Property Value [ ${controller_name} | administrative | unlocked ]
20190402 06:02:00.447 - INFO - +------ START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:02:00.448 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:02:00.448 - INFO - ${system_cmd} = system host-show controller-1|grep -w administrative|awk '{print$4}'
20190402 06:02:00.448 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 06:02:00.448 - INFO - +------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:02:00.448 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:02:00.449 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:02:00.449 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:02:00.449 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:02:00.450 - INFO - &{result_dict} = { stdout= }
20190402 06:02:00.450 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:02:00.450 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:02:00.450 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:00.450 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:02:00.450 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:00.451 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:02:00.451 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:02:00.451 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 06:02:00.451 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:00.451 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 06:02:00.451 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:02:00.462 - INFO - system host-show controller-1|grep -w  administrative|awk '{print$4}'
20190402 06:02:00.462 - INFO - +-------- END KW: SSHLibrary.Write (11)
20190402 06:02:00.462 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:02:01.464 - INFO - unlocked
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:01.464 - INFO - ${output} = unlocked
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:01.464 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1002)
20190402 06:02:01.464 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:02:01.464 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:02:01.465 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:01.465 - INFO - +--------- END KW: String.Get Line (1)
20190402 06:02:01.465 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:02:01.465 - INFO - ${clean_out} = unlocked
20190402 06:02:01.465 - INFO - +--------- END KW: String.Remove String (0)
20190402 06:02:01.465 - INFO - ${output} = unlocked
20190402 06:02:01.465 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 06:02:01.465 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 06:02:01.466 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:02:01.467 - INFO - echo $?
20190402 06:02:01.467 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 06:02:01.467 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:02:01.467 - INFO - 0
20190402 06:02:01.467 - INFO - ${rc} = 0
20190402 06:02:01.467 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:02:01.468 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:02:01.468 - INFO - 0
20190402 06:02:01.468 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 06:02:01.468 - INFO - ${rc} = 0
20190402 06:02:01.468 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 06:02:01.468 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:02:01.468 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:02:01.469 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:02:01.469 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:02:01.469 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:02:01.469 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:01.469 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:02:01.469 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: unlocked
20190402 06:02:01.469 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 06:02:01.470 - INFO - ${result} = {u'stdout': u'unlocked', u'stderr': u'', u'rc': u'0'}
20190402 06:02:01.470 - INFO - +------- END KW: Utils.Run Command (1022)
20190402 06:02:01.470 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:02:01.470 - INFO - ${value} = unlocked
20190402 06:02:01.470 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 06:02:01.470 - INFO - ${current_value} = unlocked
20190402 06:02:01.470 - INFO - +------ END KW: Utils.Retrieve Host Property (1023)
20190402 06:02:01.470 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:02:01.471 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:02:01.471 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:02:01.471 - INFO - +----- END KW: Utils.Check Property Value (1024)
20190402 06:02:01.471 - INFO - +---- END KW: Utils.Check Controller Is Unlocked (1527)
20190402 06:02:01.471 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (1527)
20190402 06:02:01.471 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 50 min | 20 sec | Check Property Value | ${controller} | availability | available ]
20190402 06:02:01.471 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:02:01.472 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:02:01.472 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:02:01.472 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:02:01.472 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:02:01.472 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:02:01.473 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:02:01.473 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:02:01.473 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:02:01.473 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:02:01.473 - INFO - &{result_dict} = { stdout= }
20190402 06:02:01.474 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:02:01.474 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:02:01.474 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:01.474 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:02:01.474 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:01.474 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:02:01.474 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:02:01.475 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:02:01.475 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:01.475 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:02:01.475 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:02:01.477 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:02:01.477 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:02:01.477 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:02:02.503 - INFO - online
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:02.503 - INFO - ${output} = online
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:02.503 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1026)
20190402 06:02:02.504 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:02:02.504 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:02:02.504 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:02.504 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:02:02.504 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:02:02.504 - INFO - ${clean_out} = online
20190402 06:02:02.505 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:02:02.505 - INFO - ${output} = online
20190402 06:02:02.505 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:02:02.505 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:02:02.505 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:02:02.506 - INFO - echo $?
20190402 06:02:02.507 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:02:02.507 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:02:02.507 - INFO - 0
20190402 06:02:02.507 - INFO - ${rc} = 0
20190402 06:02:02.507 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:02:02.507 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:02:02.507 - INFO - 0
20190402 06:02:02.507 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:02:02.507 - INFO - ${rc} = 0
20190402 06:02:02.508 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:02:02.508 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:02:02.508 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:02:02.508 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:02.508 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:02:02.508 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:02:02.509 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:02:02.509 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:02:02.509 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: online
20190402 06:02:02.509 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:02:02.509 - INFO - ${result} = {u'stdout': u'online', u'stderr': u'', u'rc': u'0'}
20190402 06:02:02.509 - INFO - +------ END KW: Utils.Run Command (1037)
20190402 06:02:02.509 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:02:02.509 - INFO - ${value} = online
20190402 06:02:02.510 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:02:02.510 - INFO - ${current_value} = online
20190402 06:02:02.510 - INFO - +----- END KW: Utils.Retrieve Host Property (1038)
20190402 06:02:02.510 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:02:02.510 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:02:02.510 - FAIL - online != available
20190402 06:02:02.510 - DEBUG - Traceback (most recent call last):
  None
20190402 06:02:02.510 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:02:02.510 - INFO - +---- END KW: Utils.Check Property Value (1039)
20190402 06:02:22.511 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:02:22.511 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:02:22.512 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:02:22.512 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:02:22.512 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:02:22.512 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:02:22.513 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:02:22.513 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:02:22.514 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:02:22.514 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:02:22.514 - INFO - &{result_dict} = { stdout= }
20190402 06:02:22.515 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:02:22.515 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:02:22.515 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:22.515 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:02:22.516 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:02:22.516 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:02:22.516 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:02:22.516 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:02:22.516 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:22.516 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:02:22.517 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:02:22.526 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:02:22.527 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:02:22.527 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:02:23.610 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:23.610 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:23.610 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1083)
20190402 06:02:23.610 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:02:23.611 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:02:23.611 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:23.611 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:02:23.611 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:02:23.611 - INFO - ${clean_out} = offline
20190402 06:02:23.611 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:02:23.611 - INFO - ${output} = offline
20190402 06:02:23.611 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:02:23.612 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:02:23.612 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:02:23.613 - INFO - echo $?
20190402 06:02:23.613 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:02:23.613 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:02:23.614 - INFO - 0
20190402 06:02:23.614 - INFO - ${rc} = 0
20190402 06:02:23.614 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:02:23.614 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:02:23.614 - INFO - 0
20190402 06:02:23.614 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:02:23.614 - INFO - ${rc} = 0
20190402 06:02:23.614 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:02:23.614 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:02:23.615 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:02:23.615 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:23.615 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:02:23.615 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:02:23.615 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:23.615 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:02:23.616 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:02:23.616 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:02:23.616 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:02:23.616 - INFO - +------ END KW: Utils.Run Command (1104)
20190402 06:02:23.616 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:02:23.616 - INFO - ${value} = offline
20190402 06:02:23.616 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:02:23.616 - INFO - ${current_value} = offline
20190402 06:02:23.616 - INFO - +----- END KW: Utils.Retrieve Host Property (1105)
20190402 06:02:23.616 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:02:23.617 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:02:23.617 - FAIL - offline != available
20190402 06:02:23.617 - DEBUG - Traceback (most recent call last):
  None
20190402 06:02:23.617 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:02:23.617 - INFO - +---- END KW: Utils.Check Property Value (1106)
20190402 06:02:43.618 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:02:43.619 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:02:43.620 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:02:43.621 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:02:43.622 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:02:43.622 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:02:43.623 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:02:43.624 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:02:43.625 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:02:43.626 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:02:43.627 - INFO - &{result_dict} = { stdout= }
20190402 06:02:43.627 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:02:43.627 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:02:43.628 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:02:43.629 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:02:43.629 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:43.630 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:02:43.630 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 06:02:43.631 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:02:43.631 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:43.631 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:02:43.632 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:02:43.660 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:02:43.660 - INFO - +------- END KW: SSHLibrary.Write (28)
20190402 06:02:43.660 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:02:44.680 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:44.681 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:44.681 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1021)
20190402 06:02:44.681 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:02:44.681 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:02:44.681 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:02:44.682 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:02:44.682 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:02:44.682 - INFO - ${clean_out} = offline
20190402 06:02:44.682 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:02:44.682 - INFO - ${output} = offline
20190402 06:02:44.682 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:02:44.682 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:02:44.683 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:02:44.684 - INFO - echo $?
20190402 06:02:44.684 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:02:44.684 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:02:44.684 - INFO - 0
20190402 06:02:44.684 - INFO - ${rc} = 0
20190402 06:02:44.684 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:02:44.685 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:02:44.685 - INFO - 0
20190402 06:02:44.685 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:02:44.685 - INFO - ${rc} = 0
20190402 06:02:44.685 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:02:44.685 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:02:44.685 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:02:44.686 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:02:44.686 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:02:44.686 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:02:44.686 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:02:44.686 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:02:44.686 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:02:44.686 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:02:44.687 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:02:44.687 - INFO - +------ END KW: Utils.Run Command (1065)
20190402 06:02:44.687 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:02:44.687 - INFO - ${value} = offline
20190402 06:02:44.687 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:02:44.687 - INFO - ${current_value} = offline
20190402 06:02:44.687 - INFO - +----- END KW: Utils.Retrieve Host Property (1068)
20190402 06:02:44.687 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:02:44.687 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:02:44.688 - FAIL - offline != available
20190402 06:02:44.688 - DEBUG - Traceback (most recent call last):
  None
20190402 06:02:44.688 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:02:44.688 - INFO - +---- END KW: Utils.Check Property Value (1070)
20190402 06:03:04.689 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:03:04.690 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:03:04.691 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:03:04.692 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:03:04.693 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:03:04.693 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:03:04.694 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:03:04.695 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:03:04.696 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:03:04.697 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:03:04.698 - INFO - &{result_dict} = { stdout= }
20190402 06:03:04.698 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:03:04.699 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:03:04.699 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:04.700 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:03:04.701 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:04.702 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:03:04.702 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:03:04.702 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:03:04.702 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:04.703 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:03:04.703 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:03:04.734 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:03:04.734 - INFO - +------- END KW: SSHLibrary.Write (31)
20190402 06:03:04.734 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:03:05.767 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:05.767 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:05.767 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1033)
20190402 06:03:05.767 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:03:05.768 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:03:05.768 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:05.768 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:03:05.768 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:03:05.768 - INFO - ${clean_out} = offline
20190402 06:03:05.768 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:03:05.768 - INFO - ${output} = offline
20190402 06:03:05.768 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:03:05.768 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:03:05.769 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:03:05.771 - INFO - echo $?
20190402 06:03:05.771 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:03:05.771 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:03:05.771 - INFO - 0
20190402 06:03:05.771 - INFO - ${rc} = 0
20190402 06:03:05.771 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:03:05.772 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:03:05.772 - INFO - 0
20190402 06:03:05.772 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:03:05.772 - INFO - ${rc} = 0
20190402 06:03:05.772 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 06:03:05.772 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:03:05.772 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:03:05.773 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:05.773 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:03:05.773 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:03:05.773 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:03:05.773 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:03:05.773 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:03:05.773 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:03:05.773 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:03:05.774 - INFO - +------ END KW: Utils.Run Command (1080)
20190402 06:03:05.774 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:03:05.774 - INFO - ${value} = offline
20190402 06:03:05.774 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:03:05.774 - INFO - ${current_value} = offline
20190402 06:03:05.774 - INFO - +----- END KW: Utils.Retrieve Host Property (1084)
20190402 06:03:05.774 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:03:05.774 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:03:05.775 - FAIL - offline != available
20190402 06:03:05.775 - DEBUG - Traceback (most recent call last):
  None
20190402 06:03:05.775 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:03:05.775 - INFO - +---- END KW: Utils.Check Property Value (1087)
20190402 06:03:25.776 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:03:25.777 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:03:25.778 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:03:25.779 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:03:25.780 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:03:25.780 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:03:25.782 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:03:25.783 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:03:25.783 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:03:25.784 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:03:25.785 - INFO - &{result_dict} = { stdout= }
20190402 06:03:25.786 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:03:25.786 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:03:25.787 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:25.787 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:03:25.788 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:25.789 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:03:25.789 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:03:25.790 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:03:25.790 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:25.790 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:03:25.791 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:03:25.819 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:03:25.819 - INFO - +------- END KW: SSHLibrary.Write (28)
20190402 06:03:25.819 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:03:26.869 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:26.869 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:26.869 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1050)
20190402 06:03:26.869 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:03:26.870 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:03:26.870 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:26.870 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:03:26.870 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:03:26.870 - INFO - ${clean_out} = offline
20190402 06:03:26.870 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:03:26.870 - INFO - ${output} = offline
20190402 06:03:26.870 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:03:26.870 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:03:26.871 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:03:26.872 - INFO - echo $?
20190402 06:03:26.873 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:03:26.873 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:03:26.873 - INFO - 0
20190402 06:03:26.873 - INFO - ${rc} = 0
20190402 06:03:26.873 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:03:26.873 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:03:26.873 - INFO - 0
20190402 06:03:26.873 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:03:26.873 - INFO - ${rc} = 0
20190402 06:03:26.873 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:03:26.874 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:03:26.874 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:03:26.874 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:03:26.875 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:03:26.875 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:03:26.875 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:03:26.875 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:03:26.875 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:03:26.875 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:03:26.875 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:03:26.875 - INFO - +------ END KW: Utils.Run Command (1095)
20190402 06:03:26.875 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:03:26.876 - INFO - ${value} = offline
20190402 06:03:26.876 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:03:26.876 - INFO - ${current_value} = offline
20190402 06:03:26.876 - INFO - +----- END KW: Utils.Retrieve Host Property (1099)
20190402 06:03:26.876 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:03:26.876 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:03:26.876 - FAIL - offline != available
20190402 06:03:26.876 - DEBUG - Traceback (most recent call last):
  None
20190402 06:03:26.876 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:03:26.877 - INFO - +---- END KW: Utils.Check Property Value (1101)
20190402 06:03:46.877 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:03:46.879 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:03:46.880 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:03:46.881 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:03:46.881 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:03:46.882 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:03:46.883 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:03:46.884 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:03:46.884 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:03:46.885 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:03:46.887 - INFO - &{result_dict} = { stdout= }
20190402 06:03:46.887 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:03:46.887 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:03:46.888 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:46.889 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:03:46.890 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:03:46.890 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:03:46.891 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:03:46.891 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:03:46.891 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:46.892 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:03:46.892 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:03:46.922 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:03:46.922 - INFO - +------- END KW: SSHLibrary.Write (30)
20190402 06:03:46.922 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:03:47.910 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:47.910 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:47.910 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (988)
20190402 06:03:47.911 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:03:47.911 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:03:47.911 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:03:47.911 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:03:47.911 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:03:47.912 - INFO - ${clean_out} = offline
20190402 06:03:47.912 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:03:47.912 - INFO - ${output} = offline
20190402 06:03:47.912 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:03:47.912 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:03:47.912 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:03:47.914 - INFO - echo $?
20190402 06:03:47.914 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:03:47.914 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:03:47.914 - INFO - 0
20190402 06:03:47.914 - INFO - ${rc} = 0
20190402 06:03:47.914 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:03:47.914 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:03:47.914 - INFO - 0
20190402 06:03:47.914 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:03:47.915 - INFO - ${rc} = 0
20190402 06:03:47.915 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:03:47.915 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:03:47.915 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:03:47.915 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:03:47.915 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:03:47.915 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:03:47.916 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:03:47.916 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:03:47.916 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:03:47.916 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:03:47.916 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:03:47.916 - INFO - +------ END KW: Utils.Run Command (1034)
20190402 06:03:47.916 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:03:47.917 - INFO - ${value} = offline
20190402 06:03:47.917 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:03:47.917 - INFO - ${current_value} = offline
20190402 06:03:47.917 - INFO - +----- END KW: Utils.Retrieve Host Property (1038)
20190402 06:03:47.917 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:03:47.917 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:03:47.917 - FAIL - offline != available
20190402 06:03:47.917 - DEBUG - Traceback (most recent call last):
  None
20190402 06:03:47.917 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:03:47.918 - INFO - +---- END KW: Utils.Check Property Value (1041)
20190402 06:04:07.918 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:04:07.920 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:04:07.921 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:04:07.922 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:04:07.922 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:04:07.923 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:04:07.923 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:04:07.924 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:04:07.924 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:04:07.924 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:04:07.924 - INFO - &{result_dict} = { stdout= }
20190402 06:04:07.924 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:04:07.925 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:04:07.925 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:07.925 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:04:07.925 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:07.925 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:04:07.925 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:04:07.925 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:04:07.926 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:07.926 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:04:07.926 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:04:07.936 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:04:07.936 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:04:07.936 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:04:08.947 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:08.948 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:08.948 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1012)
20190402 06:04:08.948 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:04:08.948 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:04:08.948 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:08.948 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:04:08.949 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:04:08.949 - INFO - ${clean_out} = offline
20190402 06:04:08.949 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:04:08.949 - INFO - ${output} = offline
20190402 06:04:08.949 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:04:08.949 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:04:08.949 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:04:08.951 - INFO - echo $?
20190402 06:04:08.951 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:04:08.951 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:04:08.951 - INFO - 0
20190402 06:04:08.951 - INFO - ${rc} = 0
20190402 06:04:08.951 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:04:08.952 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:04:08.952 - INFO - 0
20190402 06:04:08.952 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:04:08.952 - INFO - ${rc} = 0
20190402 06:04:08.952 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:04:08.952 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:04:08.952 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:04:08.953 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:04:08.953 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:04:08.953 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:04:08.953 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:08.953 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:04:08.953 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:04:08.953 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:04:08.953 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:04:08.954 - INFO - +------ END KW: Utils.Run Command (1030)
20190402 06:04:08.954 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:04:08.954 - INFO - ${value} = offline
20190402 06:04:08.954 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:04:08.954 - INFO - ${current_value} = offline
20190402 06:04:08.954 - INFO - +----- END KW: Utils.Retrieve Host Property (1034)
20190402 06:04:08.954 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:04:08.954 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:04:08.954 - FAIL - offline != available
20190402 06:04:08.954 - DEBUG - Traceback (most recent call last):
  None
20190402 06:04:08.955 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:04:08.955 - INFO - +---- END KW: Utils.Check Property Value (1037)
20190402 06:04:28.956 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:04:28.959 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:04:28.960 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:04:28.961 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:04:28.961 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:04:28.962 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:04:28.963 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:04:28.964 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:04:28.964 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:04:28.965 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:04:28.966 - INFO - &{result_dict} = { stdout= }
20190402 06:04:28.967 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:04:28.967 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:04:28.968 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:04:28.968 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:04:28.969 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:04:28.970 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:04:28.970 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:04:28.970 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:04:28.971 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:28.971 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:04:28.971 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:04:28.995 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:04:28.995 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 06:04:28.996 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:04:29.985 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:29.985 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:29.985 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (989)
20190402 06:04:29.985 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:04:29.986 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:04:29.986 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:29.986 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:04:29.986 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:04:29.986 - INFO - ${clean_out} = offline
20190402 06:04:29.986 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:04:29.986 - INFO - ${output} = offline
20190402 06:04:29.986 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:04:29.986 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:04:29.987 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:04:29.988 - INFO - echo $?
20190402 06:04:29.988 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:04:29.988 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:04:29.989 - INFO - 0
20190402 06:04:29.989 - INFO - ${rc} = 0
20190402 06:04:29.989 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:04:29.989 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:04:29.989 - INFO - 0
20190402 06:04:29.989 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:04:29.989 - INFO - ${rc} = 0
20190402 06:04:29.989 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:04:29.989 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:04:29.990 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:04:29.990 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:29.990 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:04:29.990 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:04:29.990 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:29.990 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:04:29.990 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:04:29.991 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:04:29.991 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:04:29.991 - INFO - +------ END KW: Utils.Run Command (1029)
20190402 06:04:29.991 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:04:29.991 - INFO - ${value} = offline
20190402 06:04:29.991 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:04:29.991 - INFO - ${current_value} = offline
20190402 06:04:29.991 - INFO - +----- END KW: Utils.Retrieve Host Property (1034)
20190402 06:04:29.991 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:04:29.992 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:04:29.992 - FAIL - offline != available
20190402 06:04:29.992 - DEBUG - Traceback (most recent call last):
  None
20190402 06:04:29.992 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:04:29.992 - INFO - +---- END KW: Utils.Check Property Value (1037)
20190402 06:04:49.993 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:04:49.994 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:04:49.996 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:04:49.997 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:04:49.997 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:04:49.997 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:04:49.998 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:04:49.998 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:04:49.998 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:04:49.998 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:04:49.999 - INFO - &{result_dict} = { stdout= }
20190402 06:04:49.999 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:04:49.999 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:04:49.999 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:49.999 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:04:49.999 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:50.000 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:04:50.000 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:04:50.000 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:04:50.000 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:50.000 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:04:50.000 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:04:50.012 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:04:50.012 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:04:50.012 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:04:51.006 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:51.006 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:51.006 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (994)
20190402 06:04:51.006 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:04:51.007 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:04:51.007 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:04:51.007 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:04:51.007 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:04:51.007 - INFO - ${clean_out} = offline
20190402 06:04:51.007 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:04:51.007 - INFO - ${output} = offline
20190402 06:04:51.007 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:04:51.007 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:04:51.008 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:04:51.009 - INFO - echo $?
20190402 06:04:51.010 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:04:51.010 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:04:51.010 - INFO - 0
20190402 06:04:51.010 - INFO - ${rc} = 0
20190402 06:04:51.010 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:04:51.010 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:04:51.010 - INFO - 0
20190402 06:04:51.011 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:04:51.011 - INFO - ${rc} = 0
20190402 06:04:51.011 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 06:04:51.011 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:04:51.011 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:04:51.011 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:51.011 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:04:51.012 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:04:51.012 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:04:51.012 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:04:51.012 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:04:51.012 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:04:51.012 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:04:51.012 - INFO - +------ END KW: Utils.Run Command (1015)
20190402 06:04:51.012 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:04:51.013 - INFO - ${value} = offline
20190402 06:04:51.013 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:04:51.013 - INFO - ${current_value} = offline
20190402 06:04:51.013 - INFO - +----- END KW: Utils.Retrieve Host Property (1019)
20190402 06:04:51.013 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:04:51.013 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:04:51.013 - FAIL - offline != available
20190402 06:04:51.013 - DEBUG - Traceback (most recent call last):
  None
20190402 06:04:51.013 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:04:51.013 - INFO - +---- END KW: Utils.Check Property Value (1020)
20190402 06:05:11.014 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:05:11.014 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:05:11.015 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:05:11.015 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:05:11.015 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:05:11.015 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:05:11.016 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:05:11.016 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:05:11.017 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:05:11.017 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:05:11.017 - INFO - &{result_dict} = { stdout= }
20190402 06:05:11.017 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:05:11.018 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:05:11.018 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:11.018 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:05:11.018 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:11.019 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:05:11.019 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:05:11.019 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:05:11.019 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:11.019 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:05:11.019 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:05:11.029 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:05:11.029 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:05:11.029 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:05:12.140 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:12.140 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:12.140 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1111)
20190402 06:05:12.140 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:05:12.141 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:05:12.141 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:12.141 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:05:12.141 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:05:12.141 - INFO - ${clean_out} = offline
20190402 06:05:12.141 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:05:12.142 - INFO - ${output} = offline
20190402 06:05:12.142 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:05:12.142 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:05:12.142 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:05:12.143 - INFO - echo $?
20190402 06:05:12.143 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:05:12.144 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:05:12.144 - INFO - 0
20190402 06:05:12.144 - INFO - ${rc} = 0
20190402 06:05:12.144 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:05:12.144 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:05:12.144 - INFO - 0
20190402 06:05:12.144 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:05:12.144 - INFO - ${rc} = 0
20190402 06:05:12.144 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 06:05:12.144 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:05:12.145 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:05:12.145 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:12.145 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:05:12.145 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:05:12.145 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:12.146 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:05:12.146 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:05:12.146 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:05:12.146 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:05:12.146 - INFO - +------ END KW: Utils.Run Command (1131)
20190402 06:05:12.146 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:05:12.146 - INFO - ${value} = offline
20190402 06:05:12.146 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:05:12.146 - INFO - ${current_value} = offline
20190402 06:05:12.147 - INFO - +----- END KW: Utils.Retrieve Host Property (1133)
20190402 06:05:12.147 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:05:12.147 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:05:12.147 - FAIL - offline != available
20190402 06:05:12.147 - DEBUG - Traceback (most recent call last):
  None
20190402 06:05:12.147 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:05:12.147 - INFO - +---- END KW: Utils.Check Property Value (1133)
20190402 06:05:32.148 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:05:32.149 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:05:32.151 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:05:32.152 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:05:32.152 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:05:32.152 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:05:32.153 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:05:32.153 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:05:32.153 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:05:32.153 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:05:32.154 - INFO - &{result_dict} = { stdout= }
20190402 06:05:32.154 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:05:32.154 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:05:32.154 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:32.154 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:05:32.154 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:32.155 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:05:32.155 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:05:32.155 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:05:32.155 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:32.155 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:05:32.155 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:05:32.157 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:05:32.158 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 06:05:32.158 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:05:33.171 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:33.171 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:33.172 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1014)
20190402 06:05:33.172 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:05:33.172 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:05:33.172 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:33.172 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:05:33.172 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:05:33.173 - INFO - ${clean_out} = offline
20190402 06:05:33.173 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:05:33.173 - INFO - ${output} = offline
20190402 06:05:33.173 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:05:33.173 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:05:33.173 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:05:33.174 - INFO - echo $?
20190402 06:05:33.175 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:05:33.175 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:05:33.175 - INFO - 0
20190402 06:05:33.175 - INFO - ${rc} = 0
20190402 06:05:33.175 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:05:33.175 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:05:33.175 - INFO - 0
20190402 06:05:33.175 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:05:33.176 - INFO - ${rc} = 0
20190402 06:05:33.176 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:05:33.176 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:05:33.176 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:05:33.176 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:33.176 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:05:33.177 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:05:33.177 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:05:33.177 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:05:33.177 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:05:33.177 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:05:33.177 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:05:33.177 - INFO - +------ END KW: Utils.Run Command (1025)
20190402 06:05:33.177 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:05:33.178 - INFO - ${value} = offline
20190402 06:05:33.178 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:05:33.178 - INFO - ${current_value} = offline
20190402 06:05:33.178 - INFO - +----- END KW: Utils.Retrieve Host Property (1029)
20190402 06:05:33.178 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:05:33.178 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:05:33.178 - FAIL - offline != available
20190402 06:05:33.178 - DEBUG - Traceback (most recent call last):
  None
20190402 06:05:33.178 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:05:33.178 - INFO - +---- END KW: Utils.Check Property Value (1030)
20190402 06:05:53.179 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:05:53.180 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:05:53.181 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:05:53.181 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:05:53.182 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:05:53.182 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:05:53.183 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:05:53.184 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:05:53.184 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:05:53.185 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:05:53.186 - INFO - &{result_dict} = { stdout= }
20190402 06:05:53.186 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:05:53.186 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:05:53.187 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:05:53.187 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:05:53.189 - INFO - +-------- END KW: Collections.Set To Dictionary (2)
20190402 06:05:53.190 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:05:53.190 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:05:53.190 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:05:53.191 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:53.191 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:05:53.191 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:05:53.221 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:05:53.222 - INFO - +------- END KW: SSHLibrary.Write (31)
20190402 06:05:53.222 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:05:54.197 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:54.197 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:54.198 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (975)
20190402 06:05:54.198 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:05:54.198 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:05:54.198 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:05:54.198 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:05:54.198 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:05:54.199 - INFO - ${clean_out} = offline
20190402 06:05:54.199 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:05:54.199 - INFO - ${output} = offline
20190402 06:05:54.199 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:05:54.199 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:05:54.199 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:05:54.202 - INFO - echo $?
20190402 06:05:54.202 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 06:05:54.202 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:05:54.203 - INFO - 0
20190402 06:05:54.203 - INFO - ${rc} = 0
20190402 06:05:54.204 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 06:05:54.204 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:05:54.204 - INFO - 0
20190402 06:05:54.204 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:05:54.204 - INFO - ${rc} = 0
20190402 06:05:54.204 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 06:05:54.204 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:05:54.205 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:05:54.205 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:54.205 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:05:54.205 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:05:54.205 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:05:54.205 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:05:54.206 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:05:54.206 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:05:54.206 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:05:54.206 - INFO - +------ END KW: Utils.Run Command (1024)
20190402 06:05:54.206 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:05:54.206 - INFO - ${value} = offline
20190402 06:05:54.206 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:05:54.206 - INFO - ${current_value} = offline
20190402 06:05:54.206 - INFO - +----- END KW: Utils.Retrieve Host Property (1026)
20190402 06:05:54.207 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:05:54.207 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:05:54.207 - FAIL - offline != available
20190402 06:05:54.207 - DEBUG - Traceback (most recent call last):
  None
20190402 06:05:54.207 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:05:54.207 - INFO - +---- END KW: Utils.Check Property Value (1028)
20190402 06:06:14.208 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:06:14.209 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:06:14.211 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:06:14.212 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:06:14.212 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:06:14.212 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:06:14.214 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:06:14.215 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:06:14.216 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:06:14.217 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:06:14.219 - INFO - &{result_dict} = { stdout= }
20190402 06:06:14.220 - INFO - +-------- END KW: BuiltIn.Create Dictionary (3)
20190402 06:06:14.220 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:06:14.221 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:06:14.222 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:06:14.223 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:06:14.223 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:06:14.224 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (8)
20190402 06:06:14.224 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:06:14.224 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:14.225 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:06:14.225 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:06:14.255 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:06:14.256 - INFO - +------- END KW: SSHLibrary.Write (31)
20190402 06:06:14.256 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:06:15.230 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:15.230 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:15.230 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (974)
20190402 06:06:15.230 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:06:15.231 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:06:15.231 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:15.231 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:06:15.231 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:06:15.231 - INFO - ${clean_out} = offline
20190402 06:06:15.231 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:06:15.232 - INFO - ${output} = offline
20190402 06:06:15.232 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:06:15.232 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:06:15.232 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:06:15.234 - INFO - echo $?
20190402 06:06:15.234 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:06:15.234 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:06:15.234 - INFO - 0
20190402 06:06:15.234 - INFO - ${rc} = 0
20190402 06:06:15.234 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:06:15.234 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:06:15.234 - INFO - 0
20190402 06:06:15.234 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:06:15.235 - INFO - ${rc} = 0
20190402 06:06:15.235 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:06:15.235 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:06:15.235 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:06:15.235 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:15.235 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:06:15.235 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:06:15.236 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:06:15.236 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:06:15.236 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:06:15.236 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:06:15.236 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:06:15.236 - INFO - +------ END KW: Utils.Run Command (1024)
20190402 06:06:15.236 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:06:15.236 - INFO - ${value} = offline
20190402 06:06:15.237 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:06:15.237 - INFO - ${current_value} = offline
20190402 06:06:15.237 - INFO - +----- END KW: Utils.Retrieve Host Property (1028)
20190402 06:06:15.237 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:06:15.237 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:06:15.237 - FAIL - offline != available
20190402 06:06:15.237 - DEBUG - Traceback (most recent call last):
  None
20190402 06:06:15.237 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:06:15.237 - INFO - +---- END KW: Utils.Check Property Value (1029)
20190402 06:06:35.238 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:06:35.240 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:06:35.241 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:06:35.242 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:06:35.242 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:06:35.243 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:06:35.244 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:06:35.244 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:06:35.244 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:06:35.244 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:06:35.244 - INFO - &{result_dict} = { stdout= }
20190402 06:06:35.244 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:06:35.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:06:35.245 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:35.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:06:35.245 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:35.245 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:06:35.245 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:06:35.245 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:06:35.246 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:35.246 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:06:35.246 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:06:35.254 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:06:35.255 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:06:35.255 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:06:36.266 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:36.266 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:36.266 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1011)
20190402 06:06:36.267 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:06:36.267 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:06:36.267 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:36.267 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:06:36.268 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:06:36.268 - INFO - ${clean_out} = offline
20190402 06:06:36.268 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:06:36.268 - INFO - ${output} = offline
20190402 06:06:36.268 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:06:36.268 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:06:36.268 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:06:36.270 - INFO - echo $?
20190402 06:06:36.270 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:06:36.270 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:06:36.270 - INFO - 0
20190402 06:06:36.270 - INFO - ${rc} = 0
20190402 06:06:36.271 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:06:36.271 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:06:36.271 - INFO - 0
20190402 06:06:36.271 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:06:36.271 - INFO - ${rc} = 0
20190402 06:06:36.271 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:06:36.271 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:06:36.271 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:06:36.272 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:06:36.272 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:06:36.272 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:06:36.272 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:36.272 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:06:36.272 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:06:36.272 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:06:36.273 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:06:36.273 - INFO - +------ END KW: Utils.Run Command (1030)
20190402 06:06:36.273 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:06:36.273 - INFO - ${value} = offline
20190402 06:06:36.273 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:06:36.273 - INFO - ${current_value} = offline
20190402 06:06:36.273 - INFO - +----- END KW: Utils.Retrieve Host Property (1033)
20190402 06:06:36.273 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:06:36.273 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:06:36.274 - FAIL - offline != available
20190402 06:06:36.274 - DEBUG - Traceback (most recent call last):
  None
20190402 06:06:36.274 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:06:36.274 - INFO - +---- END KW: Utils.Check Property Value (1036)
20190402 06:06:56.275 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:06:56.276 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:06:56.277 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:06:56.278 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:06:56.278 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:06:56.279 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:06:56.280 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:06:56.280 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:06:56.280 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:06:56.280 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:06:56.280 - INFO - &{result_dict} = { stdout= }
20190402 06:06:56.280 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:06:56.281 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:06:56.281 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:56.281 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:06:56.281 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:56.281 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:06:56.281 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:06:56.281 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:06:56.282 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:56.282 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:06:56.282 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:06:56.293 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:06:56.293 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:06:56.293 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:06:57.288 - INFO - offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:57.289 - INFO - ${output} = offline
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:57.289 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (996)
20190402 06:06:57.289 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:06:57.289 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:06:57.289 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:06:57.290 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:06:57.290 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:06:57.290 - INFO - ${clean_out} = offline
20190402 06:06:57.290 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:06:57.290 - INFO - ${output} = offline
20190402 06:06:57.290 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:06:57.290 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:06:57.290 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:06:57.293 - INFO - echo $?
20190402 06:06:57.293 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 06:06:57.293 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:06:57.293 - INFO - 0
20190402 06:06:57.293 - INFO - ${rc} = 0
20190402 06:06:57.293 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:06:57.293 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:06:57.293 - INFO - 0
20190402 06:06:57.294 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:06:57.294 - INFO - ${rc} = 0
20190402 06:06:57.294 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 06:06:57.294 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:06:57.294 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:06:57.294 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:57.295 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:06:57.295 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:06:57.295 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:06:57.295 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:06:57.295 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: offline
20190402 06:06:57.295 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:06:57.295 - INFO - ${result} = {u'stdout': u'offline', u'stderr': u'', u'rc': u'0'}
20190402 06:06:57.295 - INFO - +------ END KW: Utils.Run Command (1016)
20190402 06:06:57.295 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:06:57.296 - INFO - ${value} = offline
20190402 06:06:57.296 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:06:57.296 - INFO - ${current_value} = offline
20190402 06:06:57.296 - INFO - +----- END KW: Utils.Retrieve Host Property (1020)
20190402 06:06:57.296 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:06:57.296 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:06:57.296 - FAIL - offline != available
20190402 06:06:57.296 - DEBUG - Traceback (most recent call last):
  None
20190402 06:06:57.296 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:06:57.296 - INFO - +---- END KW: Utils.Check Property Value (1021)
20190402 06:07:17.297 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:07:17.299 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:07:17.300 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:07:17.301 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:07:17.301 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:07:17.302 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:07:17.303 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:07:17.303 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:07:17.303 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:07:17.303 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:07:17.303 - INFO - &{result_dict} = { stdout= }
20190402 06:07:17.303 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:07:17.304 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:07:17.304 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:17.304 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:07:17.304 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:17.304 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:07:17.304 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:07:17.304 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:07:17.305 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:17.305 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:07:17.305 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:07:17.315 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:07:17.315 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:07:17.315 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:07:18.397 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:18.397 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:18.397 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1082)
20190402 06:07:18.397 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:07:18.398 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:07:18.398 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:18.398 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:07:18.398 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:07:18.398 - INFO - ${clean_out} = intest
20190402 06:07:18.398 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:07:18.398 - INFO - ${output} = intest
20190402 06:07:18.399 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:07:18.399 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:07:18.399 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:07:18.401 - INFO - echo $?
20190402 06:07:18.401 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:07:18.401 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:07:18.401 - INFO - 0
20190402 06:07:18.401 - INFO - ${rc} = 0
20190402 06:07:18.401 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:07:18.401 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:07:18.401 - INFO - 0
20190402 06:07:18.401 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:07:18.402 - INFO - ${rc} = 0
20190402 06:07:18.402 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:07:18.402 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:07:18.402 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:07:18.403 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:07:18.403 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:07:18.403 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:07:18.403 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:18.403 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:07:18.403 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:07:18.403 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:07:18.404 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:07:18.404 - INFO - +------ END KW: Utils.Run Command (1102)
20190402 06:07:18.404 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:07:18.404 - INFO - ${value} = intest
20190402 06:07:18.404 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:07:18.404 - INFO - ${current_value} = intest
20190402 06:07:18.404 - INFO - +----- END KW: Utils.Retrieve Host Property (1105)
20190402 06:07:18.404 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:07:18.404 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:07:18.405 - FAIL - intest != available
20190402 06:07:18.405 - DEBUG - Traceback (most recent call last):
  None
20190402 06:07:18.405 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:07:18.405 - INFO - +---- END KW: Utils.Check Property Value (1108)
20190402 06:07:38.406 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:07:38.408 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:07:38.410 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:07:38.412 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:07:38.412 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:07:38.412 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:07:38.414 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:07:38.415 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:07:38.415 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:07:38.416 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:07:38.417 - INFO - &{result_dict} = { stdout= }
20190402 06:07:38.418 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:07:38.418 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:07:38.419 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:07:38.419 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:07:38.420 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:07:38.421 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:07:38.421 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:07:38.422 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:07:38.422 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:38.422 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:07:38.423 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:07:38.427 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:07:38.428 - INFO - +------- END KW: SSHLibrary.Write (4)
20190402 06:07:38.428 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:07:39.439 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:39.440 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:39.440 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1012)
20190402 06:07:39.440 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:07:39.440 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:07:39.440 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:39.440 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:07:39.440 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:07:39.441 - INFO - ${clean_out} = intest
20190402 06:07:39.441 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:07:39.441 - INFO - ${output} = intest
20190402 06:07:39.441 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:07:39.441 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:07:39.441 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:07:39.443 - INFO - echo $?
20190402 06:07:39.443 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:07:39.443 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:07:39.443 - INFO - 0
20190402 06:07:39.443 - INFO - ${rc} = 0
20190402 06:07:39.443 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:07:39.443 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:07:39.443 - INFO - 0
20190402 06:07:39.444 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:07:39.444 - INFO - ${rc} = 0
20190402 06:07:39.444 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:07:39.444 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:07:39.444 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:07:39.445 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:39.445 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:07:39.445 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:07:39.445 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:39.445 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:07:39.445 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:07:39.445 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:07:39.445 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:07:39.445 - INFO - +------ END KW: Utils.Run Command (1033)
20190402 06:07:39.445 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:07:39.446 - INFO - ${value} = intest
20190402 06:07:39.446 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:07:39.446 - INFO - ${current_value} = intest
20190402 06:07:39.446 - INFO - +----- END KW: Utils.Retrieve Host Property (1038)
20190402 06:07:39.446 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:07:39.447 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:07:39.447 - FAIL - intest != available
20190402 06:07:39.447 - DEBUG - Traceback (most recent call last):
  None
20190402 06:07:39.447 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:07:39.447 - INFO - +---- END KW: Utils.Check Property Value (1042)
20190402 06:07:59.448 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:07:59.449 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:07:59.451 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:07:59.452 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:07:59.452 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:07:59.452 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:07:59.453 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:07:59.453 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:07:59.453 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:07:59.453 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:07:59.454 - INFO - &{result_dict} = { stdout= }
20190402 06:07:59.454 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:07:59.454 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:07:59.454 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:59.454 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:07:59.454 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:07:59.454 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:07:59.455 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:07:59.455 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:07:59.455 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:07:59.455 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:07:59.455 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:07:59.466 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:07:59.466 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:07:59.466 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:08:00.489 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:00.490 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:00.490 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1024)
20190402 06:08:00.490 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:08:00.490 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:08:00.490 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:00.490 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:08:00.491 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:08:00.491 - INFO - ${clean_out} = intest
20190402 06:08:00.491 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:08:00.491 - INFO - ${output} = intest
20190402 06:08:00.491 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:08:00.491 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:08:00.491 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:08:00.493 - INFO - echo $?
20190402 06:08:00.493 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:08:00.493 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:08:00.494 - INFO - 0
20190402 06:08:00.494 - INFO - ${rc} = 0
20190402 06:08:00.494 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:08:00.494 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:08:00.494 - INFO - 0
20190402 06:08:00.494 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:08:00.494 - INFO - ${rc} = 0
20190402 06:08:00.494 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:08:00.494 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:08:00.495 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:08:00.495 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:00.495 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:08:00.495 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:08:00.495 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:00.495 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:08:00.495 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:08:00.496 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:08:00.496 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:08:00.496 - INFO - +------ END KW: Utils.Run Command (1044)
20190402 06:08:00.496 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:08:00.496 - INFO - ${value} = intest
20190402 06:08:00.496 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:08:00.496 - INFO - ${current_value} = intest
20190402 06:08:00.496 - INFO - +----- END KW: Utils.Retrieve Host Property (1047)
20190402 06:08:00.496 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:08:00.497 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:08:00.497 - FAIL - intest != available
20190402 06:08:00.497 - DEBUG - Traceback (most recent call last):
  None
20190402 06:08:00.497 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:08:00.497 - INFO - +---- END KW: Utils.Check Property Value (1049)
20190402 06:08:20.498 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:08:20.499 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:08:20.501 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:08:20.502 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:08:20.502 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:08:20.503 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:08:20.503 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:08:20.503 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:08:20.503 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:08:20.503 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:08:20.504 - INFO - &{result_dict} = { stdout= }
20190402 06:08:20.504 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:08:20.504 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:08:20.504 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:20.504 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:08:20.504 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:20.505 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:08:20.505 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:08:20.505 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:08:20.505 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:20.505 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:08:20.505 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:08:20.515 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:08:20.515 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:08:20.515 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:08:21.513 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:21.513 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:21.513 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (998)
20190402 06:08:21.513 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:08:21.514 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:08:21.514 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:21.514 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:08:21.514 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:08:21.514 - INFO - ${clean_out} = intest
20190402 06:08:21.514 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:08:21.514 - INFO - ${output} = intest
20190402 06:08:21.514 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:08:21.514 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:08:21.515 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:08:21.516 - INFO - echo $?
20190402 06:08:21.516 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:08:21.516 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:08:21.516 - INFO - 0
20190402 06:08:21.517 - INFO - ${rc} = 0
20190402 06:08:21.517 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:08:21.517 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:08:21.517 - INFO - 0
20190402 06:08:21.517 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:08:21.517 - INFO - ${rc} = 0
20190402 06:08:21.517 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:08:21.517 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:08:21.518 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:08:21.518 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:21.518 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:08:21.518 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:08:21.518 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:21.518 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:08:21.519 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:08:21.519 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:08:21.519 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:08:21.519 - INFO - +------ END KW: Utils.Run Command (1016)
20190402 06:08:21.519 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:08:21.519 - INFO - ${value} = intest
20190402 06:08:21.519 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:08:21.519 - INFO - ${current_value} = intest
20190402 06:08:21.519 - INFO - +----- END KW: Utils.Retrieve Host Property (1020)
20190402 06:08:21.519 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:08:21.520 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:08:21.520 - FAIL - intest != available
20190402 06:08:21.520 - DEBUG - Traceback (most recent call last):
  None
20190402 06:08:21.520 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:08:21.520 - INFO - +---- END KW: Utils.Check Property Value (1022)
20190402 06:08:41.521 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:08:41.522 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:08:41.524 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:08:41.525 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:08:41.525 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:08:41.525 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:08:41.526 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:08:41.526 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:08:41.526 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:08:41.526 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:08:41.527 - INFO - &{result_dict} = { stdout= }
20190402 06:08:41.527 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:08:41.527 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:08:41.527 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:41.527 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:08:41.528 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:41.528 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:08:41.528 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:08:41.528 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:08:41.528 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:41.528 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:08:41.528 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:08:41.538 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:08:41.538 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:08:41.538 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:08:42.548 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:42.548 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:42.549 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1011)
20190402 06:08:42.549 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:08:42.549 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:08:42.549 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:08:42.549 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:08:42.549 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:08:42.550 - INFO - ${clean_out} = intest
20190402 06:08:42.550 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:08:42.550 - INFO - ${output} = intest
20190402 06:08:42.550 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:08:42.550 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:08:42.550 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:08:42.552 - INFO - echo $?
20190402 06:08:42.552 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:08:42.552 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:08:42.552 - INFO - 0
20190402 06:08:42.552 - INFO - ${rc} = 0
20190402 06:08:42.553 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:08:42.553 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:08:42.553 - INFO - 0
20190402 06:08:42.553 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:08:42.553 - INFO - ${rc} = 0
20190402 06:08:42.553 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:08:42.553 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:08:42.554 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:08:42.554 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:42.554 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:08:42.554 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:08:42.554 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:08:42.554 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:08:42.554 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:08:42.555 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:08:42.555 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:08:42.555 - INFO - +------ END KW: Utils.Run Command (1030)
20190402 06:08:42.555 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:08:42.555 - INFO - ${value} = intest
20190402 06:08:42.555 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:08:42.555 - INFO - ${current_value} = intest
20190402 06:08:42.555 - INFO - +----- END KW: Utils.Retrieve Host Property (1033)
20190402 06:08:42.555 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:08:42.556 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:08:42.556 - FAIL - intest != available
20190402 06:08:42.556 - DEBUG - Traceback (most recent call last):
  None
20190402 06:08:42.556 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:08:42.556 - INFO - +---- END KW: Utils.Check Property Value (1035)
20190402 06:09:02.557 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:09:02.558 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:09:02.560 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:09:02.561 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:09:02.561 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:09:02.561 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:09:02.562 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:09:02.562 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:09:02.562 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:09:02.563 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:09:02.563 - INFO - &{result_dict} = { stdout= }
20190402 06:09:02.563 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:09:02.563 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:09:02.564 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:09:02.564 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:09:02.564 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:02.564 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:09:02.564 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:09:02.564 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:09:02.564 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:02.564 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:09:02.565 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:09:02.574 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:09:02.574 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:09:02.574 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:09:03.562 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:03.563 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:03.563 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (989)
20190402 06:09:03.563 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:09:03.563 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:09:03.563 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:03.563 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:09:03.563 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:09:03.564 - INFO - ${clean_out} = intest
20190402 06:09:03.564 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:09:03.564 - INFO - ${output} = intest
20190402 06:09:03.564 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:09:03.564 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:09:03.564 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:09:03.566 - INFO - echo $?
20190402 06:09:03.566 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:09:03.566 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:09:03.566 - INFO - 0
20190402 06:09:03.566 - INFO - ${rc} = 0
20190402 06:09:03.566 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:09:03.567 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:09:03.567 - INFO - 0
20190402 06:09:03.567 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:09:03.567 - INFO - ${rc} = 0
20190402 06:09:03.567 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:09:03.567 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:09:03.567 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:09:03.568 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:09:03.568 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:09:03.568 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:09:03.568 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:03.568 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:09:03.568 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:09:03.568 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:09:03.568 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:09:03.569 - INFO - +------ END KW: Utils.Run Command (1007)
20190402 06:09:03.569 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:09:03.569 - INFO - ${value} = intest
20190402 06:09:03.569 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:09:03.569 - INFO - ${current_value} = intest
20190402 06:09:03.569 - INFO - +----- END KW: Utils.Retrieve Host Property (1011)
20190402 06:09:03.569 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:09:03.569 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:09:03.569 - FAIL - intest != available
20190402 06:09:03.569 - DEBUG - Traceback (most recent call last):
  None
20190402 06:09:03.569 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:09:03.570 - INFO - +---- END KW: Utils.Check Property Value (1013)
20190402 06:09:23.571 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:09:23.572 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:09:23.573 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:09:23.574 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:09:23.574 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:09:23.575 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:09:23.576 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:09:23.576 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:09:23.576 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:09:23.576 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:09:23.577 - INFO - &{result_dict} = { stdout= }
20190402 06:09:23.577 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:09:23.577 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:09:23.577 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:23.577 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:09:23.577 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:23.578 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:09:23.578 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:09:23.578 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:09:23.578 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:23.578 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:09:23.578 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:09:23.590 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:09:23.590 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:09:23.590 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:09:24.629 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:24.629 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:24.630 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1039)
20190402 06:09:24.630 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:09:24.630 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:09:24.630 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:24.630 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:09:24.630 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:09:24.631 - INFO - ${clean_out} = intest
20190402 06:09:24.631 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:09:24.631 - INFO - ${output} = intest
20190402 06:09:24.631 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:09:24.631 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:09:24.631 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:09:24.633 - INFO - echo $?
20190402 06:09:24.633 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:09:24.633 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:09:24.633 - INFO - 0
20190402 06:09:24.633 - INFO - ${rc} = 0
20190402 06:09:24.633 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:09:24.633 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:09:24.633 - INFO - 0
20190402 06:09:24.633 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:09:24.634 - INFO - ${rc} = 0
20190402 06:09:24.634 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:09:24.634 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:09:24.634 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:09:24.634 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:24.634 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:09:24.635 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:09:24.635 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:24.635 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:09:24.635 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:09:24.635 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:09:24.635 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:09:24.635 - INFO - +------ END KW: Utils.Run Command (1060)
20190402 06:09:24.635 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:09:24.636 - INFO - ${value} = intest
20190402 06:09:24.636 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:09:24.636 - INFO - ${current_value} = intest
20190402 06:09:24.636 - INFO - +----- END KW: Utils.Retrieve Host Property (1064)
20190402 06:09:24.636 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:09:24.636 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:09:24.636 - FAIL - intest != available
20190402 06:09:24.636 - DEBUG - Traceback (most recent call last):
  None
20190402 06:09:24.636 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:09:24.636 - INFO - +---- END KW: Utils.Check Property Value (1066)
20190402 06:09:44.637 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:09:44.639 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:09:44.640 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:09:44.641 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:09:44.641 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:09:44.641 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:09:44.642 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:09:44.643 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:09:44.643 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:09:44.643 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:09:44.643 - INFO - &{result_dict} = { stdout= }
20190402 06:09:44.644 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:09:44.644 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:09:44.644 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:44.644 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:09:44.644 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:44.645 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:09:44.645 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:09:44.645 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:09:44.645 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:44.645 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:09:44.645 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:09:44.657 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:09:44.657 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:09:44.658 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:09:45.686 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:45.686 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:45.686 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 06:09:45.687 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:09:45.687 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:09:45.687 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:09:45.687 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:09:45.687 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:09:45.687 - INFO - ${clean_out} = intest
20190402 06:09:45.688 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:09:45.688 - INFO - ${output} = intest
20190402 06:09:45.688 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:09:45.688 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:09:45.688 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:09:45.690 - INFO - echo $?
20190402 06:09:45.690 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:09:45.690 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:09:45.690 - INFO - 0
20190402 06:09:45.690 - INFO - ${rc} = 0
20190402 06:09:45.690 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:09:45.690 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:09:45.691 - INFO - 0
20190402 06:09:45.691 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:09:45.691 - INFO - ${rc} = 0
20190402 06:09:45.691 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:09:45.691 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:09:45.691 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:09:45.692 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:09:45.692 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:09:45.692 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:09:45.692 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:09:45.692 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:09:45.692 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:09:45.692 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:09:45.692 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:09:45.692 - INFO - +------ END KW: Utils.Run Command (1051)
20190402 06:09:45.693 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:09:45.693 - INFO - ${value} = intest
20190402 06:09:45.693 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:09:45.693 - INFO - ${current_value} = intest
20190402 06:09:45.693 - INFO - +----- END KW: Utils.Retrieve Host Property (1054)
20190402 06:09:45.693 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:09:45.693 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:09:45.693 - FAIL - intest != available
20190402 06:09:45.693 - DEBUG - Traceback (most recent call last):
  None
20190402 06:09:45.693 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:09:45.694 - INFO - +---- END KW: Utils.Check Property Value (1057)
20190402 06:10:05.694 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:10:05.696 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:10:05.697 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:10:05.698 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:10:05.698 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:10:05.698 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:10:05.699 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:10:05.700 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:10:05.700 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:10:05.700 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:10:05.700 - INFO - &{result_dict} = { stdout= }
20190402 06:10:05.700 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:10:05.700 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:10:05.701 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:10:05.701 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:10:05.701 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:05.701 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:10:05.701 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:10:05.701 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:10:05.702 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:05.702 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:10:05.702 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:10:05.711 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:10:05.712 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:10:05.712 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:10:06.715 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:06.715 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:06.715 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1003)
20190402 06:10:06.716 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:10:06.716 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:10:06.716 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:06.716 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:10:06.716 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:10:06.717 - INFO - ${clean_out} = intest
20190402 06:10:06.717 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:10:06.717 - INFO - ${output} = intest
20190402 06:10:06.717 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:10:06.717 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:10:06.717 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:10:06.719 - INFO - echo $?
20190402 06:10:06.719 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:10:06.719 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:10:06.719 - INFO - 0
20190402 06:10:06.719 - INFO - ${rc} = 0
20190402 06:10:06.719 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:10:06.720 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:10:06.720 - INFO - 0
20190402 06:10:06.720 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:10:06.720 - INFO - ${rc} = 0
20190402 06:10:06.720 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:10:06.720 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:10:06.720 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:10:06.721 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:10:06.721 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:10:06.721 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:10:06.721 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:06.721 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:10:06.721 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:10:06.721 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:10:06.721 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:10:06.722 - INFO - +------ END KW: Utils.Run Command (1024)
20190402 06:10:06.722 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:10:06.722 - INFO - ${value} = intest
20190402 06:10:06.722 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:10:06.722 - INFO - ${current_value} = intest
20190402 06:10:06.722 - INFO - +----- END KW: Utils.Retrieve Host Property (1026)
20190402 06:10:06.722 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:10:06.722 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:10:06.722 - FAIL - intest != available
20190402 06:10:06.723 - DEBUG - Traceback (most recent call last):
  None
20190402 06:10:06.723 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:10:06.723 - INFO - +---- END KW: Utils.Check Property Value (1029)
20190402 06:10:26.724 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:10:26.725 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:10:26.726 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:10:26.727 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:10:26.727 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:10:26.728 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:10:26.731 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:10:26.732 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 06:10:26.733 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:10:26.734 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:10:26.735 - INFO - &{result_dict} = { stdout= }
20190402 06:10:26.736 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:10:26.736 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:10:26.737 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:10:26.737 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:10:26.738 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:10:26.739 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:10:26.739 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:10:26.739 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:10:26.740 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:26.740 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:10:26.740 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:10:26.769 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:10:26.769 - INFO - +------- END KW: SSHLibrary.Write (29)
20190402 06:10:26.769 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:10:27.744 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:27.744 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:27.745 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (975)
20190402 06:10:27.745 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:10:27.745 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:10:27.745 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:27.746 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:10:27.746 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:10:27.746 - INFO - ${clean_out} = intest
20190402 06:10:27.746 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:10:27.746 - INFO - ${output} = intest
20190402 06:10:27.746 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:10:27.746 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:10:27.746 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:10:27.748 - INFO - echo $?
20190402 06:10:27.748 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:10:27.748 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:10:27.749 - INFO - 0
20190402 06:10:27.749 - INFO - ${rc} = 0
20190402 06:10:27.749 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:10:27.749 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:10:27.749 - INFO - 0
20190402 06:10:27.749 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:10:27.749 - INFO - ${rc} = 0
20190402 06:10:27.749 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:10:27.749 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:10:27.750 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:10:27.750 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:27.750 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:10:27.750 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:10:27.750 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:27.750 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:10:27.751 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:10:27.751 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:10:27.751 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:10:27.751 - INFO - +------ END KW: Utils.Run Command (1023)
20190402 06:10:27.751 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:10:27.751 - INFO - ${value} = intest
20190402 06:10:27.751 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:10:27.751 - INFO - ${current_value} = intest
20190402 06:10:27.751 - INFO - +----- END KW: Utils.Retrieve Host Property (1026)
20190402 06:10:27.751 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:10:27.752 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:10:27.752 - FAIL - intest != available
20190402 06:10:27.752 - DEBUG - Traceback (most recent call last):
  None
20190402 06:10:27.752 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:10:27.752 - INFO - +---- END KW: Utils.Check Property Value (1029)
20190402 06:10:47.753 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:10:47.754 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:10:47.755 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:10:47.756 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:10:47.757 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:10:47.757 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:10:47.758 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:10:47.758 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:10:47.758 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:10:47.758 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:10:47.758 - INFO - &{result_dict} = { stdout= }
20190402 06:10:47.759 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:10:47.759 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:10:47.759 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:47.759 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:10:47.759 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:47.759 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:10:47.759 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:10:47.760 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:10:47.760 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:47.760 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:10:47.760 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:10:47.770 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:10:47.770 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:10:47.770 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:10:48.837 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:48.837 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:48.837 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1067)
20190402 06:10:48.837 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:10:48.838 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:10:48.838 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:10:48.838 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:10:48.838 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:10:48.838 - INFO - ${clean_out} = intest
20190402 06:10:48.838 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:10:48.839 - INFO - ${output} = intest
20190402 06:10:48.839 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:10:48.839 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:10:48.839 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:10:48.841 - INFO - echo $?
20190402 06:10:48.841 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:10:48.841 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:10:48.842 - INFO - 0
20190402 06:10:48.842 - INFO - ${rc} = 0
20190402 06:10:48.842 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:10:48.842 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:10:48.842 - INFO - 0
20190402 06:10:48.842 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:10:48.842 - INFO - ${rc} = 0
20190402 06:10:48.842 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:10:48.843 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:10:48.843 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:10:48.843 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:10:48.843 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:10:48.843 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:10:48.844 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:10:48.844 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:10:48.844 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:10:48.844 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:10:48.844 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:10:48.844 - INFO - +------ END KW: Utils.Run Command (1087)
20190402 06:10:48.844 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:10:48.845 - INFO - ${value} = intest
20190402 06:10:48.845 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:10:48.845 - INFO - ${current_value} = intest
20190402 06:10:48.845 - INFO - +----- END KW: Utils.Retrieve Host Property (1091)
20190402 06:10:48.845 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:10:48.845 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:10:48.845 - FAIL - intest != available
20190402 06:10:48.845 - DEBUG - Traceback (most recent call last):
  None
20190402 06:10:48.845 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:10:48.846 - INFO - +---- END KW: Utils.Check Property Value (1093)
20190402 06:11:08.846 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:11:08.846 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:08.847 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:08.847 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:11:08.847 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:11:08.847 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:08.848 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:08.848 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:08.848 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:08.848 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:08.849 - INFO - &{result_dict} = { stdout= }
20190402 06:11:08.849 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:11:08.849 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:08.849 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:08.849 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:08.850 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:08.850 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:08.850 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:08.850 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:08.850 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:08.850 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:08.850 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:08.860 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:11:08.861 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:11:08.861 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:09.859 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:09.859 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:09.859 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (998)
20190402 06:11:09.859 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:09.860 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:09.860 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:09.860 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:11:09.860 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:09.860 - INFO - ${clean_out} = intest
20190402 06:11:09.860 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:11:09.861 - INFO - ${output} = intest
20190402 06:11:09.861 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:11:09.861 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:11:09.861 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:09.863 - INFO - echo $?
20190402 06:11:09.863 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:11:09.863 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:09.863 - INFO - 0
20190402 06:11:09.863 - INFO - ${rc} = 0
20190402 06:11:09.863 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:11:09.863 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:09.864 - INFO - 0
20190402 06:11:09.864 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:11:09.864 - INFO - ${rc} = 0
20190402 06:11:09.864 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:11:09.864 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:09.865 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:09.865 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:09.865 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:09.865 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:09.865 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:09.865 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:09.866 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:11:09.866 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:11:09.866 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:11:09.866 - INFO - +------ END KW: Utils.Run Command (1019)
20190402 06:11:09.866 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:11:09.866 - INFO - ${value} = intest
20190402 06:11:09.866 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:11:09.866 - INFO - ${current_value} = intest
20190402 06:11:09.866 - INFO - +----- END KW: Utils.Retrieve Host Property (1020)
20190402 06:11:09.867 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:11:09.867 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:11:09.867 - FAIL - intest != available
20190402 06:11:09.867 - DEBUG - Traceback (most recent call last):
  None
20190402 06:11:09.867 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:11:09.867 - INFO - +---- END KW: Utils.Check Property Value (1021)
20190402 06:11:29.868 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:11:29.868 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:29.868 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:29.869 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:11:29.869 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:11:29.869 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:29.869 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:29.869 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:29.869 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:29.870 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:29.870 - INFO - &{result_dict} = { stdout= }
20190402 06:11:29.870 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:11:29.870 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:29.870 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:29.871 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:29.871 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:29.871 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:29.871 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:29.871 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:29.871 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:29.871 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:29.871 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:29.880 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:11:29.881 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:11:29.881 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:30.873 - INFO - intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:30.874 - INFO - ${output} = intest
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:30.874 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (993)
20190402 06:11:30.874 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:30.874 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:30.874 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:30.874 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:11:30.875 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:30.875 - INFO - ${clean_out} = intest
20190402 06:11:30.875 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:11:30.875 - INFO - ${output} = intest
20190402 06:11:30.875 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:11:30.875 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:11:30.875 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:30.877 - INFO - echo $?
20190402 06:11:30.877 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:11:30.877 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:30.877 - INFO - 0
20190402 06:11:30.878 - INFO - ${rc} = 0
20190402 06:11:30.878 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:11:30.878 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:30.878 - INFO - 0
20190402 06:11:30.878 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:11:30.878 - INFO - ${rc} = 0
20190402 06:11:30.878 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:11:30.878 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:30.879 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:30.879 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:30.879 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:30.879 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:30.879 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:30.879 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:30.879 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: intest
20190402 06:11:30.880 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:11:30.880 - INFO - ${result} = {u'stdout': u'intest', u'stderr': u'', u'rc': u'0'}
20190402 06:11:30.880 - INFO - +------ END KW: Utils.Run Command (1011)
20190402 06:11:30.880 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:11:30.880 - INFO - ${value} = intest
20190402 06:11:30.880 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:11:30.880 - INFO - ${current_value} = intest
20190402 06:11:30.880 - INFO - +----- END KW: Utils.Retrieve Host Property (1012)
20190402 06:11:30.880 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:11:30.881 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:11:30.881 - FAIL - intest != available
20190402 06:11:30.881 - DEBUG - Traceback (most recent call last):
  None
20190402 06:11:30.881 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:11:30.881 - INFO - +---- END KW: Utils.Check Property Value (1014)
20190402 06:11:50.882 - INFO - +---- START KW: Utils.Check Property Value [ ${controller} | availability | available ]
20190402 06:11:50.883 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:50.884 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:50.885 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:11:50.886 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:11:50.886 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:50.887 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:50.887 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:50.887 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:50.887 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:50.888 - INFO - &{result_dict} = { stdout= }
20190402 06:11:50.888 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:11:50.888 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:50.888 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:50.888 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:50.888 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:50.888 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:50.888 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:11:50.889 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:50.889 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:50.889 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:50.889 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:50.900 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:11:50.900 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:11:50.900 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:52.077 - INFO - available
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:52.077 - INFO - ${output} = available
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:52.077 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1177)
20190402 06:11:52.077 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:52.078 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:52.078 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:52.078 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:11:52.078 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:52.078 - INFO - ${clean_out} = available
20190402 06:11:52.078 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:11:52.079 - INFO - ${output} = available
20190402 06:11:52.079 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:11:52.079 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:11:52.079 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:52.081 - INFO - echo $?
20190402 06:11:52.081 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:11:52.081 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:52.081 - INFO - 0
20190402 06:11:52.081 - INFO - ${rc} = 0
20190402 06:11:52.082 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:11:52.082 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:52.082 - INFO - 0
20190402 06:11:52.082 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:11:52.082 - INFO - ${rc} = 0
20190402 06:11:52.082 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:11:52.082 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:52.082 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:52.083 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:52.083 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:52.083 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:52.083 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:52.083 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:52.083 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: available
20190402 06:11:52.083 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:11:52.084 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': u'0'}
20190402 06:11:52.084 - INFO - +------ END KW: Utils.Run Command (1198)
20190402 06:11:52.084 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:11:52.084 - INFO - ${value} = available
20190402 06:11:52.084 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:11:52.084 - INFO - ${current_value} = available
20190402 06:11:52.084 - INFO - +----- END KW: Utils.Retrieve Host Property (1201)
20190402 06:11:52.084 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:11:52.085 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:11:52.085 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:11:52.085 - INFO - +---- END KW: Utils.Check Property Value (1203)
20190402 06:11:52.085 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (590614)
20190402 06:11:52.085 - INFO - +--- START KW: Utils.Generate Secondary Controller Connection [ ${controller} ]
20190402 06:11:52.085 - INFO - +---- START KW: BuiltIn.Set Variable If [ '${controller}'=='controller-0' | ${CONFIG.general.IP_UNIT_0_ADDRESS} | ${CONFIG.general.IP_UNIT_1_ADDRESS} ]
20190402 06:11:52.085 - INFO - ${controller_ip} = 192.168.200.77
20190402 06:11:52.085 - INFO - +---- END KW: BuiltIn.Set Variable If (0)
20190402 06:11:52.086 - INFO - +---- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${controller_ip} ]
20190402 06:11:52.086 - INFO - +----- START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 06:11:52.086 - INFO - ${controller_connection} = 2
20190402 06:11:52.087 - INFO - +----- END KW: SSHLibrary.Open Connection (1)
20190402 06:11:52.087 - INFO - +----- START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 06:11:52.087 - INFO - +------ START KW: BuiltIn.Get Length [ ${password} ]
20190402 06:11:52.087 - INFO - Length is 10
20190402 06:11:52.087 - INFO - ${pwd_length} = 10
20190402 06:11:52.087 - INFO - +------ END KW: BuiltIn.Get Length (0)
20190402 06:11:52.087 - INFO - +------ START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 06:11:52.088 - INFO - +------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 06:11:52.088 - INFO - Logging into '192.168.200.77 prompt=$:22' as 'wrsroot'.
20190402 06:11:55.799 - INFO - Read output: /etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.
20190402 06:11:55.800 - INFO - +------- END KW: SSHLibrary.Login (3712)
20190402 06:11:55.800 - INFO - Returning from the enclosing user keyword.
20190402 06:11:55.801 - INFO - +------ END KW: BuiltIn.Run Keyword And Return If (3714)
20190402 06:11:55.801 - INFO - +----- END KW: Utils.Flexible_SSH_Login (3714)
20190402 06:11:55.802 - INFO - ${secondary_controller_connection} = 2
20190402 06:11:55.802 - INFO - +---- END KW: Utils.Connect to Controller Node (3716)
20190402 06:11:55.802 - INFO - +---- START KW: BuiltIn.Set Suite Variable [ ${secondary_controller_connection} ]
20190402 06:11:55.803 - INFO - ${secondary_controller_connection} = 2
20190402 06:11:55.803 - INFO - +---- END KW: BuiltIn.Set Suite Variable (1)
20190402 06:11:55.803 - INFO - +---- START KW: BuiltIn.Log [ ${secondary_controller_connection} ]
20190402 06:11:55.804 - INFO - 2
20190402 06:11:55.804 - INFO - +---- END KW: BuiltIn.Log (1)
20190402 06:11:55.804 - INFO - +---- START KW: BuiltIn.Run Keyword And Return If [ ${secondary_controller_connection} is not None | Switch Controller Connection | ${master_controller_connection} | ${secondary_controller_connection} ]
20190402 06:11:55.805 - INFO - +----- START KW: Utils.Switch Controller Connection [ ${master_controller_connection} | ${secondary_controller_connection} ]
20190402 06:11:55.805 - INFO - +------ START KW: SSHLibrary.Switch Connection [ ${new_idx} ]
20190402 06:11:55.805 - INFO - +------ END KW: SSHLibrary.Switch Connection (0)
20190402 06:11:55.805 - INFO - +------ START KW: SSHLibrary.Get Connection [ ${new_idx} ]
20190402 06:11:55.805 - INFO - index=1
path_separator=/
prompt=$
width=80
newline=

height=24
encoding=UTF-8
alias=None
host=192.168.200.76 prompt=$
timeout=1 minute
term_type=vt100
port=22
20190402 06:11:55.806 - INFO - +------ END KW: SSHLibrary.Get Connection (1)
20190402 06:11:55.806 - INFO - +------ START KW: Utils.Run Command [ whoami ]
20190402 06:11:55.806 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:55.806 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:55.806 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:55.807 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:55.807 - INFO - &{result_dict} = { stdout= }
20190402 06:11:55.807 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:11:55.807 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:55.807 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:55.807 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:55.808 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:55.808 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:55.808 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:55.808 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:55.808 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:55.808 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:55.809 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:55.810 - INFO - whoami
20190402 06:11:55.811 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:11:55.811 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:55.812 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:55.812 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:55.812 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1)
20190402 06:11:55.812 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:55.812 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:55.812 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:55.812 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:11:55.812 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:55.813 - INFO - ${clean_out} = wrsroot
20190402 06:11:55.813 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:11:55.813 - INFO - ${output} = wrsroot
20190402 06:11:55.813 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:11:55.813 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:11:55.813 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:55.815 - INFO - echo $?
20190402 06:11:55.815 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:11:55.815 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:55.815 - INFO - 0
20190402 06:11:55.815 - INFO - ${rc} = 0
20190402 06:11:55.815 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:11:55.815 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:55.816 - INFO - 0
20190402 06:11:55.816 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:11:55.816 - INFO - ${rc} = 0
20190402 06:11:55.816 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:11:55.816 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:55.816 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:55.817 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:55.817 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:55.817 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:55.817 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:55.817 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:55.817 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 06:11:55.817 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:11:55.818 - INFO - +------ END KW: Utils.Run Command (12)
20190402 06:11:55.818 - INFO - +------ START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 5 sec | Set Env Vars From Openrc ]
20190402 06:11:55.818 - INFO - +------- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 06:11:55.818 - INFO - +-------- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 06:11:55.819 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:55.819 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:11:55.819 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:55.819 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:55.819 - INFO - &{result_dict} = { stdout= }
20190402 06:11:55.820 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:11:55.820 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:55.820 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:55.820 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:55.820 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:55.820 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:55.821 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:11:55.821 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 06:11:55.821 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:55.821 - INFO - +--------- END KW: SSHLibrary.Read (0)
20190402 06:11:55.821 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:55.826 - INFO - source /etc/platform/openrc
20190402 06:11:55.826 - INFO - +--------- END KW: SSHLibrary.Write (5)
20190402 06:11:55.826 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:56.229 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:56.230 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:56.230 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (404)
20190402 06:11:56.230 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:56.230 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:56.231 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:56.231 - INFO - +---------- END KW: String.Get Line (1)
20190402 06:11:56.231 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:56.231 - INFO - ${clean_out} =
20190402 06:11:56.231 - INFO - +---------- END KW: String.Remove String (0)
20190402 06:11:56.231 - INFO - ${output} =
20190402 06:11:56.231 - INFO - +--------- END KW: Utils.Remove Prompt Line (1)
20190402 06:11:56.231 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 06:11:56.232 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:56.233 - INFO - echo $?
20190402 06:11:56.233 - INFO - +---------- END KW: SSHLibrary.Write (2)
20190402 06:11:56.233 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:56.233 - INFO - 0
20190402 06:11:56.233 - INFO - ${rc} = 0
20190402 06:11:56.233 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:11:56.234 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:56.234 - INFO - 0
20190402 06:11:56.234 - INFO - +---------- END KW: BuiltIn.Log (0)
20190402 06:11:56.234 - INFO - ${rc} = 0
20190402 06:11:56.234 - INFO - +--------- END KW: Utils.Get Return Code (3)
20190402 06:11:56.234 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:56.234 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:56.235 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:56.235 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:56.235 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:56.235 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:56.235 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:56.235 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 06:11:56.235 - INFO - +--------- END KW: Collections.Log Dictionary (0)
20190402 06:11:56.235 - INFO - +-------- END KW: Utils.Run Command (417)
20190402 06:11:56.236 - INFO - +------- END KW: Utils.Set Env Vars From Openrc (418)
20190402 06:11:56.236 - INFO - +------ END KW: BuiltIn.Wait Until Keyword Succeeds (418)
20190402 06:11:56.236 - INFO - +------ START KW: BuiltIn.Set Suite Variable [ ${secondary_controller_connection} | ${old_idx} ]
20190402 06:11:56.236 - INFO - ${secondary_controller_connection} = 2
20190402 06:11:56.236 - INFO - +------ END KW: BuiltIn.Set Suite Variable (0)
20190402 06:11:56.236 - INFO - +------ START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} | ${new_idx} ]
20190402 06:11:56.236 - INFO - ${master_controller_connection} = 1
20190402 06:11:56.236 - INFO - +------ END KW: BuiltIn.Set Suite Variable (0)
20190402 06:11:56.237 - INFO - +----- END KW: Utils.Switch Controller Connection (432)
20190402 06:11:56.237 - INFO - Returning from the enclosing user keyword.
20190402 06:11:56.237 - INFO - +---- END KW: BuiltIn.Run Keyword And Return If (433)
20190402 06:11:56.237 - INFO - +--- END KW: Utils.Generate Secondary Controller Connection (4152)
20190402 06:11:56.237 - INFO - +-- END KW: Utils.Unlock Second Controller (602306)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:11:56.237 - INFO - +-- START KW: Utils.Check Host Readiness [ ${second_controller} ]
20190402 06:11:56.237 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 40 min | 5 sec | Check Property Value | ${host} | administrative | unlocked ]
20190402 06:11:56.238 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | administrative | unlocked ]
20190402 06:11:56.238 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:56.238 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:56.238 - INFO - ${system_cmd} = system host-show controller-1|grep -w administrative|awk '{print$4}'
20190402 06:11:56.238 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:11:56.239 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:56.239 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:56.239 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:56.239 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:56.239 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:56.240 - INFO - &{result_dict} = { stdout= }
20190402 06:11:56.240 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:11:56.240 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:56.240 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:56.240 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:56.240 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:56.241 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:56.241 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:56.241 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:56.241 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:56.241 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:56.241 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:56.243 - INFO - system host-show controller-1|grep -w  administrative|awk '{print$4}'
20190402 06:11:56.243 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:11:56.243 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:57.302 - INFO - unlocked
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:57.302 - INFO - ${output} = unlocked
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:57.302 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1059)
20190402 06:11:57.302 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:57.303 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:57.303 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:57.303 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:11:57.303 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:57.303 - INFO - ${clean_out} = unlocked
20190402 06:11:57.303 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:11:57.304 - INFO - ${output} = unlocked
20190402 06:11:57.304 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:11:57.304 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:11:57.304 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:57.306 - INFO - echo $?
20190402 06:11:57.306 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:11:57.306 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:57.306 - INFO - 0
20190402 06:11:57.306 - INFO - ${rc} = 0
20190402 06:11:57.306 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:11:57.306 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:57.306 - INFO - 0
20190402 06:11:57.307 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:11:57.307 - INFO - ${rc} = 0
20190402 06:11:57.307 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:11:57.307 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:57.307 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:57.308 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:57.308 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:57.308 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:57.308 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:57.308 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:57.308 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: unlocked
20190402 06:11:57.308 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:11:57.308 - INFO - ${result} = {u'stdout': u'unlocked', u'stderr': u'', u'rc': u'0'}
20190402 06:11:57.308 - INFO - +------ END KW: Utils.Run Command (1069)
20190402 06:11:57.308 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:11:57.309 - INFO - ${value} = unlocked
20190402 06:11:57.309 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:11:57.309 - INFO - ${current_value} = unlocked
20190402 06:11:57.309 - INFO - +----- END KW: Utils.Retrieve Host Property (1071)
20190402 06:11:57.309 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:11:57.309 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:11:57.309 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:11:57.309 - INFO - +---- END KW: Utils.Check Property Value (1071)
20190402 06:11:57.309 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (1072)
20190402 06:11:57.310 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 20 min | 5 sec | Check Property Value | ${host} | operational | enabled ]
20190402 06:11:57.310 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | operational | enabled ]
20190402 06:11:57.310 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:57.310 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:57.311 - INFO - ${system_cmd} = system host-show controller-1|grep -w operational|awk '{print$4}'
20190402 06:11:57.311 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:11:57.311 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:57.311 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:57.311 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:57.311 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:57.312 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:57.312 - INFO - &{result_dict} = { stdout= }
20190402 06:11:57.312 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:11:57.312 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:57.312 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:57.313 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:57.313 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:57.313 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:57.313 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:57.313 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:57.313 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:57.313 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:57.313 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:57.315 - INFO - system host-show controller-1|grep -w  operational|awk '{print$4}'
20190402 06:11:57.315 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:11:57.315 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:58.410 - INFO - enabled
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:58.410 - INFO - ${output} = enabled
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:58.411 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1095)
20190402 06:11:58.411 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:58.411 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:58.411 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:58.411 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:11:58.411 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:58.412 - INFO - ${clean_out} = enabled
20190402 06:11:58.412 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:11:58.412 - INFO - ${output} = enabled
20190402 06:11:58.412 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:11:58.412 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:11:58.412 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:58.413 - INFO - echo $?
20190402 06:11:58.414 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:11:58.414 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:58.414 - INFO - 0
20190402 06:11:58.414 - INFO - ${rc} = 0
20190402 06:11:58.414 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:11:58.414 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:58.414 - INFO - 0
20190402 06:11:58.414 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:11:58.414 - INFO - ${rc} = 0
20190402 06:11:58.415 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 06:11:58.415 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:58.416 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:58.416 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:58.416 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:58.416 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:58.416 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:58.416 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:58.417 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: enabled
20190402 06:11:58.417 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:11:58.417 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': u'0'}
20190402 06:11:58.417 - INFO - +------ END KW: Utils.Run Command (1106)
20190402 06:11:58.417 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:11:58.417 - INFO - ${value} = enabled
20190402 06:11:58.417 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:11:58.417 - INFO - ${current_value} = enabled
20190402 06:11:58.417 - INFO - +----- END KW: Utils.Retrieve Host Property (1107)
20190402 06:11:58.418 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:11:58.418 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:11:58.418 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:11:58.418 - INFO - +---- END KW: Utils.Check Property Value (1108)
20190402 06:11:58.418 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (1108)
20190402 06:11:58.418 - INFO - +--- START KW: BuiltIn.Run Keyword And Ignore Error [ Check If Host Is In Degraded Mode | ${host} | ${wait_time} ]
20190402 06:11:58.418 - INFO - +---- START KW: Utils.Check If Host Is In Degraded Mode [ ${host} | ${wait_time} ]
20190402 06:11:58.419 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ ${timeout} min | 10 sec | Check Property Value | ${host} | availability | degraded ]
20190402 06:11:58.419 - INFO - +------ START KW: Utils.Check Property Value [ ${host} | availability | degraded ]
20190402 06:11:58.419 - INFO - +------- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:58.419 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:58.420 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:11:58.420 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 06:11:58.420 - INFO - +-------- START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:58.420 - INFO - +--------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:58.420 - INFO - +--------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:58.420 - INFO - +--------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:58.421 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:58.421 - INFO - &{result_dict} = { stdout= }
20190402 06:11:58.421 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:11:58.421 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:58.421 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:58.421 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:58.422 - INFO - +---------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:58.422 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:58.422 - INFO - +--------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:58.422 - INFO - +--------- START KW: SSHLibrary.Read [ ]
20190402 06:11:58.422 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:58.422 - INFO - +--------- END KW: SSHLibrary.Read (0)
20190402 06:11:58.422 - INFO - +--------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:58.424 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:11:58.424 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 06:11:58.424 - INFO - +--------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:11:59.488 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:59.488 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:59.489 - INFO - +--------- END KW: SSHLibrary.Read Until Prompt (1065)
20190402 06:11:59.489 - INFO - +--------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:11:59.489 - INFO - +---------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:11:59.489 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:59.489 - INFO - +---------- END KW: String.Get Line (0)
20190402 06:11:59.489 - INFO - +---------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:11:59.490 - INFO - ${clean_out} = degraded
20190402 06:11:59.490 - INFO - +---------- END KW: String.Remove String (1)
20190402 06:11:59.490 - INFO - ${output} = degraded
20190402 06:11:59.490 - INFO - +--------- END KW: Utils.Remove Prompt Line (1)
20190402 06:11:59.490 - INFO - +--------- START KW: Utils.Get Return Code [ ]
20190402 06:11:59.490 - INFO - +---------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:11:59.492 - INFO - echo $?
20190402 06:11:59.492 - INFO - +---------- END KW: SSHLibrary.Write (2)
20190402 06:11:59.492 - INFO - +---------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:11:59.492 - INFO - 0
20190402 06:11:59.492 - INFO - ${rc} = 0
20190402 06:11:59.492 - INFO - +---------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:11:59.493 - INFO - +---------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:11:59.493 - INFO - 0
20190402 06:11:59.493 - INFO - +---------- END KW: BuiltIn.Log (0)
20190402 06:11:59.493 - INFO - ${rc} = 0
20190402 06:11:59.493 - INFO - +--------- END KW: Utils.Get Return Code (3)
20190402 06:11:59.493 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:11:59.494 - INFO - +---------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:11:59.494 - INFO - +---------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:59.494 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:11:59.494 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:11:59.494 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:59.495 - INFO - +--------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:11:59.495 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:11:59.495 - INFO - +--------- END KW: Collections.Log Dictionary (1)
20190402 06:11:59.495 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:11:59.495 - INFO - +-------- END KW: Utils.Run Command (1075)
20190402 06:11:59.495 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:11:59.495 - INFO - ${value} = degraded
20190402 06:11:59.495 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 06:11:59.495 - INFO - ${current_value} = degraded
20190402 06:11:59.496 - INFO - +------- END KW: Utils.Retrieve Host Property (1077)
20190402 06:11:59.496 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:11:59.496 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:11:59.496 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:11:59.496 - INFO - +------ END KW: Utils.Check Property Value (1077)
20190402 06:11:59.496 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1077)
20190402 06:11:59.496 - INFO - +---- END KW: Utils.Check If Host Is In Degraded Mode (1078)
20190402 06:11:59.496 - INFO - +--- END KW: BuiltIn.Run Keyword And Ignore Error (1078)
20190402 06:11:59.496 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 60 min | 5 sec | Check Property Value | ${host} | availability | available ]
20190402 06:11:59.497 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:11:59.497 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:11:59.497 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:11:59.498 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:11:59.498 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:11:59.498 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:11:59.498 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:11:59.498 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:11:59.498 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:11:59.499 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:11:59.499 - INFO - &{result_dict} = { stdout= }
20190402 06:11:59.499 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:11:59.499 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:11:59.499 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:11:59.499 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:11:59.500 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:11:59.500 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:11:59.500 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:11:59.500 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:11:59.500 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:11:59.500 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:11:59.500 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:11:59.502 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:11:59.502 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:11:59.502 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:00.589 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:00.590 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:00.590 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1088)
20190402 06:12:00.590 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:00.590 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:00.590 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:00.590 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:12:00.590 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:00.591 - INFO - ${clean_out} = degraded
20190402 06:12:00.591 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:12:00.591 - INFO - ${output} = degraded
20190402 06:12:00.591 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:00.591 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:00.591 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:00.593 - INFO - echo $?
20190402 06:12:00.593 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:12:00.593 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:00.593 - INFO - 0
20190402 06:12:00.593 - INFO - ${rc} = 0
20190402 06:12:00.593 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:12:00.593 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:00.594 - INFO - 0
20190402 06:12:00.594 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:12:00.594 - INFO - ${rc} = 0
20190402 06:12:00.594 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:00.594 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:00.594 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:00.595 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:00.595 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:12:00.595 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:00.595 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:00.595 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:00.595 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:00.595 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:00.596 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:00.596 - INFO - +------ END KW: Utils.Run Command (1098)
20190402 06:12:00.596 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:00.596 - INFO - ${value} = degraded
20190402 06:12:00.596 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:00.596 - INFO - ${current_value} = degraded
20190402 06:12:00.596 - INFO - +----- END KW: Utils.Retrieve Host Property (1099)
20190402 06:12:00.596 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:00.597 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:00.597 - FAIL - degraded != available
20190402 06:12:00.597 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:00.597 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:12:00.597 - INFO - +---- END KW: Utils.Check Property Value (1100)
20190402 06:12:05.597 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:05.598 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:05.598 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:05.598 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:05.598 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:12:05.598 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:05.599 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:05.599 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:05.599 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:05.599 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:05.600 - INFO - &{result_dict} = { stdout= }
20190402 06:12:05.600 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:12:05.600 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:05.600 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:05.600 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:05.600 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:05.601 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:05.601 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:12:05.601 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:05.601 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:05.601 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:05.601 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:05.611 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:05.611 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:12:05.612 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:06.687 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:06.687 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:06.688 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1076)
20190402 06:12:06.688 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:06.688 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:06.688 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:06.688 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:12:06.688 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:06.689 - INFO - ${clean_out} = degraded
20190402 06:12:06.689 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:12:06.689 - INFO - ${output} = degraded
20190402 06:12:06.689 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:06.689 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:06.689 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:06.691 - INFO - echo $?
20190402 06:12:06.691 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:12:06.691 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:06.691 - INFO - 0
20190402 06:12:06.691 - INFO - ${rc} = 0
20190402 06:12:06.691 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:12:06.691 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:06.691 - INFO - 0
20190402 06:12:06.692 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:12:06.692 - INFO - ${rc} = 0
20190402 06:12:06.692 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:06.692 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:06.692 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:06.692 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:06.692 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:12:06.693 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:06.693 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:06.693 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:06.693 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:06.693 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:06.693 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:06.693 - INFO - +------ END KW: Utils.Run Command (1095)
20190402 06:12:06.693 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:06.694 - INFO - ${value} = degraded
20190402 06:12:06.694 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:12:06.694 - INFO - ${current_value} = degraded
20190402 06:12:06.694 - INFO - +----- END KW: Utils.Retrieve Host Property (1096)
20190402 06:12:06.694 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:06.694 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:06.694 - FAIL - degraded != available
20190402 06:12:06.694 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:06.695 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:12:06.695 - INFO - +---- END KW: Utils.Check Property Value (1098)
20190402 06:12:11.695 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:11.695 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:11.696 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:11.696 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:11.696 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:12:11.696 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:11.697 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:11.697 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:11.697 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:11.697 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:11.698 - INFO - &{result_dict} = { stdout= }
20190402 06:12:11.698 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:12:11.698 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:11.698 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:11.698 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:11.698 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:11.698 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:11.699 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:12:11.699 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:11.699 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:11.699 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:11.699 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:11.708 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:11.708 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:12:11.708 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:12.756 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:12.756 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:12.756 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1048)
20190402 06:12:12.756 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:12.756 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:12.757 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:12.757 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:12:12.757 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:12.757 - INFO - ${clean_out} = degraded
20190402 06:12:12.757 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:12.757 - INFO - ${output} = degraded
20190402 06:12:12.757 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:12.757 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:12.757 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:12.759 - INFO - echo $?
20190402 06:12:12.759 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:12:12.759 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:12.759 - INFO - 0
20190402 06:12:12.759 - INFO - ${rc} = 0
20190402 06:12:12.760 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:12:12.760 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:12.760 - INFO - 0
20190402 06:12:12.760 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:12.760 - INFO - ${rc} = 0
20190402 06:12:12.760 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:12.760 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:12.760 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:12.761 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:12.761 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:12:12.761 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:12.761 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:12.761 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:12.761 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:12.761 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:12.762 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:12.762 - INFO - +------ END KW: Utils.Run Command (1066)
20190402 06:12:12.762 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:12.762 - INFO - ${value} = degraded
20190402 06:12:12.762 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:12.762 - INFO - ${current_value} = degraded
20190402 06:12:12.762 - INFO - +----- END KW: Utils.Retrieve Host Property (1067)
20190402 06:12:12.762 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:12.762 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:12.763 - FAIL - degraded != available
20190402 06:12:12.763 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:12.763 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:12:12.763 - INFO - +---- END KW: Utils.Check Property Value (1068)
20190402 06:12:17.763 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:17.764 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:17.764 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:17.764 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:17.764 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:12:17.765 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:17.765 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:17.765 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:17.765 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:17.765 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:17.766 - INFO - &{result_dict} = { stdout= }
20190402 06:12:17.766 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:12:17.766 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:17.766 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:17.766 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:17.767 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:17.767 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:17.767 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:12:17.767 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:17.767 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:17.767 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:17.767 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:17.777 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:17.777 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:12:17.777 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:18.836 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:18.836 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:18.836 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1059)
20190402 06:12:18.836 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:18.837 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:18.837 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:18.837 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:12:18.837 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:18.837 - INFO - ${clean_out} = degraded
20190402 06:12:18.837 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:18.837 - INFO - ${output} = degraded
20190402 06:12:18.837 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:18.838 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:18.838 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:18.839 - INFO - echo $?
20190402 06:12:18.839 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:12:18.839 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:18.840 - INFO - 0
20190402 06:12:18.840 - INFO - ${rc} = 0
20190402 06:12:18.840 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:12:18.840 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:18.840 - INFO - 0
20190402 06:12:18.840 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:18.840 - INFO - ${rc} = 0
20190402 06:12:18.840 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:18.840 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:18.841 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:18.841 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:18.841 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:12:18.841 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:18.841 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:18.842 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:18.842 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:18.842 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:18.842 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:18.842 - INFO - +------ END KW: Utils.Run Command (1077)
20190402 06:12:18.842 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:18.842 - INFO - ${value} = degraded
20190402 06:12:18.842 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:18.842 - INFO - ${current_value} = degraded
20190402 06:12:18.843 - INFO - +----- END KW: Utils.Retrieve Host Property (1078)
20190402 06:12:18.843 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:18.843 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:18.843 - FAIL - degraded != available
20190402 06:12:18.843 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:18.843 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:12:18.843 - INFO - +---- END KW: Utils.Check Property Value (1080)
20190402 06:12:23.843 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:23.844 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:23.844 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:23.845 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:23.845 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:12:23.845 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:23.845 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:23.846 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:12:23.846 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:23.846 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:23.846 - INFO - &{result_dict} = { stdout= }
20190402 06:12:23.846 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:12:23.846 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:23.847 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:23.847 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:23.847 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:23.847 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:23.847 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:12:23.847 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:23.848 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:23.848 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:12:23.848 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:23.858 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:23.858 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:12:23.858 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:24.927 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:24.927 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:24.927 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1069)
20190402 06:12:24.927 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:24.927 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:24.928 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:24.928 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:12:24.928 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:24.928 - INFO - ${clean_out} = degraded
20190402 06:12:24.928 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:24.928 - INFO - ${output} = degraded
20190402 06:12:24.928 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:24.928 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:24.929 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:24.930 - INFO - echo $?
20190402 06:12:24.930 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:12:24.930 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:24.931 - INFO - 0
20190402 06:12:24.931 - INFO - ${rc} = 0
20190402 06:12:24.931 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:12:24.931 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:24.931 - INFO - 0
20190402 06:12:24.931 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:24.931 - INFO - ${rc} = 0
20190402 06:12:24.931 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:24.931 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:24.932 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:24.932 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:24.932 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:12:24.932 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:24.932 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:24.932 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:24.933 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:24.933 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:12:24.933 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:24.933 - INFO - +------ END KW: Utils.Run Command (1088)
20190402 06:12:24.933 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:24.933 - INFO - ${value} = degraded
20190402 06:12:24.933 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:24.933 - INFO - ${current_value} = degraded
20190402 06:12:24.933 - INFO - +----- END KW: Utils.Retrieve Host Property (1089)
20190402 06:12:24.934 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:24.934 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:24.934 - FAIL - degraded != available
20190402 06:12:24.934 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:24.934 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:12:24.934 - INFO - +---- END KW: Utils.Check Property Value (1091)
20190402 06:12:29.934 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:29.935 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:29.935 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:29.935 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:29.935 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:12:29.936 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:29.936 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:29.936 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:29.936 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:29.937 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:29.937 - INFO - &{result_dict} = { stdout= }
20190402 06:12:29.937 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:12:29.937 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:29.938 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:29.938 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:29.938 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:29.938 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:29.938 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:12:29.938 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:29.938 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:29.938 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:29.938 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:29.948 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:29.948 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:12:29.948 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:31.034 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:31.035 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:31.035 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1087)
20190402 06:12:31.035 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:31.035 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:31.035 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:31.035 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:12:31.036 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:31.036 - INFO - ${clean_out} = degraded
20190402 06:12:31.036 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:31.036 - INFO - ${output} = degraded
20190402 06:12:31.036 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:31.036 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:31.036 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:31.038 - INFO - echo $?
20190402 06:12:31.038 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:12:31.038 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:31.038 - INFO - 0
20190402 06:12:31.039 - INFO - ${rc} = 0
20190402 06:12:31.039 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:12:31.039 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:31.039 - INFO - 0
20190402 06:12:31.039 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:31.039 - INFO - ${rc} = 0
20190402 06:12:31.039 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:31.039 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:31.040 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:31.040 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:31.040 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:12:31.040 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:31.040 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:31.040 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:31.040 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:31.041 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:31.041 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:31.041 - INFO - +------ END KW: Utils.Run Command (1105)
20190402 06:12:31.041 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:31.041 - INFO - ${value} = degraded
20190402 06:12:31.041 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:31.041 - INFO - ${current_value} = degraded
20190402 06:12:31.041 - INFO - +----- END KW: Utils.Retrieve Host Property (1106)
20190402 06:12:31.041 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:31.042 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:31.042 - FAIL - degraded != available
20190402 06:12:31.042 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:31.042 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:12:31.042 - INFO - +---- END KW: Utils.Check Property Value (1108)
20190402 06:12:36.042 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:36.043 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:36.043 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:36.043 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:36.043 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:12:36.043 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:36.044 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:36.044 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:36.044 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:36.044 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:36.045 - INFO - &{result_dict} = { stdout= }
20190402 06:12:36.045 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:12:36.045 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:36.045 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:36.045 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:36.046 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:36.046 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:36.046 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:12:36.046 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:36.046 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:36.046 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:36.046 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:36.056 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:36.056 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:12:36.056 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:37.148 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:37.148 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:37.148 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1092)
20190402 06:12:37.148 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:37.148 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:37.149 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:37.149 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:12:37.149 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:37.149 - INFO - ${clean_out} = degraded
20190402 06:12:37.149 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:37.149 - INFO - ${output} = degraded
20190402 06:12:37.149 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:37.149 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:37.150 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:37.151 - INFO - echo $?
20190402 06:12:37.151 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:12:37.151 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:37.152 - INFO - 0
20190402 06:12:37.152 - INFO - ${rc} = 0
20190402 06:12:37.152 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:12:37.152 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:37.152 - INFO - 0
20190402 06:12:37.152 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:37.152 - INFO - ${rc} = 0
20190402 06:12:37.152 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:12:37.152 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:37.153 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:37.153 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:37.153 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:12:37.153 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:37.153 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:37.153 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:37.153 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:37.154 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:12:37.154 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:37.154 - INFO - +------ END KW: Utils.Run Command (1111)
20190402 06:12:37.154 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:37.154 - INFO - ${value} = degraded
20190402 06:12:37.154 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:37.154 - INFO - ${current_value} = degraded
20190402 06:12:37.154 - INFO - +----- END KW: Utils.Retrieve Host Property (1111)
20190402 06:12:37.154 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:37.155 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:37.155 - FAIL - degraded != available
20190402 06:12:37.155 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:37.155 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:12:37.155 - INFO - +---- END KW: Utils.Check Property Value (1113)
20190402 06:12:42.155 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:42.156 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:42.156 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:42.156 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:42.156 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:12:42.156 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:42.157 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:42.157 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:42.157 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:42.157 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:42.158 - INFO - &{result_dict} = { stdout= }
20190402 06:12:42.158 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:12:42.158 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:42.158 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:42.158 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:42.159 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:42.159 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:42.159 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:12:42.159 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:42.159 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:42.159 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:42.159 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:42.168 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:42.168 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:12:42.168 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:43.212 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:43.212 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:43.212 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1044)
20190402 06:12:43.212 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:43.213 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:43.213 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:43.213 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:12:43.213 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:43.213 - INFO - ${clean_out} = degraded
20190402 06:12:43.213 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:43.214 - INFO - ${output} = degraded
20190402 06:12:43.214 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:12:43.214 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:43.214 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:43.215 - INFO - echo $?
20190402 06:12:43.215 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:12:43.215 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:43.217 - INFO - 0
20190402 06:12:43.217 - INFO - ${rc} = 0
20190402 06:12:43.217 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 06:12:43.217 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:43.217 - INFO - 0
20190402 06:12:43.217 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:43.217 - INFO - ${rc} = 0
20190402 06:12:43.218 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 06:12:43.218 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:43.218 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:43.218 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:43.218 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:12:43.218 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:43.219 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:43.219 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:43.219 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:43.219 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:43.219 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:43.219 - INFO - +------ END KW: Utils.Run Command (1063)
20190402 06:12:43.219 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:43.219 - INFO - ${value} = degraded
20190402 06:12:43.220 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:43.220 - INFO - ${current_value} = degraded
20190402 06:12:43.220 - INFO - +----- END KW: Utils.Retrieve Host Property (1064)
20190402 06:12:43.220 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:43.220 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:43.220 - FAIL - degraded != available
20190402 06:12:43.220 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:43.220 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:12:43.220 - INFO - +---- END KW: Utils.Check Property Value (1065)
20190402 06:12:48.221 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:48.221 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:48.221 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:48.222 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:48.222 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:12:48.222 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:48.222 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:48.222 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:12:48.223 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:48.223 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:48.223 - INFO - &{result_dict} = { stdout= }
20190402 06:12:48.223 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:12:48.223 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:48.224 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:48.224 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:48.224 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:48.224 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:48.224 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:12:48.224 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:48.224 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:48.224 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:12:48.225 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:48.235 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:48.235 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:12:48.235 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:49.290 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:49.290 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:49.290 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1055)
20190402 06:12:49.290 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:49.290 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:49.291 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:49.291 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:12:49.291 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:49.291 - INFO - ${clean_out} = degraded
20190402 06:12:49.291 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:49.291 - INFO - ${output} = degraded
20190402 06:12:49.291 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:12:49.291 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:49.292 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:49.295 - INFO - echo $?
20190402 06:12:49.295 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 06:12:49.295 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:49.296 - INFO - 0
20190402 06:12:49.296 - INFO - ${rc} = 0
20190402 06:12:49.296 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:12:49.296 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:49.296 - INFO - 0
20190402 06:12:49.296 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:49.296 - INFO - ${rc} = 0
20190402 06:12:49.297 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 06:12:49.297 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:49.297 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:49.297 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:49.297 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:12:49.297 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:49.298 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:49.298 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:49.298 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:49.298 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:49.298 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:49.298 - INFO - +------ END KW: Utils.Run Command (1076)
20190402 06:12:49.298 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:49.298 - INFO - ${value} = degraded
20190402 06:12:49.299 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:49.299 - INFO - ${current_value} = degraded
20190402 06:12:49.299 - INFO - +----- END KW: Utils.Retrieve Host Property (1078)
20190402 06:12:49.299 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:49.299 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:49.299 - FAIL - degraded != available
20190402 06:12:49.299 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:49.299 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:12:49.299 - INFO - +---- END KW: Utils.Check Property Value (1078)
20190402 06:12:54.300 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:12:54.300 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:12:54.300 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:12:54.301 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:12:54.301 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:12:54.301 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:12:54.301 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:12:54.302 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:12:54.302 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:12:54.302 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:12:54.302 - INFO - &{result_dict} = { stdout= }
20190402 06:12:54.302 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:12:54.302 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:12:54.303 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:12:54.303 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:12:54.303 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:54.303 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:12:54.303 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:12:54.303 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:12:54.303 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:54.304 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:12:54.304 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:12:54.315 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:12:54.315 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:12:54.315 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:12:55.408 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:55.408 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:55.408 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1093)
20190402 06:12:55.408 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:12:55.409 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:12:55.409 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:12:55.409 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:12:55.409 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:12:55.409 - INFO - ${clean_out} = degraded
20190402 06:12:55.410 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:12:55.410 - INFO - ${output} = degraded
20190402 06:12:55.410 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:12:55.410 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:12:55.410 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:12:55.411 - INFO - echo $?
20190402 06:12:55.411 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:12:55.412 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:12:55.412 - INFO - 0
20190402 06:12:55.412 - INFO - ${rc} = 0
20190402 06:12:55.412 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:12:55.412 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:12:55.412 - INFO - 0
20190402 06:12:55.412 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:12:55.412 - INFO - ${rc} = 0
20190402 06:12:55.412 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 06:12:55.413 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:12:55.413 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:12:55.413 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:55.413 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:12:55.413 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:12:55.414 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:12:55.414 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:12:55.414 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:12:55.414 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:12:55.414 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:12:55.414 - INFO - +------ END KW: Utils.Run Command (1113)
20190402 06:12:55.414 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:12:55.414 - INFO - ${value} = degraded
20190402 06:12:55.414 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:12:55.414 - INFO - ${current_value} = degraded
20190402 06:12:55.415 - INFO - +----- END KW: Utils.Retrieve Host Property (1115)
20190402 06:12:55.415 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:12:55.415 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:12:55.415 - FAIL - degraded != available
20190402 06:12:55.415 - DEBUG - Traceback (most recent call last):
  None
20190402 06:12:55.415 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:12:55.415 - INFO - +---- END KW: Utils.Check Property Value (1115)
20190402 06:13:00.415 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:00.416 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:00.416 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:00.416 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:00.417 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:00.417 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:00.417 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:00.417 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:00.417 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:00.418 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:00.418 - INFO - &{result_dict} = { stdout= }
20190402 06:13:00.418 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:13:00.418 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:00.418 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:00.418 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:00.419 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:00.419 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:00.419 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:13:00.419 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:00.419 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:00.419 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:00.419 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:00.424 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:00.424 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 06:13:00.424 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:01.531 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:01.531 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:01.532 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1108)
20190402 06:13:01.532 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:01.532 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:01.532 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:01.532 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:01.532 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:01.533 - INFO - ${clean_out} = degraded
20190402 06:13:01.533 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:13:01.533 - INFO - ${output} = degraded
20190402 06:13:01.533 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:01.533 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:01.533 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:01.535 - INFO - echo $?
20190402 06:13:01.535 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:13:01.535 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:01.535 - INFO - 0
20190402 06:13:01.536 - INFO - ${rc} = 0
20190402 06:13:01.536 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:13:01.536 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:01.536 - INFO - 0
20190402 06:13:01.536 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:13:01.536 - INFO - ${rc} = 0
20190402 06:13:01.536 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:01.536 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:01.537 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:01.537 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:01.537 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:01.537 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:01.537 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:01.537 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:01.537 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:01.538 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:01.538 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:01.538 - INFO - +------ END KW: Utils.Run Command (1121)
20190402 06:13:01.538 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:01.538 - INFO - ${value} = degraded
20190402 06:13:01.538 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:01.538 - INFO - ${current_value} = degraded
20190402 06:13:01.538 - INFO - +----- END KW: Utils.Retrieve Host Property (1122)
20190402 06:13:01.538 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:01.539 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:01.539 - FAIL - degraded != available
20190402 06:13:01.539 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:01.539 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:13:01.539 - INFO - +---- END KW: Utils.Check Property Value (1124)
20190402 06:13:06.539 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:06.540 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:06.540 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:06.541 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:06.541 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:06.541 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:06.542 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:06.542 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:06.542 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:06.543 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:06.543 - INFO - &{result_dict} = { stdout= }
20190402 06:13:06.543 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:13:06.543 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:06.544 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:06.544 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:06.544 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:06.545 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:06.545 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 06:13:06.545 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:06.545 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:06.545 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:06.545 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:06.561 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:06.561 - INFO - +------- END KW: SSHLibrary.Write (16)
20190402 06:13:06.561 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:07.640 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:07.640 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:07.640 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1079)
20190402 06:13:07.640 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:07.640 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:07.641 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:07.641 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:13:07.641 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:07.641 - INFO - ${clean_out} = degraded
20190402 06:13:07.641 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:13:07.641 - INFO - ${output} = degraded
20190402 06:13:07.641 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:07.641 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:07.641 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:07.642 - INFO - echo $?
20190402 06:13:07.643 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:13:07.643 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:07.643 - INFO - 0
20190402 06:13:07.643 - INFO - ${rc} = 0
20190402 06:13:07.643 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:13:07.643 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:07.643 - INFO - 0
20190402 06:13:07.644 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:13:07.644 - INFO - ${rc} = 0
20190402 06:13:07.644 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:07.644 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:07.645 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:07.645 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:07.645 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:07.645 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:07.645 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:07.645 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:07.646 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:07.646 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:13:07.646 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:07.646 - INFO - +------ END KW: Utils.Run Command (1105)
20190402 06:13:07.646 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:07.646 - INFO - ${value} = degraded
20190402 06:13:07.646 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:07.646 - INFO - ${current_value} = degraded
20190402 06:13:07.646 - INFO - +----- END KW: Utils.Retrieve Host Property (1106)
20190402 06:13:07.647 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:07.647 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:07.647 - FAIL - degraded != available
20190402 06:13:07.647 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:07.647 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:13:07.647 - INFO - +---- END KW: Utils.Check Property Value (1108)
20190402 06:13:12.647 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:12.648 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:12.648 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:12.648 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:12.649 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:12.649 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:12.649 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:12.649 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:12.649 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:12.650 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:12.650 - INFO - &{result_dict} = { stdout= }
20190402 06:13:12.650 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:13:12.650 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:12.650 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:12.650 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:12.651 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:12.651 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:12.651 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:13:12.651 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:12.651 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:12.651 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:12.651 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:12.662 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:12.662 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:13:12.663 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:13.717 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:13.718 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:13.718 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1055)
20190402 06:13:13.718 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:13.718 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:13.718 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:13.718 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:13.719 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:13.719 - INFO - ${clean_out} = degraded
20190402 06:13:13.719 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:13:13.719 - INFO - ${output} = degraded
20190402 06:13:13.719 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:13.719 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:13.719 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:13.721 - INFO - echo $?
20190402 06:13:13.721 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:13:13.722 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:13.722 - INFO - 0
20190402 06:13:13.722 - INFO - ${rc} = 0
20190402 06:13:13.722 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:13:13.722 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:13.722 - INFO - 0
20190402 06:13:13.722 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:13:13.722 - INFO - ${rc} = 0
20190402 06:13:13.722 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:13.723 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:13.723 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:13.723 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:13.723 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:13:13.723 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:13.724 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:13.724 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:13.724 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:13.724 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:13.724 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:13.724 - INFO - +------ END KW: Utils.Run Command (1075)
20190402 06:13:13.724 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:13.725 - INFO - ${value} = degraded
20190402 06:13:13.725 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:13:13.725 - INFO - ${current_value} = degraded
20190402 06:13:13.725 - INFO - +----- END KW: Utils.Retrieve Host Property (1077)
20190402 06:13:13.725 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:13.725 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:13.725 - FAIL - degraded != available
20190402 06:13:13.725 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:13.725 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:13:13.725 - INFO - +---- END KW: Utils.Check Property Value (1078)
20190402 06:13:18.726 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:18.726 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:18.727 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:18.727 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:18.727 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:18.727 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:18.727 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:18.728 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:13:18.728 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:18.728 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:18.728 - INFO - &{result_dict} = { stdout= }
20190402 06:13:18.728 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:13:18.728 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:18.729 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:18.729 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:18.729 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:18.729 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:18.729 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:13:18.729 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:18.729 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:18.729 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:18.730 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:18.739 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:18.739 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:13:18.739 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:19.782 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:19.782 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:19.782 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1043)
20190402 06:13:19.782 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:19.783 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:19.783 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:19.783 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:19.783 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:19.783 - INFO - ${clean_out} = degraded
20190402 06:13:19.783 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:13:19.783 - INFO - ${output} = degraded
20190402 06:13:19.783 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:19.783 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:19.784 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:19.785 - INFO - echo $?
20190402 06:13:19.785 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:13:19.785 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:19.786 - INFO - 0
20190402 06:13:19.786 - INFO - ${rc} = 0
20190402 06:13:19.786 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:13:19.786 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:19.786 - INFO - 0
20190402 06:13:19.786 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:13:19.786 - INFO - ${rc} = 0
20190402 06:13:19.786 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:19.786 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:19.787 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:19.787 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:19.787 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:19.787 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:19.787 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:19.787 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:19.788 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:19.788 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:13:19.788 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:19.788 - INFO - +------ END KW: Utils.Run Command (1061)
20190402 06:13:19.788 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:19.788 - INFO - ${value} = degraded
20190402 06:13:19.788 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:19.788 - INFO - ${current_value} = degraded
20190402 06:13:19.788 - INFO - +----- END KW: Utils.Retrieve Host Property (1062)
20190402 06:13:19.788 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:19.789 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:19.789 - FAIL - degraded != available
20190402 06:13:19.789 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:19.789 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:13:19.789 - INFO - +---- END KW: Utils.Check Property Value (1063)
20190402 06:13:24.789 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:24.790 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:24.790 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:24.791 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:24.791 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:24.791 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:24.791 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:24.791 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:24.791 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:24.792 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:24.792 - INFO - &{result_dict} = { stdout= }
20190402 06:13:24.792 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:13:24.792 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:24.792 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:24.792 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:24.793 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:24.793 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:24.793 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:13:24.793 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:24.793 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:24.793 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:24.793 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:24.805 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:24.805 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:13:24.805 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:25.936 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:25.936 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:25.937 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1131)
20190402 06:13:25.937 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:25.937 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:25.937 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:25.937 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:25.937 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:25.938 - INFO - ${clean_out} = degraded
20190402 06:13:25.938 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:13:25.938 - INFO - ${output} = degraded
20190402 06:13:25.938 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:25.938 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:25.938 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:25.940 - INFO - echo $?
20190402 06:13:25.940 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:13:25.940 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:25.940 - INFO - 0
20190402 06:13:25.940 - INFO - ${rc} = 0
20190402 06:13:25.940 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:13:25.940 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:25.941 - INFO - 0
20190402 06:13:25.941 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:13:25.941 - INFO - ${rc} = 0
20190402 06:13:25.941 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:25.941 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:25.941 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:25.942 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:25.942 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:25.942 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:25.942 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:25.942 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:25.942 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:25.942 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:25.942 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:25.942 - INFO - +------ END KW: Utils.Run Command (1151)
20190402 06:13:25.943 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:25.943 - INFO - ${value} = degraded
20190402 06:13:25.943 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:25.943 - INFO - ${current_value} = degraded
20190402 06:13:25.943 - INFO - +----- END KW: Utils.Retrieve Host Property (1153)
20190402 06:13:25.943 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:25.943 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:25.943 - FAIL - degraded != available
20190402 06:13:25.943 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:25.944 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:13:25.944 - INFO - +---- END KW: Utils.Check Property Value (1155)
20190402 06:13:30.944 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:30.944 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:30.945 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:30.945 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:30.945 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:13:30.945 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:30.946 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:30.946 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:30.946 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:30.946 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:30.947 - INFO - &{result_dict} = { stdout= }
20190402 06:13:30.947 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:13:30.947 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:30.947 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:30.947 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:30.947 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:30.948 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:30.948 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:13:30.948 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:30.948 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:30.948 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:30.948 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:30.959 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:30.959 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:13:30.959 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:32.094 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:32.094 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:32.094 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1135)
20190402 06:13:32.095 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:32.095 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:32.095 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:32.095 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:32.095 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:32.095 - INFO - ${clean_out} = degraded
20190402 06:13:32.096 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:13:32.096 - INFO - ${output} = degraded
20190402 06:13:32.096 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:32.096 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:32.096 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:32.097 - INFO - echo $?
20190402 06:13:32.097 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:13:32.097 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:32.098 - INFO - 0
20190402 06:13:32.098 - INFO - ${rc} = 0
20190402 06:13:32.098 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:13:32.098 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:32.098 - INFO - 0
20190402 06:13:32.098 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:13:32.098 - INFO - ${rc} = 0
20190402 06:13:32.098 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 06:13:32.098 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:32.099 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:32.099 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:32.099 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:32.099 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:32.099 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:32.099 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:32.100 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:32.100 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:13:32.100 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:32.100 - INFO - +------ END KW: Utils.Run Command (1155)
20190402 06:13:32.100 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:32.100 - INFO - ${value} = degraded
20190402 06:13:32.100 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:32.100 - INFO - ${current_value} = degraded
20190402 06:13:32.100 - INFO - +----- END KW: Utils.Retrieve Host Property (1156)
20190402 06:13:32.101 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:32.101 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:32.101 - FAIL - degraded != available
20190402 06:13:32.101 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:32.101 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:13:32.101 - INFO - +---- END KW: Utils.Check Property Value (1157)
20190402 06:13:37.101 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:37.102 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:37.102 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:37.103 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:37.103 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:37.103 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:37.104 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:37.104 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:37.105 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:37.105 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:37.106 - INFO - &{result_dict} = { stdout= }
20190402 06:13:37.106 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:13:37.106 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:37.106 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:37.106 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:37.107 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:37.107 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:37.107 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:13:37.107 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:37.107 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:37.108 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:13:37.108 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:37.125 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:37.125 - INFO - +------- END KW: SSHLibrary.Write (17)
20190402 06:13:37.125 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:38.240 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:38.240 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:38.240 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1115)
20190402 06:13:38.241 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:38.241 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:38.241 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:38.241 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:38.241 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:38.242 - INFO - ${clean_out} = degraded
20190402 06:13:38.242 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:13:38.242 - INFO - ${output} = degraded
20190402 06:13:38.242 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:38.242 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:38.242 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:38.244 - INFO - echo $?
20190402 06:13:38.244 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:13:38.244 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:38.244 - INFO - 0
20190402 06:13:38.244 - INFO - ${rc} = 0
20190402 06:13:38.244 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:13:38.244 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:38.244 - INFO - 0
20190402 06:13:38.244 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:13:38.244 - INFO - ${rc} = 0
20190402 06:13:38.245 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:38.245 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:38.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:38.245 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:38.245 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:13:38.245 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:38.246 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:38.246 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:38.246 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:38.246 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:38.246 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:38.246 - INFO - +------ END KW: Utils.Run Command (1143)
20190402 06:13:38.246 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:38.246 - INFO - ${value} = degraded
20190402 06:13:38.247 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:13:38.247 - INFO - ${current_value} = degraded
20190402 06:13:38.247 - INFO - +----- END KW: Utils.Retrieve Host Property (1145)
20190402 06:13:38.247 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:38.247 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:38.247 - FAIL - degraded != available
20190402 06:13:38.247 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:38.247 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:13:38.247 - INFO - +---- END KW: Utils.Check Property Value (1146)
20190402 06:13:43.248 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:43.248 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:43.248 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:43.249 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:43.249 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:13:43.249 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:43.249 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:43.250 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:43.250 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:43.250 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:43.250 - INFO - &{result_dict} = { stdout= }
20190402 06:13:43.250 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:13:43.251 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:43.251 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:43.251 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:43.251 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:43.251 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:43.251 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:13:43.251 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:43.252 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:43.252 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:13:43.252 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:43.261 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:43.261 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:13:43.262 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:44.354 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:44.354 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:44.355 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1094)
20190402 06:13:44.355 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:44.355 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:44.355 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:44.355 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:44.355 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:44.356 - INFO - ${clean_out} = degraded
20190402 06:13:44.356 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:13:44.356 - INFO - ${output} = degraded
20190402 06:13:44.356 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:44.356 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:44.356 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:44.358 - INFO - echo $?
20190402 06:13:44.358 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:13:44.358 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:44.358 - INFO - 0
20190402 06:13:44.358 - INFO - ${rc} = 0
20190402 06:13:44.358 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:13:44.359 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:44.359 - INFO - 0
20190402 06:13:44.359 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:13:44.359 - INFO - ${rc} = 0
20190402 06:13:44.359 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:44.359 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:44.359 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:44.360 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:44.360 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:44.360 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:44.360 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:44.360 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:44.360 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:44.360 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:44.360 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:44.361 - INFO - +------ END KW: Utils.Run Command (1111)
20190402 06:13:44.361 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:44.361 - INFO - ${value} = degraded
20190402 06:13:44.361 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:44.361 - INFO - ${current_value} = degraded
20190402 06:13:44.361 - INFO - +----- END KW: Utils.Retrieve Host Property (1113)
20190402 06:13:44.361 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:44.361 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:44.361 - FAIL - degraded != available
20190402 06:13:44.362 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:44.362 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:13:44.362 - INFO - +---- END KW: Utils.Check Property Value (1114)
20190402 06:13:49.362 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:49.362 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:49.363 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:49.363 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:49.363 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:13:49.363 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:49.364 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:49.364 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:49.364 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:49.364 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:49.365 - INFO - &{result_dict} = { stdout= }
20190402 06:13:49.365 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:13:49.365 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:49.365 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:49.365 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:49.365 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:49.366 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:49.366 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:13:49.366 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:49.366 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:49.366 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:49.366 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:49.375 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:49.375 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:13:49.375 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:50.436 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:50.436 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:50.436 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1061)
20190402 06:13:50.436 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:50.436 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:50.437 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:50.437 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:13:50.437 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:50.437 - INFO - ${clean_out} = degraded
20190402 06:13:50.437 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:13:50.437 - INFO - ${output} = degraded
20190402 06:13:50.437 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:50.437 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:50.437 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:50.438 - INFO - echo $?
20190402 06:13:50.439 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:13:50.439 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:50.439 - INFO - 0
20190402 06:13:50.439 - INFO - ${rc} = 0
20190402 06:13:50.439 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:13:50.439 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:50.440 - INFO - 0
20190402 06:13:50.440 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:13:50.440 - INFO - ${rc} = 0
20190402 06:13:50.440 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:50.440 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:50.440 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:50.441 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:50.441 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:50.441 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:50.441 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:50.441 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:50.441 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:50.441 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:50.441 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:50.441 - INFO - +------ END KW: Utils.Run Command (1078)
20190402 06:13:50.442 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:50.442 - INFO - ${value} = degraded
20190402 06:13:50.442 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:50.442 - INFO - ${current_value} = degraded
20190402 06:13:50.442 - INFO - +----- END KW: Utils.Retrieve Host Property (1080)
20190402 06:13:50.442 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:50.442 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:50.442 - FAIL - degraded != available
20190402 06:13:50.442 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:50.442 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:13:50.443 - INFO - +---- END KW: Utils.Check Property Value (1081)
20190402 06:13:55.443 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:13:55.443 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:13:55.444 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:13:55.444 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:13:55.444 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:13:55.444 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:13:55.445 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:13:55.445 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:13:55.445 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:13:55.445 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:13:55.446 - INFO - &{result_dict} = { stdout= }
20190402 06:13:55.446 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:13:55.446 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:13:55.446 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:55.446 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:13:55.446 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:55.446 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:13:55.447 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:13:55.447 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:13:55.447 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:55.447 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:13:55.447 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:13:55.456 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:13:55.456 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:13:55.456 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:13:56.525 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:56.525 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:56.525 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1069)
20190402 06:13:56.525 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:13:56.526 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:13:56.526 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:13:56.526 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:13:56.526 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:13:56.526 - INFO - ${clean_out} = degraded
20190402 06:13:56.526 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:13:56.526 - INFO - ${output} = degraded
20190402 06:13:56.526 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:13:56.526 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:13:56.527 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:13:56.528 - INFO - echo $?
20190402 06:13:56.528 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:13:56.528 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:13:56.528 - INFO - 0
20190402 06:13:56.528 - INFO - ${rc} = 0
20190402 06:13:56.529 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:13:56.529 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:13:56.529 - INFO - 0
20190402 06:13:56.529 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:13:56.529 - INFO - ${rc} = 0
20190402 06:13:56.529 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:13:56.529 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:13:56.529 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:13:56.530 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:13:56.530 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:13:56.530 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:13:56.530 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:13:56.530 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:13:56.530 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:13:56.530 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:13:56.531 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:13:56.531 - INFO - +------ END KW: Utils.Run Command (1087)
20190402 06:13:56.531 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:13:56.531 - INFO - ${value} = degraded
20190402 06:13:56.531 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:13:56.531 - INFO - ${current_value} = degraded
20190402 06:13:56.531 - INFO - +----- END KW: Utils.Retrieve Host Property (1088)
20190402 06:13:56.531 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:13:56.531 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:13:56.532 - FAIL - degraded != available
20190402 06:13:56.532 - DEBUG - Traceback (most recent call last):
  None
20190402 06:13:56.532 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:13:56.532 - INFO - +---- END KW: Utils.Check Property Value (1089)
20190402 06:14:01.532 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:01.533 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:01.533 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:01.533 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:01.533 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:01.533 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:01.534 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:01.534 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:01.534 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:01.534 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:01.535 - INFO - &{result_dict} = { stdout= }
20190402 06:14:01.535 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:14:01.535 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:01.535 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:01.535 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:01.535 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:01.536 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:01.536 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:01.536 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:01.536 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:01.536 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:01.536 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:01.542 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:01.543 - INFO - +------- END KW: SSHLibrary.Write (7)
20190402 06:14:01.543 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:02.600 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:02.601 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:02.601 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1058)
20190402 06:14:02.601 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:02.601 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:02.602 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:02.602 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:14:02.602 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:02.602 - INFO - ${clean_out} = degraded
20190402 06:14:02.602 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:02.602 - INFO - ${output} = degraded
20190402 06:14:02.602 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:02.602 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:02.603 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:02.604 - INFO - echo $?
20190402 06:14:02.604 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:14:02.604 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:02.604 - INFO - 0
20190402 06:14:02.605 - INFO - ${rc} = 0
20190402 06:14:02.605 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:14:02.605 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:02.605 - INFO - 0
20190402 06:14:02.605 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:02.605 - INFO - ${rc} = 0
20190402 06:14:02.605 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:02.605 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:02.606 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:02.606 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:02.606 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:02.606 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:02.606 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:02.606 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:02.606 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:02.607 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:14:02.607 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:02.607 - INFO - +------ END KW: Utils.Run Command (1074)
20190402 06:14:02.607 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:02.607 - INFO - ${value} = degraded
20190402 06:14:02.607 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:02.607 - INFO - ${current_value} = degraded
20190402 06:14:02.607 - INFO - +----- END KW: Utils.Retrieve Host Property (1074)
20190402 06:14:02.608 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:02.608 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:02.608 - FAIL - degraded != available
20190402 06:14:02.608 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:02.608 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:14:02.608 - INFO - +---- END KW: Utils.Check Property Value (1076)
20190402 06:14:07.608 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:07.609 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:07.609 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:07.610 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:07.610 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:14:07.610 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:07.610 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:07.611 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:14:07.611 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:07.611 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:07.611 - INFO - &{result_dict} = { stdout= }
20190402 06:14:07.611 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:14:07.611 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:07.612 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:07.612 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:07.612 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:07.612 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:07.612 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:14:07.612 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:07.612 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:07.613 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:14:07.613 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:07.622 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:07.622 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:14:07.622 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:08.679 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:08.679 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:08.679 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1057)
20190402 06:14:08.679 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:08.679 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:08.680 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:08.680 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:14:08.680 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:08.680 - INFO - ${clean_out} = degraded
20190402 06:14:08.680 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:08.680 - INFO - ${output} = degraded
20190402 06:14:08.680 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:08.680 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:08.681 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:08.682 - INFO - echo $?
20190402 06:14:08.682 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:14:08.682 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:08.683 - INFO - 0
20190402 06:14:08.683 - INFO - ${rc} = 0
20190402 06:14:08.683 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:14:08.683 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:08.683 - INFO - 0
20190402 06:14:08.683 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:08.683 - INFO - ${rc} = 0
20190402 06:14:08.683 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:08.683 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:08.684 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:08.684 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:08.684 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:08.684 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:08.684 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:08.684 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:08.685 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:08.685 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:14:08.685 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:08.685 - INFO - +------ END KW: Utils.Run Command (1075)
20190402 06:14:08.685 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:08.685 - INFO - ${value} = degraded
20190402 06:14:08.685 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:08.685 - INFO - ${current_value} = degraded
20190402 06:14:08.685 - INFO - +----- END KW: Utils.Retrieve Host Property (1076)
20190402 06:14:08.686 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:08.686 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:08.686 - FAIL - degraded != available
20190402 06:14:08.686 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:08.686 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:14:08.686 - INFO - +---- END KW: Utils.Check Property Value (1078)
20190402 06:14:13.686 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:13.687 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:13.687 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:13.687 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:13.687 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:13.688 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:13.688 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:13.688 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:13.688 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:13.689 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:13.689 - INFO - &{result_dict} = { stdout= }
20190402 06:14:13.689 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:14:13.689 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:13.689 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:13.689 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:13.690 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:13.690 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:13.690 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:13.690 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:13.690 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:13.690 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:13.690 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:13.700 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:13.700 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:14:13.700 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:14.773 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:14.773 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:14.773 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1073)
20190402 06:14:14.773 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:14.773 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:14.773 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:14.774 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:14:14.774 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:14.774 - INFO - ${clean_out} = degraded
20190402 06:14:14.774 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:14.774 - INFO - ${output} = degraded
20190402 06:14:14.774 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:14.774 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:14.774 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:14.776 - INFO - echo $?
20190402 06:14:14.776 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:14:14.776 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:14.776 - INFO - 0
20190402 06:14:14.776 - INFO - ${rc} = 0
20190402 06:14:14.776 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:14:14.776 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:14.777 - INFO - 0
20190402 06:14:14.777 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:14:14.777 - INFO - ${rc} = 0
20190402 06:14:14.777 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:14.777 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:14.778 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:14.778 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:14.778 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:14.778 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:14.778 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:14.778 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:14.778 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:14.779 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:14:14.779 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:14.779 - INFO - +------ END KW: Utils.Run Command (1091)
20190402 06:14:14.779 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:14.779 - INFO - ${value} = degraded
20190402 06:14:14.779 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:14.779 - INFO - ${current_value} = degraded
20190402 06:14:14.779 - INFO - +----- END KW: Utils.Retrieve Host Property (1092)
20190402 06:14:14.779 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:14.780 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:14.780 - FAIL - degraded != available
20190402 06:14:14.780 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:14.780 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:14:14.780 - INFO - +---- END KW: Utils.Check Property Value (1094)
20190402 06:14:19.780 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:19.781 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:19.781 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:19.781 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:19.781 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:19.781 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:19.782 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:19.782 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:19.782 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:19.782 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:19.783 - INFO - &{result_dict} = { stdout= }
20190402 06:14:19.783 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:14:19.783 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:19.783 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:19.783 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:19.783 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:19.784 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:19.784 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:19.784 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:19.784 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:19.784 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:19.784 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:19.794 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:19.794 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:14:19.794 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:20.851 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:20.851 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:20.851 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1057)
20190402 06:14:20.851 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:20.852 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:20.852 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:20.852 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:14:20.852 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:20.852 - INFO - ${clean_out} = degraded
20190402 06:14:20.852 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:20.852 - INFO - ${output} = degraded
20190402 06:14:20.852 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:20.852 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:20.853 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:20.854 - INFO - echo $?
20190402 06:14:20.854 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:14:20.854 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:20.854 - INFO - 0
20190402 06:14:20.854 - INFO - ${rc} = 0
20190402 06:14:20.855 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:14:20.855 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:20.855 - INFO - 0
20190402 06:14:20.855 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:20.855 - INFO - ${rc} = 0
20190402 06:14:20.855 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:20.855 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:20.856 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:20.856 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:20.856 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:20.856 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:20.856 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:20.856 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:20.856 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:20.856 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:14:20.857 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:20.857 - INFO - +------ END KW: Utils.Run Command (1076)
20190402 06:14:20.857 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:20.857 - INFO - ${value} = degraded
20190402 06:14:20.857 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:20.857 - INFO - ${current_value} = degraded
20190402 06:14:20.857 - INFO - +----- END KW: Utils.Retrieve Host Property (1076)
20190402 06:14:20.857 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:20.858 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:20.858 - FAIL - degraded != available
20190402 06:14:20.858 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:20.858 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:14:20.858 - INFO - +---- END KW: Utils.Check Property Value (1078)
20190402 06:14:25.858 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:25.859 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:25.859 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:25.859 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:25.859 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:25.860 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:25.860 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:25.860 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:25.860 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:25.860 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:25.861 - INFO - &{result_dict} = { stdout= }
20190402 06:14:25.861 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:14:25.861 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:25.861 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:25.861 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:25.862 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:25.862 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:25.862 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:25.862 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:25.862 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:25.862 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:25.862 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:25.872 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:25.872 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:14:25.873 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:26.948 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:26.948 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:26.948 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1075)
20190402 06:14:26.948 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:26.949 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:26.949 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:26.949 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:14:26.949 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:26.949 - INFO - ${clean_out} = degraded
20190402 06:14:26.949 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:26.949 - INFO - ${output} = degraded
20190402 06:14:26.950 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:14:26.950 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:26.950 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:26.951 - INFO - echo $?
20190402 06:14:26.952 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:14:26.952 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:26.952 - INFO - 0
20190402 06:14:26.952 - INFO - ${rc} = 0
20190402 06:14:26.952 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:14:26.952 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:26.952 - INFO - 0
20190402 06:14:26.952 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:26.953 - INFO - ${rc} = 0
20190402 06:14:26.953 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:26.953 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:26.953 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:26.953 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:26.953 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:14:26.954 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:26.954 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:26.954 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:26.954 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:26.954 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:14:26.954 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:26.954 - INFO - +------ END KW: Utils.Run Command (1094)
20190402 06:14:26.954 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:26.955 - INFO - ${value} = degraded
20190402 06:14:26.955 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:14:26.955 - INFO - ${current_value} = degraded
20190402 06:14:26.955 - INFO - +----- END KW: Utils.Retrieve Host Property (1096)
20190402 06:14:26.955 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:26.955 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:26.955 - FAIL - degraded != available
20190402 06:14:26.955 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:26.955 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:14:26.955 - INFO - +---- END KW: Utils.Check Property Value (1097)
20190402 06:14:31.956 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:31.956 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:31.957 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:31.957 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:31.958 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:31.958 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:31.958 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:31.958 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:31.958 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:31.959 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:31.959 - INFO - &{result_dict} = { stdout= }
20190402 06:14:31.959 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:14:31.959 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:31.959 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:31.959 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:31.960 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:31.960 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:31.960 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:31.960 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:31.960 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:31.960 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:31.960 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:31.970 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:31.970 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:14:31.970 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:33.097 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:33.097 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:33.097 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1127)
20190402 06:14:33.098 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:33.098 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:33.098 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:33.098 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:14:33.098 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:33.099 - INFO - ${clean_out} = degraded
20190402 06:14:33.099 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:14:33.099 - INFO - ${output} = degraded
20190402 06:14:33.099 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:33.099 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:33.099 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:33.101 - INFO - echo $?
20190402 06:14:33.101 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:14:33.101 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:33.101 - INFO - 0
20190402 06:14:33.101 - INFO - ${rc} = 0
20190402 06:14:33.101 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:14:33.101 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:33.102 - INFO - 0
20190402 06:14:33.102 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:14:33.102 - INFO - ${rc} = 0
20190402 06:14:33.102 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:33.102 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:33.102 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:33.103 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:33.103 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:33.103 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:33.103 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:33.103 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:33.103 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:33.103 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:14:33.103 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:33.103 - INFO - +------ END KW: Utils.Run Command (1145)
20190402 06:14:33.104 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:33.104 - INFO - ${value} = degraded
20190402 06:14:33.104 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:33.104 - INFO - ${current_value} = degraded
20190402 06:14:33.104 - INFO - +----- END KW: Utils.Retrieve Host Property (1148)
20190402 06:14:33.104 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:33.104 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:33.104 - FAIL - degraded != available
20190402 06:14:33.105 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:33.105 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:14:33.105 - INFO - +---- END KW: Utils.Check Property Value (1149)
20190402 06:14:38.105 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:38.105 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:38.106 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:38.106 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:38.106 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:38.106 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:38.107 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:38.107 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:38.107 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:38.107 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:38.108 - INFO - &{result_dict} = { stdout= }
20190402 06:14:38.108 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:14:38.108 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:38.108 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:38.108 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:38.109 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:38.109 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:38.109 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:38.109 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:38.109 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:38.109 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:38.109 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:38.120 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:38.120 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:14:38.120 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:39.177 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:39.177 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:39.177 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1057)
20190402 06:14:39.178 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:39.178 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:39.178 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:39.178 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:14:39.178 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:39.179 - INFO - ${clean_out} = degraded
20190402 06:14:39.179 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:14:39.179 - INFO - ${output} = degraded
20190402 06:14:39.179 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:39.179 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:39.179 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:39.181 - INFO - echo $?
20190402 06:14:39.181 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:14:39.181 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:39.181 - INFO - 0
20190402 06:14:39.181 - INFO - ${rc} = 0
20190402 06:14:39.181 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:14:39.181 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:39.181 - INFO - 0
20190402 06:14:39.182 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:39.182 - INFO - ${rc} = 0
20190402 06:14:39.182 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:39.182 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:39.182 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:39.182 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:39.183 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:39.183 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:39.183 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:39.183 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:39.183 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:39.183 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:14:39.183 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:39.183 - INFO - +------ END KW: Utils.Run Command (1077)
20190402 06:14:39.184 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:39.184 - INFO - ${value} = degraded
20190402 06:14:39.184 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:14:39.184 - INFO - ${current_value} = degraded
20190402 06:14:39.184 - INFO - +----- END KW: Utils.Retrieve Host Property (1079)
20190402 06:14:39.184 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:39.184 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:39.184 - FAIL - degraded != available
20190402 06:14:39.184 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:39.184 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:14:39.185 - INFO - +---- END KW: Utils.Check Property Value (1080)
20190402 06:14:44.185 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:44.185 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:44.186 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:44.186 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:44.186 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:44.186 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:44.187 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:44.187 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:44.187 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:44.187 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:44.188 - INFO - &{result_dict} = { stdout= }
20190402 06:14:44.188 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:14:44.188 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:44.188 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:44.188 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:44.188 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:44.189 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:44.189 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:44.189 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:44.189 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:44.189 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:44.189 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:44.199 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:44.199 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:14:44.199 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:45.297 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:45.297 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:45.297 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1098)
20190402 06:14:45.297 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:45.298 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:45.298 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:45.298 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:14:45.298 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:45.298 - INFO - ${clean_out} = degraded
20190402 06:14:45.298 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:45.298 - INFO - ${output} = degraded
20190402 06:14:45.298 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:45.298 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:45.299 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:45.300 - INFO - echo $?
20190402 06:14:45.300 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:14:45.300 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:45.301 - INFO - 0
20190402 06:14:45.301 - INFO - ${rc} = 0
20190402 06:14:45.301 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:14:45.301 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:45.301 - INFO - 0
20190402 06:14:45.301 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:45.301 - INFO - ${rc} = 0
20190402 06:14:45.301 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:45.301 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:45.302 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:45.302 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:45.302 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:45.302 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:45.302 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:45.302 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:45.303 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:45.303 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:14:45.303 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:45.303 - INFO - +------ END KW: Utils.Run Command (1117)
20190402 06:14:45.303 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:45.303 - INFO - ${value} = degraded
20190402 06:14:45.303 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:45.303 - INFO - ${current_value} = degraded
20190402 06:14:45.303 - INFO - +----- END KW: Utils.Retrieve Host Property (1118)
20190402 06:14:45.304 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:45.304 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:45.304 - FAIL - degraded != available
20190402 06:14:45.304 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:45.304 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:14:45.304 - INFO - +---- END KW: Utils.Check Property Value (1119)
20190402 06:14:50.304 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:50.305 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:50.305 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:50.305 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:50.305 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:50.306 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:50.306 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:50.306 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:14:50.306 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:50.306 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:50.307 - INFO - &{result_dict} = { stdout= }
20190402 06:14:50.307 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:14:50.307 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:50.307 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:50.308 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:50.308 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:50.308 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:50.308 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:50.308 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:50.308 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:50.308 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:50.308 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:50.319 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:50.319 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:14:50.319 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:51.357 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:51.357 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:51.358 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1038)
20190402 06:14:51.358 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:51.358 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:51.358 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:51.358 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:14:51.358 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:51.359 - INFO - ${clean_out} = degraded
20190402 06:14:51.359 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:14:51.359 - INFO - ${output} = degraded
20190402 06:14:51.359 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:51.359 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:51.359 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:51.360 - INFO - echo $?
20190402 06:14:51.361 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:14:51.361 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:51.361 - INFO - 0
20190402 06:14:51.361 - INFO - ${rc} = 0
20190402 06:14:51.361 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:14:51.361 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:51.361 - INFO - 0
20190402 06:14:51.361 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:51.362 - INFO - ${rc} = 0
20190402 06:14:51.362 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:51.362 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:51.362 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:51.362 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:51.362 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:14:51.363 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:51.363 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:51.363 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:51.363 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:51.363 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:14:51.363 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:51.363 - INFO - +------ END KW: Utils.Run Command (1057)
20190402 06:14:51.363 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:51.364 - INFO - ${value} = degraded
20190402 06:14:51.364 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:14:51.364 - INFO - ${current_value} = degraded
20190402 06:14:51.364 - INFO - +----- END KW: Utils.Retrieve Host Property (1059)
20190402 06:14:51.364 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:51.364 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:51.364 - FAIL - degraded != available
20190402 06:14:51.364 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:51.364 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:14:51.364 - INFO - +---- END KW: Utils.Check Property Value (1060)
20190402 06:14:56.365 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:14:56.365 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:14:56.366 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:14:56.366 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:14:56.366 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:14:56.366 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:14:56.366 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:14:56.367 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:14:56.367 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:14:56.367 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:14:56.367 - INFO - &{result_dict} = { stdout= }
20190402 06:14:56.367 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:14:56.367 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:14:56.368 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:56.368 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:14:56.368 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:56.368 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:14:56.369 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:14:56.369 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:14:56.369 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:56.369 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:14:56.369 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:14:56.382 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:14:56.382 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 06:14:56.382 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:14:57.452 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:57.452 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:57.452 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1070)
20190402 06:14:57.452 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:14:57.452 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:14:57.453 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:14:57.453 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:14:57.453 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:14:57.453 - INFO - ${clean_out} = degraded
20190402 06:14:57.453 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:14:57.453 - INFO - ${output} = degraded
20190402 06:14:57.453 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:14:57.453 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:14:57.453 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:14:57.455 - INFO - echo $?
20190402 06:14:57.455 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:14:57.455 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:14:57.456 - INFO - 0
20190402 06:14:57.456 - INFO - ${rc} = 0
20190402 06:14:57.456 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:14:57.456 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:14:57.456 - INFO - 0
20190402 06:14:57.456 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:14:57.456 - INFO - ${rc} = 0
20190402 06:14:57.456 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:14:57.456 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:14:57.457 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:14:57.457 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:14:57.457 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:14:57.457 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:14:57.458 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:14:57.458 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:14:57.458 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:14:57.458 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:14:57.458 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:14:57.458 - INFO - +------ END KW: Utils.Run Command (1092)
20190402 06:14:57.458 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:14:57.458 - INFO - ${value} = degraded
20190402 06:14:57.459 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:14:57.459 - INFO - ${current_value} = degraded
20190402 06:14:57.459 - INFO - +----- END KW: Utils.Retrieve Host Property (1094)
20190402 06:14:57.459 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:14:57.459 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:14:57.459 - FAIL - degraded != available
20190402 06:14:57.459 - DEBUG - Traceback (most recent call last):
  None
20190402 06:14:57.459 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:14:57.459 - INFO - +---- END KW: Utils.Check Property Value (1094)
20190402 06:15:02.460 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:02.460 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:02.461 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:02.461 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:02.461 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:15:02.461 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:02.461 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:02.462 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:15:02.462 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:02.462 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:02.462 - INFO - &{result_dict} = { stdout= }
20190402 06:15:02.462 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:15:02.462 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:02.463 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:02.463 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:02.463 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:02.463 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:02.463 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:15:02.463 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:02.463 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:02.464 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:15:02.464 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:02.474 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:02.475 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:15:02.475 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:03.549 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:03.549 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:03.550 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1074)
20190402 06:15:03.550 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:03.550 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:03.550 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:03.550 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:03.550 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:03.551 - INFO - ${clean_out} = degraded
20190402 06:15:03.551 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:15:03.551 - INFO - ${output} = degraded
20190402 06:15:03.551 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:03.551 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:03.551 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:03.553 - INFO - echo $?
20190402 06:15:03.553 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:15:03.553 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:03.553 - INFO - 0
20190402 06:15:03.554 - INFO - ${rc} = 0
20190402 06:15:03.554 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:15:03.554 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:03.554 - INFO - 0
20190402 06:15:03.554 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:03.554 - INFO - ${rc} = 0
20190402 06:15:03.554 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:03.554 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:03.555 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:03.555 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:03.555 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:03.555 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:03.555 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:03.555 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:03.555 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:03.556 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:03.556 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:03.556 - INFO - +------ END KW: Utils.Run Command (1095)
20190402 06:15:03.556 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:03.556 - INFO - ${value} = degraded
20190402 06:15:03.556 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:03.556 - INFO - ${current_value} = degraded
20190402 06:15:03.556 - INFO - +----- END KW: Utils.Retrieve Host Property (1096)
20190402 06:15:03.556 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:03.557 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:03.557 - FAIL - degraded != available
20190402 06:15:03.557 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:03.557 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:15:03.557 - INFO - +---- END KW: Utils.Check Property Value (1097)
20190402 06:15:08.557 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:08.558 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:08.558 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:08.558 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:08.558 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:15:08.558 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:08.559 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:08.559 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:15:08.559 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:08.559 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:08.560 - INFO - &{result_dict} = { stdout= }
20190402 06:15:08.560 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:15:08.560 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:08.560 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:08.560 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:08.560 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:08.561 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:08.561 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:15:08.561 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:08.561 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:08.561 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:15:08.561 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:08.570 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:08.570 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:15:08.571 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:09.601 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:09.602 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:09.602 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1031)
20190402 06:15:09.602 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:09.602 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:09.603 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:09.603 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:15:09.603 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:09.603 - INFO - ${clean_out} = degraded
20190402 06:15:09.603 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:15:09.603 - INFO - ${output} = degraded
20190402 06:15:09.603 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:09.603 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:09.604 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:09.605 - INFO - echo $?
20190402 06:15:09.605 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:15:09.605 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:09.606 - INFO - 0
20190402 06:15:09.606 - INFO - ${rc} = 0
20190402 06:15:09.606 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:15:09.606 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:09.606 - INFO - 0
20190402 06:15:09.606 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:09.606 - INFO - ${rc} = 0
20190402 06:15:09.606 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:09.606 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:09.607 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:09.607 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:09.607 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:09.607 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:09.607 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:09.607 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:09.608 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:09.608 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:15:09.608 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:09.608 - INFO - +------ END KW: Utils.Run Command (1050)
20190402 06:15:09.608 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:09.608 - INFO - ${value} = degraded
20190402 06:15:09.608 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:09.608 - INFO - ${current_value} = degraded
20190402 06:15:09.608 - INFO - +----- END KW: Utils.Retrieve Host Property (1050)
20190402 06:15:09.609 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:09.609 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:09.609 - FAIL - degraded != available
20190402 06:15:09.609 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:09.609 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:15:09.609 - INFO - +---- END KW: Utils.Check Property Value (1052)
20190402 06:15:14.610 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:14.611 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:14.613 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:14.614 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:14.614 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:15:14.614 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:14.615 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:14.615 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:15:14.615 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:14.615 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:14.616 - INFO - &{result_dict} = { stdout= }
20190402 06:15:14.616 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:15:14.616 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:14.616 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:14.616 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:14.616 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:14.616 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:14.617 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:15:14.617 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:14.617 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:14.617 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:15:14.617 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:14.626 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:14.626 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:15:14.626 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:15.693 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:15.693 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:15.693 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1067)
20190402 06:15:15.693 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:15.694 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:15.694 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:15.694 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:15.694 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:15.694 - INFO - ${clean_out} = degraded
20190402 06:15:15.694 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:15:15.694 - INFO - ${output} = degraded
20190402 06:15:15.694 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:15.694 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:15.695 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:15.696 - INFO - echo $?
20190402 06:15:15.696 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:15:15.696 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:15.697 - INFO - 0
20190402 06:15:15.697 - INFO - ${rc} = 0
20190402 06:15:15.697 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:15:15.697 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:15.697 - INFO - 0
20190402 06:15:15.698 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:15.698 - INFO - ${rc} = 0
20190402 06:15:15.698 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 06:15:15.698 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:15.698 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:15.698 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:15.699 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:15:15.699 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:15.699 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:15.699 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:15.699 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:15.699 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:15.699 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:15.699 - INFO - +------ END KW: Utils.Run Command (1085)
20190402 06:15:15.699 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:15.700 - INFO - ${value} = degraded
20190402 06:15:15.700 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:15:15.700 - INFO - ${current_value} = degraded
20190402 06:15:15.700 - INFO - +----- END KW: Utils.Retrieve Host Property (1089)
20190402 06:15:15.700 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:15.700 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:15.700 - FAIL - degraded != available
20190402 06:15:15.700 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:15.700 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:15:15.700 - INFO - +---- END KW: Utils.Check Property Value (1090)
20190402 06:15:20.701 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:20.702 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:20.702 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:20.703 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:20.703 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:15:20.703 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:20.704 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:20.704 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:15:20.704 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:20.705 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:20.706 - INFO - &{result_dict} = { stdout= }
20190402 06:15:20.706 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:15:20.706 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:20.707 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:20.707 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:20.707 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:20.708 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:20.708 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 06:15:20.708 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:20.708 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:20.708 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:15:20.709 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:20.731 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:20.732 - INFO - +------- END KW: SSHLibrary.Write (23)
20190402 06:15:20.732 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:21.786 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:21.786 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:21.786 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1054)
20190402 06:15:21.786 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:21.787 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:21.787 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:21.787 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:21.787 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:21.787 - INFO - ${clean_out} = degraded
20190402 06:15:21.787 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:15:21.787 - INFO - ${output} = degraded
20190402 06:15:21.787 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:21.788 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:21.788 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:21.789 - INFO - echo $?
20190402 06:15:21.789 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:15:21.790 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:21.790 - INFO - 0
20190402 06:15:21.790 - INFO - ${rc} = 0
20190402 06:15:21.790 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:15:21.790 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:21.790 - INFO - 0
20190402 06:15:21.790 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:21.790 - INFO - ${rc} = 0
20190402 06:15:21.791 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:21.791 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:21.791 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:21.792 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:21.792 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:21.792 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:21.792 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:21.792 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:21.792 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:21.792 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:21.792 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:21.792 - INFO - +------ END KW: Utils.Run Command (1089)
20190402 06:15:21.793 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:21.793 - INFO - ${value} = degraded
20190402 06:15:21.793 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:15:21.793 - INFO - ${current_value} = degraded
20190402 06:15:21.793 - INFO - +----- END KW: Utils.Retrieve Host Property (1091)
20190402 06:15:21.793 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:21.793 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:21.793 - FAIL - degraded != available
20190402 06:15:21.793 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:21.793 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:15:21.794 - INFO - +---- END KW: Utils.Check Property Value (1093)
20190402 06:15:26.794 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:26.796 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:26.797 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:26.797 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:26.798 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:15:26.798 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:26.799 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:26.800 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:15:26.800 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:26.801 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:26.802 - INFO - &{result_dict} = { stdout= }
20190402 06:15:26.802 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:15:26.802 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:26.803 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:26.804 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:26.804 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:26.805 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:26.805 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 06:15:26.805 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:26.806 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:26.806 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:15:26.806 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:26.833 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:26.833 - INFO - +------- END KW: SSHLibrary.Write (27)
20190402 06:15:26.833 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:27.892 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:27.892 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:27.892 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1059)
20190402 06:15:27.892 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:27.892 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:27.892 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:27.893 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:15:27.893 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:27.893 - INFO - ${clean_out} = degraded
20190402 06:15:27.893 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:15:27.893 - INFO - ${output} = degraded
20190402 06:15:27.893 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:27.893 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:27.893 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:27.895 - INFO - echo $?
20190402 06:15:27.895 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:15:27.895 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:27.895 - INFO - 0
20190402 06:15:27.895 - INFO - ${rc} = 0
20190402 06:15:27.895 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:15:27.895 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:27.896 - INFO - 0
20190402 06:15:27.896 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:15:27.896 - INFO - ${rc} = 0
20190402 06:15:27.896 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:27.896 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:27.896 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:27.897 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:27.897 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:27.897 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:27.897 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:27.897 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:27.897 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:27.897 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:27.897 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:27.897 - INFO - +------ END KW: Utils.Run Command (1099)
20190402 06:15:27.898 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:27.898 - INFO - ${value} = degraded
20190402 06:15:27.898 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:27.898 - INFO - ${current_value} = degraded
20190402 06:15:27.898 - INFO - +----- END KW: Utils.Retrieve Host Property (1102)
20190402 06:15:27.898 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:27.899 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:27.899 - FAIL - degraded != available
20190402 06:15:27.899 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:27.899 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:15:27.899 - INFO - +---- END KW: Utils.Check Property Value (1105)
20190402 06:15:32.900 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:32.901 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:32.902 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:32.903 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:32.904 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:15:32.904 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:32.905 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:32.906 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:15:32.907 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:32.908 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:32.909 - INFO - &{result_dict} = { stdout= }
20190402 06:15:32.910 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:15:32.910 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:32.911 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:32.911 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:32.912 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:32.913 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:32.913 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:15:32.913 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:32.914 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:32.914 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:15:32.914 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:32.943 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:32.943 - INFO - +------- END KW: SSHLibrary.Write (29)
20190402 06:15:32.943 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:33.969 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:33.970 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:33.970 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1027)
20190402 06:15:33.970 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:33.970 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:33.970 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:33.971 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:15:33.971 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:33.971 - INFO - ${clean_out} = degraded
20190402 06:15:33.971 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:15:33.971 - INFO - ${output} = degraded
20190402 06:15:33.971 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:33.971 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:33.971 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:33.973 - INFO - echo $?
20190402 06:15:33.973 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:15:33.973 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:33.973 - INFO - 0
20190402 06:15:33.973 - INFO - ${rc} = 0
20190402 06:15:33.973 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:15:33.973 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:33.974 - INFO - 0
20190402 06:15:33.974 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:15:33.974 - INFO - ${rc} = 0
20190402 06:15:33.974 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:33.974 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:33.974 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:33.975 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:33.975 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:33.975 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:33.975 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:33.975 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:33.975 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:33.975 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:33.976 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:33.976 - INFO - +------ END KW: Utils.Run Command (1072)
20190402 06:15:33.976 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:33.976 - INFO - ${value} = degraded
20190402 06:15:33.976 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:33.976 - INFO - ${current_value} = degraded
20190402 06:15:33.976 - INFO - +----- END KW: Utils.Retrieve Host Property (1075)
20190402 06:15:33.976 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:33.976 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:33.977 - FAIL - degraded != available
20190402 06:15:33.977 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:33.977 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:15:33.977 - INFO - +---- END KW: Utils.Check Property Value (1077)
20190402 06:15:38.977 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:38.979 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:38.981 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:38.981 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:38.982 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:15:38.982 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:38.983 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:38.984 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:15:38.984 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:38.985 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:38.987 - INFO - &{result_dict} = { stdout= }
20190402 06:15:38.987 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:15:38.987 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:38.988 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:38.988 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:38.989 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:38.990 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:38.990 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:15:38.990 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:38.991 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:38.991 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:15:38.991 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:39.016 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:39.016 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 06:15:39.016 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:40.057 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:40.057 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:40.057 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1041)
20190402 06:15:40.058 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:40.058 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:40.058 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:40.058 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:40.058 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:40.058 - INFO - ${clean_out} = degraded
20190402 06:15:40.059 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:15:40.059 - INFO - ${output} = degraded
20190402 06:15:40.059 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:40.059 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:40.059 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:40.062 - INFO - echo $?
20190402 06:15:40.062 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 06:15:40.062 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:40.062 - INFO - 0
20190402 06:15:40.063 - INFO - ${rc} = 0
20190402 06:15:40.063 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:15:40.063 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:40.063 - INFO - 0
20190402 06:15:40.063 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:40.063 - INFO - ${rc} = 0
20190402 06:15:40.063 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 06:15:40.063 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:40.064 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:40.064 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:40.064 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:40.064 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:40.064 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:40.064 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:40.064 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:40.065 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:40.065 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:40.065 - INFO - +------ END KW: Utils.Run Command (1083)
20190402 06:15:40.065 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:40.065 - INFO - ${value} = degraded
20190402 06:15:40.065 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:40.065 - INFO - ${current_value} = degraded
20190402 06:15:40.065 - INFO - +----- END KW: Utils.Retrieve Host Property (1086)
20190402 06:15:40.065 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:40.066 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:40.066 - FAIL - degraded != available
20190402 06:15:40.066 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:40.066 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:15:40.066 - INFO - +---- END KW: Utils.Check Property Value (1089)
20190402 06:15:45.067 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:45.068 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:45.070 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:45.071 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:45.071 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:15:45.071 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:45.072 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:45.072 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:15:45.072 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:45.073 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:45.073 - INFO - &{result_dict} = { stdout= }
20190402 06:15:45.073 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:15:45.073 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:45.073 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:45.073 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:45.074 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:45.074 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:45.074 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:15:45.074 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:45.074 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:45.074 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:15:45.074 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:45.083 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:45.083 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:15:45.083 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:46.210 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:46.210 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:46.211 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1128)
20190402 06:15:46.211 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:46.211 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:46.211 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:46.211 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:46.211 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:46.212 - INFO - ${clean_out} = degraded
20190402 06:15:46.212 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:15:46.212 - INFO - ${output} = degraded
20190402 06:15:46.212 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:46.212 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:46.212 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:46.214 - INFO - echo $?
20190402 06:15:46.214 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:15:46.214 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:46.214 - INFO - 0
20190402 06:15:46.214 - INFO - ${rc} = 0
20190402 06:15:46.214 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:15:46.215 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:46.215 - INFO - 0
20190402 06:15:46.215 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:46.215 - INFO - ${rc} = 0
20190402 06:15:46.215 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:46.215 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:46.215 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:46.216 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:46.216 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:46.216 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:46.216 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:46.216 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:46.216 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:46.216 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:46.216 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:46.217 - INFO - +------ END KW: Utils.Run Command (1145)
20190402 06:15:46.217 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:46.217 - INFO - ${value} = degraded
20190402 06:15:46.217 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:46.217 - INFO - ${current_value} = degraded
20190402 06:15:46.217 - INFO - +----- END KW: Utils.Retrieve Host Property (1149)
20190402 06:15:46.217 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:46.217 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:46.217 - FAIL - degraded != available
20190402 06:15:46.218 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:46.218 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:15:46.218 - INFO - +---- END KW: Utils.Check Property Value (1151)
20190402 06:15:51.219 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:51.220 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:51.221 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:51.222 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:51.223 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:15:51.223 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:51.224 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:51.224 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:15:51.224 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:51.225 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:51.225 - INFO - &{result_dict} = { stdout= }
20190402 06:15:51.225 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:15:51.225 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:51.226 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:51.226 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:51.226 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:51.226 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:51.226 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:15:51.226 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:51.227 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:51.227 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:15:51.227 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:51.237 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:51.237 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:15:51.237 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:52.325 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:52.326 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:52.326 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1089)
20190402 06:15:52.326 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:52.326 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:52.326 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:52.326 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:52.326 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:52.327 - INFO - ${clean_out} = degraded
20190402 06:15:52.327 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:15:52.327 - INFO - ${output} = degraded
20190402 06:15:52.327 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:15:52.327 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:52.327 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:52.329 - INFO - echo $?
20190402 06:15:52.329 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:15:52.329 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:52.329 - INFO - 0
20190402 06:15:52.329 - INFO - ${rc} = 0
20190402 06:15:52.329 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:15:52.329 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:52.329 - INFO - 0
20190402 06:15:52.329 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:52.330 - INFO - ${rc} = 0
20190402 06:15:52.330 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:52.330 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:52.330 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:52.330 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:52.330 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:15:52.330 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:52.331 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:52.331 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:52.331 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:52.331 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:52.331 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:52.331 - INFO - +------ END KW: Utils.Run Command (1108)
20190402 06:15:52.331 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:52.332 - INFO - ${value} = degraded
20190402 06:15:52.332 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:15:52.332 - INFO - ${current_value} = degraded
20190402 06:15:52.332 - INFO - +----- END KW: Utils.Retrieve Host Property (1112)
20190402 06:15:52.332 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:52.332 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:52.332 - FAIL - degraded != available
20190402 06:15:52.332 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:52.332 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:15:52.332 - INFO - +---- END KW: Utils.Check Property Value (1114)
20190402 06:15:57.333 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:15:57.335 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:15:57.336 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:15:57.337 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:15:57.337 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:15:57.338 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:15:57.339 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:15:57.339 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:15:57.339 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:15:57.339 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:15:57.340 - INFO - &{result_dict} = { stdout= }
20190402 06:15:57.340 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:15:57.340 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:15:57.340 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:57.340 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:15:57.340 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:57.341 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:15:57.341 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:15:57.341 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:15:57.341 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:57.341 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:15:57.341 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:15:57.343 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:15:57.343 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:15:57.343 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:15:58.418 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:58.418 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:58.418 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1075)
20190402 06:15:58.419 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:15:58.419 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:15:58.419 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:15:58.419 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:15:58.419 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:15:58.419 - INFO - ${clean_out} = degraded
20190402 06:15:58.419 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:15:58.420 - INFO - ${output} = degraded
20190402 06:15:58.420 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:15:58.420 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:15:58.420 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:15:58.422 - INFO - echo $?
20190402 06:15:58.422 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:15:58.422 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:15:58.422 - INFO - 0
20190402 06:15:58.422 - INFO - ${rc} = 0
20190402 06:15:58.422 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:15:58.422 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:15:58.422 - INFO - 0
20190402 06:15:58.422 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:15:58.423 - INFO - ${rc} = 0
20190402 06:15:58.423 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:15:58.423 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:15:58.423 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:15:58.424 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:15:58.424 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:15:58.424 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:15:58.424 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:15:58.424 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:15:58.424 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:15:58.424 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:15:58.424 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:15:58.424 - INFO - +------ END KW: Utils.Run Command (1086)
20190402 06:15:58.425 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:15:58.425 - INFO - ${value} = degraded
20190402 06:15:58.425 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:15:58.425 - INFO - ${current_value} = degraded
20190402 06:15:58.425 - INFO - +----- END KW: Utils.Retrieve Host Property (1090)
20190402 06:15:58.425 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:15:58.425 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:15:58.425 - FAIL - degraded != available
20190402 06:15:58.425 - DEBUG - Traceback (most recent call last):
  None
20190402 06:15:58.426 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:15:58.426 - INFO - +---- END KW: Utils.Check Property Value (1093)
20190402 06:16:03.427 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:03.428 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:03.429 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:03.430 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:03.430 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:03.431 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:03.432 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:03.432 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:03.432 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:03.432 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:03.432 - INFO - &{result_dict} = { stdout= }
20190402 06:16:03.433 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:03.433 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:03.433 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:03.433 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:03.433 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:03.434 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:03.434 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:03.434 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:03.434 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:03.434 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:03.434 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:03.443 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:03.443 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:16:03.443 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:04.573 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:04.573 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:04.573 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1130)
20190402 06:16:04.574 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:04.574 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:04.574 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:04.574 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:04.574 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:04.574 - INFO - ${clean_out} = degraded
20190402 06:16:04.574 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:04.575 - INFO - ${output} = degraded
20190402 06:16:04.575 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:04.575 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:04.575 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:04.577 - INFO - echo $?
20190402 06:16:04.577 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:04.577 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:04.580 - INFO - 0
20190402 06:16:04.580 - INFO - ${rc} = 0
20190402 06:16:04.580 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 06:16:04.580 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:04.580 - INFO - 0
20190402 06:16:04.580 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:04.580 - INFO - ${rc} = 0
20190402 06:16:04.580 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 06:16:04.580 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:04.581 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:04.581 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:04.581 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:04.581 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:04.581 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:04.581 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:04.581 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:04.582 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:16:04.582 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:04.582 - INFO - +------ END KW: Utils.Run Command (1151)
20190402 06:16:04.582 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:04.582 - INFO - ${value} = degraded
20190402 06:16:04.582 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:04.582 - INFO - ${current_value} = degraded
20190402 06:16:04.582 - INFO - +----- END KW: Utils.Retrieve Host Property (1154)
20190402 06:16:04.582 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:04.583 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:04.583 - FAIL - degraded != available
20190402 06:16:04.583 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:04.583 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:04.583 - INFO - +---- END KW: Utils.Check Property Value (1157)
20190402 06:16:09.584 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:09.585 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:09.586 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:09.587 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:09.587 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:09.587 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:09.587 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:09.587 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:09.587 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:09.588 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:09.588 - INFO - &{result_dict} = { stdout= }
20190402 06:16:09.588 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:16:09.588 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:09.588 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:09.589 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:09.589 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:09.589 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:09.589 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:09.589 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:09.589 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:09.589 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:09.589 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:09.599 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:09.599 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:16:09.599 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:10.630 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:10.630 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:10.630 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1031)
20190402 06:16:10.630 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:10.630 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:10.631 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:10.631 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:16:10.631 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:10.631 - INFO - ${clean_out} = degraded
20190402 06:16:10.631 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:10.631 - INFO - ${output} = degraded
20190402 06:16:10.631 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:10.631 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:10.632 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:10.633 - INFO - echo $?
20190402 06:16:10.633 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:16:10.633 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:10.633 - INFO - 0
20190402 06:16:10.633 - INFO - ${rc} = 0
20190402 06:16:10.633 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:16:10.634 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:10.634 - INFO - 0
20190402 06:16:10.634 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:10.634 - INFO - ${rc} = 0
20190402 06:16:10.634 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:10.634 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:10.634 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:10.635 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:16:10.635 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:10.635 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:10.635 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:10.635 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:10.635 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:10.635 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:16:10.635 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:10.636 - INFO - +------ END KW: Utils.Run Command (1048)
20190402 06:16:10.636 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:10.636 - INFO - ${value} = degraded
20190402 06:16:10.636 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:10.636 - INFO - ${current_value} = degraded
20190402 06:16:10.636 - INFO - +----- END KW: Utils.Retrieve Host Property (1051)
20190402 06:16:10.636 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:10.636 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:10.636 - FAIL - degraded != available
20190402 06:16:10.637 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:10.637 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:10.637 - INFO - +---- END KW: Utils.Check Property Value (1053)
20190402 06:16:15.638 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:15.639 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:15.640 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:15.641 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:15.642 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:16:15.642 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:15.643 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:15.643 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:15.643 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:15.643 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:15.644 - INFO - &{result_dict} = { stdout= }
20190402 06:16:15.644 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:15.644 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:15.644 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:15.644 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:15.644 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:15.645 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:15.645 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:15.645 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:15.645 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:15.645 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:15.645 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:15.659 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:15.659 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 06:16:15.659 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:16.714 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:16.714 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:16.714 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1055)
20190402 06:16:16.714 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:16.715 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:16.715 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:16.715 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:16.715 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:16.716 - INFO - ${clean_out} = degraded
20190402 06:16:16.716 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:16:16.716 - INFO - ${output} = degraded
20190402 06:16:16.716 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:16:16.716 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:16.716 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:16.718 - INFO - echo $?
20190402 06:16:16.718 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:16.718 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:16.719 - INFO - 0
20190402 06:16:16.719 - INFO - ${rc} = 0
20190402 06:16:16.719 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:16:16.719 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:16.719 - INFO - 0
20190402 06:16:16.719 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:16.719 - INFO - ${rc} = 0
20190402 06:16:16.719 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:16.719 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:16.720 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:16.720 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:16.720 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:16.720 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:16.720 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:16.720 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:16.720 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:16.721 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:16:16.721 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:16.721 - INFO - +------ END KW: Utils.Run Command (1079)
20190402 06:16:16.721 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:16.721 - INFO - ${value} = degraded
20190402 06:16:16.721 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:16.721 - INFO - ${current_value} = degraded
20190402 06:16:16.721 - INFO - +----- END KW: Utils.Retrieve Host Property (1082)
20190402 06:16:16.721 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:16.722 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:16.722 - FAIL - degraded != available
20190402 06:16:16.722 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:16.722 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:16.722 - INFO - +---- END KW: Utils.Check Property Value (1085)
20190402 06:16:21.723 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:21.724 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:21.726 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:21.727 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:21.727 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:21.727 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:21.728 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:21.728 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:21.728 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:21.728 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:21.729 - INFO - &{result_dict} = { stdout= }
20190402 06:16:21.729 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:21.729 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:21.729 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:21.729 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:21.729 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:21.729 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:21.730 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:21.730 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:21.730 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:21.730 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:21.730 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:21.741 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:21.741 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:16:21.741 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:22.825 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:22.826 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:22.826 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1085)
20190402 06:16:22.826 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:22.826 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:22.826 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:22.826 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:22.827 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:22.827 - INFO - ${clean_out} = degraded
20190402 06:16:22.827 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:16:22.827 - INFO - ${output} = degraded
20190402 06:16:22.827 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:22.827 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:22.827 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:22.829 - INFO - echo $?
20190402 06:16:22.829 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:22.829 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:22.829 - INFO - 0
20190402 06:16:22.829 - INFO - ${rc} = 0
20190402 06:16:22.830 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:16:22.830 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:22.830 - INFO - 0
20190402 06:16:22.830 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:22.830 - INFO - ${rc} = 0
20190402 06:16:22.830 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:22.830 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:22.831 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:22.831 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:22.831 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:22.831 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:22.831 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:22.832 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:22.832 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:22.832 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:16:22.832 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:22.832 - INFO - +------ END KW: Utils.Run Command (1105)
20190402 06:16:22.832 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:22.832 - INFO - ${value} = degraded
20190402 06:16:22.832 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:22.832 - INFO - ${current_value} = degraded
20190402 06:16:22.833 - INFO - +----- END KW: Utils.Retrieve Host Property (1108)
20190402 06:16:22.833 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:22.833 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:22.833 - FAIL - degraded != available
20190402 06:16:22.833 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:22.833 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:16:22.833 - INFO - +---- END KW: Utils.Check Property Value (1110)
20190402 06:16:27.834 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:27.835 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:27.837 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:27.838 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:27.838 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:16:27.838 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:27.839 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:27.839 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:27.839 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:27.839 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:27.840 - INFO - &{result_dict} = { stdout= }
20190402 06:16:27.840 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:27.840 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:27.840 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:27.840 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:27.840 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:27.840 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:27.841 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:16:27.841 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:27.841 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:27.841 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:27.841 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:27.851 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:27.851 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:16:27.852 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:28.929 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:28.930 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:28.930 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1078)
20190402 06:16:28.930 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:28.930 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:28.930 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:28.930 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:28.931 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:28.931 - INFO - ${clean_out} = degraded
20190402 06:16:28.931 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:28.931 - INFO - ${output} = degraded
20190402 06:16:28.931 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:28.931 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:28.931 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:28.933 - INFO - echo $?
20190402 06:16:28.933 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:28.933 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:28.933 - INFO - 0
20190402 06:16:28.933 - INFO - ${rc} = 0
20190402 06:16:28.933 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:16:28.934 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:28.934 - INFO - 0
20190402 06:16:28.934 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:28.934 - INFO - ${rc} = 0
20190402 06:16:28.934 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:28.934 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:28.935 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:28.935 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:28.935 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:28.935 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:28.935 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:28.936 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:28.936 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:28.936 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:16:28.936 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:28.936 - INFO - +------ END KW: Utils.Run Command (1098)
20190402 06:16:28.936 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:28.936 - INFO - ${value} = degraded
20190402 06:16:28.936 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:28.937 - INFO - ${current_value} = degraded
20190402 06:16:28.937 - INFO - +----- END KW: Utils.Retrieve Host Property (1102)
20190402 06:16:28.937 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:28.937 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:28.937 - FAIL - degraded != available
20190402 06:16:28.937 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:28.937 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:16:28.937 - INFO - +---- END KW: Utils.Check Property Value (1103)
20190402 06:16:33.938 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:33.939 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:33.941 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:33.942 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:33.942 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:33.942 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:33.943 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:33.943 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:33.943 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:33.943 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:33.944 - INFO - &{result_dict} = { stdout= }
20190402 06:16:33.944 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:33.944 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:33.944 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:33.944 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:33.944 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:33.944 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:33.945 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:33.945 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:33.945 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:33.945 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:33.945 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:33.955 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:33.955 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:16:33.955 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:35.055 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:35.055 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:35.055 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1100)
20190402 06:16:35.055 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:35.055 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:35.055 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:35.056 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:16:35.056 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:35.056 - INFO - ${clean_out} = degraded
20190402 06:16:35.056 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:35.056 - INFO - ${output} = degraded
20190402 06:16:35.056 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:35.056 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:35.056 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:35.058 - INFO - echo $?
20190402 06:16:35.058 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:35.058 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:35.058 - INFO - 0
20190402 06:16:35.058 - INFO - ${rc} = 0
20190402 06:16:35.058 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:16:35.058 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:35.059 - INFO - 0
20190402 06:16:35.059 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:16:35.059 - INFO - ${rc} = 0
20190402 06:16:35.059 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:35.059 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:35.059 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:35.060 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:16:35.060 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:35.060 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:35.060 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:35.060 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:35.060 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:35.060 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:16:35.060 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:35.060 - INFO - +------ END KW: Utils.Run Command (1118)
20190402 06:16:35.061 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:35.061 - INFO - ${value} = degraded
20190402 06:16:35.061 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:16:35.061 - INFO - ${current_value} = degraded
20190402 06:16:35.061 - INFO - +----- END KW: Utils.Retrieve Host Property (1122)
20190402 06:16:35.061 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:35.061 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:35.062 - FAIL - degraded != available
20190402 06:16:35.062 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:35.062 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:35.062 - INFO - +---- END KW: Utils.Check Property Value (1124)
20190402 06:16:40.063 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:40.064 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:40.065 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:40.066 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:40.067 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:16:40.067 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:40.068 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:40.068 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:40.068 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:40.068 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:40.069 - INFO - &{result_dict} = { stdout= }
20190402 06:16:40.069 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:40.069 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:40.069 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:40.069 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:40.069 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:40.069 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:40.070 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:16:40.070 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:40.070 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:40.070 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:40.070 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:40.080 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:40.080 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:16:40.080 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:41.111 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:41.111 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:41.111 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1031)
20190402 06:16:41.111 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:41.111 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:41.112 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:41.112 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:16:41.112 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:41.112 - INFO - ${clean_out} = degraded
20190402 06:16:41.112 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:41.112 - INFO - ${output} = degraded
20190402 06:16:41.112 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:41.112 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:41.113 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:41.114 - INFO - echo $?
20190402 06:16:41.114 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:41.114 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:41.114 - INFO - 0
20190402 06:16:41.114 - INFO - ${rc} = 0
20190402 06:16:41.114 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:16:41.114 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:41.114 - INFO - 0
20190402 06:16:41.115 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:41.115 - INFO - ${rc} = 0
20190402 06:16:41.115 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:41.115 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:41.115 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:41.115 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:41.115 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:16:41.116 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:41.116 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:41.116 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:41.116 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:41.116 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:16:41.116 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:41.116 - INFO - +------ END KW: Utils.Run Command (1049)
20190402 06:16:41.116 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:41.117 - INFO - ${value} = degraded
20190402 06:16:41.117 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:16:41.117 - INFO - ${current_value} = degraded
20190402 06:16:41.117 - INFO - +----- END KW: Utils.Retrieve Host Property (1053)
20190402 06:16:41.117 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:41.117 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:41.117 - FAIL - degraded != available
20190402 06:16:41.117 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:41.117 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:16:41.117 - INFO - +---- END KW: Utils.Check Property Value (1054)
20190402 06:16:46.118 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:46.120 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:46.122 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:46.123 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:46.123 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:46.123 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:46.124 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:46.124 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:46.124 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:46.124 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:46.125 - INFO - &{result_dict} = { stdout= }
20190402 06:16:46.125 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:16:46.125 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:46.125 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:46.125 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:46.125 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:46.126 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:46.126 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:46.126 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:46.126 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:46.126 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:46.126 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:46.136 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:46.136 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:16:46.136 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:47.178 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:47.178 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:47.178 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1042)
20190402 06:16:47.178 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:47.179 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:47.179 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:47.179 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:47.179 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:47.179 - INFO - ${clean_out} = degraded
20190402 06:16:47.179 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:47.179 - INFO - ${output} = degraded
20190402 06:16:47.179 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:47.179 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:47.180 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:47.181 - INFO - echo $?
20190402 06:16:47.181 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:16:47.181 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:47.181 - INFO - 0
20190402 06:16:47.182 - INFO - ${rc} = 0
20190402 06:16:47.182 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:16:47.182 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:47.182 - INFO - 0
20190402 06:16:47.182 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:47.182 - INFO - ${rc} = 0
20190402 06:16:47.182 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:47.182 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:47.183 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:47.183 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:47.183 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:47.183 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:47.183 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:47.183 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:47.183 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:47.184 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:16:47.184 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:47.184 - INFO - +------ END KW: Utils.Run Command (1061)
20190402 06:16:47.184 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:47.184 - INFO - ${value} = degraded
20190402 06:16:47.184 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:47.184 - INFO - ${current_value} = degraded
20190402 06:16:47.184 - INFO - +----- END KW: Utils.Retrieve Host Property (1064)
20190402 06:16:47.184 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:47.185 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:47.185 - FAIL - degraded != available
20190402 06:16:47.185 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:47.185 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:47.185 - INFO - +---- END KW: Utils.Check Property Value (1067)
20190402 06:16:52.186 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:52.187 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:52.188 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:52.189 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:52.190 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:52.190 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:52.191 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:52.191 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:16:52.191 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:52.192 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:52.192 - INFO - &{result_dict} = { stdout= }
20190402 06:16:52.192 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:16:52.192 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:52.192 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:52.192 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:52.193 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:16:52.193 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:52.193 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:16:52.193 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:52.193 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:52.193 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:16:52.193 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:52.202 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:52.202 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:16:52.202 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:53.271 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:53.272 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:53.272 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1070)
20190402 06:16:53.272 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:53.272 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:53.272 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:53.272 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:53.273 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:53.273 - INFO - ${clean_out} = degraded
20190402 06:16:53.273 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:53.273 - INFO - ${output} = degraded
20190402 06:16:53.273 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:53.273 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:53.273 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:53.275 - INFO - echo $?
20190402 06:16:53.275 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:53.275 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:53.275 - INFO - 0
20190402 06:16:53.275 - INFO - ${rc} = 0
20190402 06:16:53.275 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:16:53.275 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:53.276 - INFO - 0
20190402 06:16:53.276 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:16:53.276 - INFO - ${rc} = 0
20190402 06:16:53.276 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:53.276 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:53.276 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:53.277 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:16:53.277 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:53.277 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:53.277 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:53.277 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:53.277 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:53.277 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:16:53.277 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:53.278 - INFO - +------ END KW: Utils.Run Command (1088)
20190402 06:16:53.278 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:53.278 - INFO - ${value} = degraded
20190402 06:16:53.278 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:53.278 - INFO - ${current_value} = degraded
20190402 06:16:53.278 - INFO - +----- END KW: Utils.Retrieve Host Property (1091)
20190402 06:16:53.278 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:53.278 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:53.278 - FAIL - degraded != available
20190402 06:16:53.279 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:53.279 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:53.279 - INFO - +---- END KW: Utils.Check Property Value (1093)
20190402 06:16:58.280 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:16:58.281 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:16:58.282 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:16:58.283 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:16:58.284 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:16:58.284 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:16:58.285 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:16:58.286 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:16:58.287 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:16:58.288 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:16:58.290 - INFO - &{result_dict} = { stdout= }
20190402 06:16:58.290 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:16:58.290 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:16:58.291 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:16:58.292 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:16:58.294 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:16:58.295 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:16:58.295 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (8)
20190402 06:16:58.296 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:16:58.296 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:58.297 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:16:58.297 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:16:58.309 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:16:58.309 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:16:58.309 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:16:59.386 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:59.387 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:59.387 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1078)
20190402 06:16:59.387 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:16:59.387 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:16:59.387 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:16:59.387 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:16:59.388 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:16:59.388 - INFO - ${clean_out} = degraded
20190402 06:16:59.388 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:16:59.388 - INFO - ${output} = degraded
20190402 06:16:59.388 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:16:59.388 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:16:59.388 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:16:59.390 - INFO - echo $?
20190402 06:16:59.390 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:16:59.390 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:16:59.390 - INFO - 0
20190402 06:16:59.391 - INFO - ${rc} = 0
20190402 06:16:59.391 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:16:59.391 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:16:59.391 - INFO - 0
20190402 06:16:59.391 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:16:59.391 - INFO - ${rc} = 0
20190402 06:16:59.391 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:16:59.391 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:16:59.392 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:16:59.392 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:59.392 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:16:59.392 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:16:59.392 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:16:59.392 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:16:59.392 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:16:59.393 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:16:59.393 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:16:59.393 - INFO - +------ END KW: Utils.Run Command (1109)
20190402 06:16:59.393 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:16:59.393 - INFO - ${value} = degraded
20190402 06:16:59.393 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:16:59.393 - INFO - ${current_value} = degraded
20190402 06:16:59.393 - INFO - +----- END KW: Utils.Retrieve Host Property (1112)
20190402 06:16:59.393 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:16:59.394 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:16:59.394 - FAIL - degraded != available
20190402 06:16:59.394 - DEBUG - Traceback (most recent call last):
  None
20190402 06:16:59.394 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:16:59.394 - INFO - +---- END KW: Utils.Check Property Value (1115)
20190402 06:17:04.395 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:17:04.396 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:17:04.397 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:17:04.398 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:17:04.398 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:17:04.399 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:17:04.400 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:04.400 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:17:04.400 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:04.400 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:04.401 - INFO - &{result_dict} = { stdout= }
20190402 06:17:04.401 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:17:04.401 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:04.401 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:04.401 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:04.401 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:04.402 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:04.402 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:17:04.402 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:17:04.402 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:04.402 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:17:04.402 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:04.411 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:17:04.411 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:17:04.411 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:05.490 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:05.491 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:05.491 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1080)
20190402 06:17:05.491 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:05.491 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:05.491 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:05.491 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:17:05.492 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:05.492 - INFO - ${clean_out} = degraded
20190402 06:17:05.492 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:17:05.492 - INFO - ${output} = degraded
20190402 06:17:05.492 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:17:05.492 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:17:05.492 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:05.494 - INFO - echo $?
20190402 06:17:05.494 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:17:05.494 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:05.494 - INFO - 0
20190402 06:17:05.495 - INFO - ${rc} = 0
20190402 06:17:05.495 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:17:05.495 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:05.495 - INFO - 0
20190402 06:17:05.495 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:17:05.495 - INFO - ${rc} = 0
20190402 06:17:05.495 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:17:05.495 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:05.496 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:05.496 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:05.496 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:17:05.496 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:05.496 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:05.496 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:05.496 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:17:05.497 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:17:05.497 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:17:05.497 - INFO - +------ END KW: Utils.Run Command (1098)
20190402 06:17:05.497 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:17:05.497 - INFO - ${value} = degraded
20190402 06:17:05.497 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:17:05.497 - INFO - ${current_value} = degraded
20190402 06:17:05.497 - INFO - +----- END KW: Utils.Retrieve Host Property (1101)
20190402 06:17:05.497 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:17:05.498 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:17:05.498 - FAIL - degraded != available
20190402 06:17:05.498 - DEBUG - Traceback (most recent call last):
  None
20190402 06:17:05.498 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:17:05.498 - INFO - +---- END KW: Utils.Check Property Value (1103)
20190402 06:17:10.499 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:17:10.500 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:17:10.501 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:17:10.503 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:17:10.503 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:17:10.503 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:17:10.504 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:10.504 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:17:10.504 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:10.504 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:10.505 - INFO - &{result_dict} = { stdout= }
20190402 06:17:10.505 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:17:10.505 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:10.505 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:10.505 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:10.506 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:17:10.506 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:10.506 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:17:10.506 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:17:10.506 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:10.507 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:17:10.507 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:10.519 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:17:10.519 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:17:10.519 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:11.670 - INFO - degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:11.670 - INFO - ${output} = degraded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:11.670 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1151)
20190402 06:17:11.671 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:11.671 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:11.671 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:11.671 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:17:11.671 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:11.672 - INFO - ${clean_out} = degraded
20190402 06:17:11.672 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:17:11.672 - INFO - ${output} = degraded
20190402 06:17:11.672 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:17:11.672 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:17:11.672 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:11.674 - INFO - echo $?
20190402 06:17:11.674 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:17:11.674 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:11.674 - INFO - 0
20190402 06:17:11.675 - INFO - ${rc} = 0
20190402 06:17:11.675 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:17:11.675 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:11.675 - INFO - 0
20190402 06:17:11.675 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:17:11.675 - INFO - ${rc} = 0
20190402 06:17:11.675 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:17:11.675 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:11.676 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:11.676 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:11.676 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:17:11.676 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:11.676 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:11.676 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:11.676 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: degraded
20190402 06:17:11.677 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:17:11.677 - INFO - ${result} = {u'stdout': u'degraded', u'stderr': u'', u'rc': u'0'}
20190402 06:17:11.677 - INFO - +------ END KW: Utils.Run Command (1174)
20190402 06:17:11.677 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:17:11.677 - INFO - ${value} = degraded
20190402 06:17:11.677 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:17:11.677 - INFO - ${current_value} = degraded
20190402 06:17:11.677 - INFO - +----- END KW: Utils.Retrieve Host Property (1177)
20190402 06:17:11.677 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:17:11.678 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:17:11.678 - FAIL - degraded != available
20190402 06:17:11.678 - DEBUG - Traceback (most recent call last):
  None
20190402 06:17:11.678 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:17:11.678 - INFO - +---- END KW: Utils.Check Property Value (1179)
20190402 06:17:16.679 - INFO - +---- START KW: Utils.Check Property Value [ ${host} | availability | available ]
20190402 06:17:16.681 - INFO - +----- START KW: Utils.Retrieve Host Property [ ${host} | ${property} ]
20190402 06:17:16.682 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system host-show ${hostname} | grep -w ${property} | awk '{print$4}' ]
20190402 06:17:16.683 - INFO - ${system_cmd} = system host-show controller-1|grep -w availability|awk '{print$4}'
20190402 06:17:16.683 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:17:16.683 - INFO - +------ START KW: Utils.Run Command [ ${system_cmd} ]
20190402 06:17:16.684 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:16.684 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:17:16.684 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:16.684 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:16.685 - INFO - &{result_dict} = { stdout= }
20190402 06:17:16.685 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:17:16.685 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:16.685 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:16.685 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:16.686 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:17:16.686 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:16.686 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:17:16.686 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:17:16.686 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:16.686 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:17:16.686 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:16.697 - INFO - system host-show controller-1|grep -w  availability|awk '{print$4}'
20190402 06:17:16.697 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:17:16.697 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:17.697 - INFO - available
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:17.697 - INFO - ${output} = available
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:17.697 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1000)
20190402 06:17:17.697 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:17.697 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:17.698 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:17.698 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:17:17.698 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:17.698 - INFO - ${clean_out} = available
20190402 06:17:17.698 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:17:17.698 - INFO - ${output} = available
20190402 06:17:17.698 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:17:17.698 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:17:17.698 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:17.700 - INFO - echo $?
20190402 06:17:17.701 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 06:17:17.701 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:17.701 - INFO - 0
20190402 06:17:17.701 - INFO - ${rc} = 0
20190402 06:17:17.701 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:17:17.701 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:17.701 - INFO - 0
20190402 06:17:17.701 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:17:17.701 - INFO - ${rc} = 0
20190402 06:17:17.701 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:17:17.702 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:17.702 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:17.702 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:17.702 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:17:17.702 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:17.703 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:17:17.703 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:17.703 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: available
20190402 06:17:17.703 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:17:17.703 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': u'0'}
20190402 06:17:17.703 - INFO - +------ END KW: Utils.Run Command (1020)
20190402 06:17:17.703 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:17:17.703 - INFO - ${value} = available
20190402 06:17:17.703 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:17:17.704 - INFO - ${current_value} = available
20190402 06:17:17.704 - INFO - +----- END KW: Utils.Retrieve Host Property (1023)
20190402 06:17:17.704 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 06:17:17.704 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:17:17.704 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:17:17.704 - INFO - +---- END KW: Utils.Check Property Value (1025)
20190402 06:17:17.704 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (318208)
20190402 06:17:17.704 - INFO - +-- END KW: Utils.Check Host Readiness (321467)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:17:17.704 - INFO - +-- START KW: Utils.Generate Secondary Controller Connection [ ${second_controller} ]
20190402 06:17:17.705 - INFO - +--- START KW: BuiltIn.Set Variable If [ '${controller}'=='controller-0' | ${CONFIG.general.IP_UNIT_0_ADDRESS} | ${CONFIG.general.IP_UNIT_1_ADDRESS} ]
20190402 06:17:17.705 - INFO - ${controller_ip} = 192.168.200.77
20190402 06:17:17.705 - INFO - +--- END KW: BuiltIn.Set Variable If (0)
20190402 06:17:17.705 - INFO - +--- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${controller_ip} ]
20190402 06:17:17.705 - INFO - +---- START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 06:17:17.706 - INFO - ${controller_connection} = 3
20190402 06:17:17.706 - INFO - +---- END KW: SSHLibrary.Open Connection (1)
20190402 06:17:17.706 - INFO - +---- START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 06:17:17.706 - INFO - +----- START KW: BuiltIn.Get Length [ ${password} ]
20190402 06:17:17.706 - INFO - Length is 10
20190402 06:17:17.706 - INFO - ${pwd_length} = 10
20190402 06:17:17.707 - INFO - +----- END KW: BuiltIn.Get Length (1)
20190402 06:17:17.707 - INFO - +----- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 06:17:17.707 - INFO - +------ START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 06:17:17.707 - INFO - Logging into '192.168.200.77 prompt=$:22' as 'wrsroot'.
20190402 06:17:18.795 - INFO - Read output: Last login: Tue Apr  2 12:00:39 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-1:~$
20190402 06:17:18.796 - INFO - +------ END KW: SSHLibrary.Login (1089)
20190402 06:17:18.796 - INFO - Returning from the enclosing user keyword.
20190402 06:17:18.796 - INFO - +----- END KW: BuiltIn.Run Keyword And Return If (1089)
20190402 06:17:18.797 - INFO - +---- END KW: Utils.Flexible_SSH_Login (1091)
20190402 06:17:18.797 - INFO - ${secondary_controller_connection} = 3
20190402 06:17:18.798 - INFO - +--- END KW: Utils.Connect to Controller Node (1092)
20190402 06:17:18.798 - INFO - +--- START KW: BuiltIn.Set Suite Variable [ ${secondary_controller_connection} ]
20190402 06:17:18.799 - INFO - ${secondary_controller_connection} = 3
20190402 06:17:18.799 - INFO - +--- END KW: BuiltIn.Set Suite Variable (1)
20190402 06:17:18.799 - INFO - +--- START KW: BuiltIn.Log [ ${secondary_controller_connection} ]
20190402 06:17:18.800 - INFO - 3
20190402 06:17:18.800 - INFO - +--- END KW: BuiltIn.Log (1)
20190402 06:17:18.800 - INFO - +--- START KW: BuiltIn.Run Keyword And Return If [ ${secondary_controller_connection} is not None | Switch Controller Connection | ${master_controller_connection} | ${secondary_controller_connection} ]
20190402 06:17:18.801 - INFO - +---- START KW: Utils.Switch Controller Connection [ ${master_controller_connection} | ${secondary_controller_connection} ]
20190402 06:17:18.801 - INFO - +----- START KW: SSHLibrary.Switch Connection [ ${new_idx} ]
20190402 06:17:18.801 - INFO - +----- END KW: SSHLibrary.Switch Connection (0)
20190402 06:17:18.801 - INFO - +----- START KW: SSHLibrary.Get Connection [ ${new_idx} ]
20190402 06:17:18.801 - INFO - index=1
path_separator=/
prompt=$
width=80
newline=

height=24
encoding=UTF-8
alias=None
host=192.168.200.76 prompt=$
timeout=1 minute
term_type=vt100
port=22
20190402 06:17:18.802 - INFO - +----- END KW: SSHLibrary.Get Connection (1)
20190402 06:17:18.802 - INFO - +----- START KW: Utils.Run Command [ whoami ]
20190402 06:17:18.802 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:18.802 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:17:18.802 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:18.803 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:18.803 - INFO - &{result_dict} = { stdout= }
20190402 06:17:18.803 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:17:18.803 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:18.803 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:18.803 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:18.804 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:17:18.804 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:18.804 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:17:18.804 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:17:18.804 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:18.804 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:17:18.804 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:18.806 - INFO - whoami
20190402 06:17:18.806 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:17:18.806 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:18.807 - INFO - wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:18.807 - INFO - ${output} = wrsroot
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:18.807 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1)
20190402 06:17:18.807 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:18.808 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:18.808 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:18.808 - INFO - +------- END KW: String.Get Line (0)
20190402 06:17:18.808 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:18.808 - INFO - ${clean_out} = wrsroot
20190402 06:17:18.808 - INFO - +------- END KW: String.Remove String (0)
20190402 06:17:18.808 - INFO - ${output} = wrsroot
20190402 06:17:18.808 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:17:18.808 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:17:18.809 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:18.810 - INFO - echo $?
20190402 06:17:18.810 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 06:17:18.811 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:18.811 - INFO - 0
20190402 06:17:18.811 - INFO - ${rc} = 0
20190402 06:17:18.811 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:17:18.811 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:18.811 - INFO - 0
20190402 06:17:18.811 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:17:18.812 - INFO - ${rc} = 0
20190402 06:17:18.812 - INFO - +------ END KW: Utils.Get Return Code (4)
20190402 06:17:18.812 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:18.812 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:18.812 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:18.812 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 06:17:18.812 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:18.813 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:17:18.813 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:18.813 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: wrsroot
20190402 06:17:18.813 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:17:18.813 - INFO - +----- END KW: Utils.Run Command (11)
20190402 06:17:18.813 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 5 sec | Set Env Vars From Openrc ]
20190402 06:17:18.813 - INFO - +------ START KW: Utils.Set Env Vars From Openrc [ ]
20190402 06:17:18.814 - INFO - +------- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 06:17:18.814 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:18.814 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:17:18.814 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:18.815 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:18.815 - INFO - &{result_dict} = { stdout= }
20190402 06:17:18.815 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:17:18.815 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:18.815 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:18.815 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:18.816 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 06:17:18.816 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:18.816 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:17:18.816 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 06:17:18.816 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:18.816 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 06:17:18.816 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:18.822 - INFO - source /etc/platform/openrc
20190402 06:17:18.822 - INFO - +-------- END KW: SSHLibrary.Write (6)
20190402 06:17:18.822 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:19.187 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.188 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.188 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (366)
20190402 06:17:19.188 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:19.188 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:19.189 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.189 - INFO - +--------- END KW: String.Get Line (1)
20190402 06:17:19.189 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:19.189 - INFO - ${clean_out} =
20190402 06:17:19.189 - INFO - +--------- END KW: String.Remove String (0)
20190402 06:17:19.189 - INFO - ${output} =
20190402 06:17:19.189 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 06:17:19.189 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 06:17:19.190 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:19.191 - INFO - echo $?
20190402 06:17:19.191 - INFO - +--------- END KW: SSHLibrary.Write (1)
20190402 06:17:19.191 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:19.191 - INFO - 0
20190402 06:17:19.192 - INFO - ${rc} = 0
20190402 06:17:19.192 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:17:19.192 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:19.192 - INFO - 0
20190402 06:17:19.192 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 06:17:19.192 - INFO - ${rc} = 0
20190402 06:17:19.192 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 06:17:19.192 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:19.193 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:19.193 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.193 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:17:19.193 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:19.193 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.193 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:19.194 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 06:17:19.194 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 06:17:19.194 - INFO - +------- END KW: Utils.Run Command (380)
20190402 06:17:19.194 - INFO - +------ END KW: Utils.Set Env Vars From Openrc (381)
20190402 06:17:19.194 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (381)
20190402 06:17:19.194 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${secondary_controller_connection} | ${old_idx} ]
20190402 06:17:19.194 - INFO - ${secondary_controller_connection} = 3
20190402 06:17:19.194 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190402 06:17:19.195 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} | ${new_idx} ]
20190402 06:17:19.195 - INFO - ${master_controller_connection} = 1
20190402 06:17:19.195 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190402 06:17:19.195 - INFO - +---- END KW: Utils.Switch Controller Connection (394)
20190402 06:17:19.195 - INFO - Returning from the enclosing user keyword.
20190402 06:17:19.195 - INFO - +--- END KW: BuiltIn.Run Keyword And Return If (395)
20190402 06:17:19.195 - INFO - +-- END KW: Utils.Generate Secondary Controller Connection (1491)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:17:19.195 - INFO - +-- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 5 sec | Check Ceph Status | HEALTH_OK ]
20190402 06:17:19.196 - INFO - +--- START KW: Utils.Check Ceph Status [ HEALTH_OK ]
20190402 06:17:19.196 - INFO - +---- START KW: Utils.Run Command [ ceph -s ]
20190402 06:17:19.196 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:19.197 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:17:19.197 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:19.197 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:19.197 - INFO - &{result_dict} = { stdout= }
20190402 06:17:19.197 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:17:19.197 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:19.198 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:17:19.198 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:19.198 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.198 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:19.198 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:17:19.198 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:17:19.199 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.199 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 06:17:19.199 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:19.200 - INFO - ceph -s
20190402 06:17:19.200 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 06:17:19.200 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:19.338 - INFO - cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_OK
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e28: 2 osds: 2 up, 2 in
            flags sortbitwise,require_jewel_osds
      pgmap v67: 384 pgs, 6 pools, 1588 bytes data, 1116 objects
            87720 kB used, 891 GB / 891 GB avail
                 384 active+clean
  client io 413 kB/s rd, 0 B/s wr, 413 op/s rd, 275 op/s wr
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.338 - INFO - ${output} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_OK
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e28: 2...
20190402 06:17:19.338 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (138)
20190402 06:17:19.338 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:19.338 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:19.338 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.339 - INFO - +------ END KW: String.Get Line (0)
20190402 06:17:19.339 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:19.339 - INFO - ${clean_out} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_OK
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e28: 2...
20190402 06:17:19.339 - INFO - +------ END KW: String.Remove String (0)
20190402 06:17:19.339 - INFO - ${output} =     cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_OK
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e28: 2...
20190402 06:17:19.339 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:17:19.339 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:17:19.339 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:19.341 - INFO - echo $?
20190402 06:17:19.341 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:17:19.341 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:19.341 - INFO - 0
20190402 06:17:19.341 - INFO - ${rc} = 0
20190402 06:17:19.342 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:17:19.342 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:19.342 - INFO - 0
20190402 06:17:19.342 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:17:19.342 - INFO - ${rc} = 0
20190402 06:17:19.342 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:17:19.342 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:19.343 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:19.343 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.343 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:17:19.343 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:19.343 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.343 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:19.343 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7
     health HEALTH_OK
     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}
            election epoch 4, quorum 0 controller
     osdmap e28: 2 osds: 2 up, 2 in
            flags sortbitwise,require_jewel_osds
      pgmap v67: 384 pgs, 6 pools, 1588 bytes data, 1116 objects
            87720 kB used, 891 GB / 891 GB avail
                 384 active+clean
  client io 413 kB/s rd, 0 B/s wr, 413 op/s rd, 275 op/s wr
20190402 06:17:19.344 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:17:19.344 - INFO - ${result} = {u'stdout': u'cluster 01a284a3-ed7f-4eff-bec7-9da4becd87e7\r\n     health HEALTH_OK\r\n     monmap e1: 1 mons at {controller=10.10.53.2:6789/0}\r\n            election epoch 4, quorum 0 controller\r\n...
20190402 06:17:19.344 - INFO - +---- END KW: Utils.Run Command (148)
20190402 06:17:19.344 - INFO - +---- START KW: BuiltIn.Should Contain [ ${result.stdout} | ${status} ]
20190402 06:17:19.344 - INFO - +---- END KW: BuiltIn.Should Contain (0)
20190402 06:17:19.344 - INFO - +---- START KW: Utils.Run Command [ ceph osd tree | True ]
20190402 06:17:19.345 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:17:19.345 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:17:19.345 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:17:19.345 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:17:19.345 - INFO - &{result_dict} = { stdout= }
20190402 06:17:19.345 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 06:17:19.346 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:17:19.346 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.346 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:17:19.346 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.346 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:17:19.346 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:17:19.346 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:17:19.347 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.347 - INFO - +----- END KW: SSHLibrary.Read (1)
20190402 06:17:19.347 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:17:19.349 - INFO - ceph osd tree
20190402 06:17:19.349 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:17:19.350 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:17:19.481 - INFO - ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.87097 root storage-tier                                           
-2 0.87097     chassis group-0                                         
-4 0.43549         host controller-0                                   
 0 0.43549             osd.0              up  1.00000          1.00000 
-3 0.43549         host controller-1                                   
 1 0.43549             osd.1              up  1.00000          1.00000 
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.482 - INFO - ${output} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.87097 root storage-tier                                           
-2 0.87097     chassis group-0                        ...
20190402 06:17:19.482 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (132)
20190402 06:17:19.482 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:17:19.482 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:17:19.482 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:17:19.482 - INFO - +------ END KW: String.Get Line (0)
20190402 06:17:19.482 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:17:19.483 - INFO - ${clean_out} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.87097 root storage-tier                                           
-2 0.87097     chassis group-0                        ...
20190402 06:17:19.483 - INFO - +------ END KW: String.Remove String (1)
20190402 06:17:19.483 - INFO - ${output} = ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.87097 root storage-tier                                           
-2 0.87097     chassis group-0                        ...
20190402 06:17:19.483 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:17:19.483 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:17:19.483 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:17:19.485 - INFO - echo $?
20190402 06:17:19.485 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:17:19.485 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:17:19.485 - INFO - 0
20190402 06:17:19.486 - INFO - ${rc} = 0
20190402 06:17:19.486 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:17:19.486 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:17:19.486 - INFO - 0
20190402 06:17:19.486 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:17:19.486 - INFO - ${rc} = 0
20190402 06:17:19.486 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:17:19.486 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:17:19.487 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:17:19.487 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.487 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:17:19.487 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:17:19.487 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:17:19.487 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:17:19.487 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: ID WEIGHT  TYPE NAME                 UP/DOWN REWEIGHT PRIMARY-AFFINITY 
-1 0.87097 root storage-tier                                           
-2 0.87097     chassis group-0                                         
-4 0.43549         host controller-0                                   
 0 0.43549             osd.0              up  1.00000          1.00000 
-3 0.43549         host controller-1                                   
 1 0.43549             osd.1              up  1.00000          1.00000
20190402 06:17:19.488 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:17:19.488 - INFO - +---- END KW: Utils.Run Command (144)
20190402 06:17:19.488 - INFO - +--- END KW: Utils.Check Ceph Status (292)
20190402 06:17:19.488 - INFO - +-- END KW: BuiltIn.Wait Until Keyword Succeeds (293)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:17:19.488 - INFO - +-- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${chart_manifest} | ${host_image_path}/${chart_manifest} ]
20190402 06:17:19.496 - INFO - [chan 1] Opened sftp connection (server version 3)
20190402 06:17:19.503 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 06:17:19.504 - FAIL - There are no source files matching '/home/mgperezi/duplex/stx-test-suite/helm-charts-manifest.tgz'.
20190402 06:17:19.504 - DEBUG - Traceback (most recent call last):
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1559, in put_file
    destination, mode, newline, scp)
  File "/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/SSHLibrary/library.py", line 1619, in _run_command
    raise RuntimeError(e)
20190402 06:17:19.505 - INFO - +-- END KW: SSHLibrary.Put File (16)
------------------------------------------------------------------------------
20190402 06:17:19.505 - INFO - +- END TEST: Provisioning Duplex System (2541898)
------------------------------------------------------------------------------
20190402 06:17:19.506 - INFO - + END SUITE: Provision-Containers (2543584)
==============================================================================
