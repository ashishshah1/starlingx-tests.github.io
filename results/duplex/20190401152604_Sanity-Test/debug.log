==============================================================================
20190401 15:26:04.872 - INFO - + START SUITE: Sanity-Test [ ]
==============================================================================
20190401 15:26:04.873 - INFO - +- START SUITE: Sanity-Test.Sanity-OpenStack [ ]
==============================================================================
20190401 15:26:04.991 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.01-Instance-From-Image [ ]
==============================================================================
20190401 15:26:04.991 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190401 15:26:04.991 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190401 15:26:04.992 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190401 15:26:04.992 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190401 15:26:04.992 - INFO - ${controller_connection} = 1
20190401 15:26:04.992 - INFO - +------ END KW: SSHLibrary.Open Connection (0)
20190401 15:26:04.993 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190401 15:26:04.993 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190401 15:26:04.993 - INFO - Length is 10
20190401 15:26:04.993 - INFO - ${pwd_length} = 10
20190401 15:26:04.993 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190401 15:26:04.993 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190401 15:26:04.994 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190401 15:26:04.994 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190401 15:26:06.128 - INFO - Read output: Last login: Mon Apr  1 19:01:42 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190401 15:26:06.128 - INFO - +-------- END KW: SSHLibrary.Login (1134)
20190401 15:26:06.129 - INFO - Returning from the enclosing user keyword.
20190401 15:26:06.129 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1136)
20190401 15:26:06.129 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1136)
20190401 15:26:06.129 - INFO - ${master_controller_connection} = 1
20190401 15:26:06.129 - INFO - +----- END KW: Utils.Connect to Controller Node (1137)
20190401 15:26:06.129 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190401 15:26:06.129 - INFO - ${master_controller_connection} = 1
20190401 15:26:06.130 - INFO - +----- END KW: BuiltIn.Set Suite Variable (1)
20190401 15:26:06.130 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190401 15:26:06.130 - INFO - 1
20190401 15:26:06.130 - INFO - +----- END KW: BuiltIn.Log (0)
20190401 15:26:06.130 - INFO - +---- END KW: Utils.Open Master Controller Connection (1139)
20190401 15:26:06.130 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190401 15:26:06.130 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190401 15:26:06.131 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:26:06.131 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:26:06.131 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:26:06.131 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:26:06.132 - INFO - &{result_dict} = { stdout= }
20190401 15:26:06.132 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:06.132 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:26:06.132 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:06.132 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:26:06.133 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190401 15:26:06.133 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:26:06.133 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190401 15:26:06.133 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:26:06.133 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:26:06.133 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:26:06.137 - INFO - source /etc/platform/openrc
20190401 15:26:06.137 - INFO - +------ END KW: SSHLibrary.Write (4)
20190401 15:26:06.137 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:26:06.514 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:06.514 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:06.514 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (377)
20190401 15:26:06.514 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:26:06.515 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:26:06.515 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:06.515 - INFO - +------- END KW: String.Get Line (0)
20190401 15:26:06.515 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:26:06.515 - INFO - ${clean_out} =
20190401 15:26:06.515 - INFO - +------- END KW: String.Remove String (0)
20190401 15:26:06.515 - INFO - ${output} =
20190401 15:26:06.515 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:26:06.516 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:26:06.516 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:26:06.517 - INFO - echo $?
20190401 15:26:06.518 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:26:06.518 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:26:06.518 - INFO - 0
20190401 15:26:06.518 - INFO - ${rc} = 0
20190401 15:26:06.518 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:26:06.518 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:26:06.518 - INFO - 0
20190401 15:26:06.518 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:26:06.519 - INFO - ${rc} = 0
20190401 15:26:06.519 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:26:06.519 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:26:06.519 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:26:06.519 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:06.519 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:06.520 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:26:06.520 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:26:06.520 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:26:06.520 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:26:06.520 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:26:06.520 - INFO - +----- END KW: Utils.Run Command (390)
20190401 15:26:06.520 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (390)
20190401 15:26:06.520 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1529)
------------------------------------------------------------------------------
20190401 15:26:06.521 - INFO - +--- START TEST: Create Flavors for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:06.521 - INFO - +---- START KW: BuiltIn.Catenate [ ${flavor_property_1} | ${flavor_property_2} ]
20190401 15:26:06.521 - INFO - ${properties} = --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190401 15:26:06.521 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:06.521 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190401 15:26:06.522 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:06.522 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:06.522 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:06.522 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:06.523 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190401 15:26:06.523 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190401 15:26:06.523 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:06.523 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:06.523 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:06.523 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:06.523 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:06.524 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190401 15:26:07.152 - INFO - Command exited with return code 1.
20190401 15:26:07.152 - INFO - ${stdout} =
20190401 15:26:07.152 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:07.152 - INFO - ${rc} = 1
20190401 15:26:07.152 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:07.152 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:07.153 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:07.153 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:07.153 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:07.153 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:07.153 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:07.153 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:07.154 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:07.154 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:07.154 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:07.154 - INFO - +---- END KW: OpenStack.Create Flavor (633)
------------------------------------------------------------------------------
20190401 15:26:07.154 - INFO - +--- END TEST: Create Flavors for Instances (634)
------------------------------------------------------------------------------
20190401 15:26:07.154 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:07.155 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190401 15:26:07.162 - INFO - [chan 2] Opened sftp connection (server version 3)
20190401 15:26:07.169 - INFO - [chan 3] Opened sftp connection (server version 3)
20190401 15:26:07.170 - FAIL - There are no source files matching '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2'.
20190401 15:26:07.171 - DEBUG - Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1559, in put_file
    destination, mode, newline, scp)
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1619, in _run_command
    raise RuntimeError(e)
20190401 15:26:07.171 - INFO - +---- END KW: SSHLibrary.Put File (16)
------------------------------------------------------------------------------
20190401 15:26:07.171 - INFO - +--- END TEST: Create Images for Instances (17)
------------------------------------------------------------------------------
20190401 15:26:07.171 - INFO - +--- START TEST: Create Networks for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:07.172 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190401 15:26:07.172 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190401 15:26:07.172 - INFO - ${openstack_cmd} = openstack network create
20190401 15:26:07.172 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:07.172 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190401 15:26:07.172 - INFO - ${cmd} = openstack network create network-1
20190401 15:26:07.173 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:07.173 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:07.173 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:07.173 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:07.173 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:07.173 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:07.174 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190401 15:26:07.802 - INFO - Command exited with return code 1.
20190401 15:26:07.802 - INFO - ${stdout} =
20190401 15:26:07.802 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:07.802 - INFO - ${rc} = 1
20190401 15:26:07.802 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:07.802 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:07.803 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:07.803 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:07.803 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:07.803 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:07.804 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:07.804 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:07.804 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:07.804 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:07.804 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:07.804 - INFO - +---- END KW: OpenStack.Create Network (633)
------------------------------------------------------------------------------
20190401 15:26:07.804 - INFO - +--- END TEST: Create Networks for Instances (633)
------------------------------------------------------------------------------
20190401 15:26:07.804 - INFO - +--- START TEST: Launch Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:07.805 - INFO - +---- START KW: OpenStack.Create Instance [ ${network_name} | ${cirros_instance_name} | ${cirros_image_name} | ${cirros_flavor_name} ]
20190401 15:26:07.805 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190401 15:26:07.805 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:07.805 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:07.806 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:07.806 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190401 15:26:07.806 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190401 15:26:07.806 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:07.806 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190401 15:26:07.806 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:07.807 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:07.807 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:26:07.807 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:07.807 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190401 15:26:08.450 - INFO - Command exited with return code 0.
20190401 15:26:08.450 - INFO - ${stdout} =
20190401 15:26:08.450 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:08.450 - INFO - ${rc} = 0
20190401 15:26:08.450 - INFO - +------- END KW: SSHLibrary.Execute Command (643)
20190401 15:26:08.450 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:08.451 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 0}
20190401 15:26:08.451 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:08.451 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:08.451 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:08.451 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=0 }
20190401 15:26:08.451 - INFO - +------ END KW: OpenStack.Run OS Command (645)
20190401 15:26:08.452 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:08.452 - INFO - ${output} =
20190401 15:26:08.452 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190401 15:26:08.452 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190401 15:26:08.452 - INFO - ${splitted_output} = []
20190401 15:26:08.452 - INFO - +------ END KW: String.Split String (0)
20190401 15:26:08.452 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190401 15:26:08.452 - FAIL - IndexError: Given index 0 is out of the range 0--1.
20190401 15:26:08.453 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:08.453 - INFO - +------ END KW: Collections.Get From List (1)
20190401 15:26:08.453 - INFO - +----- END KW: OpenStack.Get Net Id (648)
20190401 15:26:08.453 - INFO - +---- END KW: OpenStack.Create Instance (648)
------------------------------------------------------------------------------
20190401 15:26:08.453 - INFO - +--- END TEST: Launch Instances (649)
------------------------------------------------------------------------------
20190401 15:26:08.453 - INFO - +--- START TEST: Suspend Resume Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:08.454 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name} ]
20190401 15:26:08.454 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190401 15:26:08.454 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:08.455 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:08.455 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:08.455 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:08.455 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-1'.
20190401 15:26:09.083 - INFO - Command exited with return code 1.
20190401 15:26:09.084 - INFO - ${stdout} =
20190401 15:26:09.084 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:09.084 - INFO - ${rc} = 1
20190401 15:26:09.084 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:09.084 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:09.084 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:09.084 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:09.085 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:09.085 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:09.085 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:09.085 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:09.085 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:09.085 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:09.085 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:09.085 - INFO - +---- END KW: OpenStack.Suspend Instance (631)
------------------------------------------------------------------------------
20190401 15:26:09.086 - INFO - +--- END TEST: Suspend Resume Instances (633)
------------------------------------------------------------------------------
20190401 15:26:09.086 - INFO - +--- START TEST: Set Error Active Flags Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:09.086 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name} | error ]
20190401 15:26:09.087 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190401 15:26:09.087 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:09.087 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:09.087 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:09.087 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:09.088 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-1'.
20190401 15:26:09.729 - INFO - Command exited with return code 1.
20190401 15:26:09.730 - INFO - ${stdout} =
20190401 15:26:09.730 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:09.730 - INFO - ${rc} = 1
20190401 15:26:09.730 - INFO - +------ END KW: SSHLibrary.Execute Command (643)
20190401 15:26:09.730 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:09.731 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:09.731 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:09.731 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:09.732 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:09.732 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:09.732 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:09.732 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:09.732 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:09.732 - INFO - +----- END KW: OpenStack.Run OS Command (645)
20190401 15:26:09.733 - INFO - +---- END KW: OpenStack.Set Error State Instance (647)
------------------------------------------------------------------------------
20190401 15:26:09.733 - INFO - +--- END TEST: Set Error Active Flags Instances (647)
------------------------------------------------------------------------------
20190401 15:26:09.733 - INFO - +--- START TEST: Pause Unpause Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:09.734 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name} ]
20190401 15:26:09.735 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190401 15:26:09.735 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:09.736 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:09.736 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:09.736 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:09.736 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-1'.
20190401 15:26:10.365 - INFO - Command exited with return code 1.
20190401 15:26:10.365 - INFO - ${stdout} =
20190401 15:26:10.365 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:10.365 - INFO - ${rc} = 1
20190401 15:26:10.365 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:10.366 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:10.366 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:10.366 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:10.366 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:10.367 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:10.367 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:10.367 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:10.367 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:10.367 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:10.367 - INFO - +----- END KW: OpenStack.Run OS Command (632)
20190401 15:26:10.367 - INFO - +---- END KW: OpenStack.Pause Instance (633)
------------------------------------------------------------------------------
20190401 15:26:10.367 - INFO - +--- END TEST: Pause Unpause Instances (634)
------------------------------------------------------------------------------
20190401 15:26:10.368 - INFO - +--- START TEST: Stop Start Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:10.368 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name} ]
20190401 15:26:10.368 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190401 15:26:10.369 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:10.369 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:10.369 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:10.369 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:10.369 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-1'.
20190401 15:26:10.997 - INFO - Command exited with return code 1.
20190401 15:26:10.998 - INFO - ${stdout} =
20190401 15:26:10.998 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:10.998 - INFO - ${rc} = 1
20190401 15:26:10.998 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:10.998 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:10.998 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:10.998 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:10.999 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:10.999 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:10.999 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:10.999 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:10.999 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:10.999 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:10.999 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:11.000 - INFO - +---- END KW: OpenStack.Stop Instance (631)
------------------------------------------------------------------------------
20190401 15:26:11.000 - INFO - +--- END TEST: Stop Start Instances (632)
------------------------------------------------------------------------------
20190401 15:26:11.000 - INFO - +--- START TEST: Lock Unlock Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:11.000 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name} ]
20190401 15:26:11.001 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190401 15:26:11.001 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:11.001 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:11.001 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:11.001 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:11.002 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-1'.
20190401 15:26:11.630 - INFO - Command exited with return code 1.
20190401 15:26:11.630 - INFO - ${stdout} =
20190401 15:26:11.630 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:11.630 - INFO - ${rc} = 1
20190401 15:26:11.630 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:11.631 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:11.631 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:11.631 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:11.631 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:11.631 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:11.632 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:11.632 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:11.632 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:11.632 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:11.632 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:11.632 - INFO - +---- END KW: OpenStack.Lock Instance (632)
------------------------------------------------------------------------------
20190401 15:26:11.632 - INFO - +--- END TEST: Lock Unlock Instances (632)
------------------------------------------------------------------------------
20190401 15:26:11.633 - INFO - +--- START TEST: Reboot Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:11.633 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name} ]
20190401 15:26:11.633 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190401 15:26:11.633 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:11.634 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:11.634 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:11.634 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:11.634 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-1'.
20190401 15:26:12.262 - INFO - Command exited with return code 1.
20190401 15:26:12.263 - INFO - ${stdout} =
20190401 15:26:12.263 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:12.263 - INFO - ${rc} = 1
20190401 15:26:12.263 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:12.263 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:12.263 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:12.264 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:12.264 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:12.264 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:12.264 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:12.264 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:12.264 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:12.264 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:12.264 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:12.265 - INFO - +---- END KW: OpenStack.Reboot Instance (631)
------------------------------------------------------------------------------
20190401 15:26:12.265 - INFO - +--- END TEST: Reboot Instances (633)
------------------------------------------------------------------------------
20190401 15:26:12.265 - INFO - +--- START TEST: Rebuild Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:12.265 - INFO - +---- START KW: OpenStack.Rebuild Instance [ ${cirros_instance_name} ]
20190401 15:26:12.266 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild ${vm_name} | True | 30 sec ]
20190401 15:26:12.266 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:12.266 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:12.266 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:12.266 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:12.267 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild vm-cirros-1'.
20190401 15:26:12.895 - INFO - Command exited with return code 1.
20190401 15:26:12.895 - INFO - ${stdout} =
20190401 15:26:12.896 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:12.896 - INFO - ${rc} = 1
20190401 15:26:12.896 - INFO - +------ END KW: SSHLibrary.Execute Command (630)
20190401 15:26:12.896 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:12.897 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:12.897 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:12.897 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:12.897 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:12.897 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:12.897 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:12.897 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:12.898 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:12.898 - INFO - +----- END KW: OpenStack.Run OS Command (632)
20190401 15:26:12.898 - INFO - +---- END KW: OpenStack.Rebuild Instance (633)
------------------------------------------------------------------------------
20190401 15:26:12.898 - INFO - +--- END TEST: Rebuild Instances (633)
------------------------------------------------------------------------------
20190401 15:26:12.898 - INFO - +--- START TEST: Resize Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:12.899 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name_2} ]
20190401 15:26:12.899 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:12.899 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:12.899 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:12.899 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:12.900 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small
20190401 15:26:12.900 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190401 15:26:12.900 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:12.900 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:12.900 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:12.900 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:12.900 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:12.901 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small'.
20190401 15:26:13.529 - INFO - Command exited with return code 1.
20190401 15:26:13.529 - INFO - ${stdout} =
20190401 15:26:13.530 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:13.530 - INFO - ${rc} = 1
20190401 15:26:13.530 - INFO - +------ END KW: SSHLibrary.Execute Command (630)
20190401 15:26:13.530 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:13.530 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:13.530 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:13.530 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:13.531 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:13.531 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:13.531 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:13.531 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:13.531 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:13.531 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:13.531 - INFO - +---- END KW: OpenStack.Create Flavor (632)
------------------------------------------------------------------------------
20190401 15:26:13.532 - INFO - +--- END TEST: Resize Instances (633)
------------------------------------------------------------------------------
20190401 15:26:13.532 - INFO - +--- START TEST: Set Unset Properties Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:13.532 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1}='true' | ${instance_property_2}='500' | ${instance_property_3}='180' ]
20190401 15:26:13.533 - INFO - ${properties} = --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180'
20190401 15:26:13.533 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:13.533 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name} | ${properties} ]
20190401 15:26:13.533 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190401 15:26:13.533 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:13.534 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:13.534 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:13.534 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:13.534 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-1'.
20190401 15:26:14.164 - INFO - Command exited with return code 1.
20190401 15:26:14.164 - INFO - ${stdout} =
20190401 15:26:14.164 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:14.164 - INFO - ${rc} = 1
20190401 15:26:14.165 - INFO - +------ END KW: SSHLibrary.Execute Command (630)
20190401 15:26:14.165 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:14.165 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:14.165 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:14.165 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:14.166 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:14.166 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:14.166 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:14.166 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:14.166 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:14.166 - INFO - +----- END KW: OpenStack.Run OS Command (633)
20190401 15:26:14.166 - INFO - +---- END KW: OpenStack.Set Instance Property (633)
------------------------------------------------------------------------------
20190401 15:26:14.167 - INFO - +--- END TEST: Set Unset Properties Instances (634)
------------------------------------------------------------------------------
20190401 15:26:14.167 - INFO - +--- START TEST: Evacuate Instances From Hosts [ ]
------------------------------------------------------------------------------
20190401 15:26:14.167 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}' == 'Duplex' | Run Keywords | Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 | ELSE IF | '${CONFIGURATION_TYPE}' == 'MN-Local' or '${CONFIGURATION_TYPE}' == 'MN-External' | Run Keywords | Evacuate Instances | compute-0 | AND | Evacuate Instances | compute-1 ]
20190401 15:26:14.168 - INFO - +----- START KW: BuiltIn.Run Keywords [ Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 ]
20190401 15:26:14.168 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-0 ]
20190401 15:26:14.169 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190401 15:26:14.169 - INFO - ${openstack_cmd} = openstack compute service set
20190401 15:26:14.169 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:14.169 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190401 15:26:14.170 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute
20190401 15:26:14.170 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190401 15:26:14.170 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190401 15:26:14.170 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:14.170 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:14.170 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:14.170 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:14.171 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute'.
20190401 15:26:14.799 - INFO - Command exited with return code 1.
20190401 15:26:14.799 - INFO - ${stdout} =
20190401 15:26:14.799 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:14.799 - INFO - ${rc} = 1
20190401 15:26:14.799 - INFO - +-------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:14.800 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:14.800 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:14.800 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:14.800 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:14.800 - INFO - +--------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:14.801 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:14.801 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:14.801 - INFO - +--------- END KW: BuiltIn.Fail (1)
20190401 15:26:14.801 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:14.801 - INFO - +------- END KW: OpenStack.Run OS Command (631)
20190401 15:26:14.801 - INFO - +------ END KW: OpenStack.Evacuate Instances (633)
20190401 15:26:14.801 - INFO - +----- END KW: BuiltIn.Run Keywords (633)
20190401 15:26:14.801 - INFO - +---- END KW: BuiltIn.Run Keyword If (634)
------------------------------------------------------------------------------
20190401 15:26:14.801 - INFO - +--- END TEST: Evacuate Instances From Hosts (634)
------------------------------------------------------------------------------
20190401 15:26:14.802 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190401 15:26:14.802 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190401 15:26:14.803 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190401 15:26:14.803 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190401 15:26:14.803 - INFO - ${openstack_cmd} = openstack server list
20190401 15:26:14.803 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:14.803 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:14.803 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190401 15:26:14.803 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:14.803 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:14.804 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:14.804 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:14.804 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:14.804 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:14.804 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:15.433 - INFO - Command exited with return code 1.
20190401 15:26:15.433 - INFO - ${stdout} =
20190401 15:26:15.433 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:15.433 - INFO - ${rc} = 1
20190401 15:26:15.433 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:15.434 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:15.434 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:15.434 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:15.434 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:15.435 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:15.435 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:15.435 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:15.435 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:15.435 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:15.435 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:15.435 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:26:15.435 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:15.436 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:15.436 - INFO - ${response} =
20190401 15:26:15.436 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:15.436 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:15.436 - INFO - @{res_in_list} = [ ]
20190401 15:26:15.436 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:15.436 - INFO - @{vm_list} = [ ]
20190401 15:26:15.436 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:15.437 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190401 15:26:15.437 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (1)
20190401 15:26:15.437 - INFO - +----- END KW: OpenStack.Delete All Instances (634)
20190401 15:26:15.437 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190401 15:26:15.437 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190401 15:26:15.437 - INFO - ${openstack_cmd} = openstack image list
20190401 15:26:15.437 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:15.437 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190401 15:26:15.438 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190401 15:26:15.438 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:15.438 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:15.438 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:15.438 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:15.438 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:15.439 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:15.439 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190401 15:26:16.067 - INFO - Command exited with return code 1.
20190401 15:26:16.067 - INFO - ${stdout} =
20190401 15:26:16.067 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:16.067 - INFO - ${rc} = 1
20190401 15:26:16.067 - INFO - +------- END KW: SSHLibrary.Execute Command (628)
20190401 15:26:16.067 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:16.068 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:16.068 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:16.068 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:16.068 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:16.069 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:16.069 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:16.069 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:16.069 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:16.069 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:16.069 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:16.069 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:16.069 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:16.070 - INFO - ${response} =
20190401 15:26:16.070 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190401 15:26:16.070 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:16.070 - INFO - @{res_in_list} = [ ]
20190401 15:26:16.070 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:16.070 - INFO - @{image_list} = [ ]
20190401 15:26:16.070 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:16.070 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190401 15:26:16.070 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (0)
20190401 15:26:16.070 - INFO - +----- END KW: OpenStack.Delete All Images (633)
20190401 15:26:16.071 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190401 15:26:16.071 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190401 15:26:16.071 - INFO - ${openstack_cmd} = openstack flavor list
20190401 15:26:16.071 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:16.071 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190401 15:26:16.071 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190401 15:26:16.071 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:16.071 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:16.072 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:16.072 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:16.072 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:16.072 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:16.072 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190401 15:26:16.701 - INFO - Command exited with return code 1.
20190401 15:26:16.701 - INFO - ${stdout} =
20190401 15:26:16.701 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:16.701 - INFO - ${rc} = 1
20190401 15:26:16.702 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:16.702 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:16.702 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:16.702 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:16.702 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:16.703 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:16.703 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:16.703 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:16.703 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:16.703 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:16.703 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:16.703 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:26:16.703 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:16.704 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:16.704 - INFO - ${response} =
20190401 15:26:16.704 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:16.704 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:16.704 - INFO - @{res_in_list} = [ ]
20190401 15:26:16.704 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:16.704 - INFO - @{flavor_list} = [ ]
20190401 15:26:16.704 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:16.704 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190401 15:26:16.705 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (0)
20190401 15:26:16.705 - INFO - +----- END KW: OpenStack.Delete All Flavors (634)
20190401 15:26:16.705 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190401 15:26:16.705 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:16.705 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:16.705 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:16.705 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190401 15:26:16.705 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190401 15:26:16.705 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:16.706 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:16.706 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:16.706 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:16.706 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:16.706 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:16.707 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190401 15:26:17.335 - INFO - Command exited with return code 1.
20190401 15:26:17.335 - INFO - ${stdout} =
20190401 15:26:17.335 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:17.335 - INFO - ${rc} = 1
20190401 15:26:17.335 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:17.336 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:17.336 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:17.336 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:17.336 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:17.336 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:17.337 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:17.337 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:17.337 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:17.337 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:17.337 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:17.337 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:17.337 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:17.338 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:17.338 - INFO - ${response} =
20190401 15:26:17.338 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:17.338 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:17.338 - INFO - @{res_in_list} = [ ]
20190401 15:26:17.338 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:17.338 - INFO - @{network_list} = [ ]
20190401 15:26:17.338 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:17.338 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190401 15:26:17.338 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (0)
20190401 15:26:17.339 - INFO - +----- END KW: OpenStack.Delete All Networks (634)
20190401 15:26:17.339 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190401 15:26:17.339 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190401 15:26:17.339 - INFO - ${openstack_cmd} = openstack keypair list
20190401 15:26:17.339 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:17.339 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190401 15:26:17.339 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190401 15:26:17.339 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:17.340 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:17.340 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:17.340 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:17.340 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:17.340 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:17.340 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190401 15:26:17.969 - INFO - Command exited with return code 1.
20190401 15:26:17.969 - INFO - ${stdout} =
20190401 15:26:17.969 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:17.969 - INFO - ${rc} = 1
20190401 15:26:17.969 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:17.969 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:17.970 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:17.970 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:17.970 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:17.970 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:17.970 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:17.970 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:17.970 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:17.971 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:17.971 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:17.971 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:17.971 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:17.971 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:17.971 - INFO - ${response} =
20190401 15:26:17.971 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:17.972 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:17.972 - INFO - @{res_in_list} = [ ]
20190401 15:26:17.972 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:17.972 - INFO - @{key_list} = [ ]
20190401 15:26:17.972 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:17.972 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190401 15:26:17.972 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190401 15:26:17.972 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (633)
20190401 15:26:17.972 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190401 15:26:17.973 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190401 15:26:17.973 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190401 15:26:17.973 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:17.973 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:17.973 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190401 15:26:17.973 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:17.973 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:17.974 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:17.974 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:17.974 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:17.974 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:17.974 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:18.602 - INFO - Command exited with return code 1.
20190401 15:26:18.603 - INFO - ${stdout} =
20190401 15:26:18.603 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:18.603 - INFO - ${rc} = 1
20190401 15:26:18.603 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:18.603 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:18.603 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:18.604 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:18.604 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:18.604 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:18.604 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:18.604 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:18.604 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:18.604 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:18.605 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:18.605 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:26:18.605 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:18.605 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:18.605 - INFO - ${response} =
20190401 15:26:18.605 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:18.605 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:18.606 - INFO - @{res_in_list} = [ ]
20190401 15:26:18.606 - INFO - +------- END KW: String.Split String (1)
20190401 15:26:18.606 - INFO - @{snapshot_list} = [ ]
20190401 15:26:18.606 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:18.606 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190401 15:26:18.606 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190401 15:26:18.606 - INFO - +----- END KW: OpenStack.Delete All Snapshots (634)
20190401 15:26:18.606 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190401 15:26:18.606 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190401 15:26:18.606 - INFO - ${openstack_cmd} = openstack volume list
20190401 15:26:18.607 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:18.607 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190401 15:26:18.607 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190401 15:26:18.607 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:18.607 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:18.607 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:18.608 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:18.608 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:26:18.608 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:18.608 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190401 15:26:19.236 - INFO - Command exited with return code 1.
20190401 15:26:19.236 - INFO - ${stdout} =
20190401 15:26:19.236 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:19.236 - INFO - ${rc} = 1
20190401 15:26:19.236 - INFO - +------- END KW: SSHLibrary.Execute Command (628)
20190401 15:26:19.236 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:19.237 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:19.237 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:19.237 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:19.237 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:19.238 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:19.238 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:19.238 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:19.238 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:19.238 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:19.238 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:19.238 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:19.238 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:19.239 - INFO - ${response} =
20190401 15:26:19.239 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190401 15:26:19.239 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:19.239 - INFO - @{res_in_list} = [ ]
20190401 15:26:19.239 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:19.239 - INFO - @{volume_list} = [ ]
20190401 15:26:19.239 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:19.239 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190401 15:26:19.239 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (0)
20190401 15:26:19.239 - INFO - +----- END KW: OpenStack.Delete All Volumes (633)
20190401 15:26:19.240 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190401 15:26:19.240 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190401 15:26:19.240 - INFO - ${openstack_cmd} = openstack stack list
20190401 15:26:19.240 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:19.240 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:19.240 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190401 15:26:19.240 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:19.240 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:19.241 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:19.241 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:19.241 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:19.241 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:19.242 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:19.869 - INFO - Command exited with return code 1.
20190401 15:26:19.870 - INFO - ${stdout} =
20190401 15:26:19.870 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:19.870 - INFO - ${rc} = 1
20190401 15:26:19.870 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:19.870 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:19.870 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:19.870 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:19.871 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:19.871 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:19.871 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:19.871 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:19.871 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:19.871 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:19.872 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:19.872 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:26:19.872 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:19.872 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:19.872 - INFO - ${response} =
20190401 15:26:19.872 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:19.872 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:19.872 - INFO - @{res_in_list} = [ ]
20190401 15:26:19.873 - INFO - +------- END KW: String.Split String (1)
20190401 15:26:19.873 - INFO - @{stack_list} = [ ]
20190401 15:26:19.873 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:19.873 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190401 15:26:19.873 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (0)
20190401 15:26:19.873 - INFO - +----- END KW: OpenStack.Delete All Stacks (633)
20190401 15:26:19.873 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (5071)
20190401 15:26:19.873 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190401 15:26:19.873 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190401 15:26:19.875 - INFO - +----- END KW: SSHLibrary.Close All Connections (2)
20190401 15:26:19.875 - INFO - +---- END KW: Utils.Stx Suite TearDown (2)
20190401 15:26:19.875 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (5073)
==============================================================================
20190401 15:26:19.878 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.01-Instance-From-Image (15003)
==============================================================================
20190401 15:26:19.889 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.02-Instance-From-Volume [ ]
==============================================================================
20190401 15:26:19.890 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190401 15:26:19.890 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190401 15:26:19.890 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190401 15:26:19.891 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190401 15:26:19.891 - INFO - ${controller_connection} = 1
20190401 15:26:19.891 - INFO - +------ END KW: SSHLibrary.Open Connection (0)
20190401 15:26:19.891 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190401 15:26:19.891 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190401 15:26:19.892 - INFO - Length is 10
20190401 15:26:19.892 - INFO - ${pwd_length} = 10
20190401 15:26:19.892 - INFO - +------- END KW: BuiltIn.Get Length (1)
20190401 15:26:19.892 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190401 15:26:19.892 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190401 15:26:19.892 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190401 15:26:20.977 - INFO - Read output: Last login: Mon Apr  1 21:14:50 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190401 15:26:20.978 - INFO - +-------- END KW: SSHLibrary.Login (1086)
20190401 15:26:20.978 - INFO - Returning from the enclosing user keyword.
20190401 15:26:20.978 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1086)
20190401 15:26:20.978 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1087)
20190401 15:26:20.978 - INFO - ${master_controller_connection} = 1
20190401 15:26:20.978 - INFO - +----- END KW: Utils.Connect to Controller Node (1088)
20190401 15:26:20.978 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190401 15:26:20.978 - INFO - ${master_controller_connection} = 1
20190401 15:26:20.979 - INFO - +----- END KW: BuiltIn.Set Suite Variable (1)
20190401 15:26:20.979 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190401 15:26:20.979 - INFO - 1
20190401 15:26:20.979 - INFO - +----- END KW: BuiltIn.Log (0)
20190401 15:26:20.979 - INFO - +---- END KW: Utils.Open Master Controller Connection (1089)
20190401 15:26:20.979 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190401 15:26:20.980 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190401 15:26:20.980 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:26:20.980 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:26:20.980 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:26:20.980 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:26:20.981 - INFO - &{result_dict} = { stdout= }
20190401 15:26:20.981 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:20.981 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:26:20.981 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:20.981 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:26:20.982 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:20.982 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:26:20.982 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190401 15:26:20.982 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:26:20.982 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:26:20.982 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:26:20.985 - INFO - source /etc/platform/openrc
20190401 15:26:20.986 - INFO - +------ END KW: SSHLibrary.Write (4)
20190401 15:26:20.986 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:26:21.353 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:21.354 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:21.354 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (368)
20190401 15:26:21.354 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:26:21.354 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:26:21.354 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:21.354 - INFO - +------- END KW: String.Get Line (0)
20190401 15:26:21.355 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:26:21.355 - INFO - ${clean_out} =
20190401 15:26:21.355 - INFO - +------- END KW: String.Remove String (0)
20190401 15:26:21.355 - INFO - ${output} =
20190401 15:26:21.355 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:26:21.355 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:26:21.355 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:26:21.357 - INFO - echo $?
20190401 15:26:21.357 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:26:21.358 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:26:21.358 - INFO - 0
20190401 15:26:21.358 - INFO - ${rc} = 0
20190401 15:26:21.358 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:26:21.358 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:26:21.358 - INFO - 0
20190401 15:26:21.358 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:26:21.358 - INFO - ${rc} = 0
20190401 15:26:21.358 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:26:21.359 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:26:21.359 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:26:21.359 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:21.359 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:21.359 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:26:21.360 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190401 15:26:21.360 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:26:21.360 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:26:21.360 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:26:21.360 - INFO - +----- END KW: Utils.Run Command (380)
20190401 15:26:21.360 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (381)
20190401 15:26:21.360 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1470)
------------------------------------------------------------------------------
20190401 15:26:21.360 - INFO - +--- START TEST: Create Flavors for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:21.361 - INFO - +---- START KW: BuiltIn.Catenate [ ${flavor_property_1} | ${flavor_property_2} ]
20190401 15:26:21.361 - INFO - ${properties} = --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190401 15:26:21.361 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:21.361 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190401 15:26:21.362 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:21.362 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:21.362 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:21.362 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:21.362 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190401 15:26:21.362 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:21.362 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:21.363 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:21.363 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:21.363 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:21.363 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:21.364 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190401 15:26:21.942 - INFO - Command exited with return code 1.
20190401 15:26:21.942 - INFO - ${stdout} =
20190401 15:26:21.942 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:21.942 - INFO - ${rc} = 1
20190401 15:26:21.942 - INFO - +------ END KW: SSHLibrary.Execute Command (579)
20190401 15:26:21.943 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:21.943 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:21.943 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:21.943 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:21.943 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:21.944 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:21.944 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:21.944 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:21.944 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:21.944 - INFO - +----- END KW: OpenStack.Run OS Command (582)
20190401 15:26:21.944 - INFO - +---- END KW: OpenStack.Create Flavor (583)
------------------------------------------------------------------------------
20190401 15:26:21.944 - INFO - +--- END TEST: Create Flavors for Instances (584)
------------------------------------------------------------------------------
20190401 15:26:21.945 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:21.945 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190401 15:26:21.983 - INFO - [chan 2] Opened sftp connection (server version 3)
20190401 15:26:21.990 - INFO - [chan 3] Opened sftp connection (server version 3)
20190401 15:26:21.991 - FAIL - There are no source files matching '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2'.
20190401 15:26:21.991 - DEBUG - Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1559, in put_file
    destination, mode, newline, scp)
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1619, in _run_command
    raise RuntimeError(e)
20190401 15:26:21.991 - INFO - +---- END KW: SSHLibrary.Put File (46)
------------------------------------------------------------------------------
20190401 15:26:21.991 - INFO - +--- END TEST: Create Images for Instances (47)
------------------------------------------------------------------------------
20190401 15:26:21.992 - INFO - +--- START TEST: Create Networks for Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:21.992 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190401 15:26:21.992 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190401 15:26:21.992 - INFO - ${openstack_cmd} = openstack network create
20190401 15:26:21.992 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:21.992 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190401 15:26:21.993 - INFO - ${cmd} = openstack network create network-1
20190401 15:26:21.993 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190401 15:26:21.993 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:21.993 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:21.993 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:21.993 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:21.994 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:21.994 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190401 15:26:22.622 - INFO - Command exited with return code 1.
20190401 15:26:22.622 - INFO - ${stdout} =
20190401 15:26:22.622 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:22.622 - INFO - ${rc} = 1
20190401 15:26:22.622 - INFO - +------ END KW: SSHLibrary.Execute Command (628)
20190401 15:26:22.622 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:22.623 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:22.623 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:22.623 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:22.623 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:22.624 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:22.624 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:22.624 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:22.624 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:22.624 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:22.624 - INFO - +---- END KW: OpenStack.Create Network (632)
------------------------------------------------------------------------------
20190401 15:26:22.633 - INFO - +--- END TEST: Create Networks for Instance (633)
------------------------------------------------------------------------------
20190401 15:26:22.633 - INFO - +--- START TEST: Create Volume for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:22.634 - INFO - +---- START KW: OpenStack.Create Volume [ ${cirros_volume_size} | ${cirros_image_name} | --bootable | ${cirros_volume_name} ]
20190401 15:26:22.635 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack volume create ]
20190401 15:26:22.635 - INFO - ${openstack_cmd} = openstack volume create
20190401 15:26:22.635 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:22.635 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --size ${size} | --image ${image} | ${bootable} | ${name} ]
20190401 15:26:22.636 - INFO - ${cmd} = openstack volume create --size 20 --image cirros --bootable vol-cirros-1
20190401 15:26:22.636 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190401 15:26:22.636 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190401 15:26:22.636 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:22.636 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:22.637 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:22.637 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:22.637 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume create --size 20 --image cirros --bootable vol-cirros-1'.
20190401 15:26:23.366 - INFO - Command exited with return code 1.
20190401 15:26:23.366 - INFO - ${stdout} =
20190401 15:26:23.366 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:23.366 - INFO - ${rc} = 1
20190401 15:26:23.366 - INFO - +------ END KW: SSHLibrary.Execute Command (729)
20190401 15:26:23.366 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:23.367 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:23.367 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:23.367 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:23.367 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:23.368 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:23.368 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:23.368 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:23.368 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:23.368 - INFO - +----- END KW: OpenStack.Run OS Command (732)
20190401 15:26:23.368 - INFO - +---- END KW: OpenStack.Create Volume (734)
------------------------------------------------------------------------------
20190401 15:26:23.368 - INFO - +--- END TEST: Create Volume for Instances (735)
------------------------------------------------------------------------------
20190401 15:26:23.369 - INFO - +--- START TEST: Launch Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:23.369 - INFO - +---- START KW: OpenStack.Create Instance From Volume [ ${network_name} | ${cirros_instance_name} | ${cirros_volume_name} | ${cirros_flavor_name} ]
20190401 15:26:23.369 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190401 15:26:23.370 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:23.370 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:23.370 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:23.370 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190401 15:26:23.370 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190401 15:26:23.370 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:23.370 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190401 15:26:23.371 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:23.371 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:23.371 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:23.371 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:23.371 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190401 15:26:24.050 - INFO - Command exited with return code 0.
20190401 15:26:24.050 - INFO - ${stdout} =
20190401 15:26:24.050 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:24.050 - INFO - ${rc} = 0
20190401 15:26:24.050 - INFO - +------- END KW: SSHLibrary.Execute Command (679)
20190401 15:26:24.051 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:24.051 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 0}
20190401 15:26:24.051 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:24.051 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:24.051 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:24.052 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=0 }
20190401 15:26:24.052 - INFO - +------ END KW: OpenStack.Run OS Command (682)
20190401 15:26:24.052 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:24.052 - INFO - ${output} =
20190401 15:26:24.052 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190401 15:26:24.052 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190401 15:26:24.052 - INFO - ${splitted_output} = []
20190401 15:26:24.053 - INFO - +------ END KW: String.Split String (0)
20190401 15:26:24.053 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190401 15:26:24.053 - FAIL - IndexError: Given index 0 is out of the range 0--1.
20190401 15:26:24.053 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:24.053 - INFO - +------ END KW: Collections.Get From List (0)
20190401 15:26:24.053 - INFO - +----- END KW: OpenStack.Get Net Id (684)
20190401 15:26:24.053 - INFO - +---- END KW: OpenStack.Create Instance From Volume (684)
------------------------------------------------------------------------------
20190401 15:26:24.054 - INFO - +--- END TEST: Launch Instances (685)
------------------------------------------------------------------------------
20190401 15:26:24.054 - INFO - +--- START TEST: Suspend Resume Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:24.054 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name} ]
20190401 15:26:24.054 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190401 15:26:24.055 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:24.055 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:24.055 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:24.055 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:24.055 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-1'.
20190401 15:26:24.684 - INFO - Command exited with return code 1.
20190401 15:26:24.684 - INFO - ${stdout} =
20190401 15:26:24.684 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:24.684 - INFO - ${rc} = 1
20190401 15:26:24.684 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:24.684 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:24.685 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:24.685 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:24.685 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:24.685 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:24.686 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:24.686 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:24.686 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:24.686 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:24.686 - INFO - +----- END KW: OpenStack.Run OS Command (632)
20190401 15:26:24.686 - INFO - +---- END KW: OpenStack.Suspend Instance (632)
------------------------------------------------------------------------------
20190401 15:26:24.687 - INFO - +--- END TEST: Suspend Resume Instance (632)
------------------------------------------------------------------------------
20190401 15:26:24.687 - INFO - +--- START TEST: Set Error Active Flags Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:24.687 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name} | error ]
20190401 15:26:24.687 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190401 15:26:24.688 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:24.688 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:24.688 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:24.688 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:24.688 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-1'.
20190401 15:26:25.316 - INFO - Command exited with return code 1.
20190401 15:26:25.317 - INFO - ${stdout} =
20190401 15:26:25.317 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:25.317 - INFO - ${rc} = 1
20190401 15:26:25.317 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:25.317 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:25.317 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:25.317 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:25.318 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:25.318 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:25.318 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:25.318 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:25.318 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:25.318 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:25.318 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:25.319 - INFO - +---- END KW: OpenStack.Set Error State Instance (631)
------------------------------------------------------------------------------
20190401 15:26:25.319 - INFO - +--- END TEST: Set Error Active Flags Instance (632)
------------------------------------------------------------------------------
20190401 15:26:25.319 - INFO - +--- START TEST: Pause Unpause Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:25.319 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name} ]
20190401 15:26:25.320 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190401 15:26:25.320 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:25.320 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:25.320 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:25.320 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:25.321 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-1'.
20190401 15:26:25.899 - INFO - Command exited with return code 1.
20190401 15:26:25.899 - INFO - ${stdout} =
20190401 15:26:25.899 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:25.899 - INFO - ${rc} = 1
20190401 15:26:25.899 - INFO - +------ END KW: SSHLibrary.Execute Command (579)
20190401 15:26:25.899 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:25.900 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:25.900 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:25.900 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:25.900 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:25.900 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:25.900 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:25.900 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:25.901 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:25.901 - INFO - +----- END KW: OpenStack.Run OS Command (581)
20190401 15:26:25.901 - INFO - +---- END KW: OpenStack.Pause Instance (582)
------------------------------------------------------------------------------
20190401 15:26:25.901 - INFO - +--- END TEST: Pause Unpause Instances (582)
------------------------------------------------------------------------------
20190401 15:26:25.901 - INFO - +--- START TEST: Stop Start Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:25.902 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name} ]
20190401 15:26:25.902 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190401 15:26:25.902 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:25.902 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:25.902 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:25.902 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:25.903 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-1'.
20190401 15:26:26.561 - INFO - Command exited with return code 1.
20190401 15:26:26.561 - INFO - ${stdout} =
20190401 15:26:26.561 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:26.561 - INFO - ${rc} = 1
20190401 15:26:26.562 - INFO - +------ END KW: SSHLibrary.Execute Command (660)
20190401 15:26:26.562 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:26.562 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:26.562 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:26.562 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:26.563 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:26.564 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:26.564 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:26.564 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:26.564 - INFO - +------ END KW: BuiltIn.Run Keyword If (2)
20190401 15:26:26.564 - INFO - +----- END KW: OpenStack.Run OS Command (662)
20190401 15:26:26.564 - INFO - +---- END KW: OpenStack.Stop Instance (662)
------------------------------------------------------------------------------
20190401 15:26:26.564 - INFO - +--- END TEST: Stop Start Instances (663)
------------------------------------------------------------------------------
20190401 15:26:26.565 - INFO - +--- START TEST: Lock Unlock Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:26.565 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name} ]
20190401 15:26:26.565 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190401 15:26:26.565 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:26.566 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:26.566 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:26.566 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:26.566 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-1'.
20190401 15:26:27.195 - INFO - Command exited with return code 1.
20190401 15:26:27.195 - INFO - ${stdout} =
20190401 15:26:27.195 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:27.195 - INFO - ${rc} = 1
20190401 15:26:27.195 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:27.195 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:27.196 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:27.196 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:27.196 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:27.197 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:27.197 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:27.197 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:27.197 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:27.197 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:27.197 - INFO - +----- END KW: OpenStack.Run OS Command (632)
20190401 15:26:27.197 - INFO - +---- END KW: OpenStack.Lock Instance (632)
------------------------------------------------------------------------------
20190401 15:26:27.198 - INFO - +--- END TEST: Lock Unlock Instances (633)
------------------------------------------------------------------------------
20190401 15:26:27.198 - INFO - +--- START TEST: Reboot Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:27.198 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name} ]
20190401 15:26:27.199 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190401 15:26:27.199 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:27.199 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:27.199 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:27.199 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:27.199 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-1'.
20190401 15:26:27.827 - INFO - Command exited with return code 1.
20190401 15:26:27.828 - INFO - ${stdout} =
20190401 15:26:27.828 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:27.828 - INFO - ${rc} = 1
20190401 15:26:27.828 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:27.828 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:27.828 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:27.828 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:27.828 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:27.829 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:27.829 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:27.829 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:27.829 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:27.829 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:27.829 - INFO - +----- END KW: OpenStack.Run OS Command (630)
20190401 15:26:27.829 - INFO - +---- END KW: OpenStack.Reboot Instance (631)
------------------------------------------------------------------------------
20190401 15:26:27.830 - INFO - +--- END TEST: Reboot Instances (632)
------------------------------------------------------------------------------
20190401 15:26:27.830 - INFO - +--- START TEST: Rebuild Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:27.830 - INFO - +---- START KW: OpenStack.Rebuild Instance From Volume [ ${cirros_instance_name} | ${cirros_image_name} ]
20190401 15:26:27.831 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild --image ${image} ${vm_name} | True | 30 sec ]
20190401 15:26:27.831 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:27.831 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:27.831 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:27.831 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:27.832 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild --image cirros vm-cirros-1'.
20190401 15:26:28.460 - INFO - Command exited with return code 1.
20190401 15:26:28.460 - INFO - ${stdout} =
20190401 15:26:28.460 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:28.460 - INFO - ${rc} = 1
20190401 15:26:28.461 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:28.461 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:28.461 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:28.461 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:28.461 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:28.462 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:28.462 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:28.462 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:28.462 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:28.462 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:28.462 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:28.463 - INFO - +---- END KW: OpenStack.Rebuild Instance From Volume (632)
------------------------------------------------------------------------------
20190401 15:26:28.463 - INFO - +--- END TEST: Rebuild Instances (633)
------------------------------------------------------------------------------
20190401 15:26:28.463 - INFO - +--- START TEST: Resize Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:28.463 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name_2} ]
20190401 15:26:28.464 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:28.464 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:28.464 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:28.464 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:28.464 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small
20190401 15:26:28.464 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:28.465 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:28.465 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:28.465 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:28.465 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:28.465 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:28.466 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small'.
20190401 15:26:29.050 - INFO - Command exited with return code 1.
20190401 15:26:29.050 - INFO - ${stdout} =
20190401 15:26:29.050 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:29.050 - INFO - ${rc} = 1
20190401 15:26:29.051 - INFO - +------ END KW: SSHLibrary.Execute Command (585)
20190401 15:26:29.051 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:29.051 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:29.051 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:29.051 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:29.052 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:29.052 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:29.052 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:29.052 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:29.052 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:29.052 - INFO - +----- END KW: OpenStack.Run OS Command (587)
20190401 15:26:29.052 - INFO - +---- END KW: OpenStack.Create Flavor (589)
------------------------------------------------------------------------------
20190401 15:26:29.053 - INFO - +--- END TEST: Resize Instances (589)
------------------------------------------------------------------------------
20190401 15:26:29.053 - INFO - +--- START TEST: Set Unset Properties Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:29.053 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1}='true' | ${instance_property_2}='500' | ${instance_property_3}='180' ]
20190401 15:26:29.054 - INFO - ${properties} = --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180'
20190401 15:26:29.054 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:29.054 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name} | ${properties} ]
20190401 15:26:29.055 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190401 15:26:29.055 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:29.055 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:29.055 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:29.055 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:29.056 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-1'.
20190401 15:26:29.714 - INFO - Command exited with return code 1.
20190401 15:26:29.714 - INFO - ${stdout} =
20190401 15:26:29.714 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:29.714 - INFO - ${rc} = 1
20190401 15:26:29.714 - INFO - +------ END KW: SSHLibrary.Execute Command (659)
20190401 15:26:29.715 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:29.715 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:29.715 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:29.715 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:29.716 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:29.716 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:29.716 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:29.716 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:29.716 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:29.716 - INFO - +----- END KW: OpenStack.Run OS Command (661)
20190401 15:26:29.716 - INFO - +---- END KW: OpenStack.Set Instance Property (662)
------------------------------------------------------------------------------
20190401 15:26:29.716 - INFO - +--- END TEST: Set Unset Properties Instances (663)
------------------------------------------------------------------------------
20190401 15:26:29.717 - INFO - +--- START TEST: Evacuate Instances From Hosts [ ]
------------------------------------------------------------------------------
20190401 15:26:29.717 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}' == 'Duplex' | Run Keywords | Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 | ELSE IF | '${CONFIGURATION_TYPE}' == 'MN-Local' or '${CONFIGURATION_TYPE}' == 'MN-External' | Run Keywords | Evacuate Instances | compute-0 | AND | Evacuate Instances | compute-1 ]
20190401 15:26:29.717 - INFO - +----- START KW: BuiltIn.Run Keywords [ Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 ]
20190401 15:26:29.718 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-0 ]
20190401 15:26:29.718 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190401 15:26:29.718 - INFO - ${openstack_cmd} = openstack compute service set
20190401 15:26:29.718 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:29.718 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190401 15:26:29.719 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute
20190401 15:26:29.719 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190401 15:26:29.719 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190401 15:26:29.719 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:29.719 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:29.719 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:29.719 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:29.720 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute'.
20190401 15:26:30.348 - INFO - Command exited with return code 1.
20190401 15:26:30.348 - INFO - ${stdout} =
20190401 15:26:30.348 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:30.348 - INFO - ${rc} = 1
20190401 15:26:30.348 - INFO - +-------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:30.349 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:30.349 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:30.349 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:30.349 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:30.349 - INFO - +--------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:30.350 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:30.350 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:30.350 - INFO - +--------- END KW: BuiltIn.Fail (1)
20190401 15:26:30.350 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:30.350 - INFO - +------- END KW: OpenStack.Run OS Command (631)
20190401 15:26:30.350 - INFO - +------ END KW: OpenStack.Evacuate Instances (632)
20190401 15:26:30.350 - INFO - +----- END KW: BuiltIn.Run Keywords (633)
20190401 15:26:30.350 - INFO - +---- END KW: BuiltIn.Run Keyword If (633)
------------------------------------------------------------------------------
20190401 15:26:30.351 - INFO - +--- END TEST: Evacuate Instances From Hosts (633)
------------------------------------------------------------------------------
20190401 15:26:30.351 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190401 15:26:30.352 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190401 15:26:30.352 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190401 15:26:30.352 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190401 15:26:30.352 - INFO - ${openstack_cmd} = openstack server list
20190401 15:26:30.352 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:30.352 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:30.352 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190401 15:26:30.352 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:30.353 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:30.353 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:30.353 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:30.353 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:30.353 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:30.354 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:30.932 - INFO - Command exited with return code 1.
20190401 15:26:30.932 - INFO - ${stdout} =
20190401 15:26:30.932 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:30.932 - INFO - ${rc} = 1
20190401 15:26:30.932 - INFO - +------- END KW: SSHLibrary.Execute Command (579)
20190401 15:26:30.932 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:30.933 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:30.933 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:30.933 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:30.933 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:30.934 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:30.934 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:30.934 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:30.934 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:30.934 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:30.934 - INFO - +------ END KW: OpenStack.Run OS Command (581)
20190401 15:26:30.934 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:30.934 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:30.935 - INFO - ${response} =
20190401 15:26:30.935 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190401 15:26:30.935 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:30.935 - INFO - @{res_in_list} = [ ]
20190401 15:26:30.935 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:30.935 - INFO - @{vm_list} = [ ]
20190401 15:26:30.935 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:30.935 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190401 15:26:30.935 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (0)
20190401 15:26:30.935 - INFO - +----- END KW: OpenStack.Delete All Instances (583)
20190401 15:26:30.936 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190401 15:26:30.936 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190401 15:26:30.936 - INFO - ${openstack_cmd} = openstack image list
20190401 15:26:30.936 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:30.936 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190401 15:26:30.936 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190401 15:26:30.936 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:30.936 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:30.937 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:30.937 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:30.937 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:30.937 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:30.938 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190401 15:26:31.546 - INFO - Command exited with return code 1.
20190401 15:26:31.546 - INFO - ${stdout} =
20190401 15:26:31.546 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:31.546 - INFO - ${rc} = 1
20190401 15:26:31.546 - INFO - +------- END KW: SSHLibrary.Execute Command (609)
20190401 15:26:31.546 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:31.547 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:31.547 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:31.547 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:31.547 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:31.548 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:31.548 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:31.548 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:31.548 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:31.548 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:31.548 - INFO - +------ END KW: OpenStack.Run OS Command (612)
20190401 15:26:31.548 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:31.549 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:31.549 - INFO - ${response} =
20190401 15:26:31.549 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:31.549 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:31.549 - INFO - @{res_in_list} = [ ]
20190401 15:26:31.549 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:31.549 - INFO - @{image_list} = [ ]
20190401 15:26:31.549 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:31.550 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190401 15:26:31.550 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (0)
20190401 15:26:31.550 - INFO - +----- END KW: OpenStack.Delete All Images (614)
20190401 15:26:31.550 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190401 15:26:31.550 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190401 15:26:31.550 - INFO - ${openstack_cmd} = openstack flavor list
20190401 15:26:31.550 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:31.550 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190401 15:26:31.551 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190401 15:26:31.551 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:31.551 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:31.551 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:31.551 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:31.551 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:31.551 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:31.552 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190401 15:26:32.260 - INFO - Command exited with return code 1.
20190401 15:26:32.260 - INFO - ${stdout} =
20190401 15:26:32.260 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:32.261 - INFO - ${rc} = 1
20190401 15:26:32.261 - INFO - +------- END KW: SSHLibrary.Execute Command (710)
20190401 15:26:32.261 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:32.261 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:32.261 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:32.261 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:32.262 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:32.262 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:32.262 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:32.262 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:32.262 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:32.262 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:32.262 - INFO - +------ END KW: OpenStack.Run OS Command (711)
20190401 15:26:32.262 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:32.263 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:32.263 - INFO - ${response} =
20190401 15:26:32.263 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:32.263 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:32.263 - INFO - @{res_in_list} = [ ]
20190401 15:26:32.263 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:32.263 - INFO - @{flavor_list} = [ ]
20190401 15:26:32.264 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:32.264 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190401 15:26:32.264 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (0)
20190401 15:26:32.264 - INFO - +----- END KW: OpenStack.Delete All Flavors (714)
20190401 15:26:32.264 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190401 15:26:32.264 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:32.264 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:32.264 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:32.264 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190401 15:26:32.265 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190401 15:26:32.265 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:32.265 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:32.265 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:32.265 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:32.265 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:32.266 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:32.266 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190401 15:26:33.095 - INFO - Command exited with return code 1.
20190401 15:26:33.095 - INFO - ${stdout} =
20190401 15:26:33.095 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:33.095 - INFO - ${rc} = 1
20190401 15:26:33.095 - INFO - +------- END KW: SSHLibrary.Execute Command (829)
20190401 15:26:33.095 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:33.096 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:33.096 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:33.096 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:33.096 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:33.096 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:33.096 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:33.096 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:33.097 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:33.097 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:33.097 - INFO - +------ END KW: OpenStack.Run OS Command (832)
20190401 15:26:33.097 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:33.097 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:33.097 - INFO - ${response} =
20190401 15:26:33.097 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:33.098 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:33.098 - INFO - @{res_in_list} = [ ]
20190401 15:26:33.098 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:33.098 - INFO - @{network_list} = [ ]
20190401 15:26:33.098 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:33.098 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190401 15:26:33.098 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (0)
20190401 15:26:33.098 - INFO - +----- END KW: OpenStack.Delete All Networks (834)
20190401 15:26:33.098 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190401 15:26:33.099 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190401 15:26:33.099 - INFO - ${openstack_cmd} = openstack keypair list
20190401 15:26:33.099 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:33.099 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190401 15:26:33.099 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190401 15:26:33.099 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:33.099 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:33.100 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:33.100 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:33.100 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:26:33.100 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:33.100 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190401 15:26:33.759 - INFO - Command exited with return code 1.
20190401 15:26:33.759 - INFO - ${stdout} =
20190401 15:26:33.759 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:33.759 - INFO - ${rc} = 1
20190401 15:26:33.760 - INFO - +------- END KW: SSHLibrary.Execute Command (659)
20190401 15:26:33.760 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:33.760 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:33.760 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:33.760 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:33.761 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:33.761 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:33.761 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:33.761 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:33.761 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:33.761 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:33.761 - INFO - +------ END KW: OpenStack.Run OS Command (662)
20190401 15:26:33.761 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:33.762 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:33.762 - INFO - ${response} =
20190401 15:26:33.762 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:33.762 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:33.762 - INFO - @{res_in_list} = [ ]
20190401 15:26:33.762 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:33.762 - INFO - @{key_list} = [ ]
20190401 15:26:33.762 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:33.763 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190401 15:26:33.763 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190401 15:26:33.763 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (665)
20190401 15:26:33.763 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190401 15:26:33.763 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190401 15:26:33.763 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190401 15:26:33.763 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:33.763 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:33.763 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190401 15:26:33.764 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:33.764 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:33.764 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:33.764 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:33.764 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:33.764 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:33.765 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:34.408 - INFO - Command exited with return code 1.
20190401 15:26:34.408 - INFO - ${stdout} =
20190401 15:26:34.408 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:34.408 - INFO - ${rc} = 1
20190401 15:26:34.408 - INFO - +------- END KW: SSHLibrary.Execute Command (644)
20190401 15:26:34.408 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:34.409 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:34.409 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:34.409 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:34.409 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:34.409 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:34.409 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:34.409 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:34.409 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:34.410 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:34.410 - INFO - +------ END KW: OpenStack.Run OS Command (646)
20190401 15:26:34.410 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:34.410 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:34.410 - INFO - ${response} =
20190401 15:26:34.410 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:34.410 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:34.411 - INFO - @{res_in_list} = [ ]
20190401 15:26:34.411 - INFO - +------- END KW: String.Split String (1)
20190401 15:26:34.411 - INFO - @{snapshot_list} = [ ]
20190401 15:26:34.411 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:34.411 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190401 15:26:34.411 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190401 15:26:34.411 - INFO - +----- END KW: OpenStack.Delete All Snapshots (648)
20190401 15:26:34.411 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190401 15:26:34.411 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190401 15:26:34.412 - INFO - ${openstack_cmd} = openstack volume list
20190401 15:26:34.412 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:34.412 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190401 15:26:34.412 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190401 15:26:34.412 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:34.412 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:34.412 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:34.413 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:34.413 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:26:34.413 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:34.413 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190401 15:26:35.041 - INFO - Command exited with return code 1.
20190401 15:26:35.041 - INFO - ${stdout} =
20190401 15:26:35.041 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:35.041 - INFO - ${rc} = 1
20190401 15:26:35.042 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:35.042 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:35.042 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:35.042 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:35.042 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:35.043 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:35.043 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:35.043 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:35.043 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:35.043 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:35.043 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:35.043 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:35.043 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:35.044 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:35.044 - INFO - ${response} =
20190401 15:26:35.044 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:35.044 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:35.044 - INFO - @{res_in_list} = [ ]
20190401 15:26:35.044 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:35.044 - INFO - @{volume_list} = [ ]
20190401 15:26:35.044 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:35.045 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190401 15:26:35.045 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (0)
20190401 15:26:35.045 - INFO - +----- END KW: OpenStack.Delete All Volumes (634)
20190401 15:26:35.045 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190401 15:26:35.045 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190401 15:26:35.045 - INFO - ${openstack_cmd} = openstack stack list
20190401 15:26:35.045 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:35.045 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:35.046 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190401 15:26:35.046 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:35.046 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:35.046 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:35.046 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:35.046 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:35.046 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:35.047 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:35.675 - INFO - Command exited with return code 1.
20190401 15:26:35.675 - INFO - ${stdout} =
20190401 15:26:35.675 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:35.675 - INFO - ${rc} = 1
20190401 15:26:35.675 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:35.675 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:35.676 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:35.676 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:35.676 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:35.676 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:35.676 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:35.676 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:35.676 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:35.677 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:35.677 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:35.677 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:35.677 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:35.677 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:35.677 - INFO - ${response} =
20190401 15:26:35.677 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:35.678 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:35.678 - INFO - @{res_in_list} = [ ]
20190401 15:26:35.678 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:35.678 - INFO - @{stack_list} = [ ]
20190401 15:26:35.678 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:35.678 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190401 15:26:35.678 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (0)
20190401 15:26:35.678 - INFO - +----- END KW: OpenStack.Delete All Stacks (633)
20190401 15:26:35.678 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (5326)
20190401 15:26:35.679 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190401 15:26:35.679 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190401 15:26:35.680 - INFO - +----- END KW: SSHLibrary.Close All Connections (1)
20190401 15:26:35.680 - INFO - +---- END KW: Utils.Stx Suite TearDown (1)
20190401 15:26:35.681 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (5329)
==============================================================================
20190401 15:26:35.683 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.02-Instance-From-Volume (15803)
==============================================================================
20190401 15:26:35.696 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.03-Instance-From-Snapshot [ ]
==============================================================================
20190401 15:26:35.696 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190401 15:26:35.696 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190401 15:26:35.697 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190401 15:26:35.697 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190401 15:26:35.697 - INFO - ${controller_connection} = 1
20190401 15:26:35.697 - INFO - +------ END KW: SSHLibrary.Open Connection (0)
20190401 15:26:35.698 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190401 15:26:35.698 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190401 15:26:35.698 - INFO - Length is 10
20190401 15:26:35.698 - INFO - ${pwd_length} = 10
20190401 15:26:35.698 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190401 15:26:35.698 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190401 15:26:35.698 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190401 15:26:35.699 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190401 15:26:36.784 - INFO - Read output: Last login: Mon Apr  1 21:15:05 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190401 15:26:36.785 - INFO - +-------- END KW: SSHLibrary.Login (1086)
20190401 15:26:36.785 - INFO - Returning from the enclosing user keyword.
20190401 15:26:36.785 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1087)
20190401 15:26:36.785 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1088)
20190401 15:26:36.785 - INFO - ${master_controller_connection} = 1
20190401 15:26:36.785 - INFO - +----- END KW: Utils.Connect to Controller Node (1088)
20190401 15:26:36.786 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190401 15:26:36.786 - INFO - ${master_controller_connection} = 1
20190401 15:26:36.786 - INFO - +----- END KW: BuiltIn.Set Suite Variable (1)
20190401 15:26:36.786 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190401 15:26:36.786 - INFO - 1
20190401 15:26:36.786 - INFO - +----- END KW: BuiltIn.Log (0)
20190401 15:26:36.787 - INFO - +---- END KW: Utils.Open Master Controller Connection (1091)
20190401 15:26:36.787 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190401 15:26:36.787 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190401 15:26:36.788 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:26:36.788 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:26:36.788 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:26:36.788 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:26:36.789 - INFO - &{result_dict} = { stdout= }
20190401 15:26:36.789 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:36.789 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:26:36.790 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190401 15:26:36.790 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:26:36.790 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:36.790 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:26:36.790 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190401 15:26:36.791 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:26:36.791 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:26:36.791 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:26:36.797 - INFO - source /etc/platform/openrc
20190401 15:26:36.798 - INFO - +------ END KW: SSHLibrary.Write (6)
20190401 15:26:36.798 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:26:37.289 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:37.289 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:37.289 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (491)
20190401 15:26:37.290 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:26:37.290 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:26:37.290 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:37.290 - INFO - +------- END KW: String.Get Line (0)
20190401 15:26:37.290 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:26:37.290 - INFO - ${clean_out} =
20190401 15:26:37.291 - INFO - +------- END KW: String.Remove String (1)
20190401 15:26:37.291 - INFO - ${output} =
20190401 15:26:37.291 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:26:37.291 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:26:37.291 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:26:37.293 - INFO - echo $?
20190401 15:26:37.293 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:26:37.293 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:26:37.295 - INFO - 0
20190401 15:26:37.295 - INFO - ${rc} = 0
20190401 15:26:37.295 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (2)
20190401 15:26:37.295 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:26:37.295 - INFO - 0
20190401 15:26:37.295 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:26:37.295 - INFO - ${rc} = 0
20190401 15:26:37.295 - INFO - +------ END KW: Utils.Get Return Code (4)
20190401 15:26:37.295 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:26:37.296 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:26:37.296 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:37.296 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:37.296 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:26:37.296 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:26:37.296 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:26:37.296 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:26:37.297 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190401 15:26:37.297 - INFO - +----- END KW: Utils.Run Command (510)
20190401 15:26:37.297 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (510)
20190401 15:26:37.297 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1601)
------------------------------------------------------------------------------
20190401 15:26:37.297 - INFO - +--- START TEST: Create Flavors for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:37.297 - INFO - +---- START KW: BuiltIn.Catenate [ ${flavor_property_1} | ${flavor_property_2} ]
20190401 15:26:37.298 - INFO - ${properties} = --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190401 15:26:37.298 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:37.298 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190401 15:26:37.298 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:37.298 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:37.299 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190401 15:26:37.299 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:37.299 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190401 15:26:37.299 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:37.299 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:37.299 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:37.300 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:37.300 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:37.300 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:37.300 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190401 15:26:37.933 - INFO - Command exited with return code 1.
20190401 15:26:37.933 - INFO - ${stdout} =
20190401 15:26:37.933 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:37.933 - INFO - ${rc} = 1
20190401 15:26:37.933 - INFO - +------ END KW: SSHLibrary.Execute Command (633)
20190401 15:26:37.933 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:37.934 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:37.934 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:37.934 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:37.934 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:37.934 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:37.934 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:37.934 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:37.934 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:37.935 - INFO - +----- END KW: OpenStack.Run OS Command (636)
20190401 15:26:37.935 - INFO - +---- END KW: OpenStack.Create Flavor (637)
------------------------------------------------------------------------------
20190401 15:26:37.935 - INFO - +--- END TEST: Create Flavors for Instances (638)
------------------------------------------------------------------------------
20190401 15:26:37.935 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:37.936 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190401 15:26:37.946 - INFO - [chan 2] Opened sftp connection (server version 3)
20190401 15:26:37.952 - INFO - [chan 3] Opened sftp connection (server version 3)
20190401 15:26:37.953 - FAIL - There are no source files matching '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2'.
20190401 15:26:37.953 - DEBUG - Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1559, in put_file
    destination, mode, newline, scp)
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1619, in _run_command
    raise RuntimeError(e)
20190401 15:26:37.953 - INFO - +---- END KW: SSHLibrary.Put File (17)
------------------------------------------------------------------------------
20190401 15:26:37.954 - INFO - +--- END TEST: Create Images for Instances (19)
------------------------------------------------------------------------------
20190401 15:26:37.954 - INFO - +--- START TEST: Create Networks for Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:37.954 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190401 15:26:37.955 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190401 15:26:37.955 - INFO - ${openstack_cmd} = openstack network create
20190401 15:26:37.955 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:37.955 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190401 15:26:37.955 - INFO - ${cmd} = openstack network create network-1
20190401 15:26:37.955 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:37.955 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:37.956 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:37.956 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:37.956 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:37.956 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:37.956 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190401 15:26:38.584 - INFO - Command exited with return code 1.
20190401 15:26:38.584 - INFO - ${stdout} =
20190401 15:26:38.584 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:38.585 - INFO - ${rc} = 1
20190401 15:26:38.585 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:38.585 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:38.585 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:38.585 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:38.585 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:38.586 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:38.586 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:38.586 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:38.586 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:38.586 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:38.586 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:38.586 - INFO - +---- END KW: OpenStack.Create Network (632)
------------------------------------------------------------------------------
20190401 15:26:38.587 - INFO - +--- END TEST: Create Networks for Instance (632)
------------------------------------------------------------------------------
20190401 15:26:38.587 - INFO - +--- START TEST: Create Volume for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:38.587 - INFO - +---- START KW: OpenStack.Create Volume [ ${cirros_volume_size} | ${cirros_image_name} | --bootable | ${cirros_volume_name} ]
20190401 15:26:38.588 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack volume create ]
20190401 15:26:38.588 - INFO - ${openstack_cmd} = openstack volume create
20190401 15:26:38.588 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:38.588 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --size ${size} | --image ${image} | ${bootable} | ${name} ]
20190401 15:26:38.588 - INFO - ${cmd} = openstack volume create --size 20 --image cirros --bootable vol-cirros-1
20190401 15:26:38.588 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:38.588 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190401 15:26:38.589 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:38.589 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:38.589 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:38.589 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:38.589 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume create --size 20 --image cirros --bootable vol-cirros-1'.
20190401 15:26:39.217 - INFO - Command exited with return code 1.
20190401 15:26:39.217 - INFO - ${stdout} =
20190401 15:26:39.217 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:39.218 - INFO - ${rc} = 1
20190401 15:26:39.218 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:39.218 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:39.218 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:39.218 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:39.218 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:39.219 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:39.219 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:39.219 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:39.219 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:39.219 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:39.219 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:39.219 - INFO - +---- END KW: OpenStack.Create Volume (632)
------------------------------------------------------------------------------
20190401 15:26:39.220 - INFO - +--- END TEST: Create Volume for Instances (632)
------------------------------------------------------------------------------
20190401 15:26:39.220 - INFO - +--- START TEST: Create Snapshot for Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:39.220 - INFO - +---- START KW: OpenStack.Create Snapshot [ ${cirros_volume_name} | ${cirros_snapshot_name} ]
20190401 15:26:39.220 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack volume snapshot create --volume ${volume} ${name} | True | 30 sec ]
20190401 15:26:39.222 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:39.222 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:39.222 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:39.222 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:39.222 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot create --volume vol-cirros-1 snap-cirros-1'.
20190401 15:26:39.850 - INFO - Command exited with return code 1.
20190401 15:26:39.850 - INFO - ${stdout} =
20190401 15:26:39.851 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:39.851 - INFO - ${rc} = 1
20190401 15:26:39.851 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:39.851 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:39.851 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:39.851 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:39.851 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:39.852 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:39.852 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:39.852 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:39.852 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:39.852 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:39.852 - INFO - +----- END KW: OpenStack.Run OS Command (632)
20190401 15:26:39.852 - INFO - +---- END KW: OpenStack.Create Snapshot (632)
------------------------------------------------------------------------------
20190401 15:26:39.853 - INFO - +--- END TEST: Create Snapshot for Instance (632)
------------------------------------------------------------------------------
20190401 15:26:39.853 - INFO - +--- START TEST: Launch Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:39.853 - INFO - +---- START KW: OpenStack.Create Instance From Snapshot [ ${network_name} | ${cirros_image_name} | ${cirros_instance_name} | ${cirros_snapshot_name} | ${cirros_snapshot_size} | ${cirros_flavor_name} ]
20190401 15:26:39.853 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190401 15:26:39.854 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:39.854 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:39.854 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:39.854 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190401 15:26:39.854 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190401 15:26:39.854 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:39.854 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190401 15:26:39.855 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:39.855 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:39.855 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:39.855 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:39.855 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190401 15:26:40.433 - INFO - Command exited with return code 0.
20190401 15:26:40.434 - INFO - ${stdout} =
20190401 15:26:40.434 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:40.434 - INFO - ${rc} = 0
20190401 15:26:40.434 - INFO - +------- END KW: SSHLibrary.Execute Command (579)
20190401 15:26:40.434 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:40.434 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 0}
20190401 15:26:40.434 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:40.434 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:40.435 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:40.435 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=0 }
20190401 15:26:40.435 - INFO - +------ END KW: OpenStack.Run OS Command (581)
20190401 15:26:40.435 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:40.435 - INFO - ${output} =
20190401 15:26:40.435 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190401 15:26:40.435 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190401 15:26:40.436 - INFO - ${splitted_output} = []
20190401 15:26:40.436 - INFO - +------ END KW: String.Split String (1)
20190401 15:26:40.436 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190401 15:26:40.436 - FAIL - IndexError: Given index 0 is out of the range 0--1.
20190401 15:26:40.436 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:40.436 - INFO - +------ END KW: Collections.Get From List (0)
20190401 15:26:40.436 - INFO - +----- END KW: OpenStack.Get Net Id (583)
20190401 15:26:40.437 - INFO - +---- END KW: OpenStack.Create Instance From Snapshot (583)
------------------------------------------------------------------------------
20190401 15:26:40.437 - INFO - +--- END TEST: Launch Instances (584)
------------------------------------------------------------------------------
20190401 15:26:40.437 - INFO - +--- START TEST: Suspend Resume Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:40.437 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name} ]
20190401 15:26:40.438 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190401 15:26:40.438 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:40.438 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:40.438 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:40.438 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:40.439 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-1'.
20190401 15:26:41.097 - INFO - Command exited with return code 1.
20190401 15:26:41.097 - INFO - ${stdout} =
20190401 15:26:41.097 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:41.097 - INFO - ${rc} = 1
20190401 15:26:41.097 - INFO - +------ END KW: SSHLibrary.Execute Command (659)
20190401 15:26:41.098 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:41.098 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:41.098 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:41.098 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:41.099 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:41.099 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:41.099 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:41.099 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:41.099 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:41.099 - INFO - +----- END KW: OpenStack.Run OS Command (661)
20190401 15:26:41.099 - INFO - +---- END KW: OpenStack.Suspend Instance (662)
------------------------------------------------------------------------------
20190401 15:26:41.100 - INFO - +--- END TEST: Suspend Resume Instances (662)
------------------------------------------------------------------------------
20190401 15:26:41.100 - INFO - +--- START TEST: Set Error Active Flags Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:41.100 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name} | error ]
20190401 15:26:41.100 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190401 15:26:41.101 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:41.101 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:41.101 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:41.101 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:41.101 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-1'.
20190401 15:26:41.730 - INFO - Command exited with return code 1.
20190401 15:26:41.730 - INFO - ${stdout} =
20190401 15:26:41.730 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:41.730 - INFO - ${rc} = 1
20190401 15:26:41.730 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:41.730 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:41.731 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:41.731 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:41.731 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:41.731 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:41.731 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:41.731 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:41.731 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:41.731 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:41.732 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:41.732 - INFO - +---- END KW: OpenStack.Set Error State Instance (632)
------------------------------------------------------------------------------
20190401 15:26:41.732 - INFO - +--- END TEST: Set Error Active Flags Instances (632)
------------------------------------------------------------------------------
20190401 15:26:41.732 - INFO - +--- START TEST: Pause Unpause Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:41.732 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name} ]
20190401 15:26:41.733 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190401 15:26:41.733 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:41.733 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:41.733 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:41.733 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:41.734 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-1'.
20190401 15:26:42.362 - INFO - Command exited with return code 1.
20190401 15:26:42.362 - INFO - ${stdout} =
20190401 15:26:42.362 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:42.362 - INFO - ${rc} = 1
20190401 15:26:42.363 - INFO - +------ END KW: SSHLibrary.Execute Command (630)
20190401 15:26:42.363 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:42.363 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:42.363 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:42.363 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:42.364 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:42.364 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:42.364 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:42.364 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:42.364 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:42.364 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:42.364 - INFO - +---- END KW: OpenStack.Pause Instance (632)
------------------------------------------------------------------------------
20190401 15:26:42.365 - INFO - +--- END TEST: Pause Unpause Instances (632)
------------------------------------------------------------------------------
20190401 15:26:42.365 - INFO - +--- START TEST: Stop Start Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:42.365 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name} ]
20190401 15:26:42.365 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190401 15:26:42.366 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:42.366 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:42.366 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:42.366 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:42.366 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-1'.
20190401 15:26:43.045 - INFO - Command exited with return code 1.
20190401 15:26:43.045 - INFO - ${stdout} =
20190401 15:26:43.045 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:43.045 - INFO - ${rc} = 1
20190401 15:26:43.045 - INFO - +------ END KW: SSHLibrary.Execute Command (679)
20190401 15:26:43.045 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:43.046 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:43.046 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:43.046 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:43.046 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:43.047 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:43.047 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:43.047 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:43.047 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:43.047 - INFO - +----- END KW: OpenStack.Run OS Command (682)
20190401 15:26:43.047 - INFO - +---- END KW: OpenStack.Stop Instance (682)
------------------------------------------------------------------------------
20190401 15:26:43.048 - INFO - +--- END TEST: Stop Start Instances (682)
------------------------------------------------------------------------------
20190401 15:26:43.048 - INFO - +--- START TEST: Lock Unlock Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:43.048 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name} ]
20190401 15:26:43.048 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190401 15:26:43.049 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:43.049 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:43.049 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:43.049 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:43.049 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-1'.
20190401 15:26:43.678 - INFO - Command exited with return code 1.
20190401 15:26:43.678 - INFO - ${stdout} =
20190401 15:26:43.679 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:43.679 - INFO - ${rc} = 1
20190401 15:26:43.679 - INFO - +------ END KW: SSHLibrary.Execute Command (630)
20190401 15:26:43.679 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:43.679 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:43.679 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:43.679 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:43.680 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:43.680 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:43.680 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:43.680 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:43.680 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:43.680 - INFO - +----- END KW: OpenStack.Run OS Command (632)
20190401 15:26:43.680 - INFO - +---- END KW: OpenStack.Lock Instance (632)
------------------------------------------------------------------------------
20190401 15:26:43.681 - INFO - +--- END TEST: Lock Unlock Instances (632)
------------------------------------------------------------------------------
20190401 15:26:43.681 - INFO - +--- START TEST: Reboot Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:43.681 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name} ]
20190401 15:26:43.681 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190401 15:26:43.682 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:43.682 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:43.682 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:43.682 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:43.682 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-1'.
20190401 15:26:44.312 - INFO - Command exited with return code 1.
20190401 15:26:44.313 - INFO - ${stdout} =
20190401 15:26:44.313 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:44.313 - INFO - ${rc} = 1
20190401 15:26:44.313 - INFO - +------ END KW: SSHLibrary.Execute Command (631)
20190401 15:26:44.313 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:44.313 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:44.313 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:44.314 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:44.314 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:44.314 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:44.314 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:44.314 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:44.314 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:44.314 - INFO - +----- END KW: OpenStack.Run OS Command (633)
20190401 15:26:44.315 - INFO - +---- END KW: OpenStack.Reboot Instance (633)
------------------------------------------------------------------------------
20190401 15:26:44.315 - INFO - +--- END TEST: Reboot Instances (634)
------------------------------------------------------------------------------
20190401 15:26:44.315 - INFO - +--- START TEST: Rebuild Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:44.315 - INFO - +---- START KW: OpenStack.Rebuild Instance From Volume [ ${cirros_instance_name} | ${cirros_image_name} ]
20190401 15:26:44.316 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild --image ${image} ${vm_name} | True | 30 sec ]
20190401 15:26:44.316 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:44.316 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:44.316 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:44.316 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:44.317 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild --image cirros vm-cirros-1'.
20190401 15:26:44.945 - INFO - Command exited with return code 1.
20190401 15:26:44.945 - INFO - ${stdout} =
20190401 15:26:44.945 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:44.945 - INFO - ${rc} = 1
20190401 15:26:44.945 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:44.945 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:44.946 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:44.946 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:44.946 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:44.946 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:44.947 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:44.947 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:44.947 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:44.947 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:44.947 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:44.947 - INFO - +---- END KW: OpenStack.Rebuild Instance From Volume (632)
------------------------------------------------------------------------------
20190401 15:26:44.947 - INFO - +--- END TEST: Rebuild Instances (632)
------------------------------------------------------------------------------
20190401 15:26:44.947 - INFO - +--- START TEST: Resize Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:44.948 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name_2} ]
20190401 15:26:44.948 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:44.948 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:44.948 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:44.948 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:44.949 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small
20190401 15:26:44.949 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190401 15:26:44.949 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:44.949 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:44.949 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:44.949 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:44.950 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:44.950 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small'.
20190401 15:26:45.528 - INFO - Command exited with return code 1.
20190401 15:26:45.528 - INFO - ${stdout} =
20190401 15:26:45.528 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:45.528 - INFO - ${rc} = 1
20190401 15:26:45.528 - INFO - +------ END KW: SSHLibrary.Execute Command (578)
20190401 15:26:45.528 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:45.529 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:45.529 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:45.529 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:45.529 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:45.529 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:45.529 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:45.529 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:45.529 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:45.529 - INFO - +----- END KW: OpenStack.Run OS Command (580)
20190401 15:26:45.530 - INFO - +---- END KW: OpenStack.Create Flavor (582)
------------------------------------------------------------------------------
20190401 15:26:45.530 - INFO - +--- END TEST: Resize Instances (583)
------------------------------------------------------------------------------
20190401 15:26:45.530 - INFO - +--- START TEST: Set Unset Properties Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:45.530 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1}='true' | ${instance_property_2}='500' | ${instance_property_3}='180' ]
20190401 15:26:45.531 - INFO - ${properties} = --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180'
20190401 15:26:45.531 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:45.531 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name} | ${properties} ]
20190401 15:26:45.531 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190401 15:26:45.532 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:45.532 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:45.532 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:45.532 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:45.532 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-1'.
20190401 15:26:46.191 - INFO - Command exited with return code 1.
20190401 15:26:46.191 - INFO - ${stdout} =
20190401 15:26:46.191 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:46.191 - INFO - ${rc} = 1
20190401 15:26:46.191 - INFO - +------ END KW: SSHLibrary.Execute Command (659)
20190401 15:26:46.191 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:46.192 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:46.192 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:46.192 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:46.192 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:46.192 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:46.192 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:46.192 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:46.192 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:46.193 - INFO - +----- END KW: OpenStack.Run OS Command (662)
20190401 15:26:46.193 - INFO - +---- END KW: OpenStack.Set Instance Property (662)
------------------------------------------------------------------------------
20190401 15:26:46.193 - INFO - +--- END TEST: Set Unset Properties Instances (663)
------------------------------------------------------------------------------
20190401 15:26:46.193 - INFO - +--- START TEST: Evacuate Instances From Hosts [ ]
------------------------------------------------------------------------------
20190401 15:26:46.193 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}' == 'Duplex' | Run Keywords | Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 | ELSE IF | '${CONFIGURATION_TYPE}' == 'MN-Local' or '${CONFIGURATION_TYPE}' == 'MN-External' | Run Keywords | Evacuate Instances | compute-0 | AND | Evacuate Instances | compute-1 ]
20190401 15:26:46.194 - INFO - +----- START KW: BuiltIn.Run Keywords [ Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 ]
20190401 15:26:46.194 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-0 ]
20190401 15:26:46.195 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190401 15:26:46.195 - INFO - ${openstack_cmd} = openstack compute service set
20190401 15:26:46.195 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:46.195 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190401 15:26:46.195 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute
20190401 15:26:46.195 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190401 15:26:46.195 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190401 15:26:46.196 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:46.196 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:46.196 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:46.196 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:46.196 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute'.
20190401 15:26:46.825 - INFO - Command exited with return code 1.
20190401 15:26:46.825 - INFO - ${stdout} =
20190401 15:26:46.825 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:46.825 - INFO - ${rc} = 1
20190401 15:26:46.825 - INFO - +-------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:46.825 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:46.826 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:46.826 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:46.826 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:46.826 - INFO - +--------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:46.826 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:46.826 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:46.827 - INFO - +--------- END KW: BuiltIn.Fail (0)
20190401 15:26:46.827 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:46.827 - INFO - +------- END KW: OpenStack.Run OS Command (632)
20190401 15:26:46.827 - INFO - +------ END KW: OpenStack.Evacuate Instances (633)
20190401 15:26:46.827 - INFO - +----- END KW: BuiltIn.Run Keywords (633)
20190401 15:26:46.827 - INFO - +---- END KW: BuiltIn.Run Keyword If (634)
------------------------------------------------------------------------------
20190401 15:26:46.827 - INFO - +--- END TEST: Evacuate Instances From Hosts (634)
------------------------------------------------------------------------------
20190401 15:26:46.828 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190401 15:26:46.828 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190401 15:26:46.828 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190401 15:26:46.829 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190401 15:26:46.829 - INFO - ${openstack_cmd} = openstack server list
20190401 15:26:46.829 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:46.829 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:46.829 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190401 15:26:46.829 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:46.829 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:46.830 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:46.830 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:46.830 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:46.830 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:46.830 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:47.458 - INFO - Command exited with return code 1.
20190401 15:26:47.459 - INFO - ${stdout} =
20190401 15:26:47.459 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:47.459 - INFO - ${rc} = 1
20190401 15:26:47.459 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:47.459 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:47.459 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:47.459 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:47.460 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:47.460 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:47.460 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:47.460 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:47.460 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:47.460 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:47.460 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:47.461 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:26:47.461 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:47.461 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:47.461 - INFO - ${response} =
20190401 15:26:47.461 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:47.461 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:47.461 - INFO - @{res_in_list} = [ ]
20190401 15:26:47.462 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:47.462 - INFO - @{vm_list} = [ ]
20190401 15:26:47.462 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:47.462 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190401 15:26:47.462 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (0)
20190401 15:26:47.462 - INFO - +----- END KW: OpenStack.Delete All Instances (634)
20190401 15:26:47.462 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190401 15:26:47.462 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190401 15:26:47.462 - INFO - ${openstack_cmd} = openstack image list
20190401 15:26:47.462 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:47.463 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190401 15:26:47.463 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190401 15:26:47.463 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:47.463 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:47.463 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:47.464 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:47.464 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:26:47.464 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:47.464 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190401 15:26:48.044 - INFO - Command exited with return code 1.
20190401 15:26:48.044 - INFO - ${stdout} =
20190401 15:26:48.044 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:48.044 - INFO - ${rc} = 1
20190401 15:26:48.044 - INFO - +------- END KW: SSHLibrary.Execute Command (580)
20190401 15:26:48.045 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:48.045 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:48.045 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:48.045 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:48.046 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:48.046 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:48.046 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:48.046 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:48.046 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:48.046 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:48.046 - INFO - +------ END KW: OpenStack.Run OS Command (583)
20190401 15:26:48.046 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:48.047 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:48.047 - INFO - ${response} =
20190401 15:26:48.047 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:48.047 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:48.047 - INFO - @{res_in_list} = [ ]
20190401 15:26:48.047 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:48.047 - INFO - @{image_list} = [ ]
20190401 15:26:48.047 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:48.047 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190401 15:26:48.048 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (1)
20190401 15:26:48.048 - INFO - +----- END KW: OpenStack.Delete All Images (586)
20190401 15:26:48.048 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190401 15:26:48.048 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190401 15:26:48.048 - INFO - ${openstack_cmd} = openstack flavor list
20190401 15:26:48.048 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:48.048 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190401 15:26:48.048 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190401 15:26:48.049 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:48.049 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:48.049 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:48.049 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:48.049 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:48.049 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:48.050 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190401 15:26:48.708 - INFO - Command exited with return code 1.
20190401 15:26:48.708 - INFO - ${stdout} =
20190401 15:26:48.708 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:48.708 - INFO - ${rc} = 1
20190401 15:26:48.708 - INFO - +------- END KW: SSHLibrary.Execute Command (659)
20190401 15:26:48.709 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:48.709 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:48.709 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:48.709 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:48.709 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:48.710 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:48.710 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:48.710 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:48.710 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:48.710 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:48.710 - INFO - +------ END KW: OpenStack.Run OS Command (661)
20190401 15:26:48.710 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:48.711 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:48.711 - INFO - ${response} =
20190401 15:26:48.711 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:48.711 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:48.711 - INFO - @{res_in_list} = [ ]
20190401 15:26:48.711 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:48.711 - INFO - @{flavor_list} = [ ]
20190401 15:26:48.711 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:48.711 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190401 15:26:48.711 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (0)
20190401 15:26:48.712 - INFO - +----- END KW: OpenStack.Delete All Flavors (664)
20190401 15:26:48.712 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190401 15:26:48.712 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:48.712 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:48.712 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:48.712 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190401 15:26:48.712 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190401 15:26:48.712 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:48.713 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:48.713 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:48.713 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:48.713 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:48.713 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:48.714 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190401 15:26:49.292 - INFO - Command exited with return code 1.
20190401 15:26:49.292 - INFO - ${stdout} =
20190401 15:26:49.292 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:49.292 - INFO - ${rc} = 1
20190401 15:26:49.292 - INFO - +------- END KW: SSHLibrary.Execute Command (579)
20190401 15:26:49.292 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:49.293 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:49.293 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:49.293 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:49.293 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:49.294 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:49.294 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:49.294 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:49.294 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:49.294 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:49.294 - INFO - +------ END KW: OpenStack.Run OS Command (581)
20190401 15:26:49.294 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:49.295 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:49.295 - INFO - ${response} =
20190401 15:26:49.295 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:49.295 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:49.295 - INFO - @{res_in_list} = [ ]
20190401 15:26:49.295 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:49.295 - INFO - @{network_list} = [ ]
20190401 15:26:49.295 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:49.295 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190401 15:26:49.295 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (0)
20190401 15:26:49.296 - INFO - +----- END KW: OpenStack.Delete All Networks (584)
20190401 15:26:49.296 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190401 15:26:49.296 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190401 15:26:49.296 - INFO - ${openstack_cmd} = openstack keypair list
20190401 15:26:49.296 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:49.296 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190401 15:26:49.296 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190401 15:26:49.296 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:49.297 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:49.297 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:49.297 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:49.297 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:49.297 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:49.297 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190401 15:26:49.957 - INFO - Command exited with return code 1.
20190401 15:26:49.957 - INFO - ${stdout} =
20190401 15:26:49.957 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:49.957 - INFO - ${rc} = 1
20190401 15:26:49.957 - INFO - +------- END KW: SSHLibrary.Execute Command (660)
20190401 15:26:49.957 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:49.957 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:49.958 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:49.958 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:49.958 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:49.958 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:49.958 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:49.958 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:49.958 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:49.959 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:49.959 - INFO - +------ END KW: OpenStack.Run OS Command (663)
20190401 15:26:49.959 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:49.959 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:49.959 - INFO - ${response} =
20190401 15:26:49.959 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:49.959 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:49.960 - INFO - @{res_in_list} = [ ]
20190401 15:26:49.960 - INFO - +------- END KW: String.Split String (1)
20190401 15:26:49.960 - INFO - @{key_list} = [ ]
20190401 15:26:49.960 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:49.960 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190401 15:26:49.960 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190401 15:26:49.960 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (664)
20190401 15:26:49.960 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190401 15:26:49.960 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190401 15:26:49.960 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190401 15:26:49.961 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:26:49.961 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:49.961 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190401 15:26:49.961 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:49.961 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:49.961 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:49.961 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:49.962 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:26:49.962 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:49.962 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:50.590 - INFO - Command exited with return code 1.
20190401 15:26:50.590 - INFO - ${stdout} =
20190401 15:26:50.590 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:50.590 - INFO - ${rc} = 1
20190401 15:26:50.590 - INFO - +------- END KW: SSHLibrary.Execute Command (628)
20190401 15:26:50.591 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:50.591 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:50.591 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:50.591 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:50.592 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:50.592 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:50.592 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:50.592 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:50.592 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:50.592 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:50.592 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:50.592 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:50.593 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:50.593 - INFO - ${response} =
20190401 15:26:50.593 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:50.593 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:50.593 - INFO - @{res_in_list} = [ ]
20190401 15:26:50.593 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:50.593 - INFO - @{snapshot_list} = [ ]
20190401 15:26:50.593 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:50.593 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190401 15:26:50.594 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (1)
20190401 15:26:50.594 - INFO - +----- END KW: OpenStack.Delete All Snapshots (634)
20190401 15:26:50.594 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190401 15:26:50.594 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190401 15:26:50.594 - INFO - ${openstack_cmd} = openstack volume list
20190401 15:26:50.594 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:50.594 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190401 15:26:50.594 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190401 15:26:50.595 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:50.595 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:50.595 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:50.595 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:50.595 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:50.595 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:50.596 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190401 15:26:51.224 - INFO - Command exited with return code 1.
20190401 15:26:51.224 - INFO - ${stdout} =
20190401 15:26:51.224 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:51.224 - INFO - ${rc} = 1
20190401 15:26:51.224 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:51.224 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:51.225 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:51.225 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:51.225 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:51.225 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:51.225 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:51.225 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:51.225 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:51.225 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:51.226 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:51.226 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:51.226 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:51.226 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:51.226 - INFO - ${response} =
20190401 15:26:51.226 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:51.226 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:51.227 - INFO - @{res_in_list} = [ ]
20190401 15:26:51.227 - INFO - +------- END KW: String.Split String (1)
20190401 15:26:51.227 - INFO - @{volume_list} = [ ]
20190401 15:26:51.227 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:51.227 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190401 15:26:51.227 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (0)
20190401 15:26:51.227 - INFO - +----- END KW: OpenStack.Delete All Volumes (633)
20190401 15:26:51.227 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190401 15:26:51.228 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190401 15:26:51.228 - INFO - ${openstack_cmd} = openstack stack list
20190401 15:26:51.228 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:51.228 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:51.228 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190401 15:26:51.228 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:51.228 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:51.229 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:51.229 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:51.229 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:51.229 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:51.229 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:51.858 - INFO - Command exited with return code 1.
20190401 15:26:51.858 - INFO - ${stdout} =
20190401 15:26:51.858 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:51.858 - INFO - ${rc} = 1
20190401 15:26:51.858 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:26:51.858 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:51.859 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:51.859 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:51.859 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:51.859 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:51.859 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:51.859 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:51.859 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:51.860 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:51.860 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:51.860 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:26:51.860 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:51.860 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:51.860 - INFO - ${response} =
20190401 15:26:51.860 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:51.861 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:51.861 - INFO - @{res_in_list} = [ ]
20190401 15:26:51.861 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:51.861 - INFO - @{stack_list} = [ ]
20190401 15:26:51.861 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:51.861 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190401 15:26:51.861 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (0)
20190401 15:26:51.861 - INFO - +----- END KW: OpenStack.Delete All Stacks (634)
20190401 15:26:51.861 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (5033)
20190401 15:26:51.862 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190401 15:26:51.862 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190401 15:26:51.869 - INFO - +----- END KW: SSHLibrary.Close All Connections (7)
20190401 15:26:51.869 - INFO - +---- END KW: Utils.Stx Suite TearDown (7)
20190401 15:26:51.870 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (5042)
==============================================================================
20190401 15:26:51.872 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.03-Instance-From-Snapshot (16187)
==============================================================================
20190401 15:26:51.884 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.04-Instance-From-Heat-Template [ ]
==============================================================================
20190401 15:26:51.884 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190401 15:26:51.884 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190401 15:26:51.885 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190401 15:26:51.885 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190401 15:26:51.886 - INFO - ${controller_connection} = 1
20190401 15:26:51.886 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190401 15:26:51.886 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190401 15:26:51.886 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190401 15:26:51.886 - INFO - Length is 10
20190401 15:26:51.886 - INFO - ${pwd_length} = 10
20190401 15:26:51.886 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190401 15:26:51.886 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190401 15:26:51.887 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190401 15:26:51.887 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190401 15:26:52.972 - INFO - Read output: Last login: Mon Apr  1 21:15:20 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190401 15:26:52.972 - INFO - +-------- END KW: SSHLibrary.Login (1085)
20190401 15:26:52.972 - INFO - Returning from the enclosing user keyword.
20190401 15:26:52.972 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1086)
20190401 15:26:52.972 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1086)
20190401 15:26:52.973 - INFO - ${master_controller_connection} = 1
20190401 15:26:52.973 - INFO - +----- END KW: Utils.Connect to Controller Node (1088)
20190401 15:26:52.973 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190401 15:26:52.973 - INFO - ${master_controller_connection} = 1
20190401 15:26:52.973 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190401 15:26:52.973 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190401 15:26:52.973 - INFO - 1
20190401 15:26:52.973 - INFO - +----- END KW: BuiltIn.Log (0)
20190401 15:26:52.974 - INFO - +---- END KW: Utils.Open Master Controller Connection (1089)
20190401 15:26:52.974 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190401 15:26:52.974 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190401 15:26:52.974 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:26:52.974 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:26:52.975 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:26:52.975 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:26:52.975 - INFO - &{result_dict} = { stdout= }
20190401 15:26:52.975 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:52.975 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:26:52.975 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:52.976 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:26:52.976 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:52.976 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:26:52.976 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:26:52.976 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:26:52.976 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:26:52.976 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:26:52.981 - INFO - source /etc/platform/openrc
20190401 15:26:52.981 - INFO - +------ END KW: SSHLibrary.Write (5)
20190401 15:26:52.981 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:26:53.358 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:53.358 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:53.358 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (377)
20190401 15:26:53.358 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:26:53.360 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:26:53.360 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:26:53.360 - INFO - +------- END KW: String.Get Line (0)
20190401 15:26:53.360 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:26:53.360 - INFO - ${clean_out} =
20190401 15:26:53.360 - INFO - +------- END KW: String.Remove String (0)
20190401 15:26:53.360 - INFO - ${output} =
20190401 15:26:53.360 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190401 15:26:53.361 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:26:53.361 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:26:53.363 - INFO - echo $?
20190401 15:26:53.363 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:26:53.363 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:26:53.363 - INFO - 0
20190401 15:26:53.363 - INFO - ${rc} = 0
20190401 15:26:53.363 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:26:53.363 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:26:53.363 - INFO - 0
20190401 15:26:53.364 - INFO - +------- END KW: BuiltIn.Log (1)
20190401 15:26:53.364 - INFO - ${rc} = 0
20190401 15:26:53.364 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:26:53.364 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:26:53.364 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:26:53.364 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:26:53.365 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:53.365 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:26:53.365 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:26:53.365 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:26:53.365 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:26:53.365 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:26:53.365 - INFO - +----- END KW: Utils.Run Command (391)
20190401 15:26:53.365 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (391)
20190401 15:26:53.366 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1481)
------------------------------------------------------------------------------
20190401 15:26:53.366 - INFO - +--- START TEST: Create Flavors for Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:53.366 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190401 15:26:53.366 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190401 15:26:53.367 - INFO - ${openstack_cmd} = openstack flavor create
20190401 15:26:53.367 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190401 15:26:53.367 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190401 15:26:53.367 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190401 15:26:53.367 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:53.367 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:53.368 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:53.368 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:53.368 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:53.368 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:53.368 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190401 15:26:53.996 - INFO - Command exited with return code 1.
20190401 15:26:53.997 - INFO - ${stdout} =
20190401 15:26:53.997 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:53.997 - INFO - ${rc} = 1
20190401 15:26:53.997 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:53.997 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:53.997 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:53.997 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:53.997 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:53.998 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:53.998 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:53.998 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:53.998 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:26:53.998 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:53.998 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:53.998 - INFO - +---- END KW: OpenStack.Create Flavor (632)
------------------------------------------------------------------------------
20190401 15:26:53.999 - INFO - +--- END TEST: Create Flavors for Instance (632)
------------------------------------------------------------------------------
20190401 15:26:53.999 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190401 15:26:53.999 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190401 15:26:54.007 - INFO - [chan 2] Opened sftp connection (server version 3)
20190401 15:26:54.014 - INFO - [chan 3] Opened sftp connection (server version 3)
20190401 15:26:54.014 - FAIL - There are no source files matching '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2'.
20190401 15:26:54.014 - DEBUG - Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1559, in put_file
    destination, mode, newline, scp)
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1619, in _run_command
    raise RuntimeError(e)
20190401 15:26:54.014 - INFO - +---- END KW: SSHLibrary.Put File (15)
------------------------------------------------------------------------------
20190401 15:26:54.015 - INFO - +--- END TEST: Create Images for Instances (15)
------------------------------------------------------------------------------
20190401 15:26:54.015 - INFO - +--- START TEST: Create Networks for Instance [ ]
------------------------------------------------------------------------------
20190401 15:26:54.015 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190401 15:26:54.015 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190401 15:26:54.016 - INFO - ${openstack_cmd} = openstack network create
20190401 15:26:54.016 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190401 15:26:54.016 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190401 15:26:54.016 - INFO - ${cmd} = openstack network create network-1
20190401 15:26:54.016 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:54.016 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:54.017 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:54.017 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:54.017 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:54.017 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:54.017 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190401 15:26:54.645 - INFO - Command exited with return code 1.
20190401 15:26:54.645 - INFO - ${stdout} =
20190401 15:26:54.645 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:54.645 - INFO - ${rc} = 1
20190401 15:26:54.645 - INFO - +------ END KW: SSHLibrary.Execute Command (628)
20190401 15:26:54.646 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:54.646 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:54.646 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:54.646 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:54.646 - INFO - +------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:54.647 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:54.647 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:54.647 - INFO - +------- END KW: BuiltIn.Fail (1)
20190401 15:26:54.647 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:54.647 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:54.647 - INFO - +---- END KW: OpenStack.Create Network (632)
------------------------------------------------------------------------------
20190401 15:26:54.647 - INFO - +--- END TEST: Create Networks for Instance (632)
------------------------------------------------------------------------------
20190401 15:26:54.648 - INFO - +--- START TEST: Create Instance Trough Stack [ ]
------------------------------------------------------------------------------
20190401 15:26:54.648 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${stack_template} | ${host_image_path}/${stack_template} ]
20190401 15:26:54.652 - INFO - '/home/mgperezi/duplex/stx-test-suite/Utils/stack_template.yml' -> '/home/wrsroot//Utils/stack_template.yml'
20190401 15:26:54.652 - INFO - +---- END KW: SSHLibrary.Put File (4)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:26:54.652 - INFO - +---- START KW: OpenStack.Get Net Id [ ${network_name} ]
20190401 15:26:54.653 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:54.653 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:54.653 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:26:54.653 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190401 15:26:54.653 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190401 15:26:54.653 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:26:54.653 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190401 15:26:54.654 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:54.654 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:54.654 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:54.654 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:54.654 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190401 15:26:55.282 - INFO - Command exited with return code 0.
20190401 15:26:55.283 - INFO - ${stdout} =
20190401 15:26:55.283 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:55.283 - INFO - ${rc} = 0
20190401 15:26:55.283 - INFO - +------ END KW: SSHLibrary.Execute Command (629)
20190401 15:26:55.283 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:55.283 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 0}
20190401 15:26:55.284 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:55.284 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:55.284 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:26:55.284 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=0 }
20190401 15:26:55.284 - INFO - +----- END KW: OpenStack.Run OS Command (631)
20190401 15:26:55.284 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:55.284 - INFO - ${output} =
20190401 15:26:55.285 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190401 15:26:55.285 - INFO - +----- START KW: String.Split String [ ${output} | ${EMPTY} ]
20190401 15:26:55.285 - INFO - ${splitted_output} = []
20190401 15:26:55.285 - INFO - +----- END KW: String.Split String (0)
20190401 15:26:55.285 - INFO - +----- START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190401 15:26:55.285 - FAIL - IndexError: Given index 0 is out of the range 0--1.
20190401 15:26:55.285 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:55.285 - INFO - +----- END KW: Collections.Get From List (0)
20190401 15:26:55.286 - INFO - +---- END KW: OpenStack.Get Net Id (633)
------------------------------------------------------------------------------
20190401 15:26:55.286 - INFO - +--- END TEST: Create Instance Trough Stack (639)
------------------------------------------------------------------------------
20190401 15:26:55.286 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190401 15:26:55.286 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190401 15:26:55.287 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190401 15:26:55.287 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190401 15:26:55.287 - INFO - ${openstack_cmd} = openstack server list
20190401 15:26:55.287 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:55.287 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:55.287 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190401 15:26:55.288 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:55.288 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:55.288 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:55.288 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:55.288 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:55.288 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:55.289 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:55.867 - INFO - Command exited with return code 1.
20190401 15:26:55.867 - INFO - ${stdout} =
20190401 15:26:55.867 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:55.867 - INFO - ${rc} = 1
20190401 15:26:55.867 - INFO - +------- END KW: SSHLibrary.Execute Command (579)
20190401 15:26:55.867 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:55.868 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:55.868 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:55.868 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:55.868 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:55.868 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:55.868 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:55.868 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:55.869 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:55.869 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:55.869 - INFO - +------ END KW: OpenStack.Run OS Command (581)
20190401 15:26:55.869 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:55.869 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:55.869 - INFO - ${response} =
20190401 15:26:55.870 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190401 15:26:55.870 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:55.870 - INFO - @{res_in_list} = [ ]
20190401 15:26:55.870 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:55.870 - INFO - @{vm_list} = [ ]
20190401 15:26:55.870 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:55.870 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190401 15:26:55.870 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (0)
20190401 15:26:55.870 - INFO - +----- END KW: OpenStack.Delete All Instances (583)
20190401 15:26:55.870 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190401 15:26:55.871 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190401 15:26:55.871 - INFO - ${openstack_cmd} = openstack image list
20190401 15:26:55.871 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:55.871 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190401 15:26:55.871 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190401 15:26:55.871 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:55.871 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:55.872 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:55.872 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:55.872 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:55.872 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:55.872 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190401 15:26:56.482 - INFO - Command exited with return code 1.
20190401 15:26:56.482 - INFO - ${stdout} =
20190401 15:26:56.482 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:56.482 - INFO - ${rc} = 1
20190401 15:26:56.483 - INFO - +------- END KW: SSHLibrary.Execute Command (611)
20190401 15:26:56.483 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:56.483 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:56.483 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:56.483 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:56.484 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:56.484 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:56.484 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:56.484 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:56.484 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:56.484 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:56.484 - INFO - +------ END KW: OpenStack.Run OS Command (613)
20190401 15:26:56.484 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:56.485 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:56.485 - INFO - ${response} =
20190401 15:26:56.485 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:56.485 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:56.485 - INFO - @{res_in_list} = [ ]
20190401 15:26:56.485 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:56.485 - INFO - @{image_list} = [ ]
20190401 15:26:56.486 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:56.486 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190401 15:26:56.486 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (0)
20190401 15:26:56.486 - INFO - +----- END KW: OpenStack.Delete All Images (616)
20190401 15:26:56.486 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190401 15:26:56.486 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190401 15:26:56.486 - INFO - ${openstack_cmd} = openstack flavor list
20190401 15:26:56.486 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:56.487 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190401 15:26:56.487 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190401 15:26:56.487 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:56.487 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:56.487 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:56.487 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:56.488 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:56.488 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:56.488 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190401 15:26:57.096 - INFO - Command exited with return code 1.
20190401 15:26:57.096 - INFO - ${stdout} =
20190401 15:26:57.096 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:57.096 - INFO - ${rc} = 1
20190401 15:26:57.097 - INFO - +------- END KW: SSHLibrary.Execute Command (609)
20190401 15:26:57.097 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:57.097 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:57.097 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:57.097 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:57.098 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:57.098 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:57.098 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:57.098 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:57.098 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:57.098 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:57.098 - INFO - +------ END KW: OpenStack.Run OS Command (611)
20190401 15:26:57.098 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:57.099 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:57.099 - INFO - ${response} =
20190401 15:26:57.099 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:57.099 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:57.099 - INFO - @{res_in_list} = [ ]
20190401 15:26:57.099 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:57.099 - INFO - @{flavor_list} = [ ]
20190401 15:26:57.100 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:57.100 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190401 15:26:57.100 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (0)
20190401 15:26:57.100 - INFO - +----- END KW: OpenStack.Delete All Flavors (614)
20190401 15:26:57.100 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190401 15:26:57.100 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:26:57.100 - INFO - ${openstack_cmd} = openstack network list
20190401 15:26:57.100 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:57.100 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190401 15:26:57.101 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190401 15:26:57.101 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:57.101 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:57.101 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:57.101 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:57.101 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:57.101 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:57.102 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190401 15:26:57.760 - INFO - Command exited with return code 1.
20190401 15:26:57.760 - INFO - ${stdout} =
20190401 15:26:57.760 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:57.761 - INFO - ${rc} = 1
20190401 15:26:57.761 - INFO - +------- END KW: SSHLibrary.Execute Command (660)
20190401 15:26:57.761 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:57.761 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:57.761 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:57.761 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:57.762 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:57.762 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:57.762 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:57.762 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:57.762 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:57.762 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:57.762 - INFO - +------ END KW: OpenStack.Run OS Command (661)
20190401 15:26:57.762 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:57.763 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:57.763 - INFO - ${response} =
20190401 15:26:57.763 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:57.763 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:57.763 - INFO - @{res_in_list} = [ ]
20190401 15:26:57.763 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:57.763 - INFO - @{network_list} = [ ]
20190401 15:26:57.764 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:57.764 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190401 15:26:57.764 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (0)
20190401 15:26:57.764 - INFO - +----- END KW: OpenStack.Delete All Networks (664)
20190401 15:26:57.764 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190401 15:26:57.764 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190401 15:26:57.764 - INFO - ${openstack_cmd} = openstack keypair list
20190401 15:26:57.764 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:57.764 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190401 15:26:57.765 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190401 15:26:57.765 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:57.765 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:57.765 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:57.765 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:57.765 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:57.766 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:57.766 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190401 15:26:58.394 - INFO - Command exited with return code 1.
20190401 15:26:58.394 - INFO - ${stdout} =
20190401 15:26:58.394 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:58.394 - INFO - ${rc} = 1
20190401 15:26:58.394 - INFO - +------- END KW: SSHLibrary.Execute Command (628)
20190401 15:26:58.395 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:58.395 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:58.395 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:58.395 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:58.395 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:58.396 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:58.396 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:58.396 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:58.396 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:58.396 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:58.396 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:26:58.396 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:58.397 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:58.397 - INFO - ${response} =
20190401 15:26:58.397 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:58.397 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:58.397 - INFO - @{res_in_list} = [ ]
20190401 15:26:58.397 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:58.397 - INFO - @{key_list} = [ ]
20190401 15:26:58.397 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:58.397 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190401 15:26:58.398 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (1)
20190401 15:26:58.398 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (634)
20190401 15:26:58.398 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190401 15:26:58.398 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190401 15:26:58.398 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190401 15:26:58.398 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:58.398 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:58.399 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190401 15:26:58.399 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:58.399 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:58.399 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:58.399 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:58.399 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:58.399 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:58.400 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190401 15:26:58.992 - INFO - Command exited with return code 1.
20190401 15:26:58.992 - INFO - ${stdout} =
20190401 15:26:58.992 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:58.992 - INFO - ${rc} = 1
20190401 15:26:58.992 - INFO - +------- END KW: SSHLibrary.Execute Command (593)
20190401 15:26:58.993 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:58.993 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:58.993 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:26:58.993 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:58.993 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:58.994 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:58.994 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:58.994 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:26:58.994 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:58.994 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:58.994 - INFO - +------ END KW: OpenStack.Run OS Command (595)
20190401 15:26:58.994 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:58.994 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:58.995 - INFO - ${response} =
20190401 15:26:58.995 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190401 15:26:58.995 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:58.995 - INFO - @{res_in_list} = [ ]
20190401 15:26:58.995 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:58.995 - INFO - @{snapshot_list} = [ ]
20190401 15:26:58.995 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:26:58.995 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190401 15:26:58.995 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190401 15:26:58.995 - INFO - +----- END KW: OpenStack.Delete All Snapshots (597)
20190401 15:26:58.996 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190401 15:26:58.996 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190401 15:26:58.996 - INFO - ${openstack_cmd} = openstack volume list
20190401 15:26:58.996 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:58.996 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190401 15:26:58.996 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190401 15:26:58.996 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:26:58.996 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:58.997 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:58.997 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:58.997 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:58.997 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:58.998 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190401 15:26:59.606 - INFO - Command exited with return code 1.
20190401 15:26:59.606 - INFO - ${stdout} =
20190401 15:26:59.606 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:26:59.607 - INFO - ${rc} = 1
20190401 15:26:59.607 - INFO - +------- END KW: SSHLibrary.Execute Command (610)
20190401 15:26:59.607 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:26:59.607 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:26:59.607 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:26:59.607 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:26:59.608 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:26:59.608 - FAIL - Cloud openstack_helm was not found.
20190401 15:26:59.608 - DEBUG - Traceback (most recent call last):
  None
20190401 15:26:59.608 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:26:59.608 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:26:59.608 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:26:59.608 - INFO - +------ END KW: OpenStack.Run OS Command (612)
20190401 15:26:59.609 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:26:59.609 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:26:59.609 - INFO - ${response} =
20190401 15:26:59.609 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:26:59.609 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:26:59.609 - INFO - @{res_in_list} = [ ]
20190401 15:26:59.609 - INFO - +------- END KW: String.Split String (0)
20190401 15:26:59.609 - INFO - @{volume_list} = [ ]
20190401 15:26:59.610 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190401 15:26:59.610 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190401 15:26:59.610 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (0)
20190401 15:26:59.610 - INFO - +----- END KW: OpenStack.Delete All Volumes (614)
20190401 15:26:59.610 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190401 15:26:59.610 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190401 15:26:59.610 - INFO - ${openstack_cmd} = openstack stack list
20190401 15:26:59.610 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:26:59.610 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:26:59.611 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190401 15:26:59.611 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:26:59.611 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:26:59.611 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:26:59.611 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:26:59.611 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:26:59.611 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:26:59.612 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190401 15:27:00.270 - INFO - Command exited with return code 1.
20190401 15:27:00.270 - INFO - ${stdout} =
20190401 15:27:00.270 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:00.270 - INFO - ${rc} = 1
20190401 15:27:00.271 - INFO - +------- END KW: SSHLibrary.Execute Command (659)
20190401 15:27:00.271 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:00.271 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:00.271 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:00.271 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:00.272 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:00.272 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:00.272 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:00.272 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:00.272 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:00.272 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:00.272 - INFO - +------ END KW: OpenStack.Run OS Command (661)
20190401 15:27:00.272 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:00.273 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:00.273 - INFO - ${response} =
20190401 15:27:00.273 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:00.273 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:00.273 - INFO - @{res_in_list} = [ ]
20190401 15:27:00.273 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:00.273 - INFO - @{stack_list} = [ ]
20190401 15:27:00.273 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:00.273 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190401 15:27:00.274 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (1)
20190401 15:27:00.274 - INFO - +----- END KW: OpenStack.Delete All Stacks (664)
20190401 15:27:00.274 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (4988)
20190401 15:27:00.274 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190401 15:27:00.274 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190401 15:27:00.276 - INFO - +----- END KW: SSHLibrary.Close All Connections (2)
20190401 15:27:00.276 - INFO - +---- END KW: Utils.Stx Suite TearDown (2)
20190401 15:27:00.276 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (4990)
==============================================================================
20190401 15:27:00.277 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.04-Instance-From-Heat-Template (8403)
==============================================================================
20190401 15:27:00.289 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.05-Measurements-For-Metric [ ]
==============================================================================
20190401 15:27:00.289 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190401 15:27:00.290 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190401 15:27:00.290 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190401 15:27:00.290 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190401 15:27:00.291 - INFO - ${controller_connection} = 1
20190401 15:27:00.291 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190401 15:27:00.291 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190401 15:27:00.291 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190401 15:27:00.291 - INFO - Length is 10
20190401 15:27:00.291 - INFO - ${pwd_length} = 10
20190401 15:27:00.291 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190401 15:27:00.291 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190401 15:27:00.292 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190401 15:27:00.292 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190401 15:27:01.377 - INFO - Read output: Last login: Mon Apr  1 21:15:37 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190401 15:27:01.377 - INFO - +-------- END KW: SSHLibrary.Login (1085)
20190401 15:27:01.377 - INFO - Returning from the enclosing user keyword.
20190401 15:27:01.377 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1086)
20190401 15:27:01.377 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1086)
20190401 15:27:01.378 - INFO - ${master_controller_connection} = 1
20190401 15:27:01.378 - INFO - +----- END KW: Utils.Connect to Controller Node (1088)
20190401 15:27:01.378 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190401 15:27:01.378 - INFO - ${master_controller_connection} = 1
20190401 15:27:01.378 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190401 15:27:01.378 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190401 15:27:01.378 - INFO - 1
20190401 15:27:01.378 - INFO - +----- END KW: BuiltIn.Log (0)
20190401 15:27:01.379 - INFO - +---- END KW: Utils.Open Master Controller Connection (1089)
20190401 15:27:01.379 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190401 15:27:01.379 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190401 15:27:01.379 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:01.379 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:27:01.380 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:01.380 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:01.380 - INFO - &{result_dict} = { stdout= }
20190401 15:27:01.380 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:01.380 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:01.381 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190401 15:27:01.381 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:01.381 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:01.381 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:01.381 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:27:01.381 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:01.381 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:27:01.381 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:01.385 - INFO - source /etc/platform/openrc
20190401 15:27:01.385 - INFO - +------ END KW: SSHLibrary.Write (4)
20190401 15:27:01.385 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:01.759 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:01.760 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:01.760 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (375)
20190401 15:27:01.760 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:01.760 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:01.761 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:01.761 - INFO - +------- END KW: String.Get Line (1)
20190401 15:27:01.761 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:01.761 - INFO - ${clean_out} =
20190401 15:27:01.761 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:01.761 - INFO - ${output} =
20190401 15:27:01.761 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:01.761 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:01.761 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:01.763 - INFO - echo $?
20190401 15:27:01.763 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:27:01.763 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:01.764 - INFO - 0
20190401 15:27:01.764 - INFO - ${rc} = 0
20190401 15:27:01.764 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190401 15:27:01.764 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:01.764 - INFO - 0
20190401 15:27:01.764 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:01.764 - INFO - ${rc} = 0
20190401 15:27:01.764 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:01.764 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:01.765 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:27:01.765 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:01.765 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:01.765 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:27:01.765 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:27:01.766 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:27:01.766 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:27:01.766 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:27:01.766 - INFO - +----- END KW: Utils.Run Command (387)
20190401 15:27:01.766 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (387)
20190401 15:27:01.766 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1477)
------------------------------------------------------------------------------
20190401 15:27:01.766 - INFO - +--- START TEST: Create Image For Metrics [ ]
------------------------------------------------------------------------------
20190401 15:27:01.767 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190401 15:27:01.774 - INFO - [chan 1] Opened sftp connection (server version 3)
20190401 15:27:01.781 - INFO - [chan 2] Opened sftp connection (server version 3)
20190401 15:27:01.782 - FAIL - There are no source files matching '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2'.
20190401 15:27:01.782 - DEBUG - Traceback (most recent call last):
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1559, in put_file
    destination, mode, newline, scp)
  File "/usr/lib/python2.7/site-packages/SSHLibrary/library.py", line 1619, in _run_command
    raise RuntimeError(e)
20190401 15:27:01.782 - INFO - +---- END KW: SSHLibrary.Put File (15)
------------------------------------------------------------------------------
20190401 15:27:01.782 - INFO - +--- END TEST: Create Image For Metrics (16)
------------------------------------------------------------------------------
20190401 15:27:01.782 - INFO - +--- START TEST: Update Image Name [ ]
------------------------------------------------------------------------------
20190401 15:27:01.783 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190401 15:27:01.783 - INFO - ${openstack_cmd} = openstack image show cirros
20190401 15:27:01.783 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:01.783 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "created_at" | awk '{print $4}' ]
20190401 15:27:01.783 - INFO - ${cmd} = openstack image show cirros|grep "created_at"|awk '{print $4}'
20190401 15:27:01.783 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:01.783 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190401 15:27:01.784 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:01.784 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:01.784 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:27:01.784 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:01.784 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "created_at"|awk '{print $4}''.
20190401 15:27:02.412 - INFO - Command exited with return code 0.
20190401 15:27:02.412 - INFO - ${stdout} =
20190401 15:27:02.412 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:02.412 - INFO - ${rc} = 0
20190401 15:27:02.413 - INFO - +----- END KW: SSHLibrary.Execute Command (628)
20190401 15:27:02.413 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:02.413 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 0}
20190401 15:27:02.413 - INFO - +----- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:02.413 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:02.414 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:02.414 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=0 }
20190401 15:27:02.414 - INFO - +---- END KW: OpenStack.Run OS Command (631)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:02.414 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:02.414 - INFO - ${created_at} =
20190401 15:27:02.415 - INFO - +---- END KW: Collections.Get From Dictionary (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:02.415 - INFO - +---- START KW: BuiltIn.Set Variable [ openstack image set ]
20190401 15:27:02.415 - INFO - ${openstack_cmd} = openstack image set
20190401 15:27:02.415 - INFO - +---- END KW: BuiltIn.Set Variable (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:02.415 - INFO - +---- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --name ${cirros_image_name_tmp} | ${cirros_image_name} ]
20190401 15:27:02.415 - INFO - ${cmd} = openstack image set --name cirros-tmp cirros
20190401 15:27:02.415 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:02.415 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:02.416 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:02.416 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:02.416 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:27:02.416 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:02.416 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image set --name cirros-tmp cirros'.
20190401 15:27:03.095 - INFO - Command exited with return code 1.
20190401 15:27:03.095 - INFO - ${stdout} =
20190401 15:27:03.095 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:03.095 - INFO - ${rc} = 1
20190401 15:27:03.095 - INFO - +----- END KW: SSHLibrary.Execute Command (679)
20190401 15:27:03.095 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:03.096 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:03.096 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:03.096 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:03.096 - INFO - +------ START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:03.096 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:03.096 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:03.097 - INFO - +------ END KW: BuiltIn.Fail (0)
20190401 15:27:03.097 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:03.097 - INFO - +---- END KW: OpenStack.Run OS Command (682)
------------------------------------------------------------------------------
20190401 15:27:03.097 - INFO - +--- END TEST: Update Image Name (1315)
------------------------------------------------------------------------------
20190401 15:27:03.097 - INFO - +--- START TEST: Update Image Disk Ram Size [ ]
------------------------------------------------------------------------------
20190401 15:27:03.098 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190401 15:27:03.098 - INFO - ${openstack_cmd} = openstack image show cirros
20190401 15:27:03.098 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:03.098 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "updated_at" | awk '{print $4}' ]
20190401 15:27:03.098 - INFO - ${cmd} = openstack image show cirros|grep "updated_at"|awk '{print $4}'
20190401 15:27:03.098 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:03.098 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190401 15:27:03.099 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:03.099 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:03.099 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:27:03.099 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:03.099 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "updated_at"|awk '{print $4}''.
20190401 15:27:03.758 - INFO - Command exited with return code 0.
20190401 15:27:03.758 - INFO - ${stdout} =
20190401 15:27:03.758 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:03.758 - INFO - ${rc} = 0
20190401 15:27:03.758 - INFO - +----- END KW: SSHLibrary.Execute Command (659)
20190401 15:27:03.758 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:03.759 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 0}
20190401 15:27:03.759 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:03.759 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:03.759 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190401 15:27:03.760 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=0 }
20190401 15:27:03.760 - INFO - +---- END KW: OpenStack.Run OS Command (662)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:03.760 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:03.760 - INFO - ${updated_at} =
20190401 15:27:03.760 - INFO - +---- END KW: Collections.Get From Dictionary (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:03.760 - INFO - +---- START KW: BuiltIn.Set Variable [ openstack image set ]
20190401 15:27:03.760 - INFO - ${openstack_cmd} = openstack image set
20190401 15:27:03.760 - INFO - +---- END KW: BuiltIn.Set Variable (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:03.760 - INFO - +---- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --min-disk ${image_disk_size} | ${cirros_image_name} ]
20190401 15:27:03.761 - INFO - ${cmd} = openstack image set --min-disk 10 cirros
20190401 15:27:03.761 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:03.761 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:03.761 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:03.761 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:03.761 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:27:03.762 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:03.762 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image set --min-disk 10 cirros'.
20190401 15:27:04.391 - INFO - Command exited with return code 1.
20190401 15:27:04.391 - INFO - ${stdout} =
20190401 15:27:04.391 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:04.391 - INFO - ${rc} = 1
20190401 15:27:04.391 - INFO - +----- END KW: SSHLibrary.Execute Command (629)
20190401 15:27:04.391 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:04.392 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:04.392 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:04.392 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:04.392 - INFO - +------ START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:04.392 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:04.392 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:04.392 - INFO - +------ END KW: BuiltIn.Fail (0)
20190401 15:27:04.393 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:04.393 - INFO - +---- END KW: OpenStack.Run OS Command (632)
------------------------------------------------------------------------------
20190401 15:27:04.393 - INFO - +--- END TEST: Update Image Disk Ram Size (1296)
------------------------------------------------------------------------------
20190401 15:27:04.393 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190401 15:27:04.394 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190401 15:27:04.394 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190401 15:27:04.394 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190401 15:27:04.394 - INFO - ${openstack_cmd} = openstack server list
20190401 15:27:04.394 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:27:04.394 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:27:04.394 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190401 15:27:04.394 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:27:04.395 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:04.395 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:04.395 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:04.395 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:27:04.395 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:04.396 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190401 15:27:05.025 - INFO - Command exited with return code 1.
20190401 15:27:05.025 - INFO - ${stdout} =
20190401 15:27:05.025 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:05.025 - INFO - ${rc} = 1
20190401 15:27:05.025 - INFO - +------- END KW: SSHLibrary.Execute Command (630)
20190401 15:27:05.026 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:05.026 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:05.026 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:05.026 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:05.026 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:05.027 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:05.027 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:05.027 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:27:05.027 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:05.027 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:05.027 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:27:05.027 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:05.028 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:05.028 - INFO - ${response} =
20190401 15:27:05.028 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:05.028 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:05.028 - INFO - @{res_in_list} = [ ]
20190401 15:27:05.028 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:05.028 - INFO - @{vm_list} = [ ]
20190401 15:27:05.028 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:05.028 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190401 15:27:05.028 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (0)
20190401 15:27:05.029 - INFO - +----- END KW: OpenStack.Delete All Instances (635)
20190401 15:27:05.029 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190401 15:27:05.029 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190401 15:27:05.029 - INFO - ${openstack_cmd} = openstack image list
20190401 15:27:05.029 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:27:05.029 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190401 15:27:05.030 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190401 15:27:05.030 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:27:05.030 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:05.031 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:05.031 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:05.031 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:27:05.031 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:05.031 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190401 15:27:05.660 - INFO - Command exited with return code 1.
20190401 15:27:05.660 - INFO - ${stdout} =
20190401 15:27:05.660 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:05.660 - INFO - ${rc} = 1
20190401 15:27:05.660 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:27:05.660 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:05.661 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:05.661 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:05.661 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:05.661 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:05.661 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:05.661 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:05.662 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:05.662 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:05.662 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:05.662 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:27:05.662 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:05.662 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:05.662 - INFO - ${response} =
20190401 15:27:05.663 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:05.663 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:05.663 - INFO - @{res_in_list} = [ ]
20190401 15:27:05.663 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:05.663 - INFO - @{image_list} = [ ]
20190401 15:27:05.663 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:05.663 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190401 15:27:05.663 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (0)
20190401 15:27:05.663 - INFO - +----- END KW: OpenStack.Delete All Images (634)
20190401 15:27:05.663 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190401 15:27:05.664 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190401 15:27:05.664 - INFO - ${openstack_cmd} = openstack flavor list
20190401 15:27:05.664 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:27:05.664 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190401 15:27:05.664 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190401 15:27:05.664 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:27:05.664 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:05.665 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:05.666 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:05.666 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:27:05.666 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:05.666 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190401 15:27:06.295 - INFO - Command exited with return code 1.
20190401 15:27:06.295 - INFO - ${stdout} =
20190401 15:27:06.295 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:06.295 - INFO - ${rc} = 1
20190401 15:27:06.295 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:27:06.295 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:06.296 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:06.296 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:06.296 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:06.296 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:06.296 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:06.296 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:06.296 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:06.296 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:27:06.297 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:06.297 - INFO - +------ END KW: OpenStack.Run OS Command (633)
20190401 15:27:06.297 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:06.297 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:06.297 - INFO - ${response} =
20190401 15:27:06.297 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:06.297 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:06.298 - INFO - @{res_in_list} = [ ]
20190401 15:27:06.298 - INFO - +------- END KW: String.Split String (1)
20190401 15:27:06.298 - INFO - @{flavor_list} = [ ]
20190401 15:27:06.298 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:06.298 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190401 15:27:06.298 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (0)
20190401 15:27:06.298 - INFO - +----- END KW: OpenStack.Delete All Flavors (635)
20190401 15:27:06.298 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190401 15:27:06.299 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190401 15:27:06.299 - INFO - ${openstack_cmd} = openstack network list
20190401 15:27:06.299 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:27:06.299 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190401 15:27:06.299 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190401 15:27:06.299 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:27:06.299 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:06.300 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:06.300 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:06.300 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:27:06.300 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:06.300 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190401 15:27:06.878 - INFO - Command exited with return code 1.
20190401 15:27:06.878 - INFO - ${stdout} =
20190401 15:27:06.878 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:06.878 - INFO - ${rc} = 1
20190401 15:27:06.878 - INFO - +------- END KW: SSHLibrary.Execute Command (578)
20190401 15:27:06.878 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:06.879 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:06.879 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:06.879 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:06.879 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:06.880 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:06.880 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:06.880 - INFO - +-------- END KW: BuiltIn.Fail (1)
20190401 15:27:06.880 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:06.880 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:06.880 - INFO - +------ END KW: OpenStack.Run OS Command (581)
20190401 15:27:06.880 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:06.880 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:06.881 - INFO - ${response} =
20190401 15:27:06.881 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190401 15:27:06.881 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:06.881 - INFO - @{res_in_list} = [ ]
20190401 15:27:06.881 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:06.881 - INFO - @{network_list} = [ ]
20190401 15:27:06.881 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:06.881 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190401 15:27:06.881 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (0)
20190401 15:27:06.881 - INFO - +----- END KW: OpenStack.Delete All Networks (583)
20190401 15:27:06.882 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190401 15:27:06.882 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190401 15:27:06.882 - INFO - ${openstack_cmd} = openstack keypair list
20190401 15:27:06.882 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:27:06.882 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190401 15:27:06.882 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190401 15:27:06.882 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:27:06.882 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:06.883 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:06.883 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:06.883 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:27:06.883 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:06.884 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190401 15:27:07.492 - INFO - Command exited with return code 1.
20190401 15:27:07.493 - INFO - ${stdout} =
20190401 15:27:07.493 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:07.493 - INFO - ${rc} = 1
20190401 15:27:07.493 - INFO - +------- END KW: SSHLibrary.Execute Command (610)
20190401 15:27:07.493 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:07.493 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:07.493 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:07.493 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:07.494 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:07.494 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:07.494 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:07.494 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:07.494 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:07.494 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:07.494 - INFO - +------ END KW: OpenStack.Run OS Command (612)
20190401 15:27:07.495 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:07.495 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:07.495 - INFO - ${response} =
20190401 15:27:07.495 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:07.495 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:07.495 - INFO - @{res_in_list} = [ ]
20190401 15:27:07.495 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:07.496 - INFO - @{key_list} = [ ]
20190401 15:27:07.496 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:07.496 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190401 15:27:07.496 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190401 15:27:07.496 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (614)
20190401 15:27:07.496 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190401 15:27:07.496 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190401 15:27:07.496 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190401 15:27:07.496 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:27:07.497 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:27:07.497 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190401 15:27:07.497 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190401 15:27:07.497 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:07.497 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:07.497 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:07.497 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:27:07.497 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:07.498 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190401 15:27:08.156 - INFO - Command exited with return code 1.
20190401 15:27:08.156 - INFO - ${stdout} =
20190401 15:27:08.156 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:08.156 - INFO - ${rc} = 1
20190401 15:27:08.156 - INFO - +------- END KW: SSHLibrary.Execute Command (659)
20190401 15:27:08.157 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:08.157 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:08.157 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:08.157 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:08.158 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:08.158 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:08.158 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:08.158 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:08.158 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:08.158 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:08.158 - INFO - +------ END KW: OpenStack.Run OS Command (661)
20190401 15:27:08.159 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:08.159 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:08.159 - INFO - ${response} =
20190401 15:27:08.159 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:08.159 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:08.159 - INFO - @{res_in_list} = [ ]
20190401 15:27:08.160 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:08.160 - INFO - @{snapshot_list} = [ ]
20190401 15:27:08.160 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190401 15:27:08.160 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190401 15:27:08.160 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190401 15:27:08.160 - INFO - +----- END KW: OpenStack.Delete All Snapshots (664)
20190401 15:27:08.160 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190401 15:27:08.160 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190401 15:27:08.161 - INFO - ${openstack_cmd} = openstack volume list
20190401 15:27:08.161 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190401 15:27:08.161 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190401 15:27:08.161 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190401 15:27:08.161 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:27:08.161 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:08.161 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:08.162 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:08.162 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190401 15:27:08.162 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:08.162 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190401 15:27:08.790 - INFO - Command exited with return code 1.
20190401 15:27:08.791 - INFO - ${stdout} =
20190401 15:27:08.791 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:08.791 - INFO - ${rc} = 1
20190401 15:27:08.791 - INFO - +------- END KW: SSHLibrary.Execute Command (629)
20190401 15:27:08.791 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:08.791 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:08.791 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:08.792 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:08.792 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:08.792 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:08.792 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:08.792 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:08.792 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:27:08.793 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:08.793 - INFO - +------ END KW: OpenStack.Run OS Command (632)
20190401 15:27:08.793 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:08.793 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:08.793 - INFO - ${response} =
20190401 15:27:08.793 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:08.793 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:08.793 - INFO - @{res_in_list} = [ ]
20190401 15:27:08.794 - INFO - +------- END KW: String.Split String (1)
20190401 15:27:08.794 - INFO - @{volume_list} = [ ]
20190401 15:27:08.794 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:08.794 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190401 15:27:08.794 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (0)
20190401 15:27:08.794 - INFO - +----- END KW: OpenStack.Delete All Volumes (634)
20190401 15:27:08.794 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190401 15:27:08.794 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190401 15:27:08.794 - INFO - ${openstack_cmd} = openstack stack list
20190401 15:27:08.794 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190401 15:27:08.795 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190401 15:27:08.795 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190401 15:27:08.795 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190401 15:27:08.795 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190401 15:27:08.795 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190401 15:27:08.795 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190401 15:27:08.795 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190401 15:27:08.796 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190401 15:27:08.796 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190401 15:27:09.424 - INFO - Command exited with return code 1.
20190401 15:27:09.424 - INFO - ${stdout} =
20190401 15:27:09.424 - INFO - ${stderr} = Cloud openstack_helm was not found.
20190401 15:27:09.424 - INFO - ${rc} = 1
20190401 15:27:09.424 - INFO - +------- END KW: SSHLibrary.Execute Command (628)
20190401 15:27:09.424 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190401 15:27:09.425 - INFO - ${res} = {u'stdout': u'', u'stderr': u'Cloud openstack_helm was not found.', u'rc': 1}
20190401 15:27:09.425 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:09.425 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190401 15:27:09.425 - INFO - +-------- START KW: BuiltIn.Fail [ ${stderr} ]
20190401 15:27:09.425 - FAIL - Cloud openstack_helm was not found.
20190401 15:27:09.425 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:09.425 - INFO - +-------- END KW: BuiltIn.Fail (0)
20190401 15:27:09.425 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190401 15:27:09.426 - INFO - &{result} = { stdout= | stderr=Cloud openstack_helm was not found. | rc=1 }
20190401 15:27:09.426 - INFO - +------ END KW: OpenStack.Run OS Command (631)
20190401 15:27:09.426 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190401 15:27:09.426 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:09.426 - INFO - ${response} =
20190401 15:27:09.426 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190401 15:27:09.427 - INFO - +------- START KW: String.Split String [ ${response} ]
20190401 15:27:09.427 - INFO - @{res_in_list} = [ ]
20190401 15:27:09.427 - INFO - +------- END KW: String.Split String (0)
20190401 15:27:09.427 - INFO - @{stack_list} = [ ]
20190401 15:27:09.427 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190401 15:27:09.427 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190401 15:27:09.427 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (0)
20190401 15:27:09.427 - INFO - +----- END KW: OpenStack.Delete All Stacks (633)
20190401 15:27:09.427 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (5033)
20190401 15:27:09.428 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190401 15:27:09.428 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190401 15:27:09.430 - INFO - +----- END KW: SSHLibrary.Close All Connections (1)
20190401 15:27:09.430 - INFO - +---- END KW: Utils.Stx Suite TearDown (2)
20190401 15:27:09.430 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (5037)
==============================================================================
20190401 15:27:09.431 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.05-Measurements-For-Metric (9152)
==============================================================================
20190401 15:27:09.439 - INFO - +- END SUITE: Sanity-Test.Sanity-OpenStack (64561)
==============================================================================
20190401 15:27:09.440 - INFO - +- START SUITE: Sanity-Test.Sanity-Platform [ ]
==============================================================================
20190401 15:27:09.451 - INFO - +-- START SUITE: Sanity-Test.Sanity-Platform.02-OpenStack-Pod-Healthy [ ]
==============================================================================
20190401 15:27:09.451 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190401 15:27:09.452 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190401 15:27:09.452 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190401 15:27:09.452 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190401 15:27:09.453 - INFO - ${controller_connection} = 1
20190401 15:27:09.453 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190401 15:27:09.453 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190401 15:27:09.453 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190401 15:27:09.453 - INFO - Length is 10
20190401 15:27:09.453 - INFO - ${pwd_length} = 10
20190401 15:27:09.453 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190401 15:27:09.453 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190401 15:27:09.454 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190401 15:27:09.454 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190401 15:27:10.539 - INFO - Read output: Last login: Mon Apr  1 21:15:45 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190401 15:27:10.539 - INFO - +-------- END KW: SSHLibrary.Login (1085)
20190401 15:27:10.539 - INFO - Returning from the enclosing user keyword.
20190401 15:27:10.539 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1086)
20190401 15:27:10.540 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1086)
20190401 15:27:10.540 - INFO - ${master_controller_connection} = 1
20190401 15:27:10.540 - INFO - +----- END KW: Utils.Connect to Controller Node (1088)
20190401 15:27:10.540 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190401 15:27:10.540 - INFO - ${master_controller_connection} = 1
20190401 15:27:10.540 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190401 15:27:10.540 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190401 15:27:10.540 - INFO - 1
20190401 15:27:10.541 - INFO - +----- END KW: BuiltIn.Log (1)
20190401 15:27:10.541 - INFO - +---- END KW: Utils.Open Master Controller Connection (1089)
20190401 15:27:10.541 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190401 15:27:10.541 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190401 15:27:10.541 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:10.542 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190401 15:27:10.542 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:10.542 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:10.542 - INFO - &{result_dict} = { stdout= }
20190401 15:27:10.542 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:10.543 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:10.543 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:10.543 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:10.543 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:10.543 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:10.543 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:27:10.543 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:10.544 - INFO - +------ END KW: SSHLibrary.Read (1)
20190401 15:27:10.544 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:10.549 - INFO - source /etc/platform/openrc
20190401 15:27:10.549 - INFO - +------ END KW: SSHLibrary.Write (5)
20190401 15:27:10.549 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:10.919 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:10.919 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:10.919 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (370)
20190401 15:27:10.920 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:10.920 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:10.920 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:10.920 - INFO - +------- END KW: String.Get Line (0)
20190401 15:27:10.920 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:10.921 - INFO - ${clean_out} =
20190401 15:27:10.921 - INFO - +------- END KW: String.Remove String (1)
20190401 15:27:10.921 - INFO - ${output} =
20190401 15:27:10.921 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:10.921 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:10.921 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:10.923 - INFO - echo $?
20190401 15:27:10.923 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:27:10.923 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:10.923 - INFO - 0
20190401 15:27:10.923 - INFO - ${rc} = 0
20190401 15:27:10.923 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:27:10.924 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:10.924 - INFO - 0
20190401 15:27:10.924 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:10.924 - INFO - ${rc} = 0
20190401 15:27:10.924 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:10.924 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:10.924 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:27:10.925 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190401 15:27:10.925 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:10.925 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:27:10.925 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:27:10.925 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:27:10.925 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:27:10.926 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190401 15:27:10.926 - INFO - +----- END KW: Utils.Run Command (385)
20190401 15:27:10.926 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (385)
20190401 15:27:10.926 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1475)
------------------------------------------------------------------------------
20190401 15:27:10.926 - INFO - +--- START TEST: OpenStack PODs Healthy [ ]
------------------------------------------------------------------------------
20190401 15:27:10.926 - INFO - +---- START KW: Utils.Check System Application Status [ stx-openstack | applied ]
20190401 15:27:10.927 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190401 15:27:10.927 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190401 15:27:10.927 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:27:10.927 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190401 15:27:10.928 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:10.928 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:27:10.928 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:10.928 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:10.928 - INFO - &{result_dict} = { stdout= }
20190401 15:27:10.928 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:10.929 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:10.929 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:10.929 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:10.929 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:10.929 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:10.929 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:27:10.929 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:10.930 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:10.930 - INFO - +------ END KW: SSHLibrary.Read (1)
20190401 15:27:10.930 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:10.931 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190401 15:27:10.932 - INFO - +------ END KW: SSHLibrary.Write (1)
20190401 15:27:10.932 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:11.935 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:11.935 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:11.935 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1003)
20190401 15:27:11.935 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:11.936 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:11.936 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:11.936 - INFO - +------- END KW: String.Get Line (0)
20190401 15:27:11.936 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:11.936 - INFO - ${clean_out} =
20190401 15:27:11.936 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:11.936 - INFO - ${output} =
20190401 15:27:11.936 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:11.937 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:11.937 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:11.939 - INFO - echo $?
20190401 15:27:11.939 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:27:11.939 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:11.939 - INFO - 0
20190401 15:27:11.939 - INFO - ${rc} = 0
20190401 15:27:11.939 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:27:11.939 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:11.939 - INFO - 0
20190401 15:27:11.940 - INFO - +------- END KW: BuiltIn.Log (1)
20190401 15:27:11.940 - INFO - ${rc} = 0
20190401 15:27:11.940 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:11.940 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:11.940 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:27:11.940 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:11.941 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:27:11.941 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:27:11.941 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:27:11.941 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:27:11.941 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190401 15:27:11.941 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:27:11.941 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190401 15:27:11.941 - INFO - +----- END KW: Utils.Run Command (1014)
20190401 15:27:11.942 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:11.942 - INFO - ${value} =
20190401 15:27:11.942 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190401 15:27:11.942 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190401 15:27:11.942 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190401 15:27:11.942 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190401 15:27:11.943 - FAIL -  != applied
20190401 15:27:11.943 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:11.943 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190401 15:27:11.943 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:11.943 - INFO - +---- END KW: Utils.Check System Application Status (1017)
------------------------------------------------------------------------------
20190401 15:27:11.943 - INFO - +--- END TEST: OpenStack PODs Healthy (1017)
------------------------------------------------------------------------------
20190401 15:27:11.943 - INFO - +--- START TEST: Reapply STX OpenStack [ ]
------------------------------------------------------------------------------
20190401 15:27:11.944 - INFO - +---- START KW: Utils.System Application Apply [ stx-openstack ]
20190401 15:27:11.944 - INFO - +----- START KW: Utils.Run Command [ system application-apply ${application} | True ]
20190401 15:27:11.944 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:11.944 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:27:11.945 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:11.945 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:11.945 - INFO - &{result_dict} = { stdout= }
20190401 15:27:11.945 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:11.945 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:11.946 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:11.946 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:11.946 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:11.946 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:11.946 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:27:11.946 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:11.946 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:11.946 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:27:11.946 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:11.949 - INFO - system application-apply stx-openstack [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kk
20190401 15:27:11.949 - INFO - +------ END KW: SSHLibrary.Write (3)
20190401 15:27:11.949 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:12.943 - INFO - Application-apply rejected: application not found.
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:12.943 - INFO - ${output} = Application-apply rejected: application not found.
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:12.943 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (994)
20190401 15:27:12.943 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:12.944 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:12.944 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:12.944 - INFO - +------- END KW: String.Get Line (0)
20190401 15:27:12.944 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:12.944 - INFO - ${clean_out} = Application-apply rejected: application not found.
20190401 15:27:12.944 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:12.944 - INFO - ${output} = Application-apply rejected: application not found.
20190401 15:27:12.945 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:12.945 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:12.945 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:12.946 - INFO - echo $?
20190401 15:27:12.947 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:27:12.947 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:12.947 - INFO - 1
20190401 15:27:12.947 - INFO - ${rc} = 1
20190401 15:27:12.947 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:27:12.947 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:12.947 - INFO - 1
20190401 15:27:12.947 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:12.947 - INFO - ${rc} = 1
20190401 15:27:12.948 - INFO - +------ END KW: Utils.Get Return Code (2)
20190401 15:27:12.948 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:12.948 - INFO - +------- START KW: BuiltIn.Fail [ ${output} ]
20190401 15:27:12.948 - FAIL - Application-apply rejected: application not found.
20190401 15:27:12.948 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:12.948 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:27:12.948 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190401 15:27:12.948 - INFO - +----- END KW: Utils.Run Command (1004)
20190401 15:27:12.949 - INFO - +---- END KW: Utils.System Application Apply (1005)
------------------------------------------------------------------------------
20190401 15:27:12.949 - INFO - +--- END TEST: Reapply STX OpenStack (1006)
------------------------------------------------------------------------------
20190401 15:27:12.949 - INFO - +--- START TEST: STX OpenStack Override Update Reset [ ]
------------------------------------------------------------------------------
20190401 15:27:12.949 - INFO - +---- START KW: Utils.Helm Override OpenStack [ nova | openstack ]
20190401 15:27:12.950 - INFO - +----- START KW: BuiltIn.Set Variable [ system helm-override-update ]
20190401 15:27:12.950 - INFO - ${kubectl_cmd} = system helm-override-update
20190401 15:27:12.950 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190401 15:27:12.950 - INFO - +----- START KW: BuiltIn.Catenate [ ${kubectl_cmd} | --set conf.nova.DEFAULT.foo=bar | ${char_name} | ${namespace} ]
20190401 15:27:12.950 - INFO - ${cmd} = system helm-override-update --set conf.nova.DEFAULT.foo=bar nova openstack
20190401 15:27:12.950 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:27:12.950 - INFO - +----- START KW: Utils.Run Command [ ${cmd} | True ]
20190401 15:27:12.951 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:12.951 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:27:12.951 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:12.951 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:12.952 - INFO - &{result_dict} = { stdout= }
20190401 15:27:12.952 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:12.952 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:12.952 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:12.952 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:12.952 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:12.953 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:12.953 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190401 15:27:12.953 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:12.953 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:12.953 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:27:12.953 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:12.955 - INFO - system helm-override-update --set conf .nova.DEFAULT.foo=bar nova openstack
20190401 15:27:12.955 - INFO - +------ END KW: SSHLibrary.Write (2)
20190401 15:27:12.955 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:14.091 - INFO - +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_overrides | conf:          |
|                |   nova:        |
|                |     DEFAULT:   |
|                |       foo: bar |
|                |                |
+----------------+----------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:14.091 - INFO - ${output} = +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_override...
20190401 15:27:14.091 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1136)
20190401 15:27:14.091 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:14.092 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:14.092 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:14.092 - INFO - +------- END KW: String.Get Line (0)
20190401 15:27:14.092 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:14.092 - INFO - ${clean_out} = +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_override...
20190401 15:27:14.092 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:14.093 - INFO - ${output} = +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_override...
20190401 15:27:14.093 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190401 15:27:14.093 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:14.093 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:14.094 - INFO - echo $?
20190401 15:27:14.095 - INFO - +------- END KW: SSHLibrary.Write (2)
20190401 15:27:14.095 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:14.095 - INFO - 0
20190401 15:27:14.095 - INFO - ${rc} = 0
20190401 15:27:14.095 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190401 15:27:14.095 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:14.095 - INFO - 0
20190401 15:27:14.095 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:14.095 - INFO - ${rc} = 0
20190401 15:27:14.096 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:14.096 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:14.096 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:27:14.097 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190401 15:27:14.097 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:14.097 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:27:14.097 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:27:14.097 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:27:14.097 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_overrides | conf:          |
|                |   nova:        |
|                |     DEFAULT:   |
|                |       foo: bar |
|                |                |
+----------------+----------------+
20190401 15:27:14.097 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:27:14.097 - INFO - +----- END KW: Utils.Run Command (1147)
20190401 15:27:14.098 - INFO - +---- END KW: Utils.Helm Override OpenStack (1148)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:14.098 - INFO - +---- START KW: Utils.System Application Apply [ stx-openstack ]
20190401 15:27:14.098 - INFO - +----- START KW: Utils.Run Command [ system application-apply ${application} | True ]
20190401 15:27:14.098 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:14.099 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:27:14.099 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:14.099 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:14.099 - INFO - &{result_dict} = { stdout= }
20190401 15:27:14.099 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190401 15:27:14.099 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:14.100 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190401 15:27:14.100 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:14.100 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:14.100 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:14.100 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:27:14.100 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:14.100 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:14.100 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:27:14.101 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:14.104 - INFO - system application-apply stx-openstack [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kk
20190401 15:27:14.104 - INFO - +------ END KW: SSHLibrary.Write (4)
20190401 15:27:14.104 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:15.108 - INFO - Application-apply rejected: application not found.
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.108 - INFO - ${output} = Application-apply rejected: application not found.
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.108 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1004)
20190401 15:27:15.108 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:15.108 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:15.109 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.109 - INFO - +------- END KW: String.Get Line (1)
20190401 15:27:15.109 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:15.109 - INFO - ${clean_out} = Application-apply rejected: application not found.
20190401 15:27:15.109 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:15.109 - INFO - ${output} = Application-apply rejected: application not found.
20190401 15:27:15.109 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:15.109 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:15.110 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:15.111 - INFO - echo $?
20190401 15:27:15.111 - INFO - +------- END KW: SSHLibrary.Write (1)
20190401 15:27:15.111 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:15.112 - INFO - 1
20190401 15:27:15.112 - INFO - ${rc} = 1
20190401 15:27:15.112 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190401 15:27:15.112 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:15.112 - INFO - 1
20190401 15:27:15.112 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:15.112 - INFO - ${rc} = 1
20190401 15:27:15.112 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:15.112 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:15.113 - INFO - +------- START KW: BuiltIn.Fail [ ${output} ]
20190401 15:27:15.113 - FAIL - Application-apply rejected: application not found.
20190401 15:27:15.113 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:15.113 - INFO - +------- END KW: BuiltIn.Fail (0)
20190401 15:27:15.113 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:15.113 - INFO - +----- END KW: Utils.Run Command (1015)
20190401 15:27:15.113 - INFO - +---- END KW: Utils.System Application Apply (1015)
------------------------------------------------------------------------------
20190401 15:27:15.114 - INFO - +--- END TEST: STX OpenStack Override Update Reset (2165)
------------------------------------------------------------------------------
20190401 15:27:15.114 - INFO - +--- START TEST: Kube System Services [ ]
------------------------------------------------------------------------------
20190401 15:27:15.114 - INFO - +---- START KW: Utils.Check PODs Health [ ]
20190401 15:27:15.114 - INFO - +----- START KW: BuiltIn.Set Variable [ kubectl get pods --all-namespaces -o wide ]
20190401 15:27:15.115 - INFO - ${kubectl_cmd} = kubectl get pods --all-namespaces -o wide
20190401 15:27:15.115 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190401 15:27:15.115 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${kubectl_cmd} | grep -v NAMESPACE | grep -v Running | grep -v Completed ]
20190401 15:27:15.115 - INFO - ${cmd} = kubectl get pods --all-namespaces -o wide|grep -v NAMESPACE|grep -v Running|grep -v Completed
20190401 15:27:15.115 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190401 15:27:15.115 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190401 15:27:15.116 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:15.116 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190401 15:27:15.116 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:15.116 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:15.117 - INFO - &{result_dict} = { stdout= }
20190401 15:27:15.117 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:15.117 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:15.117 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.117 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:15.117 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.118 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:15.118 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190401 15:27:15.118 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:15.118 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.118 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:27:15.118 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:15.120 - INFO - kubectl get pods --all-namespaces -o w ide|grep -v NAMESPACE|grep -v Running|grep -v Completed
20190401 15:27:15.120 - INFO - +------ END KW: SSHLibrary.Write (2)
20190401 15:27:15.120 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:15.256 - INFO - default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.256 - INFO - ${output} = default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.256 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (136)
20190401 15:27:15.256 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:15.257 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:15.257 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.257 - INFO - +------- END KW: String.Get Line (1)
20190401 15:27:15.257 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:15.257 - INFO - ${clean_out} = default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>
20190401 15:27:15.257 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:15.257 - INFO - ${output} = default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>
20190401 15:27:15.257 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:15.257 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:15.258 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:15.259 - INFO - echo $?
20190401 15:27:15.259 - INFO - +------- END KW: SSHLibrary.Write (1)
20190401 15:27:15.259 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:15.260 - INFO - 0
20190401 15:27:15.260 - INFO - ${rc} = 0
20190401 15:27:15.260 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190401 15:27:15.260 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:15.260 - INFO - 0
20190401 15:27:15.260 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:15.260 - INFO - ${rc} = 0
20190401 15:27:15.260 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:15.260 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:15.261 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190401 15:27:15.261 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.261 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:15.261 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:27:15.261 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.261 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:27:15.261 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>
20190401 15:27:15.262 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190401 15:27:15.262 - INFO - &{result} = { stdout=default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none> | stderr= | rc=0 }
20190401 15:27:15.262 - INFO - +----- END KW: Utils.Run Command (147)
20190401 15:27:15.262 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:15.262 - INFO - ${value} = default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>
20190401 15:27:15.262 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190401 15:27:15.262 - INFO - +----- START KW: BuiltIn.Should Be Empty [ ${value} ]
20190401 15:27:15.262 - INFO - Length is 128
20190401 15:27:15.263 - FAIL - 'default       testpod                                0/1     ErrImagePull   0          134m   172.16.0.6   controller-0   <none>' should be empty.
20190401 15:27:15.263 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:15.263 - INFO - +----- END KW: BuiltIn.Should Be Empty (1)
20190401 15:27:15.263 - INFO - +---- END KW: Utils.Check PODs Health (149)
------------------------------------------------------------------------------
20190401 15:27:15.263 - INFO - +--- END TEST: Kube System Services (149)
------------------------------------------------------------------------------
20190401 15:27:15.263 - INFO - +--- START TEST: Create Check Delete POD [ ]
------------------------------------------------------------------------------
20190401 15:27:15.263 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/Utils/${pod_yml} | ${host_image_path}/${pod_yml} ]
20190401 15:27:15.271 - INFO - [chan 1] Opened sftp connection (server version 3)
20190401 15:27:15.277 - INFO - [chan 2] Opened sftp connection (server version 3)
20190401 15:27:15.280 - INFO - '/home/mgperezi/duplex/stx-test-suite/Utils/testpod.yaml' -> '/home/wrsroot//testpod.yaml'
20190401 15:27:15.280 - INFO - +---- END KW: SSHLibrary.Put File (17)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190401 15:27:15.281 - INFO - +---- START KW: Utils.Create POD [ ${pod_yml} | ${pod_name} ]
20190401 15:27:15.281 - INFO - +----- START KW: Utils.Run Command [ kubectl create -f ${pod_yml} ]
20190401 15:27:15.281 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190401 15:27:15.282 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190401 15:27:15.282 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190401 15:27:15.282 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190401 15:27:15.283 - INFO - &{result_dict} = { stdout= }
20190401 15:27:15.283 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190401 15:27:15.283 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190401 15:27:15.283 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.283 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190401 15:27:15.283 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.283 - INFO - &{result} = { stdout= | stderr= | rc= }
20190401 15:27:15.283 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190401 15:27:15.284 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190401 15:27:15.284 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.284 - INFO - +------ END KW: SSHLibrary.Read (0)
20190401 15:27:15.284 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190401 15:27:15.290 - INFO - kubectl create -f testpod.yaml
20190401 15:27:15.290 - INFO - +------ END KW: SSHLibrary.Write (6)
20190401 15:27:15.290 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190401 15:27:15.467 - INFO - Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.467 - INFO - ${output} = Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
[wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.467 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (177)
20190401 15:27:15.467 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190401 15:27:15.468 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190401 15:27:15.468 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190401 15:27:15.468 - INFO - +------- END KW: String.Get Line (1)
20190401 15:27:15.468 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190401 15:27:15.468 - INFO - ${clean_out} = Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
20190401 15:27:15.468 - INFO - +------- END KW: String.Remove String (0)
20190401 15:27:15.468 - INFO - ${output} = Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
20190401 15:27:15.468 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190401 15:27:15.468 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190401 15:27:15.469 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190401 15:27:15.470 - INFO - echo $?
20190401 15:27:15.470 - INFO - +------- END KW: SSHLibrary.Write (1)
20190401 15:27:15.470 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190401 15:27:15.470 - INFO - 1
20190401 15:27:15.471 - INFO - ${rc} = 1
20190401 15:27:15.471 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190401 15:27:15.471 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190401 15:27:15.471 - INFO - 1
20190401 15:27:15.471 - INFO - +------- END KW: BuiltIn.Log (0)
20190401 15:27:15.471 - INFO - ${rc} = 1
20190401 15:27:15.471 - INFO - +------ END KW: Utils.Get Return Code (3)
20190401 15:27:15.471 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190401 15:27:15.472 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stderr=${output} ]
20190401 15:27:15.472 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.472 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190401 15:27:15.472 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190401 15:27:15.472 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190401 15:27:15.472 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190401 15:27:15.472 - INFO - Dictionary size is 3 and it contains following items:
rc: 1
stderr: Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists

stdout:
20190401 15:27:15.473 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190401 15:27:15.473 - INFO - &{result} = { stdout= | stderr=Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
 | rc=1 }
20190401 15:27:15.473 - INFO - +----- END KW: Utils.Run Command (192)
20190401 15:27:15.473 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190401 15:27:15.473 - INFO - ${value} =
20190401 15:27:15.473 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190401 15:27:15.473 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | pod/${pod_name} created ]
20190401 15:27:15.473 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190401 15:27:15.474 - FAIL -  != pod/testpod created
20190401 15:27:15.474 - DEBUG - Traceback (most recent call last):
  None
20190401 15:27:15.474 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190401 15:27:15.474 - INFO - +---- END KW: Utils.Create POD (193)
------------------------------------------------------------------------------
20190401 15:27:15.474 - INFO - +--- END TEST: Create Check Delete POD (211)
------------------------------------------------------------------------------
20190401 15:27:15.474 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ Utils.Stx Suite TearDown ]
20190401 15:27:15.475 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190401 15:27:15.475 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190401 15:27:15.476 - INFO - +----- END KW: SSHLibrary.Close All Connections (1)
20190401 15:27:15.476 - INFO - +---- END KW: Utils.Stx Suite TearDown (1)
20190401 15:27:15.476 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (2)
==============================================================================
20190401 15:27:15.478 - INFO - +-- END SUITE: Sanity-Test.Sanity-Platform.02-OpenStack-Pod-Healthy (6036)
==============================================================================
20190401 15:27:15.479 - INFO - +- END SUITE: Sanity-Test.Sanity-Platform (6039)
==============================================================================
20190401 15:27:15.488 - INFO - + END SUITE: Sanity-Test (70620)
==============================================================================
