==============================================================================
20190402 06:58:13.176 - INFO - + START SUITE: Provision-Containers [ ]
==============================================================================
20190402 06:58:13.176 - INFO - +- START SETUP: BuiltIn.Run Keywords [ Utils.Stx Suite Setup | provisioning.Assign Data Interfaces ]
20190402 06:58:13.176 - INFO - +-- START KW: Utils.Stx Suite Setup [ ]
20190402 06:58:13.177 - INFO - +--- START KW: Utils.Open Master Controller Connection [ ]
20190402 06:58:13.177 - INFO - +---- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 06:58:13.177 - INFO - +----- START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 06:58:13.178 - INFO - ${controller_connection} = 1
20190402 06:58:13.178 - INFO - +----- END KW: SSHLibrary.Open Connection (1)
20190402 06:58:13.178 - INFO - +----- START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 06:58:13.178 - INFO - +------ START KW: BuiltIn.Get Length [ ${password} ]
20190402 06:58:13.178 - INFO - Length is 10
20190402 06:58:13.178 - INFO - ${pwd_length} = 10
20190402 06:58:13.178 - INFO - +------ END KW: BuiltIn.Get Length (0)
20190402 06:58:13.178 - INFO - +------ START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 06:58:13.179 - INFO - +------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 06:58:13.179 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 06:58:14.285 - INFO - Read output: Last login: Tue Apr  2 12:39:56 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 06:58:14.285 - INFO - /home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  m.add_string(self.Q_C.public_numbers().encode_point())
/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:96: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point
  self.curve, Q_S_bytes
/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:111: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  hm.add_string(self.Q_C.public_numbers().encode_point())
20190402 06:58:14.286 - INFO - +------- END KW: SSHLibrary.Login (1107)
20190402 06:58:14.286 - INFO - Returning from the enclosing user keyword.
20190402 06:58:14.287 - INFO - +------ END KW: BuiltIn.Run Keyword And Return If (1109)
20190402 06:58:14.287 - INFO - +----- END KW: Utils.Flexible_SSH_Login (1109)
20190402 06:58:14.288 - INFO - ${master_controller_connection} = 1
20190402 06:58:14.288 - INFO - +---- END KW: Utils.Connect to Controller Node (1111)
20190402 06:58:14.288 - INFO - +---- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 06:58:14.289 - INFO - ${master_controller_connection} = 1
20190402 06:58:14.289 - INFO - +---- END KW: BuiltIn.Set Suite Variable (1)
20190402 06:58:14.290 - INFO - +---- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 06:58:14.290 - INFO - 1
20190402 06:58:14.290 - INFO - +---- END KW: BuiltIn.Log (1)
20190402 06:58:14.291 - INFO - +--- END KW: Utils.Open Master Controller Connection (1113)
20190402 06:58:14.291 - INFO - +--- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 06:58:14.291 - INFO - +---- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 06:58:14.293 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:14.293 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:14.294 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:14.294 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:14.296 - INFO - &{result_dict} = { stdout= }
20190402 06:58:14.296 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 06:58:14.296 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:14.297 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:58:14.297 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:14.298 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:58:14.298 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:14.299 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (5)
20190402 06:58:14.299 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:58:14.299 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:58:14.300 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:14.309 - INFO - source /etc/platform/openrc
20190402 06:58:14.309 - INFO - +----- END KW: SSHLibrary.Write (9)
20190402 06:58:14.309 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:14.668 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:14.668 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:14.668 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (359)
20190402 06:58:14.668 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:14.669 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:14.669 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:14.669 - INFO - +------ END KW: String.Get Line (0)
20190402 06:58:14.669 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:14.669 - INFO - ${clean_out} =
20190402 06:58:14.669 - INFO - +------ END KW: String.Remove String (0)
20190402 06:58:14.670 - INFO - ${output} =
20190402 06:58:14.670 - INFO - +----- END KW: Utils.Remove Prompt Line (2)
20190402 06:58:14.670 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:58:14.670 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:14.671 - INFO - echo $?
20190402 06:58:14.671 - INFO - +------ END KW: SSHLibrary.Write (1)
20190402 06:58:14.672 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:14.672 - INFO - 0
20190402 06:58:14.672 - INFO - ${rc} = 0
20190402 06:58:14.672 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:14.672 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:14.672 - INFO - 0
20190402 06:58:14.672 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:58:14.672 - INFO - ${rc} = 0
20190402 06:58:14.673 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:58:14.673 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:14.673 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:14.673 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:58:14.673 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:14.673 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:14.674 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 06:58:14.674 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:14.674 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 06:58:14.674 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 06:58:14.674 - INFO - +---- END KW: Utils.Run Command (383)
20190402 06:58:14.674 - INFO - +--- END KW: Utils.Set Env Vars From Openrc (383)
20190402 06:58:14.674 - INFO - +-- END KW: Utils.Stx Suite Setup (1498)
20190402 06:58:14.674 - INFO - +-- START KW: provisioning.Assign Data Interfaces [ ]
20190402 06:58:14.675 - INFO - +--- START KW: BuiltIn.Run Keyword If [ '${ENVIRONMENT}'=='virtual' | Create List | eth1000 | eth1001 | ELSE | Create List | enp24s0f0 | enp24s0f1 ]
20190402 06:58:14.675 - INFO - +---- START KW: BuiltIn.Create List [ enp24s0f0 | enp24s0f1 ]
20190402 06:58:14.675 - INFO - +---- END KW: BuiltIn.Create List (0)
20190402 06:58:14.675 - INFO - @{data_interfaces} = [ enp24s0f0 | enp24s0f1 ]
20190402 06:58:14.675 - INFO - +--- END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:14.675 - INFO - +--- START KW: Collections.Get From List [ ${data_interfaces} | 0 ]
20190402 06:58:14.675 - INFO - ${data0if} = enp24s0f0
20190402 06:58:14.675 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:58:14.676 - INFO - +--- START KW: Collections.Get From List [ ${data_interfaces} | 1 ]
20190402 06:58:14.676 - INFO - ${data1if} = enp24s0f1
20190402 06:58:14.676 - INFO - +--- END KW: Collections.Get From List (0)
20190402 06:58:14.676 - INFO - +--- START KW: BuiltIn.Set Suite Variable [ ${data0if} ]
20190402 06:58:14.676 - INFO - ${data0if} = enp24s0f0
20190402 06:58:14.676 - INFO - +--- END KW: BuiltIn.Set Suite Variable (0)
20190402 06:58:14.676 - INFO - +--- START KW: BuiltIn.Set Suite Variable [ ${data1if} ]
20190402 06:58:14.677 - INFO - ${data1if} = enp24s0f1
20190402 06:58:14.677 - INFO - +--- END KW: BuiltIn.Set Suite Variable (1)
20190402 06:58:14.677 - INFO - +-- END KW: provisioning.Assign Data Interfaces (3)
20190402 06:58:14.677 - INFO - +- END SETUP: BuiltIn.Run Keywords (1501)
------------------------------------------------------------------------------
20190402 06:58:14.677 - INFO - +- START TEST: Provisioning Duplex System [ ]
------------------------------------------------------------------------------
20190402 06:58:14.677 - INFO - +-- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${chart_manifest} | ${host_image_path}/${chart_manifest} ]
20190402 06:58:14.685 - INFO - [chan 1] Opened sftp connection (server version 3)
20190402 06:58:14.692 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 06:58:14.729 - INFO - '/home/mgperezi/duplex/stx-test-suite/helm-charts-manifest.tgz' -> '/home/wrsroot//helm-charts-manifest.tgz'
20190402 06:58:14.729 - INFO - +-- END KW: SSHLibrary.Put File (52)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:58:14.729 - INFO - +-- START KW: Utils.Stage Application Deployment [ stx-openstack | ${chart_manifest} ]
20190402 06:58:14.730 - INFO - +--- START KW: BuiltIn.Set Variable [ system application-upload ]
20190402 06:58:14.730 - INFO - ${system_cmd} = system application-upload
20190402 06:58:14.730 - INFO - +--- END KW: BuiltIn.Set Variable (0)
20190402 06:58:14.730 - INFO - +--- START KW: BuiltIn.Catenate [ ${system_cmd} | ${application} | ${chart_manifest} ]
20190402 06:58:14.730 - INFO - ${cmd} = system application-upload stx-openstack helm-charts-manifest.tgz
20190402 06:58:14.730 - INFO - +--- END KW: BuiltIn.Catenate (0)
20190402 06:58:14.730 - INFO - +--- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 06:58:14.731 - INFO - +---- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:14.731 - INFO - +---- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:14.731 - INFO - +---- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:14.731 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:14.732 - INFO - &{result_dict} = { stdout= }
20190402 06:58:14.732 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 06:58:14.732 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:14.732 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:58:14.732 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:14.732 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:58:14.733 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:14.733 - INFO - +---- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:14.733 - INFO - +---- START KW: SSHLibrary.Read [ ]
20190402 06:58:14.733 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:14.733 - INFO - +---- END KW: SSHLibrary.Read (0)
20190402 06:58:14.733 - INFO - +---- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:14.742 - INFO - system application-upload stx-openstac k helm-charts-manifest.tgz
20190402 06:58:14.742 - INFO - +---- END KW: SSHLibrary.Write (9)
20190402 06:58:14.743 - INFO - +---- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:16.376 - INFO - +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | uploading                        |
| updated_at    | None                             |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:16.376 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 06:58:16.376 - INFO - +---- END KW: SSHLibrary.Read Until Prompt (1633)
20190402 06:58:16.376 - INFO - +---- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:16.377 - INFO - +----- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:16.377 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:16.377 - INFO - +----- END KW: String.Get Line (0)
20190402 06:58:16.377 - INFO - +----- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:16.378 - INFO - ${clean_out} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 06:58:16.378 - INFO - +----- END KW: String.Remove String (1)
20190402 06:58:16.378 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 06:58:16.378 - INFO - +---- END KW: Utils.Remove Prompt Line (2)
20190402 06:58:16.378 - INFO - +---- START KW: Utils.Get Return Code [ ]
20190402 06:58:16.378 - INFO - +----- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:16.380 - INFO - echo $?
20190402 06:58:16.380 - INFO - +----- END KW: SSHLibrary.Write (2)
20190402 06:58:16.380 - INFO - +----- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:16.380 - INFO - 0
20190402 06:58:16.380 - INFO - ${rc} = 0
20190402 06:58:16.380 - INFO - +----- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:16.380 - INFO - +----- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:16.381 - INFO - 0
20190402 06:58:16.381 - INFO - +----- END KW: BuiltIn.Log (1)
20190402 06:58:16.381 - INFO - ${rc} = 0
20190402 06:58:16.381 - INFO - +---- END KW: Utils.Get Return Code (3)
20190402 06:58:16.381 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:16.382 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:16.382 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:58:16.382 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:16.382 - INFO - +---- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:16.382 - INFO - +---- END KW: Collections.Set To Dictionary (0)
20190402 06:58:16.382 - INFO - +---- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:16.382 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | uploading                        |
| updated_at    | None                             |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
20190402 06:58:16.383 - INFO - +---- END KW: Collections.Log Dictionary (1)
20190402 06:58:16.383 - INFO - +--- END KW: Utils.Run Command (1653)
20190402 06:58:16.383 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 5 sec | Check System Application Status | ${application} | uploaded ]
20190402 06:58:16.383 - INFO - +---- START KW: Utils.Check System Application Status [ ${application} | uploaded ]
20190402 06:58:16.383 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:16.384 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:16.384 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 06:58:16.384 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:16.384 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:16.384 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:16.384 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:16.385 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:16.385 - INFO - &{result_dict} = { stdout= }
20190402 06:58:16.385 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:58:16.385 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:16.385 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:16.385 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:16.386 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:16.386 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:16.386 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:16.386 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:58:16.386 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:16.386 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:58:16.386 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:16.388 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:16.388 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:58:16.388 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:17.464 - INFO - uploading
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:17.464 - INFO - ${output} = uploading
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:17.464 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1076)
20190402 06:58:17.464 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:17.465 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:17.465 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:17.465 - INFO - +------- END KW: String.Get Line (0)
20190402 06:58:17.465 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:17.465 - INFO - ${clean_out} = uploading
20190402 06:58:17.465 - INFO - +------- END KW: String.Remove String (0)
20190402 06:58:17.465 - INFO - ${output} = uploading
20190402 06:58:17.465 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:58:17.465 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:58:17.466 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:17.467 - INFO - echo $?
20190402 06:58:17.468 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:58:17.468 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:17.468 - INFO - 0
20190402 06:58:17.468 - INFO - ${rc} = 0
20190402 06:58:17.468 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:17.468 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:17.468 - INFO - 0
20190402 06:58:17.468 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:58:17.468 - INFO - ${rc} = 0
20190402 06:58:17.469 - INFO - +------ END KW: Utils.Get Return Code (4)
20190402 06:58:17.469 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:17.469 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:17.469 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:17.469 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:17.469 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:17.470 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:58:17.470 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:17.470 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: uploading
20190402 06:58:17.470 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:58:17.470 - INFO - &{result} = { stdout=uploading | stderr= | rc=0 }
20190402 06:58:17.470 - INFO - +----- END KW: Utils.Run Command (1086)
20190402 06:58:17.470 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:17.470 - INFO - ${value} = uploading
20190402 06:58:17.471 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 06:58:17.471 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:17.471 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:17.471 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:17.471 - FAIL - uploading != uploaded
20190402 06:58:17.471 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:17.471 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:58:17.471 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:17.471 - INFO - +---- END KW: Utils.Check System Application Status (1088)
20190402 06:58:22.472 - INFO - +---- START KW: Utils.Check System Application Status [ ${application} | uploaded ]
20190402 06:58:22.474 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:22.474 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:22.475 - INFO - +----- END KW: BuiltIn.Catenate (2)
20190402 06:58:22.475 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:22.476 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:22.477 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:58:22.477 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:22.477 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:22.478 - INFO - &{result_dict} = { stdout= }
20190402 06:58:22.478 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:58:22.478 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:22.478 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:22.478 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:22.478 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:22.478 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:22.479 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:22.479 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:58:22.479 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:22.479 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:58:22.479 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:22.481 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:22.481 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:58:22.481 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:23.625 - INFO - uploading
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:23.625 - INFO - ${output} = uploading
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:23.625 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1144)
20190402 06:58:23.625 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:23.625 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:23.626 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:23.626 - INFO - +------- END KW: String.Get Line (1)
20190402 06:58:23.626 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:23.626 - INFO - ${clean_out} = uploading
20190402 06:58:23.626 - INFO - +------- END KW: String.Remove String (0)
20190402 06:58:23.626 - INFO - ${output} = uploading
20190402 06:58:23.626 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:58:23.626 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:58:23.626 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:23.629 - INFO - echo $?
20190402 06:58:23.629 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 06:58:23.629 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:23.629 - INFO - 0
20190402 06:58:23.629 - INFO - ${rc} = 0
20190402 06:58:23.629 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:23.630 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:23.630 - INFO - 0
20190402 06:58:23.630 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:58:23.630 - INFO - ${rc} = 0
20190402 06:58:23.630 - INFO - +------ END KW: Utils.Get Return Code (4)
20190402 06:58:23.630 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:23.630 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:23.631 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:23.631 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:23.631 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:23.631 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:58:23.631 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:23.631 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: uploading
20190402 06:58:23.631 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:58:23.632 - INFO - &{result} = { stdout=uploading | stderr= | rc=0 }
20190402 06:58:23.632 - INFO - +----- END KW: Utils.Run Command (1157)
20190402 06:58:23.632 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:23.632 - INFO - ${value} = uploading
20190402 06:58:23.632 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 06:58:23.632 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:23.632 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:23.633 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:23.633 - FAIL - uploading != uploaded
20190402 06:58:23.633 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:23.633 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:58:23.633 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:23.633 - INFO - +---- END KW: Utils.Check System Application Status (1161)
20190402 06:58:28.634 - INFO - +---- START KW: Utils.Check System Application Status [ ${application} | uploaded ]
20190402 06:58:28.635 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:28.636 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:28.636 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 06:58:28.637 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:28.639 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:28.640 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:58:28.640 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:28.641 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:28.642 - INFO - &{result_dict} = { stdout= }
20190402 06:58:28.643 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:58:28.643 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:28.644 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:28.644 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:28.645 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:28.646 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:28.646 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:58:28.646 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:58:28.647 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:28.647 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 06:58:28.647 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:28.673 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:28.674 - INFO - +------ END KW: SSHLibrary.Write (26)
20190402 06:58:28.674 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:29.802 - INFO - uploading
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:29.802 - INFO - ${output} = uploading
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:29.802 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1128)
20190402 06:58:29.803 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:29.803 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:29.803 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:29.803 - INFO - +------- END KW: String.Get Line (0)
20190402 06:58:29.803 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:29.804 - INFO - ${clean_out} = uploading
20190402 06:58:29.804 - INFO - +------- END KW: String.Remove String (1)
20190402 06:58:29.804 - INFO - ${output} = uploading
20190402 06:58:29.804 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:58:29.804 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:58:29.804 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:29.805 - INFO - echo $?
20190402 06:58:29.806 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:58:29.806 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:29.806 - INFO - 0
20190402 06:58:29.806 - INFO - ${rc} = 0
20190402 06:58:29.806 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:29.806 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:29.806 - INFO - 0
20190402 06:58:29.806 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 06:58:29.807 - INFO - ${rc} = 0
20190402 06:58:29.807 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:58:29.807 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:29.808 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:29.808 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:29.808 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:29.808 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:29.809 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 06:58:29.809 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:29.809 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: uploading
20190402 06:58:29.809 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:58:29.809 - INFO - &{result} = { stdout=uploading | stderr= | rc=0 }
20190402 06:58:29.809 - INFO - +----- END KW: Utils.Run Command (1172)
20190402 06:58:29.809 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:29.810 - INFO - ${value} = uploading
20190402 06:58:29.810 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 06:58:29.810 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:29.810 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:29.810 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:29.810 - FAIL - uploading != uploaded
20190402 06:58:29.810 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:29.810 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:58:29.810 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:29.811 - INFO - +---- END KW: Utils.Check System Application Status (1176)
20190402 06:58:34.811 - INFO - +---- START KW: Utils.Check System Application Status [ ${application} | uploaded ]
20190402 06:58:34.813 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:34.813 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:34.814 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 06:58:34.814 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:34.816 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:34.816 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:58:34.816 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:34.816 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:34.817 - INFO - &{result_dict} = { stdout= }
20190402 06:58:34.817 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:58:34.817 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:34.817 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:34.817 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:34.817 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:34.818 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:34.818 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:34.818 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 06:58:34.818 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:34.818 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 06:58:34.818 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:34.827 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:34.827 - INFO - +------ END KW: SSHLibrary.Write (9)
20190402 06:58:34.827 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:35.820 - INFO - uploaded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:35.821 - INFO - ${output} = uploaded
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:35.821 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (994)
20190402 06:58:35.821 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:35.821 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:35.821 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:35.821 - INFO - +------- END KW: String.Get Line (0)
20190402 06:58:35.822 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:35.822 - INFO - ${clean_out} = uploaded
20190402 06:58:35.822 - INFO - +------- END KW: String.Remove String (0)
20190402 06:58:35.822 - INFO - ${output} = uploaded
20190402 06:58:35.822 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 06:58:35.822 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 06:58:35.822 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:35.824 - INFO - echo $?
20190402 06:58:35.824 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:58:35.824 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:35.824 - INFO - 0
20190402 06:58:35.824 - INFO - ${rc} = 0
20190402 06:58:35.824 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:35.824 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:35.825 - INFO - 0
20190402 06:58:35.825 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 06:58:35.825 - INFO - ${rc} = 0
20190402 06:58:35.825 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 06:58:35.825 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:35.825 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:35.826 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:35.826 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:35.826 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:35.826 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:58:35.826 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:35.826 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: uploaded
20190402 06:58:35.826 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 06:58:35.826 - INFO - &{result} = { stdout=uploaded | stderr= | rc=0 }
20190402 06:58:35.827 - INFO - +----- END KW: Utils.Run Command (1012)
20190402 06:58:35.827 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:35.827 - INFO - ${value} = uploaded
20190402 06:58:35.827 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 06:58:35.827 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:35.827 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:35.828 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:35.828 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:58:35.828 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:35.828 - INFO - +---- END KW: Utils.Check System Application Status (1017)
20190402 06:58:35.828 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (19445)
20190402 06:58:35.828 - INFO - +-- END KW: Utils.Stage Application Deployment (21099)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 06:58:35.828 - INFO - +-- START KW: Utils.Bring Up Services [ stx-openstack ]
20190402 06:58:35.828 - INFO - +--- START KW: Utils.System Application Apply [ ${application} ]
20190402 06:58:35.829 - INFO - +---- START KW: Utils.Run Command [ system application-apply ${application} | True ]
20190402 06:58:35.829 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:35.829 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:35.829 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:35.829 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:35.830 - INFO - &{result_dict} = { stdout= }
20190402 06:58:35.830 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 06:58:35.830 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:35.830 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:58:35.830 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:35.830 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:58:35.831 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:35.831 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:35.831 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 06:58:35.831 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:35.831 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 06:58:35.831 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:35.839 - INFO - system application-apply stx-openstack [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kk
20190402 06:58:35.839 - INFO - +----- END KW: SSHLibrary.Write (8)
20190402 06:58:35.839 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:36.836 - INFO - +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | applying                         |
| updated_at    | 2019-04-02T12:47:17.734713+00:00 |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:36.836 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 06:58:36.836 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (997)
20190402 06:58:36.836 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:36.836 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:36.837 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:36.837 - INFO - +------ END KW: String.Get Line (1)
20190402 06:58:36.837 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:36.837 - INFO - ${clean_out} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 06:58:36.837 - INFO - +------ END KW: String.Remove String (0)
20190402 06:58:36.837 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 06:58:36.837 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 06:58:36.837 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 06:58:36.837 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:36.839 - INFO - echo $?
20190402 06:58:36.839 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 06:58:36.839 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:36.840 - INFO - 0
20190402 06:58:36.840 - INFO - ${rc} = 0
20190402 06:58:36.840 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 06:58:36.840 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:36.840 - INFO - 0
20190402 06:58:36.840 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 06:58:36.840 - INFO - ${rc} = 0
20190402 06:58:36.840 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 06:58:36.840 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:36.841 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:36.841 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 06:58:36.841 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:36.841 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:36.841 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 06:58:36.841 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:36.842 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | applying                         |
| updated_at    | 2019-04-02T12:47:17.734713+00:00 |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
20190402 06:58:36.842 - INFO - +----- END KW: Collections.Log Dictionary (1)
20190402 06:58:36.842 - INFO - +---- END KW: Utils.Run Command (1013)
20190402 06:58:36.842 - INFO - +---- START KW: BuiltIn.Wait Until Keyword Succeeds [ 90 min | 5 sec | Check System Application Status | ${application} | applied ]
20190402 06:58:36.842 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:58:36.842 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:36.843 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:36.843 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:58:36.843 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:36.843 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:36.843 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:36.844 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:36.844 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:36.844 - INFO - &{result_dict} = { stdout= }
20190402 06:58:36.844 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:58:36.844 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:36.845 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:36.845 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:36.845 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:36.845 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:36.845 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:58:36.845 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:58:36.845 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:36.845 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:58:36.845 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:36.847 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:36.847 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 06:58:36.847 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:37.930 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:37.930 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:37.930 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1083)
20190402 06:58:37.930 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:37.931 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:37.931 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:37.931 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:58:37.931 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:37.931 - INFO - ${clean_out} = applying
20190402 06:58:37.931 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:58:37.931 - INFO - ${output} = applying
20190402 06:58:37.931 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:58:37.931 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:58:37.932 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:37.933 - INFO - echo $?
20190402 06:58:37.934 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:58:37.934 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:37.934 - INFO - 0
20190402 06:58:37.934 - INFO - ${rc} = 0
20190402 06:58:37.934 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 06:58:37.934 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:37.934 - INFO - 0
20190402 06:58:37.934 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:58:37.934 - INFO - ${rc} = 0
20190402 06:58:37.934 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 06:58:37.935 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:37.935 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:37.935 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:37.935 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:37.935 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:37.936 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:37.936 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:37.936 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:58:37.936 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:58:37.936 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:58:37.936 - INFO - +------ END KW: Utils.Run Command (1093)
20190402 06:58:37.936 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:37.936 - INFO - ${value} = applying
20190402 06:58:37.937 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:58:37.937 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:37.937 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:37.937 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:37.937 - FAIL - applying != applied
20190402 06:58:37.937 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:37.937 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:58:37.937 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:37.937 - INFO - +----- END KW: Utils.Check System Application Status (1095)
20190402 06:58:42.938 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:58:42.939 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:42.940 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:42.941 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:58:42.941 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:42.942 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:42.944 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 06:58:42.944 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:42.945 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:42.947 - INFO - &{result_dict} = { stdout= }
20190402 06:58:42.947 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:58:42.947 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:42.948 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:42.948 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:42.949 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:42.950 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:42.950 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:58:42.950 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:58:42.951 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:42.951 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:58:42.951 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:42.979 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:42.979 - INFO - +------- END KW: SSHLibrary.Write (28)
20190402 06:58:42.979 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:45.817 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:45.817 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:45.817 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2838)
20190402 06:58:45.818 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:45.818 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:45.818 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:45.818 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:58:45.818 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:45.819 - INFO - ${clean_out} = applying
20190402 06:58:45.819 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:58:45.819 - INFO - ${output} = applying
20190402 06:58:45.819 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:58:45.819 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:58:45.819 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:45.821 - INFO - echo $?
20190402 06:58:45.821 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:58:45.821 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:45.825 - INFO - 0
20190402 06:58:45.825 - INFO - ${rc} = 0
20190402 06:58:45.825 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 06:58:45.825 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:45.826 - INFO - 0
20190402 06:58:45.826 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:58:45.826 - INFO - ${rc} = 0
20190402 06:58:45.826 - INFO - +------- END KW: Utils.Get Return Code (7)
20190402 06:58:45.826 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:45.826 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:45.827 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:45.827 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:45.827 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:45.827 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:45.827 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:45.827 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:58:45.827 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:58:45.828 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:58:45.828 - INFO - +------ END KW: Utils.Run Command (2887)
20190402 06:58:45.828 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:45.828 - INFO - ${value} = applying
20190402 06:58:45.828 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:58:45.828 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:45.829 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:45.829 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:45.829 - FAIL - applying != applied
20190402 06:58:45.829 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:45.829 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:58:45.829 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:45.829 - INFO - +----- END KW: Utils.Check System Application Status (2891)
20190402 06:58:50.830 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:58:50.830 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:50.830 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:50.830 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:58:50.830 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:50.831 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:50.831 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:50.831 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:50.831 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:50.832 - INFO - &{result_dict} = { stdout= }
20190402 06:58:50.832 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:58:50.832 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:50.832 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:50.832 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:50.833 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:50.833 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:50.833 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:50.833 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:58:50.833 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:50.833 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:58:50.833 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:50.849 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:50.849 - INFO - +------- END KW: SSHLibrary.Write (16)
20190402 06:58:50.849 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:52.423 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:52.424 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:52.424 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1575)
20190402 06:58:52.424 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:52.424 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:52.424 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:52.424 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:58:52.425 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:52.425 - INFO - ${clean_out} = applying
20190402 06:58:52.425 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:58:52.425 - INFO - ${output} = applying
20190402 06:58:52.425 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:58:52.425 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:58:52.425 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:52.427 - INFO - echo $?
20190402 06:58:52.427 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:58:52.427 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:52.431 - INFO - 0
20190402 06:58:52.431 - INFO - ${rc} = 0
20190402 06:58:52.431 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 06:58:52.431 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:52.431 - INFO - 0
20190402 06:58:52.431 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:58:52.431 - INFO - ${rc} = 0
20190402 06:58:52.431 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 06:58:52.432 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:52.432 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:52.432 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:52.432 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:52.432 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:52.433 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:52.433 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:52.433 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:58:52.433 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:58:52.433 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:58:52.433 - INFO - +------ END KW: Utils.Run Command (1603)
20190402 06:58:52.433 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:52.433 - INFO - ${value} = applying
20190402 06:58:52.434 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:58:52.434 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:52.434 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:52.434 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:52.434 - FAIL - applying != applied
20190402 06:58:52.434 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:52.434 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:58:52.434 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 06:58:52.435 - INFO - +----- END KW: Utils.Check System Application Status (1605)
20190402 06:58:57.435 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:58:57.435 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:58:57.436 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:58:57.436 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:58:57.436 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:58:57.436 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:58:57.436 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:58:57.436 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:58:57.437 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:58:57.437 - INFO - &{result_dict} = { stdout= }
20190402 06:58:57.437 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:58:57.437 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:58:57.437 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:57.437 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:58:57.438 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:57.438 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:58:57.438 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:58:57.438 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:58:57.438 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:57.438 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:58:57.439 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:58:57.450 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:58:57.450 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 06:58:57.450 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:58:58.987 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:58.987 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:58.987 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1537)
20190402 06:58:58.987 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:58:58.987 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:58:58.988 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:58:58.988 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:58:58.988 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:58:58.988 - INFO - ${clean_out} = applying
20190402 06:58:58.988 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:58:58.988 - INFO - ${output} = applying
20190402 06:58:58.988 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:58:58.988 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:58:58.989 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:58:58.990 - INFO - echo $?
20190402 06:58:58.990 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:58:58.990 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:58:58.995 - INFO - 0
20190402 06:58:58.995 - INFO - ${rc} = 0
20190402 06:58:58.995 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 06:58:58.995 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:58:58.995 - INFO - 0
20190402 06:58:58.996 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 06:58:58.996 - INFO - ${rc} = 0
20190402 06:58:58.996 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 06:58:58.996 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:58:58.996 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:58:58.997 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:58:58.997 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:58.997 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:58:58.997 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:58:58.997 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:58:58.997 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:58:58.997 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:58:58.998 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:58:58.998 - INFO - +------ END KW: Utils.Run Command (1562)
20190402 06:58:58.998 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:58:58.998 - INFO - ${value} = applying
20190402 06:58:58.998 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:58:58.998 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:58:58.998 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:58:58.999 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:58:58.999 - FAIL - applying != applied
20190402 06:58:58.999 - DEBUG - Traceback (most recent call last):
  None
20190402 06:58:58.999 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:58:58.999 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:58:58.999 - INFO - +----- END KW: Utils.Check System Application Status (1564)
20190402 06:59:03.999 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:04.000 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:04.000 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:04.000 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:59:04.000 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:04.001 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:04.001 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:59:04.001 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:04.002 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:04.002 - INFO - &{result_dict} = { stdout= }
20190402 06:59:04.002 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:59:04.002 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:04.002 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:04.003 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:04.003 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:04.003 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:04.003 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:59:04.003 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:04.004 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:04.004 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:59:04.004 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:04.012 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:04.013 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:59:04.013 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:05.579 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:05.579 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:05.579 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1566)
20190402 06:59:05.579 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:05.580 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:05.580 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:05.580 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:59:05.580 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:05.580 - INFO - ${clean_out} = applying
20190402 06:59:05.580 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:05.580 - INFO - ${output} = applying
20190402 06:59:05.580 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:05.581 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:05.581 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:05.582 - INFO - echo $?
20190402 06:59:05.582 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 06:59:05.583 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:05.585 - INFO - 0
20190402 06:59:05.585 - INFO - ${rc} = 0
20190402 06:59:05.585 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 06:59:05.585 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:05.585 - INFO - 0
20190402 06:59:05.585 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:05.586 - INFO - ${rc} = 0
20190402 06:59:05.586 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 06:59:05.586 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:05.586 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:05.586 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:05.587 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:05.587 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:05.587 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:05.587 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:05.587 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:05.587 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:05.587 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:05.587 - INFO - +------ END KW: Utils.Run Command (1587)
20190402 06:59:05.588 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:05.588 - INFO - ${value} = applying
20190402 06:59:05.588 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:05.588 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:05.588 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:05.588 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:05.588 - FAIL - applying != applied
20190402 06:59:05.589 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:05.589 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:59:05.589 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:05.589 - INFO - +----- END KW: Utils.Check System Application Status (1590)
20190402 06:59:10.589 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:10.590 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:10.590 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:10.590 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:59:10.590 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:10.591 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:10.591 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:59:10.591 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:10.591 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:10.592 - INFO - &{result_dict} = { stdout= }
20190402 06:59:10.592 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:59:10.592 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:10.592 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:10.593 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:10.593 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:10.593 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:10.593 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:59:10.594 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:10.594 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:10.594 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:59:10.594 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:10.608 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:10.608 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 06:59:10.608 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:12.186 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:12.186 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:12.186 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1578)
20190402 06:59:12.186 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:12.187 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:12.187 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:12.187 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:59:12.187 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:12.188 - INFO - ${clean_out} = applying
20190402 06:59:12.188 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:59:12.188 - INFO - ${output} = applying
20190402 06:59:12.188 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 06:59:12.188 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:12.188 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:12.190 - INFO - echo $?
20190402 06:59:12.190 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:12.190 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:12.196 - INFO - 0
20190402 06:59:12.196 - INFO - ${rc} = 0
20190402 06:59:12.197 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 06:59:12.197 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:12.197 - INFO - 0
20190402 06:59:12.197 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:12.197 - INFO - ${rc} = 0
20190402 06:59:12.197 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 06:59:12.197 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:12.198 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:12.198 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:12.198 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:12.198 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:12.198 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:12.198 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:12.199 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:12.199 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:59:12.199 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:12.199 - INFO - +------ END KW: Utils.Run Command (1609)
20190402 06:59:12.199 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:12.199 - INFO - ${value} = applying
20190402 06:59:12.199 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:12.199 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:12.200 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:12.200 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:12.200 - FAIL - applying != applied
20190402 06:59:12.200 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:12.200 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:59:12.200 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:12.200 - INFO - +----- END KW: Utils.Check System Application Status (1611)
20190402 06:59:17.201 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:17.202 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:17.202 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:17.203 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:59:17.203 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:17.204 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:17.204 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 06:59:17.205 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:17.205 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:17.206 - INFO - &{result_dict} = { stdout= }
20190402 06:59:17.206 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:59:17.207 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:17.207 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:17.207 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:17.208 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:17.209 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:17.209 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 06:59:17.209 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:17.210 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:17.210 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:59:17.210 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:17.234 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:17.234 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 06:59:17.234 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:18.440 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:18.440 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:18.440 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1206)
20190402 06:59:18.440 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:18.440 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:18.441 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:18.441 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:59:18.441 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:18.441 - INFO - ${clean_out} = applying
20190402 06:59:18.441 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:18.441 - INFO - ${output} = applying
20190402 06:59:18.441 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:18.441 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:18.442 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:18.446 - INFO - echo $?
20190402 06:59:18.446 - INFO - +-------- END KW: SSHLibrary.Write (4)
20190402 06:59:18.446 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:18.450 - INFO - 0
20190402 06:59:18.450 - INFO - ${rc} = 0
20190402 06:59:18.450 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 06:59:18.451 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:18.451 - INFO - 0
20190402 06:59:18.451 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:18.451 - INFO - ${rc} = 0
20190402 06:59:18.451 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 06:59:18.451 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:18.452 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:18.452 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:18.452 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:18.452 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:18.452 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:18.453 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:18.453 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:18.453 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:18.453 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:18.453 - INFO - +------ END KW: Utils.Run Command (1250)
20190402 06:59:18.453 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:18.453 - INFO - ${value} = applying
20190402 06:59:18.453 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:18.454 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:18.454 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:18.454 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:18.454 - FAIL - applying != applied
20190402 06:59:18.454 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:18.454 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:59:18.454 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:18.454 - INFO - +----- END KW: Utils.Check System Application Status (1253)
20190402 06:59:23.455 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:23.457 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:23.457 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:23.458 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 06:59:23.458 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:23.459 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:23.460 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:59:23.460 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:23.460 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:23.461 - INFO - &{result_dict} = { stdout= }
20190402 06:59:23.461 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:59:23.461 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:23.461 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:23.461 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:23.461 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:23.462 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:23.462 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:59:23.462 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:23.462 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:23.462 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:59:23.462 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:23.470 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:23.470 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 06:59:23.470 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:24.913 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:24.914 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:24.914 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1444)
20190402 06:59:24.914 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:24.914 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:24.914 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:24.914 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:59:24.915 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:24.915 - INFO - ${clean_out} = applying
20190402 06:59:24.915 - INFO - +-------- END KW: String.Remove String (1)
20190402 06:59:24.915 - INFO - ${output} = applying
20190402 06:59:24.915 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:24.915 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:24.915 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:24.916 - INFO - echo $?
20190402 06:59:24.917 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:24.917 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:24.922 - INFO - 0
20190402 06:59:24.922 - INFO - ${rc} = 0
20190402 06:59:24.922 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 06:59:24.922 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:24.922 - INFO - 0
20190402 06:59:24.922 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:24.923 - INFO - ${rc} = 0
20190402 06:59:24.923 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 06:59:24.923 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:24.923 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:24.924 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:24.924 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:24.924 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:24.924 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:24.924 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:24.924 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:24.924 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:24.925 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:24.925 - INFO - +------ END KW: Utils.Run Command (1467)
20190402 06:59:24.925 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:24.925 - INFO - ${value} = applying
20190402 06:59:24.925 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:24.925 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:24.925 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:24.925 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:24.926 - FAIL - applying != applied
20190402 06:59:24.926 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:24.926 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:59:24.926 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:24.926 - INFO - +----- END KW: Utils.Check System Application Status (1471)
20190402 06:59:29.927 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:29.928 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:29.929 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:29.929 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:59:29.929 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:29.931 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:29.932 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:59:29.932 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:29.933 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:29.934 - INFO - &{result_dict} = { stdout= }
20190402 06:59:29.935 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 06:59:29.935 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:29.936 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:29.936 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:29.937 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:29.938 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:29.938 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:59:29.939 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:29.939 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:29.940 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:59:29.940 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:29.966 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:29.967 - INFO - +------- END KW: SSHLibrary.Write (27)
20190402 06:59:29.967 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:31.494 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:31.494 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:31.494 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1527)
20190402 06:59:31.494 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:31.494 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:31.495 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:31.495 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:59:31.495 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:31.495 - INFO - ${clean_out} = applying
20190402 06:59:31.495 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:31.495 - INFO - ${output} = applying
20190402 06:59:31.495 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:31.495 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:31.495 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:31.497 - INFO - echo $?
20190402 06:59:31.497 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:31.497 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:31.500 - INFO - 0
20190402 06:59:31.500 - INFO - ${rc} = 0
20190402 06:59:31.500 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 06:59:31.500 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:31.500 - INFO - 0
20190402 06:59:31.500 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:31.500 - INFO - ${rc} = 0
20190402 06:59:31.500 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 06:59:31.501 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:31.501 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:31.501 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:31.501 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:59:31.501 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:31.502 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:31.502 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:31.502 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:31.502 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:31.502 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:31.502 - INFO - +------ END KW: Utils.Run Command (1573)
20190402 06:59:31.502 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:31.503 - INFO - ${value} = applying
20190402 06:59:31.503 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:59:31.503 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:31.503 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:31.503 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:31.503 - FAIL - applying != applied
20190402 06:59:31.504 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:31.504 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:59:31.504 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:31.504 - INFO - +----- END KW: Utils.Check System Application Status (1577)
20190402 06:59:36.504 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:36.505 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:36.505 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:36.505 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 06:59:36.505 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:36.505 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:36.506 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:59:36.506 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:36.506 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:36.506 - INFO - &{result_dict} = { stdout= }
20190402 06:59:36.506 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 06:59:36.506 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:36.507 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:36.507 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:36.507 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:36.507 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:36.507 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:59:36.507 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:36.507 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:36.508 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:59:36.508 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:36.516 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:36.517 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:59:36.517 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:38.132 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:38.132 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:38.132 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1615)
20190402 06:59:38.132 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:38.132 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:38.133 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:38.133 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:59:38.133 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:38.133 - INFO - ${clean_out} = applying
20190402 06:59:38.133 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:38.133 - INFO - ${output} = applying
20190402 06:59:38.133 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:38.133 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:38.133 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:38.135 - INFO - echo $?
20190402 06:59:38.135 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:38.135 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:38.138 - INFO - 0
20190402 06:59:38.138 - INFO - ${rc} = 0
20190402 06:59:38.138 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 06:59:38.138 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:38.138 - INFO - 0
20190402 06:59:38.138 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:38.138 - INFO - ${rc} = 0
20190402 06:59:38.138 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 06:59:38.138 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:38.139 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:38.139 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:38.139 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:38.139 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:38.139 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:38.139 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:38.140 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:38.140 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 06:59:38.140 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:38.140 - INFO - +------ END KW: Utils.Run Command (1635)
20190402 06:59:38.140 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:38.140 - INFO - ${value} = applying
20190402 06:59:38.140 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:38.140 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:38.141 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:38.141 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:38.141 - FAIL - applying != applied
20190402 06:59:38.141 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:38.141 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:59:38.141 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:38.141 - INFO - +----- END KW: Utils.Check System Application Status (1637)
20190402 06:59:43.142 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:43.143 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:43.144 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:43.144 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:59:43.145 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:43.146 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:43.147 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:59:43.147 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:43.148 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:43.149 - INFO - &{result_dict} = { stdout= }
20190402 06:59:43.149 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:59:43.150 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:43.151 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:43.151 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:43.152 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:43.153 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:43.153 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 06:59:43.153 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:43.153 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:43.154 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:59:43.154 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:43.164 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:43.164 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 06:59:43.164 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:44.590 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:44.590 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:44.590 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1426)
20190402 06:59:44.590 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:44.590 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:44.591 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:44.591 - INFO - +-------- END KW: String.Get Line (1)
20190402 06:59:44.591 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:44.591 - INFO - ${clean_out} = applying
20190402 06:59:44.591 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:44.591 - INFO - ${output} = applying
20190402 06:59:44.591 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:44.591 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:44.591 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:44.593 - INFO - echo $?
20190402 06:59:44.593 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:44.593 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:44.598 - INFO - 0
20190402 06:59:44.598 - INFO - ${rc} = 0
20190402 06:59:44.598 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 06:59:44.598 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:44.598 - INFO - 0
20190402 06:59:44.598 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:44.598 - INFO - ${rc} = 0
20190402 06:59:44.599 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 06:59:44.599 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:44.599 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:44.599 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:44.599 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:59:44.599 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:44.600 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:44.600 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:44.600 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:44.600 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:44.600 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:44.600 - INFO - +------ END KW: Utils.Run Command (1455)
20190402 06:59:44.600 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:44.601 - INFO - ${value} = applying
20190402 06:59:44.601 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 06:59:44.601 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:44.601 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:44.601 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:44.601 - FAIL - applying != applied
20190402 06:59:44.601 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:44.601 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:59:44.602 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 06:59:44.602 - INFO - +----- END KW: Utils.Check System Application Status (1460)
20190402 06:59:49.603 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:49.604 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:49.605 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:49.605 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:59:49.606 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:49.607 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:49.608 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:59:49.608 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:49.608 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:49.608 - INFO - &{result_dict} = { stdout= }
20190402 06:59:49.609 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:59:49.609 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:49.609 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:49.609 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:49.609 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:49.609 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:49.609 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 06:59:49.610 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:49.610 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:49.610 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 06:59:49.610 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:49.619 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:49.619 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 06:59:49.619 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:51.188 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:51.189 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:51.189 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1570)
20190402 06:59:51.189 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:51.189 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:51.189 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:51.190 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:59:51.190 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:51.190 - INFO - ${clean_out} = applying
20190402 06:59:51.190 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:51.190 - INFO - ${output} = applying
20190402 06:59:51.190 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:51.190 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:51.190 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:51.192 - INFO - echo $?
20190402 06:59:51.192 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:51.192 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:51.195 - INFO - 0
20190402 06:59:51.195 - INFO - ${rc} = 0
20190402 06:59:51.195 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 06:59:51.195 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:51.195 - INFO - 0
20190402 06:59:51.195 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:51.195 - INFO - ${rc} = 0
20190402 06:59:51.195 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 06:59:51.196 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:51.196 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:51.196 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:51.196 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 06:59:51.196 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:51.197 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:51.197 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:51.197 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:51.197 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:51.197 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:51.197 - INFO - +------ END KW: Utils.Run Command (1591)
20190402 06:59:51.197 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:51.197 - INFO - ${value} = applying
20190402 06:59:51.197 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:51.198 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:51.198 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:51.198 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:51.198 - FAIL - applying != applied
20190402 06:59:51.198 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:51.198 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 06:59:51.198 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 06:59:51.198 - INFO - +----- END KW: Utils.Check System Application Status (1595)
20190402 06:59:56.199 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 06:59:56.199 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 06:59:56.200 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 06:59:56.200 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 06:59:56.201 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 06:59:56.201 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 06:59:56.202 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 06:59:56.202 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 06:59:56.202 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 06:59:56.203 - INFO - &{result_dict} = { stdout= }
20190402 06:59:56.203 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 06:59:56.203 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 06:59:56.203 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:56.204 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 06:59:56.204 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:56.204 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 06:59:56.204 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 06:59:56.204 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 06:59:56.204 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:56.205 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 06:59:56.205 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 06:59:56.217 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 06:59:56.217 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 06:59:56.217 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 06:59:57.654 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:57.654 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:57.654 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1437)
20190402 06:59:57.655 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 06:59:57.655 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 06:59:57.655 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 06:59:57.655 - INFO - +-------- END KW: String.Get Line (0)
20190402 06:59:57.655 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 06:59:57.655 - INFO - ${clean_out} = applying
20190402 06:59:57.655 - INFO - +-------- END KW: String.Remove String (0)
20190402 06:59:57.656 - INFO - ${output} = applying
20190402 06:59:57.656 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 06:59:57.656 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 06:59:57.656 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 06:59:57.658 - INFO - echo $?
20190402 06:59:57.658 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 06:59:57.658 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 06:59:57.661 - INFO - 0
20190402 06:59:57.661 - INFO - ${rc} = 0
20190402 06:59:57.661 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 06:59:57.662 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 06:59:57.662 - INFO - 0
20190402 06:59:57.662 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 06:59:57.662 - INFO - ${rc} = 0
20190402 06:59:57.662 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 06:59:57.662 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 06:59:57.663 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 06:59:57.663 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 06:59:57.663 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:57.663 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 06:59:57.663 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 06:59:57.663 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 06:59:57.663 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 06:59:57.663 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 06:59:57.664 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 06:59:57.664 - INFO - +------ END KW: Utils.Run Command (1463)
20190402 06:59:57.664 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 06:59:57.664 - INFO - ${value} = applying
20190402 06:59:57.664 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 06:59:57.664 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 06:59:57.664 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 06:59:57.665 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 06:59:57.665 - FAIL - applying != applied
20190402 06:59:57.665 - DEBUG - Traceback (most recent call last):
  None
20190402 06:59:57.665 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 06:59:57.665 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 06:59:57.665 - INFO - +----- END KW: Utils.Check System Application Status (1466)
20190402 07:00:02.666 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:02.667 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:02.668 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:02.668 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:02.669 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:02.670 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:02.671 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:02.671 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:02.671 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:02.672 - INFO - &{result_dict} = { stdout= }
20190402 07:00:02.672 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:00:02.672 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:02.672 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:02.672 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:02.672 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:02.673 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:02.673 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:00:02.673 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:02.673 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:02.673 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:02.673 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:02.682 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:02.682 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:00:02.682 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:03.895 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:03.896 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:03.896 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1214)
20190402 07:00:03.896 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:03.896 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:03.896 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:03.896 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:03.897 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:03.897 - INFO - ${clean_out} = applying
20190402 07:00:03.897 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:00:03.897 - INFO - ${output} = applying
20190402 07:00:03.897 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:00:03.897 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:03.897 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:03.899 - INFO - echo $?
20190402 07:00:03.899 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:00:03.899 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:03.906 - INFO - 0
20190402 07:00:03.906 - INFO - ${rc} = 0
20190402 07:00:03.906 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 07:00:03.906 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:03.906 - INFO - 0
20190402 07:00:03.907 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:00:03.907 - INFO - ${rc} = 0
20190402 07:00:03.907 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 07:00:03.907 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:03.907 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:03.908 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:03.908 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:03.908 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:03.908 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:03.908 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:03.908 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:03.908 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:03.908 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:03.909 - INFO - +------ END KW: Utils.Run Command (1240)
20190402 07:00:03.909 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:03.909 - INFO - ${value} = applying
20190402 07:00:03.909 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:03.909 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:03.909 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:03.909 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:03.910 - FAIL - applying != applied
20190402 07:00:03.910 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:03.910 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:00:03.910 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:03.910 - INFO - +----- END KW: Utils.Check System Application Status (1244)
20190402 07:00:08.911 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:08.912 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:08.913 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:08.913 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:08.914 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:08.915 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:08.916 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:08.916 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:08.916 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:08.917 - INFO - &{result_dict} = { stdout= }
20190402 07:00:08.917 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:00:08.917 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:08.917 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:08.917 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:08.917 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:08.918 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:08.918 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:00:08.918 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:08.918 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:08.918 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:08.918 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:08.927 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:08.927 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:00:08.927 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:10.393 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:10.394 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:10.394 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1467)
20190402 07:00:10.394 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:10.394 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:10.394 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:10.395 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:10.395 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:10.395 - INFO - ${clean_out} = applying
20190402 07:00:10.395 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:00:10.395 - INFO - ${output} = applying
20190402 07:00:10.395 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:00:10.395 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:10.395 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:10.396 - INFO - echo $?
20190402 07:00:10.396 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:00:10.397 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:10.402 - INFO - 0
20190402 07:00:10.402 - INFO - ${rc} = 0
20190402 07:00:10.402 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:00:10.402 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:10.402 - INFO - 0
20190402 07:00:10.403 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:00:10.403 - INFO - ${rc} = 0
20190402 07:00:10.403 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:00:10.403 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:10.403 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:10.404 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:10.404 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:10.404 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:10.404 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:10.404 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:10.404 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:10.404 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:10.405 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:10.405 - INFO - +------ END KW: Utils.Run Command (1491)
20190402 07:00:10.405 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:10.405 - INFO - ${value} = applying
20190402 07:00:10.405 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:10.405 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:10.405 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:10.406 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:10.406 - FAIL - applying != applied
20190402 07:00:10.406 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:10.406 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:00:10.406 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:10.406 - INFO - +----- END KW: Utils.Check System Application Status (1495)
20190402 07:00:15.407 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:15.408 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:15.409 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:15.409 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:15.409 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:15.411 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:15.412 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:15.412 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:15.412 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:15.412 - INFO - &{result_dict} = { stdout= }
20190402 07:00:15.413 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:00:15.413 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:15.413 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:15.413 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:15.413 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:15.414 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:15.414 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:00:15.414 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:15.414 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:15.414 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:15.414 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:15.420 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:15.420 - INFO - +------- END KW: SSHLibrary.Write (6)
20190402 07:00:15.420 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:16.924 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:16.924 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:16.924 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1504)
20190402 07:00:16.924 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:16.925 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:16.925 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:16.925 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:16.925 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:16.925 - INFO - ${clean_out} = applying
20190402 07:00:16.925 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:00:16.925 - INFO - ${output} = applying
20190402 07:00:16.926 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:00:16.926 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:16.926 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:16.927 - INFO - echo $?
20190402 07:00:16.927 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:00:16.927 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:16.930 - INFO - 0
20190402 07:00:16.930 - INFO - ${rc} = 0
20190402 07:00:16.930 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:00:16.930 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:16.930 - INFO - 0
20190402 07:00:16.931 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:00:16.931 - INFO - ${rc} = 0
20190402 07:00:16.931 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:00:16.931 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:16.931 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:16.931 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:16.932 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:00:16.932 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:16.932 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:16.932 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:16.932 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:16.932 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:16.932 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:16.932 - INFO - +------ END KW: Utils.Run Command (1523)
20190402 07:00:16.933 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:16.933 - INFO - ${value} = applying
20190402 07:00:16.933 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:16.933 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:16.933 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:16.933 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:16.933 - FAIL - applying != applied
20190402 07:00:16.934 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:16.934 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:00:16.934 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:16.934 - INFO - +----- END KW: Utils.Check System Application Status (1527)
20190402 07:00:21.935 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:21.936 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:21.937 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:21.937 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:21.937 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:21.939 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:21.940 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:21.940 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:21.941 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:21.942 - INFO - &{result_dict} = { stdout= }
20190402 07:00:21.943 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:00:21.943 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:21.944 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:21.944 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:21.945 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:21.946 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:21.946 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:00:21.946 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:21.947 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:21.947 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:00:21.947 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:21.971 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:21.971 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 07:00:21.971 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:23.844 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:23.844 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:23.844 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1873)
20190402 07:00:23.844 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:23.845 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:23.845 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:23.845 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:23.845 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:23.846 - INFO - ${clean_out} = applying
20190402 07:00:23.846 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:00:23.846 - INFO - ${output} = applying
20190402 07:00:23.846 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:00:23.846 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:23.846 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:23.848 - INFO - echo $?
20190402 07:00:23.848 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:00:23.848 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:23.852 - INFO - 0
20190402 07:00:23.852 - INFO - ${rc} = 0
20190402 07:00:23.853 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:00:23.853 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:23.853 - INFO - 0
20190402 07:00:23.853 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:00:23.853 - INFO - ${rc} = 0
20190402 07:00:23.853 - INFO - +------- END KW: Utils.Get Return Code (7)
20190402 07:00:23.853 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:23.853 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:23.854 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:23.854 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:23.854 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:23.854 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:23.854 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:23.854 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:23.854 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:23.855 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:23.855 - INFO - +------ END KW: Utils.Run Command (1918)
20190402 07:00:23.855 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:23.855 - INFO - ${value} = applying
20190402 07:00:23.855 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:23.855 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:23.855 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:23.856 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:23.856 - FAIL - applying != applied
20190402 07:00:23.856 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:23.856 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:00:23.856 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:23.856 - INFO - +----- END KW: Utils.Check System Application Status (1922)
20190402 07:00:28.857 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:28.858 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:28.859 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:28.859 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:28.860 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:28.861 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:28.862 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:28.862 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:28.862 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:28.862 - INFO - &{result_dict} = { stdout= }
20190402 07:00:28.863 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:00:28.863 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:28.863 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:28.863 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:28.863 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:28.863 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:28.863 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:00:28.864 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:28.864 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:28.864 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:28.864 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:28.872 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:28.872 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:00:28.872 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:30.468 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:30.468 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:30.468 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1596)
20190402 07:00:30.468 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:30.469 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:30.469 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:30.469 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:30.469 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:30.469 - INFO - ${clean_out} = applying
20190402 07:00:30.469 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:00:30.469 - INFO - ${output} = applying
20190402 07:00:30.470 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:00:30.470 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:30.470 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:30.471 - INFO - echo $?
20190402 07:00:30.471 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:00:30.472 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:30.472 - INFO - 0
20190402 07:00:30.472 - INFO - ${rc} = 0
20190402 07:00:30.472 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:00:30.472 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:30.472 - INFO - 0
20190402 07:00:30.472 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:00:30.472 - INFO - ${rc} = 0
20190402 07:00:30.472 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:00:30.472 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:30.473 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:30.473 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:30.473 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:30.473 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:30.473 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:30.474 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:30.474 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:30.474 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:30.474 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:30.474 - INFO - +------ END KW: Utils.Run Command (1614)
20190402 07:00:30.474 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:30.474 - INFO - ${value} = applying
20190402 07:00:30.474 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:30.475 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:30.475 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:30.475 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:30.475 - FAIL - applying != applied
20190402 07:00:30.475 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:30.475 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:00:30.475 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:00:30.475 - INFO - +----- END KW: Utils.Check System Application Status (1618)
20190402 07:00:35.476 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:35.477 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:35.478 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:35.478 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:35.478 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:35.480 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:35.480 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:35.481 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:35.481 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:35.482 - INFO - &{result_dict} = { stdout= }
20190402 07:00:35.483 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:00:35.483 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:35.484 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:35.484 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:35.485 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:35.486 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:35.486 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:00:35.486 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:35.486 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:35.487 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:00:35.487 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:35.510 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:35.510 - INFO - +------- END KW: SSHLibrary.Write (23)
20190402 07:00:35.511 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:37.145 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:37.145 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:37.145 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1634)
20190402 07:00:37.145 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:37.145 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:37.146 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:37.146 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:00:37.146 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:37.146 - INFO - ${clean_out} = applying
20190402 07:00:37.146 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:00:37.146 - INFO - ${output} = applying
20190402 07:00:37.146 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:00:37.146 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:37.147 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:37.148 - INFO - echo $?
20190402 07:00:37.148 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:00:37.149 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:37.156 - INFO - 0
20190402 07:00:37.156 - INFO - ${rc} = 0
20190402 07:00:37.156 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 07:00:37.156 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:37.156 - INFO - 0
20190402 07:00:37.156 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:00:37.157 - INFO - ${rc} = 0
20190402 07:00:37.157 - INFO - +------- END KW: Utils.Get Return Code (11)
20190402 07:00:37.157 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:37.157 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:37.158 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:37.158 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:37.158 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:37.158 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:37.158 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:37.158 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:37.158 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:37.158 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:37.159 - INFO - +------ END KW: Utils.Run Command (1680)
20190402 07:00:37.159 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:37.159 - INFO - ${value} = applying
20190402 07:00:37.159 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:37.159 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:37.159 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:37.159 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:37.160 - FAIL - applying != applied
20190402 07:00:37.160 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:37.160 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:00:37.160 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:37.160 - INFO - +----- END KW: Utils.Check System Application Status (1684)
20190402 07:00:42.161 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:42.162 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:42.163 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:42.163 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:42.164 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:42.165 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:42.166 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:00:42.166 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:42.166 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:42.166 - INFO - &{result_dict} = { stdout= }
20190402 07:00:42.167 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:00:42.167 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:42.167 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:42.167 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:42.167 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:42.167 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:42.167 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:00:42.168 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:42.168 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:42.168 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:42.168 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:42.177 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:42.177 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:00:42.178 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:43.872 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:43.872 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:43.873 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1694)
20190402 07:00:43.873 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:43.873 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:43.873 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:43.873 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:43.873 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:43.874 - INFO - ${clean_out} = applying
20190402 07:00:43.874 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:00:43.874 - INFO - ${output} = applying
20190402 07:00:43.874 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:00:43.874 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:43.874 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:43.875 - INFO - echo $?
20190402 07:00:43.875 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:00:43.876 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:43.883 - INFO - 0
20190402 07:00:43.883 - INFO - ${rc} = 0
20190402 07:00:43.883 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 07:00:43.883 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:43.883 - INFO - 0
20190402 07:00:43.883 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:00:43.883 - INFO - ${rc} = 0
20190402 07:00:43.883 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:00:43.884 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:43.884 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:43.884 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:43.884 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:00:43.885 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:43.885 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:43.885 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:43.885 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:43.885 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:43.885 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:43.885 - INFO - +------ END KW: Utils.Run Command (1721)
20190402 07:00:43.885 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:43.886 - INFO - ${value} = applying
20190402 07:00:43.886 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:00:43.886 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:43.886 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:43.886 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:43.886 - FAIL - applying != applied
20190402 07:00:43.886 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:43.886 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:00:43.886 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:00:43.887 - INFO - +----- END KW: Utils.Check System Application Status (1727)
20190402 07:00:48.887 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:48.887 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:48.888 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:48.888 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:00:48.888 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:48.888 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:48.888 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:00:48.888 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:48.889 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:48.889 - INFO - &{result_dict} = { stdout= }
20190402 07:00:48.889 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:00:48.889 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:48.889 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:48.890 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:48.890 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:48.890 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:48.890 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:00:48.890 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:48.890 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:48.890 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:48.890 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:48.899 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:48.899 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:00:48.899 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:50.671 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:50.671 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:50.672 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1773)
20190402 07:00:50.672 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:50.672 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:50.672 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:50.672 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:50.672 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:50.673 - INFO - ${clean_out} = applying
20190402 07:00:50.673 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:00:50.673 - INFO - ${output} = applying
20190402 07:00:50.673 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:00:50.673 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:50.673 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:50.675 - INFO - echo $?
20190402 07:00:50.675 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:00:50.675 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:50.680 - INFO - 0
20190402 07:00:50.680 - INFO - ${rc} = 0
20190402 07:00:50.680 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:00:50.681 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:50.681 - INFO - 0
20190402 07:00:50.681 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:00:50.681 - INFO - ${rc} = 0
20190402 07:00:50.681 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:00:50.681 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:50.681 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:50.682 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:50.682 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:50.682 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:50.682 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:50.682 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:50.682 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:50.682 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:50.683 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:50.683 - INFO - +------ END KW: Utils.Run Command (1795)
20190402 07:00:50.683 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:50.683 - INFO - ${value} = applying
20190402 07:00:50.683 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:00:50.683 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:50.684 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:50.684 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:50.684 - FAIL - applying != applied
20190402 07:00:50.684 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:50.684 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:00:50.684 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:50.684 - INFO - +----- END KW: Utils.Check System Application Status (1797)
20190402 07:00:55.684 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:00:55.685 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:00:55.685 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:00:55.685 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:00:55.685 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:00:55.686 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:00:55.686 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:00:55.686 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:00:55.686 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:00:55.687 - INFO - &{result_dict} = { stdout= }
20190402 07:00:55.687 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:00:55.687 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:00:55.687 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:55.687 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:00:55.687 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:55.687 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:00:55.688 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:00:55.688 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:00:55.688 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:55.688 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:00:55.688 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:00:55.697 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:00:55.697 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:00:55.697 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:00:57.507 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:57.507 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:57.507 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1810)
20190402 07:00:57.507 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:00:57.508 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:00:57.508 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:00:57.508 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:00:57.508 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:00:57.508 - INFO - ${clean_out} = applying
20190402 07:00:57.508 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:00:57.508 - INFO - ${output} = applying
20190402 07:00:57.509 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:00:57.509 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:00:57.509 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:00:57.512 - INFO - echo $?
20190402 07:00:57.512 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:00:57.512 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:00:57.518 - INFO - 0
20190402 07:00:57.518 - INFO - ${rc} = 0
20190402 07:00:57.518 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:00:57.518 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:00:57.518 - INFO - 0
20190402 07:00:57.518 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:00:57.518 - INFO - ${rc} = 0
20190402 07:00:57.519 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:00:57.519 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:00:57.519 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:00:57.519 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:00:57.519 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:00:57.519 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:00:57.520 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:00:57.520 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:00:57.520 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:00:57.520 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:00:57.520 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:00:57.520 - INFO - +------ END KW: Utils.Run Command (1835)
20190402 07:00:57.520 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:00:57.521 - INFO - ${value} = applying
20190402 07:00:57.521 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:00:57.521 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:00:57.521 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:00:57.521 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:00:57.522 - FAIL - applying != applied
20190402 07:00:57.522 - DEBUG - Traceback (most recent call last):
  None
20190402 07:00:57.522 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:00:57.522 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:00:57.522 - INFO - +----- END KW: Utils.Check System Application Status (1838)
20190402 07:01:02.522 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:02.523 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:02.523 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:02.523 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:01:02.523 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:02.523 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:02.524 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:01:02.524 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:02.524 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:02.524 - INFO - &{result_dict} = { stdout= }
20190402 07:01:02.524 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:01:02.524 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:02.525 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:02.525 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:02.525 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:02.525 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:02.525 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:01:02.525 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:02.525 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:02.526 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:01:02.526 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:02.534 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:02.534 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:01:02.534 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:04.112 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:04.112 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:04.112 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1578)
20190402 07:01:04.113 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:04.113 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:04.113 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:04.113 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:04.113 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:04.113 - INFO - ${clean_out} = applying
20190402 07:01:04.114 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:01:04.114 - INFO - ${output} = applying
20190402 07:01:04.114 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:01:04.114 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:04.114 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:04.116 - INFO - echo $?
20190402 07:01:04.116 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:04.116 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:04.122 - INFO - 0
20190402 07:01:04.123 - INFO - ${rc} = 0
20190402 07:01:04.123 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 07:01:04.123 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:04.123 - INFO - 0
20190402 07:01:04.123 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:04.123 - INFO - ${rc} = 0
20190402 07:01:04.123 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:01:04.123 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:04.124 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:04.124 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:04.124 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:04.124 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:04.125 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:04.125 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:04.125 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:04.125 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:04.125 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:04.125 - INFO - +------ END KW: Utils.Run Command (1602)
20190402 07:01:04.125 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:04.125 - INFO - ${value} = applying
20190402 07:01:04.125 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:04.126 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:04.126 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:04.126 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:04.126 - FAIL - applying != applied
20190402 07:01:04.126 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:04.126 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:04.126 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:01:04.127 - INFO - +----- END KW: Utils.Check System Application Status (1605)
20190402 07:01:09.127 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:09.127 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:09.128 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:09.128 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:09.128 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:09.128 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:09.128 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:01:09.129 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:09.129 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:09.129 - INFO - &{result_dict} = { stdout= }
20190402 07:01:09.129 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:01:09.129 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:09.130 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:09.130 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:09.130 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:09.130 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:09.130 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:01:09.130 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:09.130 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:09.130 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:09.131 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:09.139 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:09.140 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:01:09.140 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:10.935 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:10.935 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:10.935 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1795)
20190402 07:01:10.935 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:10.936 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:10.936 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:10.936 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:10.936 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:10.936 - INFO - ${clean_out} = applying
20190402 07:01:10.936 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:01:10.936 - INFO - ${output} = applying
20190402 07:01:10.936 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:10.937 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:10.937 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:10.938 - INFO - echo $?
20190402 07:01:10.938 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:01:10.938 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:10.946 - INFO - 0
20190402 07:01:10.946 - INFO - ${rc} = 0
20190402 07:01:10.946 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (8)
20190402 07:01:10.947 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:10.947 - INFO - 0
20190402 07:01:10.947 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:10.947 - INFO - ${rc} = 0
20190402 07:01:10.947 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 07:01:10.947 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:10.948 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:10.948 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:10.948 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:10.948 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:10.948 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:10.948 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:10.948 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:10.949 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:01:10.949 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:10.949 - INFO - +------ END KW: Utils.Run Command (1821)
20190402 07:01:10.949 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:10.949 - INFO - ${value} = applying
20190402 07:01:10.949 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:10.949 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:10.950 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:10.950 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:10.950 - FAIL - applying != applied
20190402 07:01:10.950 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:10.950 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:10.950 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:10.951 - INFO - +----- END KW: Utils.Check System Application Status (1824)
20190402 07:01:15.951 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:15.951 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:15.952 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:15.952 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:15.952 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:15.952 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:15.952 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:01:15.952 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:15.953 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:15.953 - INFO - &{result_dict} = { stdout= }
20190402 07:01:15.953 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:01:15.953 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:15.953 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:15.954 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:15.954 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:15.954 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:15.954 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:01:15.954 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:15.954 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:15.954 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:15.955 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:15.962 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:15.962 - INFO - +------- END KW: SSHLibrary.Write (7)
20190402 07:01:15.962 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:17.726 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:17.726 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:17.726 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1764)
20190402 07:01:17.726 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:17.726 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:17.727 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:17.727 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:01:17.727 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:17.727 - INFO - ${clean_out} = applying
20190402 07:01:17.727 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:01:17.727 - INFO - ${output} = applying
20190402 07:01:17.727 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:17.727 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:17.728 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:17.730 - INFO - echo $?
20190402 07:01:17.730 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:17.730 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:17.736 - INFO - 0
20190402 07:01:17.736 - INFO - ${rc} = 0
20190402 07:01:17.736 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:01:17.736 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:17.737 - INFO - 0
20190402 07:01:17.737 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:01:17.737 - INFO - ${rc} = 0
20190402 07:01:17.737 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 07:01:17.737 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:17.737 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:17.738 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:17.738 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:17.738 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:17.738 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:17.738 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:17.738 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:17.738 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:17.739 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:17.739 - INFO - +------ END KW: Utils.Run Command (1787)
20190402 07:01:17.739 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:17.739 - INFO - ${value} = applying
20190402 07:01:17.739 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:17.739 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:17.739 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:17.740 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:17.740 - FAIL - applying != applied
20190402 07:01:17.740 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:17.740 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:01:17.740 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:17.740 - INFO - +----- END KW: Utils.Check System Application Status (1789)
20190402 07:01:22.740 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:22.741 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:22.741 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:22.741 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:01:22.741 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:22.742 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:22.742 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:01:22.742 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:22.742 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:22.743 - INFO - &{result_dict} = { stdout= }
20190402 07:01:22.743 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:01:22.743 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:22.743 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:22.743 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:22.743 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:22.744 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:22.744 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:01:22.744 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:22.744 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:22.744 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:22.744 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:22.754 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:22.755 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:01:22.755 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:24.775 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:24.776 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:24.776 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2021)
20190402 07:01:24.776 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:24.776 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:24.776 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:24.776 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:24.776 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:24.777 - INFO - ${clean_out} = applying
20190402 07:01:24.777 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:01:24.777 - INFO - ${output} = applying
20190402 07:01:24.777 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:24.777 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:24.777 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:24.779 - INFO - echo $?
20190402 07:01:24.779 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:24.779 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:24.785 - INFO - 0
20190402 07:01:24.785 - INFO - ${rc} = 0
20190402 07:01:24.785 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:01:24.785 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:24.785 - INFO - 0
20190402 07:01:24.785 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:24.785 - INFO - ${rc} = 0
20190402 07:01:24.786 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:01:24.786 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:24.786 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:24.786 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:24.786 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:01:24.786 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:24.787 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:24.787 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:24.787 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:24.787 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:24.787 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:24.787 - INFO - +------ END KW: Utils.Run Command (2046)
20190402 07:01:24.787 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:24.788 - INFO - ${value} = applying
20190402 07:01:24.788 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:01:24.788 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:24.788 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:24.788 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:24.788 - FAIL - applying != applied
20190402 07:01:24.788 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:24.788 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:24.788 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:01:24.789 - INFO - +----- END KW: Utils.Check System Application Status (2049)
20190402 07:01:29.789 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:29.790 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:29.791 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:29.791 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:29.792 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:29.793 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:29.794 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:01:29.794 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:29.794 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:29.795 - INFO - &{result_dict} = { stdout= }
20190402 07:01:29.795 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:01:29.795 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:29.795 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:29.795 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:29.795 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:29.796 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:29.796 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:01:29.796 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:29.796 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:29.796 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:29.796 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:29.805 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:29.806 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:01:29.806 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:31.651 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:31.652 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:31.652 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1846)
20190402 07:01:31.652 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:31.652 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:31.652 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:31.653 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:31.653 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:31.653 - INFO - ${clean_out} = applying
20190402 07:01:31.653 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:01:31.653 - INFO - ${output} = applying
20190402 07:01:31.653 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:31.653 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:31.653 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:31.655 - INFO - echo $?
20190402 07:01:31.655 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:31.655 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:31.663 - INFO - 0
20190402 07:01:31.664 - INFO - ${rc} = 0
20190402 07:01:31.664 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (9)
20190402 07:01:31.664 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:31.664 - INFO - 0
20190402 07:01:31.664 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:31.664 - INFO - ${rc} = 0
20190402 07:01:31.664 - INFO - +------- END KW: Utils.Get Return Code (11)
20190402 07:01:31.664 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:31.665 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:31.665 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:31.665 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:31.665 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:31.665 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:31.665 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:31.666 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:31.666 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:01:31.666 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:31.666 - INFO - +------ END KW: Utils.Run Command (1874)
20190402 07:01:31.666 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:31.666 - INFO - ${value} = applying
20190402 07:01:31.666 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:31.666 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:31.667 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:31.667 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:31.667 - FAIL - applying != applied
20190402 07:01:31.667 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:31.667 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:31.667 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:31.667 - INFO - +----- END KW: Utils.Check System Application Status (1878)
20190402 07:01:36.668 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:36.669 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:36.670 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:36.670 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:36.671 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:36.672 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:36.672 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:01:36.673 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:36.673 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:36.675 - INFO - &{result_dict} = { stdout= }
20190402 07:01:36.675 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:01:36.675 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:36.676 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:36.676 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:36.677 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:36.678 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:36.678 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:01:36.678 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:36.678 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:36.679 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:36.679 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:36.692 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:36.693 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 07:01:36.693 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:38.354 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:38.354 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:38.354 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1661)
20190402 07:01:38.354 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:38.355 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:38.355 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:38.355 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:38.355 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:38.355 - INFO - ${clean_out} = applying
20190402 07:01:38.355 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:01:38.355 - INFO - ${output} = applying
20190402 07:01:38.355 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:38.355 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:38.356 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:38.358 - INFO - echo $?
20190402 07:01:38.358 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:38.358 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:38.362 - INFO - 0
20190402 07:01:38.362 - INFO - ${rc} = 0
20190402 07:01:38.362 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:01:38.362 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:38.362 - INFO - 0
20190402 07:01:38.362 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:38.362 - INFO - ${rc} = 0
20190402 07:01:38.362 - INFO - +------- END KW: Utils.Get Return Code (7)
20190402 07:01:38.363 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:38.363 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:38.363 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:38.363 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:01:38.364 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:38.364 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:38.364 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:38.364 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:38.364 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:38.364 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:38.364 - INFO - +------ END KW: Utils.Run Command (1694)
20190402 07:01:38.364 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:38.365 - INFO - ${value} = applying
20190402 07:01:38.365 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:01:38.365 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:38.365 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:38.365 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:38.365 - FAIL - applying != applied
20190402 07:01:38.365 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:38.365 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:38.365 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:01:38.366 - INFO - +----- END KW: Utils.Check System Application Status (1698)
20190402 07:01:43.366 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:43.368 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:43.369 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:43.369 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:43.369 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:43.371 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:43.371 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:01:43.372 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:43.373 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:43.374 - INFO - &{result_dict} = { stdout= }
20190402 07:01:43.374 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:01:43.374 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:43.375 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:43.376 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:43.377 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:43.378 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:43.378 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:01:43.379 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:43.379 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:43.379 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:43.380 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:43.406 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:43.406 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:01:43.406 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:45.175 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:45.175 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:45.175 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1769)
20190402 07:01:45.175 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:45.176 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:45.176 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:45.176 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:45.176 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:45.176 - INFO - ${clean_out} = applying
20190402 07:01:45.176 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:01:45.176 - INFO - ${output} = applying
20190402 07:01:45.176 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:45.176 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:45.177 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:45.179 - INFO - echo $?
20190402 07:01:45.179 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:45.179 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:45.187 - INFO - 0
20190402 07:01:45.187 - INFO - ${rc} = 0
20190402 07:01:45.187 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (8)
20190402 07:01:45.187 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:45.187 - INFO - 0
20190402 07:01:45.187 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:45.187 - INFO - ${rc} = 0
20190402 07:01:45.187 - INFO - +------- END KW: Utils.Get Return Code (11)
20190402 07:01:45.187 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:45.188 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:45.188 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:45.188 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:45.188 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:45.188 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:45.189 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:45.189 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:45.189 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:45.189 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:45.189 - INFO - +------ END KW: Utils.Run Command (1820)
20190402 07:01:45.189 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:45.189 - INFO - ${value} = applying
20190402 07:01:45.189 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:45.190 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:45.190 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:45.190 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:45.190 - FAIL - applying != applied
20190402 07:01:45.190 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:45.190 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:45.190 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:01:45.190 - INFO - +----- END KW: Utils.Check System Application Status (1824)
20190402 07:01:50.191 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:50.193 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:50.194 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:50.194 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:50.194 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:50.196 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:50.196 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:01:50.196 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:50.196 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:50.197 - INFO - &{result_dict} = { stdout= }
20190402 07:01:50.197 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:01:50.197 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:50.197 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:50.198 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:50.198 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:50.198 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:50.198 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:01:50.198 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:50.198 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:50.198 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:50.199 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:50.208 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:50.208 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:01:50.208 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:51.946 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:51.946 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:51.946 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1738)
20190402 07:01:51.946 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:51.947 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:51.947 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:51.947 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:51.947 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:51.948 - INFO - ${clean_out} = applying
20190402 07:01:51.948 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:01:51.948 - INFO - ${output} = applying
20190402 07:01:51.948 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:01:51.948 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:51.948 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:51.950 - INFO - echo $?
20190402 07:01:51.950 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:51.950 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:51.958 - INFO - 0
20190402 07:01:51.959 - INFO - ${rc} = 0
20190402 07:01:51.959 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (9)
20190402 07:01:51.959 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:51.959 - INFO - 0
20190402 07:01:51.959 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:51.959 - INFO - ${rc} = 0
20190402 07:01:51.959 - INFO - +------- END KW: Utils.Get Return Code (11)
20190402 07:01:51.959 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:51.960 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:51.960 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:51.960 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:51.960 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:51.960 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:51.961 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:51.961 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:51.961 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:51.961 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:51.961 - INFO - +------ END KW: Utils.Run Command (1767)
20190402 07:01:51.961 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:51.961 - INFO - ${value} = applying
20190402 07:01:51.961 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:51.962 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:51.962 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:51.962 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:51.962 - FAIL - applying != applied
20190402 07:01:51.962 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:51.962 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:51.962 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:51.962 - INFO - +----- END KW: Utils.Check System Application Status (1771)
20190402 07:01:56.963 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:01:56.964 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:01:56.965 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:01:56.966 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:01:56.966 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:01:56.967 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:01:56.968 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:01:56.969 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:01:56.969 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:01:56.971 - INFO - &{result_dict} = { stdout= }
20190402 07:01:56.971 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:01:56.971 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:01:56.972 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:01:56.973 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:01:56.974 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:56.974 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:01:56.975 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:01:56.975 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:01:56.975 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:56.976 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:01:56.976 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:01:57.001 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:01:57.001 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:01:57.001 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:01:58.894 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:58.894 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:58.894 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1893)
20190402 07:01:58.895 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:01:58.895 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:01:58.895 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:01:58.895 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:01:58.895 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:01:58.896 - INFO - ${clean_out} = applying
20190402 07:01:58.896 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:01:58.896 - INFO - ${output} = applying
20190402 07:01:58.896 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:01:58.896 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:01:58.896 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:01:58.898 - INFO - echo $?
20190402 07:01:58.898 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:01:58.898 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:01:58.904 - INFO - 0
20190402 07:01:58.904 - INFO - ${rc} = 0
20190402 07:01:58.904 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:01:58.904 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:01:58.904 - INFO - 0
20190402 07:01:58.904 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:01:58.904 - INFO - ${rc} = 0
20190402 07:01:58.904 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:01:58.904 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:01:58.905 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:01:58.905 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:58.905 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:58.905 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:01:58.905 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:01:58.906 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:01:58.906 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:01:58.906 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:01:58.906 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:01:58.906 - INFO - +------ END KW: Utils.Run Command (1940)
20190402 07:01:58.906 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:01:58.906 - INFO - ${value} = applying
20190402 07:01:58.906 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:01:58.906 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:01:58.907 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:01:58.907 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:01:58.907 - FAIL - applying != applied
20190402 07:01:58.907 - DEBUG - Traceback (most recent call last):
  None
20190402 07:01:58.907 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:01:58.907 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:01:58.907 - INFO - +----- END KW: Utils.Check System Application Status (1944)
20190402 07:02:03.908 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:03.908 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:03.908 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:03.908 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:02:03.908 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:03.909 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:03.909 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:02:03.909 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:03.909 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:03.910 - INFO - &{result_dict} = { stdout= }
20190402 07:02:03.910 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:02:03.910 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:03.910 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:03.910 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:03.910 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:03.911 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:03.911 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:02:03.911 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:03.911 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:03.911 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:03.911 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:03.914 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:03.914 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 07:02:03.915 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:05.616 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:05.616 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:05.616 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1701)
20190402 07:02:05.616 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:05.617 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:05.617 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:05.617 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:05.617 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:05.617 - INFO - ${clean_out} = applying
20190402 07:02:05.617 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:02:05.617 - INFO - ${output} = applying
20190402 07:02:05.617 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:05.617 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:05.618 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:05.638 - INFO - echo $?
20190402 07:02:05.639 - INFO - +-------- END KW: SSHLibrary.Write (21)
20190402 07:02:05.639 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:05.645 - INFO - 0
20190402 07:02:05.645 - INFO - ${rc} = 0
20190402 07:02:05.645 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:02:05.645 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:05.645 - INFO - 0
20190402 07:02:05.646 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:02:05.646 - INFO - ${rc} = 0
20190402 07:02:05.646 - INFO - +------- END KW: Utils.Get Return Code (29)
20190402 07:02:05.646 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:05.646 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:05.647 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:05.647 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:05.647 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:05.647 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:05.647 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:05.647 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:05.647 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:05.647 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:05.647 - INFO - +------ END KW: Utils.Run Command (1739)
20190402 07:02:05.648 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:05.648 - INFO - ${value} = applying
20190402 07:02:05.648 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:02:05.648 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:05.648 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:05.648 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:05.649 - FAIL - applying != applied
20190402 07:02:05.649 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:05.649 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:02:05.649 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:05.649 - INFO - +----- END KW: Utils.Check System Application Status (1741)
20190402 07:02:10.649 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:10.651 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:10.652 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:10.652 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:10.652 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:10.653 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:10.654 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:02:10.654 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:10.655 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:10.656 - INFO - &{result_dict} = { stdout= }
20190402 07:02:10.656 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:02:10.657 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:10.658 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:10.658 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:10.659 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:10.659 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:10.660 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:02:10.660 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:10.660 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:10.660 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:10.661 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:10.685 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:10.685 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 07:02:10.685 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:12.571 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:12.571 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:12.571 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1886)
20190402 07:02:12.571 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:12.572 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:12.572 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:12.572 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:12.572 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:12.572 - INFO - ${clean_out} = applying
20190402 07:02:12.572 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:02:12.572 - INFO - ${output} = applying
20190402 07:02:12.572 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:12.573 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:12.573 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:12.577 - INFO - echo $?
20190402 07:02:12.577 - INFO - +-------- END KW: SSHLibrary.Write (4)
20190402 07:02:12.577 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:12.582 - INFO - 0
20190402 07:02:12.582 - INFO - ${rc} = 0
20190402 07:02:12.583 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:02:12.583 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:12.583 - INFO - 0
20190402 07:02:12.583 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:02:12.583 - INFO - ${rc} = 0
20190402 07:02:12.583 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 07:02:12.583 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:12.584 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:12.584 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:12.584 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:12.584 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:12.585 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:12.585 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:12.585 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:12.585 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:12.585 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:12.585 - INFO - +------ END KW: Utils.Run Command (1933)
20190402 07:02:12.585 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:12.585 - INFO - ${value} = applying
20190402 07:02:12.586 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:02:12.586 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:12.586 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:12.586 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:12.586 - FAIL - applying != applied
20190402 07:02:12.586 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:12.586 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:02:12.586 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:02:12.586 - INFO - +----- END KW: Utils.Check System Application Status (1937)
20190402 07:02:17.587 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:17.589 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:17.590 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:17.590 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:17.590 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:17.592 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:17.592 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:02:17.593 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:17.594 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:17.595 - INFO - &{result_dict} = { stdout= }
20190402 07:02:17.595 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:02:17.596 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:17.597 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:17.597 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:17.598 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:17.599 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:17.599 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:02:17.599 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:17.600 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:17.600 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:02:17.600 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:17.624 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:17.624 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 07:02:17.624 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:19.301 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:19.301 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:19.301 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1677)
20190402 07:02:19.301 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:19.301 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:19.302 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:19.302 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:02:19.302 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:19.302 - INFO - ${clean_out} = applying
20190402 07:02:19.302 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:02:19.302 - INFO - ${output} = applying
20190402 07:02:19.302 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:19.302 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:19.302 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:19.304 - INFO - echo $?
20190402 07:02:19.304 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:02:19.304 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:19.312 - INFO - 0
20190402 07:02:19.312 - INFO - ${rc} = 0
20190402 07:02:19.312 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (8)
20190402 07:02:19.312 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:19.312 - INFO - 0
20190402 07:02:19.312 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:02:19.313 - INFO - ${rc} = 0
20190402 07:02:19.313 - INFO - +------- END KW: Utils.Get Return Code (11)
20190402 07:02:19.313 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:19.313 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:19.313 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:19.313 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:02:19.313 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:19.314 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:19.314 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:19.314 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:19.314 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:19.314 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:19.314 - INFO - +------ END KW: Utils.Run Command (1724)
20190402 07:02:19.314 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:19.315 - INFO - ${value} = applying
20190402 07:02:19.315 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:02:19.315 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:19.315 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:19.315 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:19.315 - FAIL - applying != applied
20190402 07:02:19.315 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:19.316 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:02:19.316 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:19.316 - INFO - +----- END KW: Utils.Check System Application Status (1729)
20190402 07:02:24.316 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:24.318 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:24.319 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:24.319 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:24.319 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:24.320 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:24.321 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:02:24.321 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:24.321 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:24.322 - INFO - &{result_dict} = { stdout= }
20190402 07:02:24.322 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:02:24.322 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:24.322 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:24.322 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:24.322 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:24.323 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:24.323 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:02:24.323 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:24.323 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:24.323 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:24.323 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:24.331 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:24.331 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:02:24.332 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:26.348 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:26.348 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:26.348 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2016)
20190402 07:02:26.349 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:26.349 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:26.349 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:26.349 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:26.349 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:26.349 - INFO - ${clean_out} = applying
20190402 07:02:26.349 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:02:26.350 - INFO - ${output} = applying
20190402 07:02:26.350 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:26.350 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:26.350 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:26.351 - INFO - echo $?
20190402 07:02:26.351 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:02:26.352 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:26.360 - INFO - 0
20190402 07:02:26.360 - INFO - ${rc} = 0
20190402 07:02:26.360 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (8)
20190402 07:02:26.360 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:26.360 - INFO - 0
20190402 07:02:26.360 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:02:26.360 - INFO - ${rc} = 0
20190402 07:02:26.360 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 07:02:26.361 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:26.361 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:26.361 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:26.361 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:02:26.361 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:26.362 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:26.362 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:26.362 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:26.362 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:26.362 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:26.362 - INFO - +------ END KW: Utils.Run Command (2043)
20190402 07:02:26.362 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:26.362 - INFO - ${value} = applying
20190402 07:02:26.363 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:02:26.363 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:26.363 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:26.363 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:26.363 - FAIL - applying != applied
20190402 07:02:26.363 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:26.363 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:02:26.364 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:26.364 - INFO - +----- END KW: Utils.Check System Application Status (2048)
20190402 07:02:31.364 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:31.366 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:31.367 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:31.367 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:31.367 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:31.369 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:31.369 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:02:31.369 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:31.369 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:31.370 - INFO - &{result_dict} = { stdout= }
20190402 07:02:31.370 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:02:31.370 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:31.370 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:31.370 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:31.370 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:31.371 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:31.371 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:02:31.371 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:31.371 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:31.371 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:31.371 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:31.380 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:31.381 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:02:31.381 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:33.165 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:33.166 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:33.166 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1785)
20190402 07:02:33.166 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:33.166 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:33.166 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:33.166 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:33.166 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:33.167 - INFO - ${clean_out} = applying
20190402 07:02:33.167 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:02:33.167 - INFO - ${output} = applying
20190402 07:02:33.167 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:33.167 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:33.167 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:33.169 - INFO - echo $?
20190402 07:02:33.169 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:02:33.169 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:33.171 - INFO - 0
20190402 07:02:33.171 - INFO - ${rc} = 0
20190402 07:02:33.171 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 07:02:33.171 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:33.171 - INFO - 0
20190402 07:02:33.172 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:02:33.172 - INFO - ${rc} = 0
20190402 07:02:33.172 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:02:33.172 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:33.172 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:33.173 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:33.173 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:33.173 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:33.173 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:33.173 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:33.173 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:33.173 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:33.174 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:33.174 - INFO - +------ END KW: Utils.Run Command (1807)
20190402 07:02:33.174 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:33.174 - INFO - ${value} = applying
20190402 07:02:33.174 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:02:33.174 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:33.174 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:33.175 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:33.175 - FAIL - applying != applied
20190402 07:02:33.175 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:33.175 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:02:33.175 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:33.175 - INFO - +----- END KW: Utils.Check System Application Status (1811)
20190402 07:02:38.176 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:38.177 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:38.178 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:38.178 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:38.179 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:38.180 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:38.181 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:02:38.181 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:38.181 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:38.181 - INFO - &{result_dict} = { stdout= }
20190402 07:02:38.182 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:02:38.182 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:38.182 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:38.182 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:38.182 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:38.182 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:38.182 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:02:38.183 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:38.183 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:38.183 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:38.183 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:38.191 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:38.192 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:02:38.192 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:40.164 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:40.164 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:40.164 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1972)
20190402 07:02:40.164 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:40.165 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:40.165 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:40.165 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:40.165 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:40.165 - INFO - ${clean_out} = applying
20190402 07:02:40.165 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:02:40.165 - INFO - ${output} = applying
20190402 07:02:40.165 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:40.166 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:40.166 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:40.167 - INFO - echo $?
20190402 07:02:40.167 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:02:40.167 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:40.172 - INFO - 0
20190402 07:02:40.172 - INFO - ${rc} = 0
20190402 07:02:40.172 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:02:40.172 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:40.172 - INFO - 0
20190402 07:02:40.172 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:02:40.173 - INFO - ${rc} = 0
20190402 07:02:40.173 - INFO - +------- END KW: Utils.Get Return Code (7)
20190402 07:02:40.173 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:40.173 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:40.173 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:40.174 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:02:40.174 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:40.174 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:40.174 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:40.174 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:40.174 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:40.174 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:40.174 - INFO - +------ END KW: Utils.Run Command (1995)
20190402 07:02:40.175 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:40.175 - INFO - ${value} = applying
20190402 07:02:40.175 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:02:40.175 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:40.175 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:40.175 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:40.175 - FAIL - applying != applied
20190402 07:02:40.175 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:40.175 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:02:40.176 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:40.176 - INFO - +----- END KW: Utils.Check System Application Status (2000)
20190402 07:02:45.177 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:45.178 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:45.179 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:45.179 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:45.180 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:45.181 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:45.182 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:02:45.182 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:45.182 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:45.182 - INFO - &{result_dict} = { stdout= }
20190402 07:02:45.183 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:02:45.183 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:45.183 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:45.183 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:45.183 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:45.183 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:45.183 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:02:45.184 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:45.184 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:45.184 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:45.184 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:45.194 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:45.194 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:02:45.194 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:47.586 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:47.586 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:47.586 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2392)
20190402 07:02:47.586 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:47.587 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:47.587 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:47.587 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:47.587 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:47.587 - INFO - ${clean_out} = applying
20190402 07:02:47.587 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:02:47.587 - INFO - ${output} = applying
20190402 07:02:47.587 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:47.587 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:47.588 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:47.589 - INFO - echo $?
20190402 07:02:47.589 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:02:47.589 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:47.592 - INFO - 0
20190402 07:02:47.593 - INFO - ${rc} = 0
20190402 07:02:47.593 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:02:47.593 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:47.593 - INFO - 0
20190402 07:02:47.593 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:02:47.593 - INFO - ${rc} = 0
20190402 07:02:47.593 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 07:02:47.593 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:47.594 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:47.594 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:47.594 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:47.594 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:47.594 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:47.595 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:47.595 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:47.595 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:02:47.595 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:47.595 - INFO - +------ END KW: Utils.Run Command (2415)
20190402 07:02:47.595 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:47.595 - INFO - ${value} = applying
20190402 07:02:47.595 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:02:47.595 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:47.596 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:47.596 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:47.596 - FAIL - applying != applied
20190402 07:02:47.596 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:47.596 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:02:47.596 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:47.596 - INFO - +----- END KW: Utils.Check System Application Status (2419)
20190402 07:02:52.597 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:52.597 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:52.598 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:52.598 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:02:52.598 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:52.598 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:52.598 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:02:52.598 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:52.599 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:52.599 - INFO - &{result_dict} = { stdout= }
20190402 07:02:52.599 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:02:52.599 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:52.599 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:52.600 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:52.600 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:52.600 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:52.600 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:02:52.600 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:52.600 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:52.600 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:02:52.600 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:52.612 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:52.612 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 07:02:52.612 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:02:54.892 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:54.892 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:54.893 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2280)
20190402 07:02:54.893 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:02:54.893 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:02:54.893 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:54.893 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:02:54.893 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:02:54.894 - INFO - ${clean_out} = applying
20190402 07:02:54.894 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:02:54.894 - INFO - ${output} = applying
20190402 07:02:54.894 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:02:54.894 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:02:54.894 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:02:54.896 - INFO - echo $?
20190402 07:02:54.896 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:02:54.896 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:02:54.901 - INFO - 0
20190402 07:02:54.901 - INFO - ${rc} = 0
20190402 07:02:54.902 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:02:54.902 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:02:54.902 - INFO - 0
20190402 07:02:54.902 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:02:54.902 - INFO - ${rc} = 0
20190402 07:02:54.902 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:02:54.902 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:02:54.903 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:02:54.903 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:54.903 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:54.903 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:02:54.903 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:54.903 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:02:54.903 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:02:54.904 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:02:54.904 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:02:54.904 - INFO - +------ END KW: Utils.Run Command (2306)
20190402 07:02:54.904 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:02:54.904 - INFO - ${value} = applying
20190402 07:02:54.904 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:02:54.904 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:02:54.905 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:02:54.905 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:02:54.905 - FAIL - applying != applied
20190402 07:02:54.905 - DEBUG - Traceback (most recent call last):
  None
20190402 07:02:54.905 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:02:54.905 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:02:54.905 - INFO - +----- END KW: Utils.Check System Application Status (2308)
20190402 07:02:59.905 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:02:59.906 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:02:59.906 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:02:59.906 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:02:59.906 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:02:59.907 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:02:59.907 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:02:59.907 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:02:59.908 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:02:59.908 - INFO - &{result_dict} = { stdout= }
20190402 07:02:59.908 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:02:59.908 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:02:59.909 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:02:59.909 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:02:59.909 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:02:59.909 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:02:59.909 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:02:59.909 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:02:59.910 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:02:59.910 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:02:59.910 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:02:59.918 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:02:59.919 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:02:59.919 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:01.910 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:01.910 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:01.911 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1992)
20190402 07:03:01.911 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:01.911 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:01.911 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:01.912 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:03:01.912 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:01.912 - INFO - ${clean_out} = applying
20190402 07:03:01.912 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:03:01.912 - INFO - ${output} = applying
20190402 07:03:01.912 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:01.912 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:01.913 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:01.915 - INFO - echo $?
20190402 07:03:01.915 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:03:01.915 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:01.919 - INFO - 0
20190402 07:03:01.919 - INFO - ${rc} = 0
20190402 07:03:01.919 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:03:01.919 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:01.919 - INFO - 0
20190402 07:03:01.920 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:03:01.920 - INFO - ${rc} = 0
20190402 07:03:01.920 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:03:01.920 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:01.920 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:01.921 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:01.921 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:01.921 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:01.921 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:01.921 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:01.921 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:01.921 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:01.922 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:01.922 - INFO - +------ END KW: Utils.Run Command (2016)
20190402 07:03:01.922 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:01.922 - INFO - ${value} = applying
20190402 07:03:01.922 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:01.922 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:01.922 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:01.923 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:01.923 - FAIL - applying != applied
20190402 07:03:01.923 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:01.923 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:01.923 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:01.923 - INFO - +----- END KW: Utils.Check System Application Status (2018)
20190402 07:03:06.923 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:06.924 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:06.924 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:06.924 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:03:06.924 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:06.925 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:06.925 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:03:06.925 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:06.926 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:06.926 - INFO - &{result_dict} = { stdout= }
20190402 07:03:06.926 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:06.926 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:06.927 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:06.927 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:06.927 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:06.927 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:06.927 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:03:06.927 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:06.927 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:06.927 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:06.928 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:06.938 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:06.938 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:03:06.938 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:08.468 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:08.469 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:08.469 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1531)
20190402 07:03:08.469 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:08.469 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:08.469 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:08.469 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:08.470 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:08.470 - INFO - ${clean_out} = applying
20190402 07:03:08.470 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:03:08.470 - INFO - ${output} = applying
20190402 07:03:08.470 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:08.470 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:08.470 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:08.477 - INFO - echo $?
20190402 07:03:08.477 - INFO - +-------- END KW: SSHLibrary.Write (7)
20190402 07:03:08.477 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:08.483 - INFO - 0
20190402 07:03:08.483 - INFO - ${rc} = 0
20190402 07:03:08.483 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:03:08.483 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:08.483 - INFO - 0
20190402 07:03:08.483 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:08.484 - INFO - ${rc} = 0
20190402 07:03:08.484 - INFO - +------- END KW: Utils.Get Return Code (14)
20190402 07:03:08.484 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:08.484 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:08.485 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:08.485 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:08.485 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:08.485 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:08.485 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:08.485 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:08.485 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:08.485 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:08.486 - INFO - +------ END KW: Utils.Run Command (1561)
20190402 07:03:08.486 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:08.486 - INFO - ${value} = applying
20190402 07:03:08.486 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:08.486 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:08.486 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:08.486 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:08.487 - FAIL - applying != applied
20190402 07:03:08.487 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:08.487 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:08.487 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:08.487 - INFO - +----- END KW: Utils.Check System Application Status (1564)
20190402 07:03:13.488 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:13.489 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:13.489 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:13.490 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:13.490 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:13.491 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:13.492 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:03:13.492 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:13.493 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:13.493 - INFO - &{result_dict} = { stdout= }
20190402 07:03:13.493 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:03:13.493 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:13.494 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:13.494 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:13.494 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:13.495 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:13.495 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:03:13.495 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:13.495 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:13.495 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:13.495 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:13.503 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:13.503 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:03:13.503 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:15.125 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:15.126 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:15.126 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1623)
20190402 07:03:15.126 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:15.126 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:15.126 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:15.126 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:15.126 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:15.127 - INFO - ${clean_out} = applying
20190402 07:03:15.127 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:03:15.127 - INFO - ${output} = applying
20190402 07:03:15.127 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:15.127 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:15.127 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:15.129 - INFO - echo $?
20190402 07:03:15.129 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:03:15.129 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:15.135 - INFO - 0
20190402 07:03:15.135 - INFO - ${rc} = 0
20190402 07:03:15.135 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:03:15.136 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:15.136 - INFO - 0
20190402 07:03:15.136 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:15.136 - INFO - ${rc} = 0
20190402 07:03:15.136 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:03:15.136 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:15.136 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:15.137 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:15.137 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:15.137 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:15.137 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:15.137 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:15.137 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:15.137 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:15.138 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:15.138 - INFO - +------ END KW: Utils.Run Command (1648)
20190402 07:03:15.138 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:15.138 - INFO - ${value} = applying
20190402 07:03:15.138 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:15.138 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:15.138 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:15.139 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:15.139 - FAIL - applying != applied
20190402 07:03:15.139 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:15.139 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:15.139 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:15.139 - INFO - +----- END KW: Utils.Check System Application Status (1652)
20190402 07:03:20.140 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:20.141 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:20.142 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:20.142 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:20.143 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:20.144 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:20.145 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:03:20.145 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:20.145 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:20.146 - INFO - &{result_dict} = { stdout= }
20190402 07:03:20.146 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:20.146 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:20.146 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:20.146 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:20.146 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:20.146 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:20.146 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:03:20.147 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:20.147 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:20.147 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:20.147 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:20.156 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:20.156 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:03:20.156 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:21.600 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:21.600 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:21.601 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1444)
20190402 07:03:21.601 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:21.601 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:21.601 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:21.601 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:21.602 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:21.602 - INFO - ${clean_out} = applying
20190402 07:03:21.602 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:03:21.602 - INFO - ${output} = applying
20190402 07:03:21.602 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:21.602 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:21.602 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:21.604 - INFO - echo $?
20190402 07:03:21.604 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:03:21.604 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:21.605 - INFO - 0
20190402 07:03:21.605 - INFO - ${rc} = 0
20190402 07:03:21.605 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:03:21.605 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:21.606 - INFO - 0
20190402 07:03:21.606 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:03:21.606 - INFO - ${rc} = 0
20190402 07:03:21.606 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:03:21.606 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:21.606 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:21.607 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:21.607 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:21.607 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:21.607 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:21.607 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:21.607 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:21.607 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:21.608 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:21.608 - INFO - +------ END KW: Utils.Run Command (1466)
20190402 07:03:21.608 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:21.608 - INFO - ${value} = applying
20190402 07:03:21.608 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:21.608 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:21.608 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:21.609 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:21.609 - FAIL - applying != applied
20190402 07:03:21.609 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:21.609 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:21.609 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:21.609 - INFO - +----- END KW: Utils.Check System Application Status (1469)
20190402 07:03:26.610 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:26.611 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:26.612 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:26.612 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:26.613 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:26.614 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:26.615 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:03:26.615 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:26.615 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:26.616 - INFO - &{result_dict} = { stdout= }
20190402 07:03:26.616 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:26.616 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:26.616 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:26.616 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:26.616 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:26.616 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:26.616 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:03:26.617 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:26.617 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:26.617 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:26.617 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:26.625 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:26.625 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:03:26.625 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:28.361 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:28.361 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:28.361 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1736)
20190402 07:03:28.361 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:28.362 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:28.362 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:28.362 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:28.362 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:28.362 - INFO - ${clean_out} = applying
20190402 07:03:28.362 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:03:28.363 - INFO - ${output} = applying
20190402 07:03:28.363 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:03:28.363 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:28.363 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:28.367 - INFO - echo $?
20190402 07:03:28.367 - INFO - +-------- END KW: SSHLibrary.Write (4)
20190402 07:03:28.367 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:28.378 - INFO - 0
20190402 07:03:28.378 - INFO - ${rc} = 0
20190402 07:03:28.378 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (11)
20190402 07:03:28.378 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:28.378 - INFO - 0
20190402 07:03:28.378 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:28.379 - INFO - ${rc} = 0
20190402 07:03:28.379 - INFO - +------- END KW: Utils.Get Return Code (16)
20190402 07:03:28.379 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:28.379 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:28.379 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:28.380 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:03:28.380 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:28.380 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:28.380 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:28.380 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:28.380 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:28.380 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:28.380 - INFO - +------ END KW: Utils.Run Command (1767)
20190402 07:03:28.381 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:28.381 - INFO - ${value} = applying
20190402 07:03:28.381 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:28.381 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:28.381 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:28.381 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:28.381 - FAIL - applying != applied
20190402 07:03:28.382 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:28.382 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:28.382 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:28.382 - INFO - +----- END KW: Utils.Check System Application Status (1773)
20190402 07:03:33.382 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:33.384 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:33.385 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:33.385 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:33.385 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:33.387 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:33.387 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:03:33.387 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:33.387 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:33.388 - INFO - &{result_dict} = { stdout= }
20190402 07:03:33.388 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:33.388 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:33.388 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:33.388 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:33.388 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:33.389 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:33.389 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:03:33.389 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:33.389 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:33.389 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:33.389 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:33.399 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:33.399 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:03:33.399 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:34.971 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:34.971 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:34.972 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1573)
20190402 07:03:34.972 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:34.972 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:34.972 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:34.972 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:34.972 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:34.973 - INFO - ${clean_out} = applying
20190402 07:03:34.973 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:03:34.973 - INFO - ${output} = applying
20190402 07:03:34.973 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:34.973 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:34.973 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:34.975 - INFO - echo $?
20190402 07:03:34.975 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:03:34.975 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:34.981 - INFO - 0
20190402 07:03:34.981 - INFO - ${rc} = 0
20190402 07:03:34.981 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:03:34.981 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:34.981 - INFO - 0
20190402 07:03:34.981 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:34.981 - INFO - ${rc} = 0
20190402 07:03:34.981 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:03:34.981 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:34.982 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:34.982 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:34.982 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:34.982 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:34.983 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:34.983 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:34.983 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:34.983 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:34.983 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:34.983 - INFO - +------ END KW: Utils.Run Command (1598)
20190402 07:03:34.983 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:34.983 - INFO - ${value} = applying
20190402 07:03:34.983 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:34.984 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:34.984 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:34.984 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:34.984 - FAIL - applying != applied
20190402 07:03:34.984 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:34.984 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:03:34.984 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:03:34.984 - INFO - +----- END KW: Utils.Check System Application Status (1602)
20190402 07:03:39.985 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:39.987 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:39.988 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:39.988 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:39.988 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:39.989 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:39.989 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:03:39.989 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:39.990 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:39.990 - INFO - &{result_dict} = { stdout= }
20190402 07:03:39.990 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:03:39.990 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:39.990 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:39.991 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:39.991 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:39.991 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:39.991 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:03:39.991 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:39.991 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:39.992 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:39.992 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:40.001 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:40.001 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:03:40.001 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:41.455 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:41.455 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:41.455 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1454)
20190402 07:03:41.455 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:41.456 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:41.456 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:41.456 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:41.456 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:41.456 - INFO - ${clean_out} = applying
20190402 07:03:41.456 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:03:41.456 - INFO - ${output} = applying
20190402 07:03:41.457 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:03:41.457 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:41.457 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:41.458 - INFO - echo $?
20190402 07:03:41.458 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:03:41.458 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:41.460 - INFO - 0
20190402 07:03:41.460 - INFO - ${rc} = 0
20190402 07:03:41.460 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 07:03:41.460 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:41.460 - INFO - 0
20190402 07:03:41.460 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:41.461 - INFO - ${rc} = 0
20190402 07:03:41.461 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:03:41.461 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:41.461 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:41.462 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:41.462 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:41.462 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:41.462 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:41.462 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:41.462 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:41.462 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:41.463 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:41.463 - INFO - +------ END KW: Utils.Run Command (1475)
20190402 07:03:41.463 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:41.463 - INFO - ${value} = applying
20190402 07:03:41.463 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:41.463 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:41.463 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:41.464 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:41.464 - FAIL - applying != applied
20190402 07:03:41.464 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:41.464 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:41.464 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:41.464 - INFO - +----- END KW: Utils.Check System Application Status (1479)
20190402 07:03:46.465 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:46.466 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:46.467 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:46.467 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:46.468 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:46.469 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:46.470 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:03:46.470 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:46.470 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:46.471 - INFO - &{result_dict} = { stdout= }
20190402 07:03:46.471 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:46.471 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:46.471 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:46.471 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:46.471 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:46.471 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:46.472 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:03:46.472 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:46.472 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:46.472 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:46.472 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:46.481 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:46.481 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:03:46.481 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:48.062 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:48.062 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:48.062 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1581)
20190402 07:03:48.062 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:48.063 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:48.063 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:48.063 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:03:48.063 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:48.063 - INFO - ${clean_out} = applying
20190402 07:03:48.063 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:03:48.063 - INFO - ${output} = applying
20190402 07:03:48.063 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:48.063 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:48.064 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:48.065 - INFO - echo $?
20190402 07:03:48.065 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:03:48.065 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:48.068 - INFO - 0
20190402 07:03:48.068 - INFO - ${rc} = 0
20190402 07:03:48.068 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:03:48.068 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:48.068 - INFO - 0
20190402 07:03:48.068 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:48.068 - INFO - ${rc} = 0
20190402 07:03:48.068 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:03:48.068 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:48.069 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:48.069 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:48.069 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:48.069 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:48.069 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:48.070 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:48.070 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:48.070 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:03:48.070 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:48.070 - INFO - +------ END KW: Utils.Run Command (1602)
20190402 07:03:48.070 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:48.071 - INFO - ${value} = applying
20190402 07:03:48.071 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:03:48.071 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:48.071 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:48.071 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:48.071 - FAIL - applying != applied
20190402 07:03:48.072 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:48.072 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:03:48.072 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:48.072 - INFO - +----- END KW: Utils.Check System Application Status (1607)
20190402 07:03:53.072 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:53.073 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:53.073 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:53.073 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:03:53.073 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:53.074 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:53.074 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:03:53.075 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:53.075 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:53.075 - INFO - &{result_dict} = { stdout= }
20190402 07:03:53.076 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:53.076 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:53.076 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:53.076 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:53.077 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:53.077 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:53.077 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:03:53.077 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:53.077 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:53.078 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:03:53.078 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:53.092 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:53.092 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 07:03:53.092 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:03:54.659 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:54.659 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:54.659 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1567)
20190402 07:03:54.659 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:03:54.659 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:03:54.660 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:54.660 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:03:54.660 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:03:54.660 - INFO - ${clean_out} = applying
20190402 07:03:54.660 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:03:54.660 - INFO - ${output} = applying
20190402 07:03:54.660 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:03:54.660 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:03:54.660 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:03:54.662 - INFO - echo $?
20190402 07:03:54.663 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:03:54.663 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:03:54.669 - INFO - 0
20190402 07:03:54.669 - INFO - ${rc} = 0
20190402 07:03:54.670 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:03:54.670 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:03:54.670 - INFO - 0
20190402 07:03:54.670 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:03:54.670 - INFO - ${rc} = 0
20190402 07:03:54.670 - INFO - +------- END KW: Utils.Get Return Code (10)
20190402 07:03:54.670 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:03:54.671 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:03:54.671 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:54.671 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:54.671 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:03:54.671 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:54.671 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:03:54.672 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:03:54.672 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:03:54.672 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:03:54.672 - INFO - +------ END KW: Utils.Run Command (1599)
20190402 07:03:54.672 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:03:54.672 - INFO - ${value} = applying
20190402 07:03:54.672 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:03:54.672 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:03:54.673 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:03:54.673 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:03:54.673 - FAIL - applying != applied
20190402 07:03:54.673 - DEBUG - Traceback (most recent call last):
  None
20190402 07:03:54.673 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:03:54.673 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:03:54.673 - INFO - +----- END KW: Utils.Check System Application Status (1601)
20190402 07:03:59.674 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:03:59.674 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:03:59.675 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:03:59.675 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:03:59.675 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:03:59.676 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:03:59.676 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:03:59.676 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:03:59.676 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:03:59.677 - INFO - &{result_dict} = { stdout= }
20190402 07:03:59.677 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:03:59.677 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:03:59.678 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:03:59.678 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:03:59.678 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:03:59.679 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:03:59.679 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:03:59.679 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:03:59.679 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:03:59.679 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:03:59.679 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:03:59.694 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:03:59.694 - INFO - +------- END KW: SSHLibrary.Write (15)
20190402 07:03:59.694 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:01.645 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:01.646 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:01.646 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1952)
20190402 07:04:01.646 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:01.646 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:01.646 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:01.646 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:01.647 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:01.647 - INFO - ${clean_out} = applying
20190402 07:04:01.647 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:04:01.647 - INFO - ${output} = applying
20190402 07:04:01.647 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:01.647 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:01.647 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:01.649 - INFO - echo $?
20190402 07:04:01.649 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:01.649 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:01.652 - INFO - 0
20190402 07:04:01.652 - INFO - ${rc} = 0
20190402 07:04:01.652 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:04:01.652 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:01.652 - INFO - 0
20190402 07:04:01.652 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:01.652 - INFO - ${rc} = 0
20190402 07:04:01.652 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:04:01.653 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:01.653 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:01.653 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:01.653 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:01.653 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:01.654 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:01.654 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:01.654 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:01.654 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:01.654 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:01.654 - INFO - +------ END KW: Utils.Run Command (1979)
20190402 07:04:01.654 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:01.654 - INFO - ${value} = applying
20190402 07:04:01.655 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:04:01.655 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:01.655 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:01.655 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:01.655 - FAIL - applying != applied
20190402 07:04:01.655 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:01.655 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:04:01.656 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:01.656 - INFO - +----- END KW: Utils.Check System Application Status (1982)
20190402 07:04:06.656 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:06.658 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:06.658 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:06.659 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:04:06.659 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:06.660 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:06.661 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:04:06.661 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:06.661 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:06.662 - INFO - &{result_dict} = { stdout= }
20190402 07:04:06.662 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:06.662 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:06.662 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:06.662 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:06.662 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:06.662 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:06.663 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:04:06.663 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:06.663 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:06.663 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:06.663 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:06.675 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:06.676 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:04:06.676 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:08.404 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:08.404 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:08.404 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1728)
20190402 07:04:08.405 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:08.405 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:08.405 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:08.405 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:08.405 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:08.405 - INFO - ${clean_out} = applying
20190402 07:04:08.406 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:04:08.406 - INFO - ${output} = applying
20190402 07:04:08.406 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:08.406 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:08.406 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:08.408 - INFO - echo $?
20190402 07:04:08.408 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:08.408 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:08.414 - INFO - 0
20190402 07:04:08.414 - INFO - ${rc} = 0
20190402 07:04:08.414 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:04:08.414 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:08.415 - INFO - 0
20190402 07:04:08.415 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:04:08.415 - INFO - ${rc} = 0
20190402 07:04:08.415 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:04:08.415 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:08.415 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:08.416 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:08.416 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:08.416 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:08.416 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:08.416 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:08.416 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:08.416 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:08.417 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:08.417 - INFO - +------ END KW: Utils.Run Command (1758)
20190402 07:04:08.417 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:08.417 - INFO - ${value} = applying
20190402 07:04:08.417 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:04:08.417 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:08.417 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:08.418 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:08.418 - FAIL - applying != applied
20190402 07:04:08.418 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:08.418 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:04:08.418 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:08.418 - INFO - +----- END KW: Utils.Check System Application Status (1762)
20190402 07:04:13.419 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:13.420 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:13.421 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:13.422 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:04:13.422 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:13.423 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:13.424 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:04:13.424 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:13.424 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:13.425 - INFO - &{result_dict} = { stdout= }
20190402 07:04:13.425 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:13.425 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:13.425 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:13.425 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:13.425 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:13.425 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:13.425 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:04:13.426 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:13.426 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:13.426 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:13.426 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:13.435 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:13.435 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:04:13.435 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:15.097 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:15.098 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:15.098 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1663)
20190402 07:04:15.098 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:15.098 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:15.098 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:15.098 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:15.099 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:15.099 - INFO - ${clean_out} = applying
20190402 07:04:15.099 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:04:15.099 - INFO - ${output} = applying
20190402 07:04:15.099 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:15.099 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:15.099 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:15.101 - INFO - echo $?
20190402 07:04:15.101 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:15.101 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:15.112 - INFO - 0
20190402 07:04:15.112 - INFO - ${rc} = 0
20190402 07:04:15.112 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (11)
20190402 07:04:15.112 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:15.112 - INFO - 0
20190402 07:04:15.113 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:15.113 - INFO - ${rc} = 0
20190402 07:04:15.113 - INFO - +------- END KW: Utils.Get Return Code (14)
20190402 07:04:15.113 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:15.113 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:15.114 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:15.114 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:15.114 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:15.114 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:15.114 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:15.114 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:15.114 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:15.115 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:15.115 - INFO - +------ END KW: Utils.Run Command (1693)
20190402 07:04:15.115 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:15.115 - INFO - ${value} = applying
20190402 07:04:15.115 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:04:15.115 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:15.115 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:15.115 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:15.116 - FAIL - applying != applied
20190402 07:04:15.116 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:15.116 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:04:15.116 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:15.116 - INFO - +----- END KW: Utils.Check System Application Status (1697)
20190402 07:04:20.117 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:20.118 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:20.119 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:20.120 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:04:20.120 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:20.122 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:20.122 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:04:20.122 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:20.122 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:20.123 - INFO - &{result_dict} = { stdout= }
20190402 07:04:20.123 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:20.123 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:20.123 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:20.123 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:20.123 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:20.124 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:20.124 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:04:20.124 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:20.124 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:20.124 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:20.124 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:20.133 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:20.133 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:04:20.133 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:21.764 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:21.764 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:21.765 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1631)
20190402 07:04:21.765 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:21.765 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:21.765 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:21.765 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:21.765 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:21.766 - INFO - ${clean_out} = applying
20190402 07:04:21.766 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:04:21.766 - INFO - ${output} = applying
20190402 07:04:21.766 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:21.766 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:21.766 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:21.767 - INFO - echo $?
20190402 07:04:21.767 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:04:21.768 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:21.771 - INFO - 0
20190402 07:04:21.771 - INFO - ${rc} = 0
20190402 07:04:21.771 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:04:21.771 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:21.771 - INFO - 0
20190402 07:04:21.771 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:21.771 - INFO - ${rc} = 0
20190402 07:04:21.771 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:04:21.772 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:21.772 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:21.772 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:21.772 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:21.772 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:21.773 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:21.773 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:21.773 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:21.773 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:21.773 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:21.773 - INFO - +------ END KW: Utils.Run Command (1653)
20190402 07:04:21.773 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:21.773 - INFO - ${value} = applying
20190402 07:04:21.774 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:04:21.774 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:21.774 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:21.774 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:21.774 - FAIL - applying != applied
20190402 07:04:21.774 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:21.774 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:04:21.774 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:21.774 - INFO - +----- END KW: Utils.Check System Application Status (1658)
20190402 07:04:26.775 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:26.776 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:26.777 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:26.778 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:04:26.778 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:26.779 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:26.780 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:04:26.780 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:26.781 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:26.781 - INFO - &{result_dict} = { stdout= }
20190402 07:04:26.781 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:26.781 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:26.781 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:26.781 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:26.782 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:26.782 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:26.782 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:04:26.782 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:26.782 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:26.782 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:26.782 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:26.791 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:26.791 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:04:26.791 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:28.056 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:28.056 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:28.057 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1265)
20190402 07:04:28.057 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:28.057 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:28.057 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:28.057 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:28.057 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:28.058 - INFO - ${clean_out} = applying
20190402 07:04:28.058 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:04:28.058 - INFO - ${output} = applying
20190402 07:04:28.058 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:28.058 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:28.058 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:28.060 - INFO - echo $?
20190402 07:04:28.060 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:28.060 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:28.060 - INFO - 0
20190402 07:04:28.060 - INFO - ${rc} = 0
20190402 07:04:28.060 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:04:28.060 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:28.061 - INFO - 0
20190402 07:04:28.061 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:04:28.061 - INFO - ${rc} = 0
20190402 07:04:28.061 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:04:28.061 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:28.061 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:28.062 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:28.062 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:28.062 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:28.062 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:28.062 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:28.062 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:28.062 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:28.063 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:28.063 - INFO - +------ END KW: Utils.Run Command (1285)
20190402 07:04:28.063 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:28.063 - INFO - ${value} = applying
20190402 07:04:28.063 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:04:28.063 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:28.063 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:28.064 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:28.064 - FAIL - applying != applied
20190402 07:04:28.064 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:28.064 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:04:28.064 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:28.064 - INFO - +----- END KW: Utils.Check System Application Status (1289)
20190402 07:04:33.065 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:33.066 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:33.066 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:33.066 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:04:33.067 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:33.068 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:33.068 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:04:33.069 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:33.069 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:33.071 - INFO - &{result_dict} = { stdout= }
20190402 07:04:33.071 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:04:33.071 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:33.072 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:33.073 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:33.073 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:33.074 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:33.074 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:04:33.074 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:33.075 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:33.075 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:04:33.075 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:33.103 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:33.104 - INFO - +------- END KW: SSHLibrary.Write (29)
20190402 07:04:33.104 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:34.246 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:34.246 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:34.247 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1142)
20190402 07:04:34.247 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:34.247 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:34.247 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:34.247 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:34.247 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:34.248 - INFO - ${clean_out} = applying
20190402 07:04:34.248 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:04:34.248 - INFO - ${output} = applying
20190402 07:04:34.248 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:34.248 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:34.248 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:34.249 - INFO - echo $?
20190402 07:04:34.250 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:34.250 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:34.250 - INFO - 0
20190402 07:04:34.250 - INFO - ${rc} = 0
20190402 07:04:34.250 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:04:34.250 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:34.250 - INFO - 0
20190402 07:04:34.250 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:34.251 - INFO - ${rc} = 0
20190402 07:04:34.251 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:04:34.251 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:34.251 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:34.251 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:34.251 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:34.252 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:34.252 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:34.252 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:34.252 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:34.252 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:34.252 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:34.252 - INFO - +------ END KW: Utils.Run Command (1185)
20190402 07:04:34.252 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:34.253 - INFO - ${value} = applying
20190402 07:04:34.253 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:04:34.253 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:34.253 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:34.253 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:34.253 - FAIL - applying != applied
20190402 07:04:34.253 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:34.253 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:04:34.253 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:34.254 - INFO - +----- END KW: Utils.Check System Application Status (1190)
20190402 07:04:39.254 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:39.256 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:39.257 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:39.257 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:04:39.257 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:39.259 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:39.259 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:04:39.260 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:39.261 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:39.262 - INFO - &{result_dict} = { stdout= }
20190402 07:04:39.263 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:04:39.263 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:39.264 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:39.264 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:39.265 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:39.266 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:39.267 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (7)
20190402 07:04:39.267 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:39.267 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:39.268 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:04:39.268 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:39.292 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:39.293 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:04:39.293 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:40.378 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:40.378 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:40.378 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1085)
20190402 07:04:40.378 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:40.379 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:40.379 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:40.379 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:40.379 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:40.379 - INFO - ${clean_out} = applying
20190402 07:04:40.379 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:04:40.379 - INFO - ${output} = applying
20190402 07:04:40.379 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:40.379 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:40.380 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:40.381 - INFO - echo $?
20190402 07:04:40.382 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:40.382 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:40.382 - INFO - 0
20190402 07:04:40.382 - INFO - ${rc} = 0
20190402 07:04:40.382 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:04:40.382 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:40.382 - INFO - 0
20190402 07:04:40.382 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:40.382 - INFO - ${rc} = 0
20190402 07:04:40.383 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:04:40.383 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:40.383 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:40.383 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:40.383 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:40.383 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:40.384 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:40.384 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:40.384 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:40.384 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:40.384 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:40.384 - INFO - +------ END KW: Utils.Run Command (1127)
20190402 07:04:40.384 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:40.385 - INFO - ${value} = applying
20190402 07:04:40.385 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:04:40.385 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:40.385 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:40.385 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:40.385 - FAIL - applying != applied
20190402 07:04:40.385 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:40.385 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:04:40.385 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:40.385 - INFO - +----- END KW: Utils.Check System Application Status (1131)
20190402 07:04:45.386 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:45.388 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:45.388 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:45.389 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:04:45.389 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:45.390 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:45.391 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:04:45.391 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:45.391 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:45.392 - INFO - &{result_dict} = { stdout= }
20190402 07:04:45.392 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:45.392 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:45.392 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:45.392 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:45.392 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:45.393 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:45.393 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:04:45.393 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:45.393 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:45.393 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:45.393 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:45.404 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:45.404 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:04:45.404 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:46.787 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:46.788 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:46.788 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1384)
20190402 07:04:46.788 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:46.788 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:46.789 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:46.789 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:04:46.789 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:46.789 - INFO - ${clean_out} = applying
20190402 07:04:46.789 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:04:46.789 - INFO - ${output} = applying
20190402 07:04:46.789 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:46.789 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:46.790 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:46.791 - INFO - echo $?
20190402 07:04:46.791 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:04:46.791 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:46.792 - INFO - 0
20190402 07:04:46.792 - INFO - ${rc} = 0
20190402 07:04:46.792 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:04:46.792 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:46.792 - INFO - 0
20190402 07:04:46.792 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:46.792 - INFO - ${rc} = 0
20190402 07:04:46.792 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:04:46.792 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:46.793 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:46.793 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:46.793 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:46.793 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:46.793 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:46.793 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:46.794 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:46.794 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:04:46.794 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:46.794 - INFO - +------ END KW: Utils.Run Command (1405)
20190402 07:04:46.794 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:46.795 - INFO - ${value} = applying
20190402 07:04:46.795 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:04:46.795 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:46.795 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:46.795 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:46.795 - FAIL - applying != applied
20190402 07:04:46.795 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:46.795 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:04:46.795 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:04:46.796 - INFO - +----- END KW: Utils.Check System Application Status (1410)
20190402 07:04:51.796 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:51.797 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:51.797 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:51.797 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:04:51.797 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:51.798 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:51.798 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:04:51.798 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:51.798 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:51.799 - INFO - &{result_dict} = { stdout= }
20190402 07:04:51.799 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:51.799 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:51.799 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:51.799 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:51.800 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:51.800 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:51.800 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:04:51.800 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:51.800 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:51.800 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:51.800 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:51.809 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:51.810 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:04:51.810 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:52.874 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:52.875 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:52.875 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1065)
20190402 07:04:52.875 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:52.875 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:52.875 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:52.875 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:52.875 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:52.876 - INFO - ${clean_out} = applying
20190402 07:04:52.876 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:04:52.876 - INFO - ${output} = applying
20190402 07:04:52.876 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:52.876 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:52.876 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:52.878 - INFO - echo $?
20190402 07:04:52.878 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:52.878 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:52.879 - INFO - 0
20190402 07:04:52.879 - INFO - ${rc} = 0
20190402 07:04:52.879 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:04:52.879 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:52.879 - INFO - 0
20190402 07:04:52.879 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:52.879 - INFO - ${rc} = 0
20190402 07:04:52.879 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:04:52.879 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:52.880 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:52.880 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:52.880 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:52.880 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:52.880 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:52.880 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:52.881 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:52.881 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:04:52.881 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:52.881 - INFO - +------ END KW: Utils.Run Command (1084)
20190402 07:04:52.881 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:52.881 - INFO - ${value} = applying
20190402 07:04:52.881 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:04:52.881 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:52.882 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:52.882 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:52.882 - FAIL - applying != applied
20190402 07:04:52.882 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:52.882 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:04:52.882 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:52.882 - INFO - +----- END KW: Utils.Check System Application Status (1086)
20190402 07:04:57.883 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:04:57.884 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:04:57.885 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:04:57.886 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:04:57.886 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:04:57.887 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:04:57.888 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:04:57.888 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:04:57.888 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:04:57.889 - INFO - &{result_dict} = { stdout= }
20190402 07:04:57.889 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:04:57.889 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:04:57.889 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:57.889 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:04:57.890 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:57.890 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:04:57.890 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:04:57.890 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:04:57.890 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:57.890 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:04:57.890 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:04:57.899 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:04:57.899 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:04:57.899 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:04:58.932 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:58.933 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:58.933 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1034)
20190402 07:04:58.933 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:04:58.933 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:04:58.933 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:04:58.933 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:04:58.934 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:04:58.934 - INFO - ${clean_out} = applying
20190402 07:04:58.934 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:04:58.934 - INFO - ${output} = applying
20190402 07:04:58.934 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:04:58.934 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:04:58.934 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:04:58.936 - INFO - echo $?
20190402 07:04:58.936 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:04:58.936 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:04:58.936 - INFO - 0
20190402 07:04:58.937 - INFO - ${rc} = 0
20190402 07:04:58.937 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:04:58.937 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:04:58.937 - INFO - 0
20190402 07:04:58.937 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:04:58.937 - INFO - ${rc} = 0
20190402 07:04:58.937 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:04:58.937 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:04:58.937 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:04:58.938 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:04:58.938 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:58.938 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:04:58.938 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:04:58.938 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:04:58.938 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:04:58.938 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:04:58.939 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:04:58.939 - INFO - +------ END KW: Utils.Run Command (1053)
20190402 07:04:58.939 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:04:58.939 - INFO - ${value} = applying
20190402 07:04:58.939 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:04:58.939 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:04:58.939 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:04:58.940 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:04:58.940 - FAIL - applying != applied
20190402 07:04:58.940 - DEBUG - Traceback (most recent call last):
  None
20190402 07:04:58.940 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:04:58.940 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:04:58.940 - INFO - +----- END KW: Utils.Check System Application Status (1057)
20190402 07:05:03.941 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:03.942 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:03.943 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:03.943 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:03.944 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:03.945 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:03.946 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:05:03.946 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:03.946 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:03.947 - INFO - &{result_dict} = { stdout= }
20190402 07:05:03.947 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:03.947 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:03.947 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:03.947 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:03.947 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:03.947 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:03.948 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:03.948 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:03.948 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:03.948 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:03.948 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:03.957 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:03.957 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:05:03.957 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:04.988 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:04.988 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:04.988 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1031)
20190402 07:05:04.988 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:04.989 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:04.989 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:04.989 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:04.989 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:04.989 - INFO - ${clean_out} = applying
20190402 07:05:04.989 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:05:04.990 - INFO - ${output} = applying
20190402 07:05:04.990 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:05:04.990 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:04.990 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:04.991 - INFO - echo $?
20190402 07:05:04.992 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:05:04.992 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:04.992 - INFO - 0
20190402 07:05:04.992 - INFO - ${rc} = 0
20190402 07:05:04.992 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:05:04.992 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:04.992 - INFO - 0
20190402 07:05:04.992 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:04.993 - INFO - ${rc} = 0
20190402 07:05:04.993 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:04.993 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:04.993 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:04.994 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:04.994 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:04.994 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:04.994 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:04.994 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:04.994 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:04.994 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:04.994 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:04.995 - INFO - +------ END KW: Utils.Run Command (1051)
20190402 07:05:04.995 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:04.995 - INFO - ${value} = applying
20190402 07:05:04.995 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:04.995 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:04.995 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:04.995 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:04.996 - FAIL - applying != applied
20190402 07:05:04.996 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:04.996 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:05:04.996 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:04.996 - INFO - +----- END KW: Utils.Check System Application Status (1055)
20190402 07:05:09.997 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:09.998 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:09.999 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:09.999 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:09.999 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:10.001 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:10.002 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:05:10.002 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:10.002 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:10.003 - INFO - &{result_dict} = { stdout= }
20190402 07:05:10.003 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:10.003 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:10.003 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:10.003 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:10.003 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:10.003 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:10.003 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:05:10.004 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:10.004 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:10.004 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:10.004 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:10.013 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:10.013 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:05:10.013 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:11.048 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:11.048 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:11.048 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1035)
20190402 07:05:11.048 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:11.049 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:11.049 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:11.049 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:11.049 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:11.049 - INFO - ${clean_out} = applying
20190402 07:05:11.049 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:05:11.049 - INFO - ${output} = applying
20190402 07:05:11.049 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:11.049 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:11.050 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:11.051 - INFO - echo $?
20190402 07:05:11.051 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:05:11.051 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:11.051 - INFO - 0
20190402 07:05:11.052 - INFO - ${rc} = 0
20190402 07:05:11.052 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:05:11.052 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:11.052 - INFO - 0
20190402 07:05:11.052 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:11.052 - INFO - ${rc} = 0
20190402 07:05:11.052 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:11.052 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:11.053 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:11.053 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:11.053 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:11.053 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:11.053 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:11.053 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:11.053 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:11.053 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:11.054 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:11.054 - INFO - +------ END KW: Utils.Run Command (1055)
20190402 07:05:11.054 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:11.054 - INFO - ${value} = applying
20190402 07:05:11.054 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:11.054 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:11.055 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:11.055 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:11.055 - FAIL - applying != applied
20190402 07:05:11.055 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:11.055 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:05:11.055 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:11.055 - INFO - +----- END KW: Utils.Check System Application Status (1058)
20190402 07:05:16.056 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:16.057 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:16.058 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:16.058 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:16.059 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:16.060 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:16.061 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:05:16.061 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:16.062 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:16.064 - INFO - &{result_dict} = { stdout= }
20190402 07:05:16.064 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:05:16.064 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:16.065 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:16.065 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:16.066 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:16.067 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:16.067 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:05:16.067 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:16.068 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:16.068 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:05:16.068 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:16.091 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:16.091 - INFO - +------- END KW: SSHLibrary.Write (23)
20190402 07:05:16.092 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:17.083 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:17.084 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:17.084 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (993)
20190402 07:05:17.084 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:17.084 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:17.084 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:17.084 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:17.085 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:17.085 - INFO - ${clean_out} = applying
20190402 07:05:17.085 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:05:17.085 - INFO - ${output} = applying
20190402 07:05:17.085 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:17.085 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:17.085 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:17.087 - INFO - echo $?
20190402 07:05:17.087 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:05:17.087 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:17.087 - INFO - 0
20190402 07:05:17.087 - INFO - ${rc} = 0
20190402 07:05:17.087 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:05:17.087 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:17.087 - INFO - 0
20190402 07:05:17.088 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:05:17.088 - INFO - ${rc} = 0
20190402 07:05:17.088 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:17.088 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:17.088 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:17.088 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:17.089 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:05:17.089 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:17.089 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:17.089 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:17.089 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:17.089 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:17.089 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:17.089 - INFO - +------ END KW: Utils.Run Command (1030)
20190402 07:05:17.090 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:17.090 - INFO - ${value} = applying
20190402 07:05:17.090 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:05:17.090 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:17.090 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:17.090 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:17.091 - FAIL - applying != applied
20190402 07:05:17.091 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:17.091 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:05:17.091 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:17.091 - INFO - +----- END KW: Utils.Check System Application Status (1035)
20190402 07:05:22.092 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:22.093 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:22.094 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:22.094 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:22.095 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:22.096 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:22.097 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:05:22.097 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:22.097 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:22.098 - INFO - &{result_dict} = { stdout= }
20190402 07:05:22.098 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:22.098 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:22.098 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:22.098 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:22.098 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:22.099 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:22.099 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:22.099 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:22.099 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:22.099 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:22.099 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:22.107 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:22.107 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:05:22.107 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:23.171 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:23.172 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:23.172 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1065)
20190402 07:05:23.172 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:23.172 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:23.172 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:23.172 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:23.173 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:23.173 - INFO - ${clean_out} = applying
20190402 07:05:23.173 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:05:23.173 - INFO - ${output} = applying
20190402 07:05:23.173 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:23.173 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:23.173 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:23.175 - INFO - echo $?
20190402 07:05:23.175 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:05:23.175 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:23.175 - INFO - 0
20190402 07:05:23.175 - INFO - ${rc} = 0
20190402 07:05:23.175 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:05:23.175 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:23.176 - INFO - 0
20190402 07:05:23.176 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:05:23.176 - INFO - ${rc} = 0
20190402 07:05:23.176 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:23.176 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:23.176 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:23.177 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:23.177 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:23.177 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:23.177 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:23.177 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:23.177 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:23.177 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:23.177 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:23.178 - INFO - +------ END KW: Utils.Run Command (1082)
20190402 07:05:23.178 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:23.178 - INFO - ${value} = applying
20190402 07:05:23.178 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:23.178 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:23.178 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:23.178 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:23.179 - FAIL - applying != applied
20190402 07:05:23.179 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:23.179 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:05:23.179 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:23.179 - INFO - +----- END KW: Utils.Check System Application Status (1087)
20190402 07:05:28.180 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:28.181 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:28.182 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:28.182 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:28.182 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:28.184 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:28.184 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:05:28.185 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:28.185 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:28.185 - INFO - &{result_dict} = { stdout= }
20190402 07:05:28.185 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:05:28.185 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:28.186 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:28.186 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:28.186 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:28.186 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:28.186 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:05:28.186 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:28.187 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:28.187 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:05:28.187 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:28.198 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:28.198 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:05:28.198 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:29.452 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:29.452 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:29.452 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1254)
20190402 07:05:29.452 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:29.453 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:29.453 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:29.453 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:29.453 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:29.453 - INFO - ${clean_out} = applying
20190402 07:05:29.453 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:05:29.453 - INFO - ${output} = applying
20190402 07:05:29.453 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:29.453 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:29.454 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:29.455 - INFO - echo $?
20190402 07:05:29.455 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:05:29.455 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:29.455 - INFO - 0
20190402 07:05:29.456 - INFO - ${rc} = 0
20190402 07:05:29.456 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:05:29.456 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:29.456 - INFO - 0
20190402 07:05:29.456 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:29.456 - INFO - ${rc} = 0
20190402 07:05:29.456 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:29.456 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:29.456 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:29.457 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:29.457 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:29.457 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:29.457 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:29.457 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:29.457 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:29.457 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:29.458 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:29.458 - INFO - +------ END KW: Utils.Run Command (1276)
20190402 07:05:29.458 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:29.458 - INFO - ${value} = applying
20190402 07:05:29.458 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:29.458 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:29.458 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:29.459 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:29.459 - FAIL - applying != applied
20190402 07:05:29.459 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:29.459 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:05:29.459 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:29.459 - INFO - +----- END KW: Utils.Check System Application Status (1279)
20190402 07:05:34.460 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:34.462 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:34.462 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:34.463 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:05:34.463 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:34.464 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:34.465 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:05:34.465 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:34.465 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:34.466 - INFO - &{result_dict} = { stdout= }
20190402 07:05:34.466 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:34.466 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:34.466 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:34.466 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:34.467 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:34.467 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:34.467 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:34.467 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:34.467 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:34.467 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:34.467 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:34.476 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:34.476 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:05:34.477 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:35.650 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:35.650 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:35.651 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1174)
20190402 07:05:35.651 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:35.651 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:35.651 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:35.651 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:35.651 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:35.652 - INFO - ${clean_out} = applying
20190402 07:05:35.652 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:05:35.652 - INFO - ${output} = applying
20190402 07:05:35.652 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:35.652 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:35.652 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:35.654 - INFO - echo $?
20190402 07:05:35.654 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:05:35.654 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:35.654 - INFO - 0
20190402 07:05:35.654 - INFO - ${rc} = 0
20190402 07:05:35.654 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:05:35.654 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:35.654 - INFO - 0
20190402 07:05:35.655 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:05:35.655 - INFO - ${rc} = 0
20190402 07:05:35.655 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:35.655 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:35.655 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:35.655 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:35.656 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:35.656 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:35.656 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:35.656 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:35.656 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:35.656 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:35.656 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:35.656 - INFO - +------ END KW: Utils.Run Command (1193)
20190402 07:05:35.657 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:35.657 - INFO - ${value} = applying
20190402 07:05:35.657 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:35.657 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:35.657 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:35.657 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:35.657 - FAIL - applying != applied
20190402 07:05:35.658 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:35.658 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:05:35.658 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:35.658 - INFO - +----- END KW: Utils.Check System Application Status (1198)
20190402 07:05:40.659 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:40.660 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:40.661 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:40.661 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:40.662 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:40.663 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:40.663 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:05:40.663 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:40.663 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:40.664 - INFO - &{result_dict} = { stdout= }
20190402 07:05:40.664 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:40.664 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:40.664 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:40.664 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:40.664 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:40.665 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:40.665 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:40.665 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:40.665 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:40.665 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:40.665 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:40.674 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:40.674 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:05:40.674 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:41.684 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:41.684 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:41.684 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1010)
20190402 07:05:41.685 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:41.685 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:41.685 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:41.685 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:41.685 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:41.686 - INFO - ${clean_out} = applying
20190402 07:05:41.686 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:05:41.686 - INFO - ${output} = applying
20190402 07:05:41.686 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:41.686 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:41.686 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:41.687 - INFO - echo $?
20190402 07:05:41.687 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:05:41.687 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:41.688 - INFO - 0
20190402 07:05:41.688 - INFO - ${rc} = 0
20190402 07:05:41.688 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:05:41.688 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:41.688 - INFO - 0
20190402 07:05:41.688 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:41.688 - INFO - ${rc} = 0
20190402 07:05:41.688 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:05:41.688 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:41.689 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:41.689 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:41.689 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:41.689 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:41.689 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:41.690 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:41.690 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:41.690 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:41.690 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:41.690 - INFO - +------ END KW: Utils.Run Command (1028)
20190402 07:05:41.690 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:41.690 - INFO - ${value} = applying
20190402 07:05:41.690 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:41.690 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:41.691 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:41.691 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:41.691 - FAIL - applying != applied
20190402 07:05:41.691 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:41.691 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:05:41.691 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:41.691 - INFO - +----- END KW: Utils.Check System Application Status (1033)
20190402 07:05:46.692 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:46.694 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:46.695 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:46.695 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:46.695 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:46.697 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:46.697 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:05:46.697 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:46.698 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:46.698 - INFO - &{result_dict} = { stdout= }
20190402 07:05:46.698 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:05:46.698 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:46.698 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:46.698 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:46.699 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:46.699 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:46.699 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:46.699 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:46.699 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:46.699 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:46.699 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:46.709 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:46.709 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:05:46.709 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:47.722 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:47.722 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:47.723 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1013)
20190402 07:05:47.723 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:47.723 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:47.723 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:47.723 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:47.723 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:47.724 - INFO - ${clean_out} = applying
20190402 07:05:47.724 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:05:47.724 - INFO - ${output} = applying
20190402 07:05:47.724 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:47.724 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:47.724 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:47.725 - INFO - echo $?
20190402 07:05:47.725 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:05:47.725 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:47.726 - INFO - 0
20190402 07:05:47.726 - INFO - ${rc} = 0
20190402 07:05:47.726 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:05:47.726 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:47.726 - INFO - 0
20190402 07:05:47.726 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:47.726 - INFO - ${rc} = 0
20190402 07:05:47.726 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:05:47.727 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:47.727 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:47.727 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:47.727 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:05:47.727 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:47.728 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:47.728 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:47.728 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:47.728 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:47.728 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:47.728 - INFO - +------ END KW: Utils.Run Command (1033)
20190402 07:05:47.728 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:47.728 - INFO - ${value} = applying
20190402 07:05:47.729 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:47.729 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:47.729 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:47.729 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:47.729 - FAIL - applying != applied
20190402 07:05:47.729 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:47.729 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:05:47.729 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:05:47.729 - INFO - +----- END KW: Utils.Check System Application Status (1037)
20190402 07:05:52.730 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:52.731 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:52.732 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:52.732 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:52.733 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:52.734 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:52.735 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:05:52.735 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:52.735 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:52.736 - INFO - &{result_dict} = { stdout= }
20190402 07:05:52.736 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:52.736 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:52.736 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:52.736 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:52.736 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:52.737 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:52.737 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:52.737 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:52.737 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:52.737 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:52.737 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:52.747 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:52.747 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:05:52.747 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:53.868 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:53.868 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:53.868 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1121)
20190402 07:05:53.869 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:53.869 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:53.869 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:53.869 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:53.869 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:53.870 - INFO - ${clean_out} = applying
20190402 07:05:53.870 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:05:53.870 - INFO - ${output} = applying
20190402 07:05:53.870 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:53.870 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:53.870 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:53.872 - INFO - echo $?
20190402 07:05:53.872 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:05:53.872 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:53.872 - INFO - 0
20190402 07:05:53.872 - INFO - ${rc} = 0
20190402 07:05:53.872 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:05:53.872 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:53.872 - INFO - 0
20190402 07:05:53.872 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:53.873 - INFO - ${rc} = 0
20190402 07:05:53.873 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:53.873 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:53.873 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:53.873 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:53.873 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:05:53.873 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:53.874 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:05:53.874 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:53.874 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:53.874 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:05:53.874 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:53.874 - INFO - +------ END KW: Utils.Run Command (1141)
20190402 07:05:53.874 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:53.875 - INFO - ${value} = applying
20190402 07:05:53.875 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:05:53.875 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:53.875 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:53.875 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:53.875 - FAIL - applying != applied
20190402 07:05:53.875 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:53.875 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:05:53.875 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:05:53.876 - INFO - +----- END KW: Utils.Check System Application Status (1146)
20190402 07:05:58.876 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:05:58.878 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:05:58.879 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:05:58.879 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:05:58.879 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:05:58.881 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:05:58.881 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:05:58.881 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:05:58.881 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:05:58.882 - INFO - &{result_dict} = { stdout= }
20190402 07:05:58.882 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:05:58.882 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:05:58.882 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:58.882 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:05:58.882 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:58.883 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:05:58.883 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:05:58.883 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:05:58.883 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:58.883 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:05:58.883 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:05:58.893 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:05:58.893 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:05:58.893 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:05:59.959 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:59.959 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:59.959 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1066)
20190402 07:05:59.959 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:05:59.960 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:05:59.960 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:05:59.960 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:05:59.960 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:05:59.960 - INFO - ${clean_out} = applying
20190402 07:05:59.960 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:05:59.960 - INFO - ${output} = applying
20190402 07:05:59.960 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:05:59.961 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:05:59.961 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:05:59.962 - INFO - echo $?
20190402 07:05:59.962 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:05:59.962 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:05:59.963 - INFO - 0
20190402 07:05:59.963 - INFO - ${rc} = 0
20190402 07:05:59.963 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:05:59.963 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:05:59.963 - INFO - 0
20190402 07:05:59.963 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:05:59.963 - INFO - ${rc} = 0
20190402 07:05:59.963 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:05:59.963 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:05:59.964 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:05:59.964 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:59.964 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:59.964 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:05:59.964 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:05:59.964 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:05:59.964 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:05:59.965 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:05:59.965 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:05:59.965 - INFO - +------ END KW: Utils.Run Command (1086)
20190402 07:05:59.965 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:05:59.965 - INFO - ${value} = applying
20190402 07:05:59.965 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:05:59.965 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:05:59.966 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:05:59.966 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:05:59.966 - FAIL - applying != applied
20190402 07:05:59.966 - DEBUG - Traceback (most recent call last):
  None
20190402 07:05:59.966 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:05:59.966 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:05:59.966 - INFO - +----- END KW: Utils.Check System Application Status (1090)
20190402 07:06:04.967 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:04.968 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:04.969 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:04.969 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:04.970 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:04.971 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:04.972 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:04.972 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:04.972 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:04.973 - INFO - &{result_dict} = { stdout= }
20190402 07:06:04.973 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:04.973 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:04.973 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:04.973 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:04.973 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:04.973 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:04.973 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:06:04.974 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:04.974 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:04.974 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:04.974 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:04.984 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:04.984 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:06:04.984 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:06.037 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:06.037 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:06.037 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1053)
20190402 07:06:06.037 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:06.038 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:06.038 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:06.038 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:06:06.038 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:06.038 - INFO - ${clean_out} = applying
20190402 07:06:06.038 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:06.039 - INFO - ${output} = applying
20190402 07:06:06.039 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:06:06.039 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:06.039 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:06.040 - INFO - echo $?
20190402 07:06:06.041 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:06.041 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:06.041 - INFO - 0
20190402 07:06:06.041 - INFO - ${rc} = 0
20190402 07:06:06.041 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:06.041 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:06.041 - INFO - 0
20190402 07:06:06.041 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:06.041 - INFO - ${rc} = 0
20190402 07:06:06.041 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:06:06.042 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:06.042 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:06.042 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:06.042 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:06:06.042 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:06.043 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:06.043 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:06.043 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:06.043 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:06.043 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:06.043 - INFO - +------ END KW: Utils.Run Command (1073)
20190402 07:06:06.043 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:06.043 - INFO - ${value} = applying
20190402 07:06:06.043 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:06.044 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:06.044 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:06.044 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:06.044 - FAIL - applying != applied
20190402 07:06:06.044 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:06.044 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:06:06.044 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:06:06.044 - INFO - +----- END KW: Utils.Check System Application Status (1077)
20190402 07:06:11.045 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:11.046 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:11.047 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:11.048 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:11.048 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:11.049 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:11.050 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:11.050 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:11.050 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:11.051 - INFO - &{result_dict} = { stdout= }
20190402 07:06:11.051 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:11.051 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:11.051 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:11.051 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:11.051 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:11.052 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:11.052 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:11.052 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:11.052 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:11.052 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:11.052 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:11.062 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:11.062 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:06:11.062 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:12.092 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:12.092 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:12.092 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1030)
20190402 07:06:12.092 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:12.092 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:12.093 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:12.093 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:06:12.093 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:12.093 - INFO - ${clean_out} = applying
20190402 07:06:12.093 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:12.093 - INFO - ${output} = applying
20190402 07:06:12.093 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:12.094 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:12.094 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:12.096 - INFO - echo $?
20190402 07:06:12.096 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:12.096 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:12.096 - INFO - 0
20190402 07:06:12.096 - INFO - ${rc} = 0
20190402 07:06:12.096 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:12.096 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:12.097 - INFO - 0
20190402 07:06:12.097 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:06:12.097 - INFO - ${rc} = 0
20190402 07:06:12.097 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:12.097 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:12.097 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:12.098 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:12.098 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:12.098 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:12.098 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:12.098 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:12.098 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:12.098 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:12.098 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:12.099 - INFO - +------ END KW: Utils.Run Command (1050)
20190402 07:06:12.099 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:12.099 - INFO - ${value} = applying
20190402 07:06:12.099 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:12.099 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:12.099 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:12.099 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:12.100 - FAIL - applying != applied
20190402 07:06:12.100 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:12.100 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:06:12.100 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:12.100 - INFO - +----- END KW: Utils.Check System Application Status (1055)
20190402 07:06:17.101 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:17.102 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:17.103 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:17.103 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:17.104 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:17.105 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:17.106 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:17.106 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:17.106 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:17.107 - INFO - &{result_dict} = { stdout= }
20190402 07:06:17.107 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:17.107 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:17.107 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:17.107 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:17.107 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:17.108 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:17.108 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:17.108 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:17.108 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:17.108 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:17.108 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:17.118 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:17.118 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:06:17.118 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:18.153 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:18.153 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:18.154 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1036)
20190402 07:06:18.154 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:18.154 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:18.154 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:18.154 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:06:18.154 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:18.155 - INFO - ${clean_out} = applying
20190402 07:06:18.155 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:06:18.155 - INFO - ${output} = applying
20190402 07:06:18.155 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:18.155 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:18.155 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:18.156 - INFO - echo $?
20190402 07:06:18.157 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:18.157 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:18.157 - INFO - 0
20190402 07:06:18.157 - INFO - ${rc} = 0
20190402 07:06:18.157 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:18.157 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:18.157 - INFO - 0
20190402 07:06:18.157 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:18.158 - INFO - ${rc} = 0
20190402 07:06:18.158 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:18.158 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:18.158 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:18.158 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:18.158 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:06:18.158 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:18.159 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:18.159 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:18.159 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:18.159 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:18.159 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:18.159 - INFO - +------ END KW: Utils.Run Command (1055)
20190402 07:06:18.159 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:18.160 - INFO - ${value} = applying
20190402 07:06:18.160 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:06:18.160 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:18.160 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:18.160 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:18.160 - FAIL - applying != applied
20190402 07:06:18.160 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:18.160 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:06:18.160 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:06:18.160 - INFO - +----- END KW: Utils.Check System Application Status (1060)
20190402 07:06:23.161 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:23.161 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:23.161 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:23.162 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:23.162 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:23.162 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:23.162 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:06:23.162 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:23.163 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:23.163 - INFO - &{result_dict} = { stdout= }
20190402 07:06:23.163 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:06:23.163 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:23.163 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:23.163 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:23.164 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:23.164 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:23.164 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:23.164 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:23.164 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:23.164 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:23.164 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:23.172 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:23.172 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:06:23.172 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:24.276 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:24.276 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:24.276 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1104)
20190402 07:06:24.277 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:24.277 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:24.277 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:24.277 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:06:24.277 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:24.277 - INFO - ${clean_out} = applying
20190402 07:06:24.278 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:24.278 - INFO - ${output} = applying
20190402 07:06:24.278 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:24.278 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:24.278 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:24.279 - INFO - echo $?
20190402 07:06:24.280 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:24.280 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:24.280 - INFO - 0
20190402 07:06:24.280 - INFO - ${rc} = 0
20190402 07:06:24.280 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:24.280 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:24.280 - INFO - 0
20190402 07:06:24.280 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:24.280 - INFO - ${rc} = 0
20190402 07:06:24.280 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:06:24.281 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:24.281 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:24.281 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:24.281 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:06:24.282 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:24.282 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:24.282 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:24.282 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:24.282 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:24.282 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:24.282 - INFO - +------ END KW: Utils.Run Command (1120)
20190402 07:06:24.283 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:24.283 - INFO - ${value} = applying
20190402 07:06:24.283 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:24.283 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:24.283 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:24.283 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:24.283 - FAIL - applying != applied
20190402 07:06:24.283 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:24.283 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:06:24.284 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:24.284 - INFO - +----- END KW: Utils.Check System Application Status (1123)
20190402 07:06:29.284 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:29.285 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:29.286 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:29.286 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:29.286 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:29.287 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:29.288 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:29.288 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:29.289 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:29.289 - INFO - &{result_dict} = { stdout= }
20190402 07:06:29.290 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:29.290 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:29.290 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:29.291 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:29.291 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:29.292 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:29.292 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 07:06:29.292 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:29.293 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:29.293 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:06:29.293 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:29.314 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:29.314 - INFO - +------- END KW: SSHLibrary.Write (21)
20190402 07:06:29.314 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:30.332 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:30.332 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:30.332 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1018)
20190402 07:06:30.333 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:30.333 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:30.333 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:30.333 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:06:30.333 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:30.333 - INFO - ${clean_out} = applying
20190402 07:06:30.334 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:06:30.334 - INFO - ${output} = applying
20190402 07:06:30.334 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:30.334 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:30.334 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:30.335 - INFO - echo $?
20190402 07:06:30.335 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:06:30.336 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:30.336 - INFO - 0
20190402 07:06:30.336 - INFO - ${rc} = 0
20190402 07:06:30.336 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:30.336 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:30.336 - INFO - 0
20190402 07:06:30.336 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:30.337 - INFO - ${rc} = 0
20190402 07:06:30.337 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:30.337 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:30.337 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:30.337 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:30.337 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:06:30.337 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:30.338 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:30.338 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:30.338 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:30.338 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:30.338 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:30.338 - INFO - +------ END KW: Utils.Run Command (1052)
20190402 07:06:30.338 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:30.339 - INFO - ${value} = applying
20190402 07:06:30.339 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:06:30.339 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:30.339 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:30.339 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:30.339 - FAIL - applying != applied
20190402 07:06:30.340 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:30.340 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:06:30.340 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:30.340 - INFO - +----- END KW: Utils.Check System Application Status (1056)
20190402 07:06:35.340 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:35.341 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:35.342 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:35.342 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:35.343 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:35.344 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:35.344 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:06:35.344 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:35.345 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:35.345 - INFO - &{result_dict} = { stdout= }
20190402 07:06:35.345 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:06:35.345 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:35.346 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:35.346 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:35.346 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:35.346 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:35.346 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:35.346 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:35.346 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:35.347 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:35.347 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:35.355 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:35.355 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:06:35.356 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:36.443 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:36.444 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:36.444 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1088)
20190402 07:06:36.444 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:36.444 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:36.444 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:36.444 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:06:36.445 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:36.445 - INFO - ${clean_out} = applying
20190402 07:06:36.445 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:36.445 - INFO - ${output} = applying
20190402 07:06:36.445 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:36.445 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:36.445 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:36.447 - INFO - echo $?
20190402 07:06:36.447 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:36.447 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:36.447 - INFO - 0
20190402 07:06:36.447 - INFO - ${rc} = 0
20190402 07:06:36.447 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:36.448 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:36.448 - INFO - 0
20190402 07:06:36.448 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:36.448 - INFO - ${rc} = 0
20190402 07:06:36.448 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:36.448 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:36.448 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:36.449 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:36.449 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:36.449 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:36.449 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:36.449 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:36.449 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:36.449 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:36.450 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:36.450 - INFO - +------ END KW: Utils.Run Command (1108)
20190402 07:06:36.450 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:36.450 - INFO - ${value} = applying
20190402 07:06:36.450 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:36.450 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:36.450 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:36.451 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:36.451 - FAIL - applying != applied
20190402 07:06:36.451 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:36.451 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:06:36.451 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:36.451 - INFO - +----- END KW: Utils.Check System Application Status (1111)
20190402 07:06:41.452 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:41.453 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:41.454 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:41.454 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:41.455 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:41.456 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:41.457 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:41.457 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:41.457 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:41.458 - INFO - &{result_dict} = { stdout= }
20190402 07:06:41.458 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:41.458 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:41.458 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:41.458 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:41.458 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:41.459 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:41.459 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:41.459 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:41.459 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:41.459 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:41.459 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:41.467 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:41.467 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:06:41.467 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:42.509 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:42.509 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:42.509 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1042)
20190402 07:06:42.509 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:42.509 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:42.510 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:42.510 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:06:42.510 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:42.510 - INFO - ${clean_out} = applying
20190402 07:06:42.510 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:42.510 - INFO - ${output} = applying
20190402 07:06:42.510 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:42.510 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:42.511 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:42.512 - INFO - echo $?
20190402 07:06:42.512 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:06:42.512 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:42.513 - INFO - 0
20190402 07:06:42.513 - INFO - ${rc} = 0
20190402 07:06:42.513 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:06:42.513 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:42.513 - INFO - 0
20190402 07:06:42.513 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:42.513 - INFO - ${rc} = 0
20190402 07:06:42.513 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:42.513 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:42.514 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:42.514 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:42.514 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:42.514 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:42.514 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:42.514 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:42.514 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:42.515 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:42.515 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:42.515 - INFO - +------ END KW: Utils.Run Command (1060)
20190402 07:06:42.515 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:42.515 - INFO - ${value} = applying
20190402 07:06:42.515 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:42.515 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:42.516 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:42.516 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:42.516 - FAIL - applying != applied
20190402 07:06:42.516 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:42.516 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:06:42.516 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:42.516 - INFO - +----- END KW: Utils.Check System Application Status (1064)
20190402 07:06:47.517 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:47.518 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:47.519 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:47.519 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:47.520 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:47.521 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:47.522 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:47.522 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:47.522 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:47.523 - INFO - &{result_dict} = { stdout= }
20190402 07:06:47.523 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:47.523 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:47.523 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:47.523 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:47.523 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:47.524 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:47.524 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:47.524 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:47.524 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:47.524 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:47.524 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:47.532 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:47.532 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:06:47.532 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:48.662 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:48.662 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:48.662 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1130)
20190402 07:06:48.662 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:48.662 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:48.663 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:48.663 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:06:48.663 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:48.663 - INFO - ${clean_out} = applying
20190402 07:06:48.663 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:48.663 - INFO - ${output} = applying
20190402 07:06:48.663 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:48.663 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:48.663 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:48.665 - INFO - echo $?
20190402 07:06:48.665 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:48.665 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:48.665 - INFO - 0
20190402 07:06:48.665 - INFO - ${rc} = 0
20190402 07:06:48.665 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:48.666 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:48.666 - INFO - 0
20190402 07:06:48.666 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:06:48.666 - INFO - ${rc} = 0
20190402 07:06:48.666 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:48.666 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:48.666 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:48.667 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:06:48.667 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:48.667 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:48.667 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:48.667 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:48.667 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:48.667 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:48.668 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:48.668 - INFO - +------ END KW: Utils.Run Command (1148)
20190402 07:06:48.668 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:48.668 - INFO - ${value} = applying
20190402 07:06:48.668 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:48.668 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:48.668 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:48.669 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:48.669 - FAIL - applying != applied
20190402 07:06:48.669 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:48.669 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:06:48.669 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:48.669 - INFO - +----- END KW: Utils.Check System Application Status (1152)
20190402 07:06:53.670 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:53.672 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:53.672 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:53.673 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:06:53.673 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:53.675 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:53.675 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:06:53.675 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:53.675 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:53.676 - INFO - &{result_dict} = { stdout= }
20190402 07:06:53.676 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:06:53.676 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:53.676 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:53.676 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:53.676 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:53.677 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:53.677 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:06:53.677 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:53.677 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:53.677 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:06:53.677 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:53.686 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:53.687 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:06:53.687 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:06:54.725 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:54.725 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:54.725 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1038)
20190402 07:06:54.725 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:06:54.725 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:06:54.726 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:54.726 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:06:54.726 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:06:54.726 - INFO - ${clean_out} = applying
20190402 07:06:54.726 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:06:54.726 - INFO - ${output} = applying
20190402 07:06:54.726 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:06:54.726 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:06:54.726 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:06:54.728 - INFO - echo $?
20190402 07:06:54.728 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:06:54.728 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:06:54.728 - INFO - 0
20190402 07:06:54.728 - INFO - ${rc} = 0
20190402 07:06:54.728 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:06:54.728 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:06:54.729 - INFO - 0
20190402 07:06:54.729 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:06:54.729 - INFO - ${rc} = 0
20190402 07:06:54.729 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:06:54.729 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:06:54.729 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:06:54.730 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:54.730 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:54.730 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:06:54.730 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:54.730 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:06:54.730 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:06:54.730 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:06:54.730 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:06:54.731 - INFO - +------ END KW: Utils.Run Command (1057)
20190402 07:06:54.731 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:06:54.731 - INFO - ${value} = applying
20190402 07:06:54.731 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:06:54.731 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:06:54.731 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:06:54.731 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:06:54.731 - FAIL - applying != applied
20190402 07:06:54.732 - DEBUG - Traceback (most recent call last):
  None
20190402 07:06:54.732 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:06:54.732 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:06:54.732 - INFO - +----- END KW: Utils.Check System Application Status (1062)
20190402 07:06:59.732 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:06:59.732 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:06:59.733 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:06:59.733 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:06:59.733 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:06:59.733 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:06:59.734 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:06:59.734 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:06:59.734 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:06:59.734 - INFO - &{result_dict} = { stdout= }
20190402 07:06:59.734 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:06:59.735 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:06:59.735 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:59.735 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:06:59.735 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:06:59.735 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:06:59.735 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:06:59.735 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:06:59.736 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:06:59.736 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:06:59.736 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:06:59.745 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:06:59.745 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:06:59.745 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:00.781 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:00.781 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:00.782 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1036)
20190402 07:07:00.782 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:00.782 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:00.782 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:00.782 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:00.782 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:00.783 - INFO - ${clean_out} = applying
20190402 07:07:00.783 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:07:00.783 - INFO - ${output} = applying
20190402 07:07:00.783 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:00.783 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:00.783 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:00.785 - INFO - echo $?
20190402 07:07:00.785 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:07:00.785 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:00.785 - INFO - 0
20190402 07:07:00.785 - INFO - ${rc} = 0
20190402 07:07:00.785 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:07:00.785 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:00.786 - INFO - 0
20190402 07:07:00.786 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:07:00.786 - INFO - ${rc} = 0
20190402 07:07:00.786 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:00.786 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:00.786 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:00.787 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:00.787 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:00.787 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:00.787 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:00.787 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:00.787 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:00.787 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:00.787 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:00.788 - INFO - +------ END KW: Utils.Run Command (1054)
20190402 07:07:00.788 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:00.788 - INFO - ${value} = applying
20190402 07:07:00.788 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:07:00.788 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:00.788 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:00.788 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:00.788 - FAIL - applying != applied
20190402 07:07:00.789 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:00.789 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:07:00.789 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:00.789 - INFO - +----- END KW: Utils.Check System Application Status (1057)
20190402 07:07:05.789 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:05.789 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:05.790 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:05.790 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:07:05.790 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:05.790 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:05.791 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:07:05.791 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:05.791 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:05.791 - INFO - &{result_dict} = { stdout= }
20190402 07:07:05.791 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:07:05.792 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:05.792 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:05.792 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:05.792 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:05.792 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:05.793 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:07:05.793 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:05.793 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:05.793 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:05.793 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:05.802 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:05.802 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:07:05.802 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:06.858 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:06.858 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:06.858 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1056)
20190402 07:07:06.858 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:06.859 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:06.859 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:06.859 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:06.859 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:06.859 - INFO - ${clean_out} = applying
20190402 07:07:06.859 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:07:06.859 - INFO - ${output} = applying
20190402 07:07:06.859 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:06.860 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:06.860 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:06.861 - INFO - echo $?
20190402 07:07:06.861 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:07:06.861 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:06.862 - INFO - 0
20190402 07:07:06.862 - INFO - ${rc} = 0
20190402 07:07:06.862 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:07:06.862 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:06.862 - INFO - 0
20190402 07:07:06.862 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:06.862 - INFO - ${rc} = 0
20190402 07:07:06.862 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:07:06.863 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:06.863 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:06.863 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:06.863 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:06.863 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:06.864 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:06.864 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:06.864 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:06.864 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:06.864 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:06.864 - INFO - +------ END KW: Utils.Run Command (1074)
20190402 07:07:06.864 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:06.865 - INFO - ${value} = applying
20190402 07:07:06.865 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:07:06.865 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:06.865 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:06.865 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:06.865 - FAIL - applying != applied
20190402 07:07:06.865 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:06.865 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:07:06.865 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:06.866 - INFO - +----- END KW: Utils.Check System Application Status (1076)
20190402 07:07:11.866 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:11.866 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:11.867 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:11.867 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:07:11.867 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:11.867 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:11.867 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:07:11.867 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:11.868 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:11.868 - INFO - &{result_dict} = { stdout= }
20190402 07:07:11.868 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:07:11.868 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:11.869 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:11.869 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:11.869 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:11.869 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:11.869 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:07:11.869 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:11.869 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:11.870 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:07:11.870 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:11.878 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:11.878 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:07:11.878 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:12.907 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:12.907 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:12.907 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 07:07:12.907 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:12.907 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:12.908 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:12.908 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:07:12.908 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:12.908 - INFO - ${clean_out} = applying
20190402 07:07:12.908 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:07:12.908 - INFO - ${output} = applying
20190402 07:07:12.908 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:12.908 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:12.909 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:12.910 - INFO - echo $?
20190402 07:07:12.910 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:07:12.910 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:12.910 - INFO - 0
20190402 07:07:12.910 - INFO - ${rc} = 0
20190402 07:07:12.911 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:07:12.911 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:12.911 - INFO - 0
20190402 07:07:12.911 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:12.911 - INFO - ${rc} = 0
20190402 07:07:12.911 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:12.911 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:12.912 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:12.912 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:12.912 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:12.912 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:12.913 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:12.913 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:12.913 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:12.913 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:12.913 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:12.913 - INFO - +------ END KW: Utils.Run Command (1046)
20190402 07:07:12.913 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:12.913 - INFO - ${value} = applying
20190402 07:07:12.914 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:07:12.914 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:12.914 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:12.914 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:12.914 - FAIL - applying != applied
20190402 07:07:12.914 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:12.914 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:07:12.914 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:12.914 - INFO - +----- END KW: Utils.Check System Application Status (1048)
20190402 07:07:17.915 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:17.915 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:17.915 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:17.915 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:07:17.916 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:17.916 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:17.916 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:07:17.916 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:17.917 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:17.917 - INFO - &{result_dict} = { stdout= }
20190402 07:07:17.917 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:07:17.917 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:17.917 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:17.917 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:17.918 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:17.918 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:17.918 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:07:17.918 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:17.918 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:17.918 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:17.918 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:17.927 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:17.927 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:07:17.927 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:19.030 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:19.031 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:19.031 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1104)
20190402 07:07:19.031 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:19.031 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:19.031 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:19.031 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:19.031 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:19.032 - INFO - ${clean_out} = applying
20190402 07:07:19.032 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:07:19.032 - INFO - ${output} = applying
20190402 07:07:19.032 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:19.032 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:19.032 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:19.034 - INFO - echo $?
20190402 07:07:19.034 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:07:19.034 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:19.034 - INFO - 0
20190402 07:07:19.034 - INFO - ${rc} = 0
20190402 07:07:19.034 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:07:19.035 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:19.035 - INFO - 0
20190402 07:07:19.035 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:19.035 - INFO - ${rc} = 0
20190402 07:07:19.035 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:19.035 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:19.035 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:19.036 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:19.036 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:19.036 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:19.036 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:19.036 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:19.036 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:19.036 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:19.037 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:19.037 - INFO - +------ END KW: Utils.Run Command (1121)
20190402 07:07:19.037 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:19.037 - INFO - ${value} = applying
20190402 07:07:19.037 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:07:19.037 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:19.037 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:19.038 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:19.038 - FAIL - applying != applied
20190402 07:07:19.038 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:19.038 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:07:19.038 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:19.038 - INFO - +----- END KW: Utils.Check System Application Status (1123)
20190402 07:07:24.038 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:24.039 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:24.039 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:24.040 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:07:24.040 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:24.040 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:24.041 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:07:24.041 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:24.041 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:24.042 - INFO - &{result_dict} = { stdout= }
20190402 07:07:24.042 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:07:24.042 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:24.043 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:24.043 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:24.043 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:24.043 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:24.044 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:07:24.044 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:24.044 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:24.044 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:24.044 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:24.059 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:24.059 - INFO - +------- END KW: SSHLibrary.Write (15)
20190402 07:07:24.059 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:25.077 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:25.078 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:25.078 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1019)
20190402 07:07:25.078 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:25.078 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:25.079 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:25.079 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:07:25.079 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:25.079 - INFO - ${clean_out} = applying
20190402 07:07:25.079 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:07:25.079 - INFO - ${output} = applying
20190402 07:07:25.079 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:25.079 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:25.079 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:25.081 - INFO - echo $?
20190402 07:07:25.081 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:07:25.081 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:25.082 - INFO - 0
20190402 07:07:25.082 - INFO - ${rc} = 0
20190402 07:07:25.082 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:07:25.082 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:25.082 - INFO - 0
20190402 07:07:25.082 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:25.082 - INFO - ${rc} = 0
20190402 07:07:25.082 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:25.082 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:25.083 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:25.083 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:25.083 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:25.083 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:25.083 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:25.084 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:25.084 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:25.084 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:25.084 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:25.084 - INFO - +------ END KW: Utils.Run Command (1044)
20190402 07:07:25.084 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:25.084 - INFO - ${value} = applying
20190402 07:07:25.084 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:07:25.085 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:25.085 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:25.085 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:25.085 - FAIL - applying != applied
20190402 07:07:25.085 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:25.085 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:07:25.085 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:25.085 - INFO - +----- END KW: Utils.Check System Application Status (1047)
20190402 07:07:30.086 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:30.086 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:30.086 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:30.086 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:07:30.087 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:30.087 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:30.087 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:07:30.087 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:30.087 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:30.088 - INFO - &{result_dict} = { stdout= }
20190402 07:07:30.088 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:07:30.088 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:30.088 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:30.088 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:30.089 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:30.089 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:30.089 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:07:30.089 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:30.089 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:30.089 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:30.089 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:30.098 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:30.098 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:07:30.098 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:31.118 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:31.119 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:31.119 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1021)
20190402 07:07:31.119 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:31.119 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:31.119 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:31.119 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:31.119 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:31.120 - INFO - ${clean_out} = applying
20190402 07:07:31.120 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:07:31.120 - INFO - ${output} = applying
20190402 07:07:31.120 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:31.120 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:31.120 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:31.122 - INFO - echo $?
20190402 07:07:31.122 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:07:31.122 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:31.122 - INFO - 0
20190402 07:07:31.123 - INFO - ${rc} = 0
20190402 07:07:31.123 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:07:31.123 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:31.123 - INFO - 0
20190402 07:07:31.123 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:31.123 - INFO - ${rc} = 0
20190402 07:07:31.123 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:31.123 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:31.124 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:31.124 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:31.124 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:31.124 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:31.124 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:31.124 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:31.125 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:31.125 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:07:31.125 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:31.125 - INFO - +------ END KW: Utils.Run Command (1039)
20190402 07:07:31.125 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:31.125 - INFO - ${value} = applying
20190402 07:07:31.125 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:07:31.125 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:31.126 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:31.126 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:31.126 - FAIL - applying != applied
20190402 07:07:31.126 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:31.126 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:07:31.126 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:31.126 - INFO - +----- END KW: Utils.Check System Application Status (1040)
20190402 07:07:36.127 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:36.128 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:36.129 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:36.129 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:07:36.129 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:36.130 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:36.131 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:07:36.131 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:36.132 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:36.133 - INFO - &{result_dict} = { stdout= }
20190402 07:07:36.133 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:07:36.133 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:36.134 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:36.134 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:36.135 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:36.135 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:36.135 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 07:07:36.136 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:36.136 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:36.136 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:36.136 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:36.146 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:36.146 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:07:36.146 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:37.196 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:37.196 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:37.197 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1050)
20190402 07:07:37.197 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:37.197 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:37.197 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:37.197 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:37.197 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:37.198 - INFO - ${clean_out} = applying
20190402 07:07:37.198 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:07:37.198 - INFO - ${output} = applying
20190402 07:07:37.198 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:37.198 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:37.198 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:37.199 - INFO - echo $?
20190402 07:07:37.200 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:07:37.200 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:37.200 - INFO - 0
20190402 07:07:37.200 - INFO - ${rc} = 0
20190402 07:07:37.200 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:07:37.200 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:37.200 - INFO - 0
20190402 07:07:37.201 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:07:37.201 - INFO - ${rc} = 0
20190402 07:07:37.201 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:37.201 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:37.201 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:37.201 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:37.202 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:37.202 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:37.202 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:37.202 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:37.202 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:37.202 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:37.202 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:37.202 - INFO - +------ END KW: Utils.Run Command (1073)
20190402 07:07:37.202 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:37.203 - INFO - ${value} = applying
20190402 07:07:37.203 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:07:37.203 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:37.203 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:37.203 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:37.203 - FAIL - applying != applied
20190402 07:07:37.203 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:37.203 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:07:37.204 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:37.204 - INFO - +----- END KW: Utils.Check System Application Status (1077)
20190402 07:07:42.204 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:42.205 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:42.206 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:42.206 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:07:42.207 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:42.208 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:42.209 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:07:42.209 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:42.209 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:42.209 - INFO - &{result_dict} = { stdout= }
20190402 07:07:42.210 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:07:42.210 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:42.210 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:42.210 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:42.210 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:42.210 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:42.210 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:07:42.211 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:42.211 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:42.211 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:42.211 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:42.220 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:42.220 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:07:42.220 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:43.249 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:43.249 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:43.249 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 07:07:43.249 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:43.250 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:43.250 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:43.250 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:43.250 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:43.250 - INFO - ${clean_out} = applying
20190402 07:07:43.250 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:07:43.250 - INFO - ${output} = applying
20190402 07:07:43.250 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:43.250 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:43.251 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:43.252 - INFO - echo $?
20190402 07:07:43.252 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:07:43.252 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:43.252 - INFO - 0
20190402 07:07:43.252 - INFO - ${rc} = 0
20190402 07:07:43.252 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:07:43.252 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:43.253 - INFO - 0
20190402 07:07:43.253 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:07:43.253 - INFO - ${rc} = 0
20190402 07:07:43.253 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:07:43.253 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:43.253 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:43.254 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:43.254 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:43.254 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:43.254 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:43.254 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:43.254 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:43.254 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:43.255 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:43.255 - INFO - +------ END KW: Utils.Run Command (1048)
20190402 07:07:43.255 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:43.255 - INFO - ${value} = applying
20190402 07:07:43.255 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:07:43.255 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:43.255 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:43.256 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:43.256 - FAIL - applying != applied
20190402 07:07:43.256 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:43.256 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:07:43.256 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:43.256 - INFO - +----- END KW: Utils.Check System Application Status (1052)
20190402 07:07:48.257 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:48.258 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:48.259 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:48.259 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:07:48.259 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:48.260 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:48.261 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:07:48.262 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:48.262 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:48.262 - INFO - &{result_dict} = { stdout= }
20190402 07:07:48.262 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:07:48.262 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:48.263 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:48.263 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:48.263 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:48.263 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:48.263 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:07:48.263 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:48.264 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:48.264 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:07:48.264 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:48.272 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:48.273 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:07:48.273 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:49.371 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:49.371 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:49.371 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1098)
20190402 07:07:49.372 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:49.372 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:49.372 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:49.372 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:49.372 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:49.372 - INFO - ${clean_out} = applying
20190402 07:07:49.373 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:07:49.373 - INFO - ${output} = applying
20190402 07:07:49.373 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:07:49.373 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:49.373 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:49.374 - INFO - echo $?
20190402 07:07:49.374 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:07:49.374 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:49.375 - INFO - 0
20190402 07:07:49.375 - INFO - ${rc} = 0
20190402 07:07:49.375 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:07:49.375 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:49.375 - INFO - 0
20190402 07:07:49.375 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:49.375 - INFO - ${rc} = 0
20190402 07:07:49.375 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:07:49.375 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:49.376 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:49.376 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:49.376 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:49.376 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:49.376 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:49.376 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:49.377 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:49.377 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:07:49.377 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:49.377 - INFO - +------ END KW: Utils.Run Command (1118)
20190402 07:07:49.377 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:49.377 - INFO - ${value} = applying
20190402 07:07:49.378 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:07:49.378 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:49.378 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:49.378 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:49.378 - FAIL - applying != applied
20190402 07:07:49.378 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:49.378 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:07:49.378 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:49.378 - INFO - +----- END KW: Utils.Check System Application Status (1121)
20190402 07:07:54.379 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:07:54.380 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:07:54.381 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:07:54.381 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:07:54.382 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:07:54.383 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:07:54.384 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:07:54.384 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:07:54.384 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:07:54.385 - INFO - &{result_dict} = { stdout= }
20190402 07:07:54.385 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:07:54.385 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:07:54.385 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:54.385 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:07:54.385 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:54.385 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:07:54.385 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:07:54.386 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:07:54.386 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:54.386 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:07:54.386 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:07:54.396 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:07:54.396 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:07:54.397 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:07:55.437 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:55.437 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:55.437 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1041)
20190402 07:07:55.437 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:07:55.438 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:07:55.438 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:07:55.438 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:07:55.438 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:07:55.438 - INFO - ${clean_out} = applying
20190402 07:07:55.438 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:07:55.439 - INFO - ${output} = applying
20190402 07:07:55.439 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:07:55.439 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:07:55.439 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:07:55.440 - INFO - echo $?
20190402 07:07:55.440 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:07:55.440 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:07:55.441 - INFO - 0
20190402 07:07:55.441 - INFO - ${rc} = 0
20190402 07:07:55.441 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:07:55.441 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:07:55.441 - INFO - 0
20190402 07:07:55.441 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:07:55.441 - INFO - ${rc} = 0
20190402 07:07:55.441 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:07:55.442 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:07:55.442 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:07:55.442 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:07:55.442 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:07:55.442 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:07:55.443 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:07:55.443 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:07:55.443 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:07:55.443 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:07:55.443 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:07:55.443 - INFO - +------ END KW: Utils.Run Command (1061)
20190402 07:07:55.443 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:07:55.444 - INFO - ${value} = applying
20190402 07:07:55.444 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:07:55.444 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:07:55.444 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:07:55.444 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:07:55.444 - FAIL - applying != applied
20190402 07:07:55.445 - DEBUG - Traceback (most recent call last):
  None
20190402 07:07:55.445 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:07:55.445 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:07:55.445 - INFO - +----- END KW: Utils.Check System Application Status (1066)
20190402 07:08:00.445 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:00.447 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:00.448 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:00.448 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:00.448 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:00.450 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:00.450 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:08:00.450 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:00.450 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:00.451 - INFO - &{result_dict} = { stdout= }
20190402 07:08:00.451 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:00.451 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:00.451 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:00.451 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:00.451 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:00.452 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:00.452 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:00.452 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:00.452 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:00.452 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:00.452 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:00.461 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:00.461 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:08:00.461 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:01.484 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:01.485 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:01.485 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1024)
20190402 07:08:01.485 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:01.485 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:01.485 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:01.485 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:01.486 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:01.486 - INFO - ${clean_out} = applying
20190402 07:08:01.486 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:01.486 - INFO - ${output} = applying
20190402 07:08:01.486 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:01.486 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:01.486 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:01.488 - INFO - echo $?
20190402 07:08:01.488 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:01.488 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:01.488 - INFO - 0
20190402 07:08:01.488 - INFO - ${rc} = 0
20190402 07:08:01.488 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:08:01.488 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:01.489 - INFO - 0
20190402 07:08:01.489 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:08:01.489 - INFO - ${rc} = 0
20190402 07:08:01.489 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:01.489 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:01.489 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:01.490 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:01.490 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:01.490 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:01.490 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:01.490 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:01.490 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:01.490 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:01.490 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:01.491 - INFO - +------ END KW: Utils.Run Command (1043)
20190402 07:08:01.491 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:01.491 - INFO - ${value} = applying
20190402 07:08:01.491 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:01.491 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:01.491 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:01.491 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:01.492 - FAIL - applying != applied
20190402 07:08:01.492 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:01.492 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:08:01.492 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:01.492 - INFO - +----- END KW: Utils.Check System Application Status (1047)
20190402 07:08:06.493 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:06.494 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:06.495 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:06.495 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:06.496 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:06.497 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:06.498 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:06.498 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:06.498 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:06.498 - INFO - &{result_dict} = { stdout= }
20190402 07:08:06.499 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:06.499 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:06.499 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:06.499 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:06.499 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:06.499 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:06.500 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:06.500 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:06.500 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:06.500 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:06.500 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:06.502 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:06.502 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:08:06.502 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:08.072 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:08.072 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:08.072 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1570)
20190402 07:08:08.072 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:08.072 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:08.073 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:08.073 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:08:08.073 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:08.073 - INFO - ${clean_out} = applying
20190402 07:08:08.073 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:08.073 - INFO - ${output} = applying
20190402 07:08:08.073 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:08.073 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:08.073 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:08.076 - INFO - echo $?
20190402 07:08:08.076 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:08:08.076 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:08.076 - INFO - 0
20190402 07:08:08.076 - INFO - ${rc} = 0
20190402 07:08:08.076 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:08:08.076 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:08.076 - INFO - 0
20190402 07:08:08.077 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:08:08.077 - INFO - ${rc} = 0
20190402 07:08:08.077 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:08:08.077 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:08.077 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:08.077 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:08.077 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:08.078 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:08.078 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:08.078 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:08.078 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:08.078 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:08.078 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:08.078 - INFO - +------ END KW: Utils.Run Command (1582)
20190402 07:08:08.079 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:08.079 - INFO - ${value} = applying
20190402 07:08:08.079 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:08:08.079 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:08.079 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:08.079 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:08.079 - FAIL - applying != applied
20190402 07:08:08.079 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:08.079 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:08:08.080 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:08.080 - INFO - +----- END KW: Utils.Check System Application Status (1587)
20190402 07:08:13.081 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:13.082 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:13.083 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:13.083 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:13.084 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:13.085 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:13.086 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:13.086 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:13.086 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:13.087 - INFO - &{result_dict} = { stdout= }
20190402 07:08:13.087 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:13.087 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:13.087 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:13.087 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:13.087 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:13.088 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:13.088 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:13.088 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:13.088 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:13.088 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:13.088 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:13.101 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:13.101 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:08:13.101 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:14.360 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:14.360 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:14.360 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1259)
20190402 07:08:14.361 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:14.361 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:14.361 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:14.361 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:14.361 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:14.361 - INFO - ${clean_out} = applying
20190402 07:08:14.361 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:14.362 - INFO - ${output} = applying
20190402 07:08:14.362 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:08:14.362 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:14.362 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:14.364 - INFO - echo $?
20190402 07:08:14.364 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:14.364 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:14.370 - INFO - 0
20190402 07:08:14.370 - INFO - ${rc} = 0
20190402 07:08:14.370 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:08:14.370 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:14.370 - INFO - 0
20190402 07:08:14.370 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:08:14.371 - INFO - ${rc} = 0
20190402 07:08:14.371 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:08:14.371 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:14.371 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:14.371 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:14.371 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:14.372 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:14.372 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:14.372 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:14.372 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:14.372 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:14.372 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:14.372 - INFO - +------ END KW: Utils.Run Command (1288)
20190402 07:08:14.372 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:14.373 - INFO - ${value} = applying
20190402 07:08:14.373 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:08:14.373 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:14.373 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:14.373 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:14.373 - FAIL - applying != applied
20190402 07:08:14.373 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:14.373 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:08:14.373 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:14.374 - INFO - +----- END KW: Utils.Check System Application Status (1293)
20190402 07:08:19.374 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:19.376 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:19.377 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:19.377 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:19.378 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:19.379 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:19.380 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:19.380 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:19.381 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:19.382 - INFO - &{result_dict} = { stdout= }
20190402 07:08:19.383 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:08:19.383 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:19.384 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:19.384 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:19.385 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:19.386 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:19.386 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:08:19.386 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:19.387 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:19.387 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:08:19.387 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:19.413 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:19.413 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:08:19.413 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:20.442 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:20.442 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:20.443 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1029)
20190402 07:08:20.443 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:20.443 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:20.443 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:20.443 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:20.443 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:20.444 - INFO - ${clean_out} = applying
20190402 07:08:20.444 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:08:20.444 - INFO - ${output} = applying
20190402 07:08:20.444 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:20.444 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:20.444 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:20.446 - INFO - echo $?
20190402 07:08:20.446 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:20.446 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:20.446 - INFO - 0
20190402 07:08:20.446 - INFO - ${rc} = 0
20190402 07:08:20.446 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:08:20.446 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:20.446 - INFO - 0
20190402 07:08:20.446 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:08:20.447 - INFO - ${rc} = 0
20190402 07:08:20.447 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:20.447 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:20.447 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:20.447 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:20.447 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:20.448 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:20.448 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:20.448 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:20.448 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:20.448 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:20.448 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:20.448 - INFO - +------ END KW: Utils.Run Command (1070)
20190402 07:08:20.448 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:20.449 - INFO - ${value} = applying
20190402 07:08:20.449 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:08:20.449 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:20.449 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:20.449 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:20.449 - FAIL - applying != applied
20190402 07:08:20.449 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:20.449 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:08:20.449 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:20.450 - INFO - +----- END KW: Utils.Check System Application Status (1076)
20190402 07:08:25.450 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:25.452 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:25.453 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:25.453 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:25.453 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:25.454 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:25.455 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:25.455 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:25.456 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:25.456 - INFO - &{result_dict} = { stdout= }
20190402 07:08:25.456 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:25.456 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:25.456 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:25.456 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:25.457 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:25.457 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:25.457 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:25.457 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:25.457 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:25.457 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:25.457 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:25.471 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:25.471 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 07:08:25.471 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:26.691 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:26.691 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:26.691 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1220)
20190402 07:08:26.691 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:26.692 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:26.692 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:26.692 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:26.692 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:26.692 - INFO - ${clean_out} = applying
20190402 07:08:26.692 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:26.692 - INFO - ${output} = applying
20190402 07:08:26.692 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:26.692 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:26.693 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:26.694 - INFO - echo $?
20190402 07:08:26.694 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:08:26.694 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:26.695 - INFO - 0
20190402 07:08:26.695 - INFO - ${rc} = 0
20190402 07:08:26.695 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:08:26.695 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:26.695 - INFO - 0
20190402 07:08:26.695 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:08:26.695 - INFO - ${rc} = 0
20190402 07:08:26.695 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:26.695 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:26.696 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:26.696 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:26.696 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:26.696 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:26.696 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:26.696 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:26.696 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:26.697 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:26.697 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:26.697 - INFO - +------ END KW: Utils.Run Command (1244)
20190402 07:08:26.697 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:26.697 - INFO - ${value} = applying
20190402 07:08:26.697 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:26.697 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:26.698 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:26.698 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:26.698 - FAIL - applying != applied
20190402 07:08:26.698 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:26.698 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:08:26.698 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:26.698 - INFO - +----- END KW: Utils.Check System Application Status (1248)
20190402 07:08:31.699 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:31.700 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:31.701 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:31.701 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:31.702 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:31.703 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:31.704 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:31.704 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:31.704 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:31.705 - INFO - &{result_dict} = { stdout= }
20190402 07:08:31.705 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:31.705 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:31.705 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:31.705 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:31.706 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:31.706 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:31.706 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:31.706 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:31.706 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:31.706 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:31.706 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:31.715 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:31.715 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:08:31.716 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:32.890 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:32.891 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:32.891 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1175)
20190402 07:08:32.891 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:32.891 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:32.891 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:32.892 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:32.892 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:32.892 - INFO - ${clean_out} = applying
20190402 07:08:32.892 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:32.892 - INFO - ${output} = applying
20190402 07:08:32.892 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:32.892 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:32.892 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:32.894 - INFO - echo $?
20190402 07:08:32.894 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:32.894 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:32.894 - INFO - 0
20190402 07:08:32.894 - INFO - ${rc} = 0
20190402 07:08:32.894 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:08:32.894 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:32.895 - INFO - 0
20190402 07:08:32.895 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:08:32.895 - INFO - ${rc} = 0
20190402 07:08:32.895 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:32.895 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:32.895 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:32.896 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:32.896 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:32.896 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:32.896 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:32.896 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:32.896 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:32.896 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:32.897 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:32.897 - INFO - +------ END KW: Utils.Run Command (1195)
20190402 07:08:32.897 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:32.897 - INFO - ${value} = applying
20190402 07:08:32.897 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:32.897 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:32.897 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:32.898 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:32.898 - FAIL - applying != applied
20190402 07:08:32.898 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:32.898 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:08:32.898 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:32.898 - INFO - +----- END KW: Utils.Check System Application Status (1199)
20190402 07:08:37.899 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:37.900 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:37.900 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:37.901 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:37.901 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:37.902 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:37.903 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:37.903 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:37.904 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:37.904 - INFO - &{result_dict} = { stdout= }
20190402 07:08:37.904 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:08:37.904 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:37.905 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:37.905 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:37.905 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:37.905 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:37.906 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:08:37.906 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:37.906 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:37.906 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:37.906 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:37.915 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:37.915 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:08:37.915 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:38.937 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:38.937 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:38.937 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1022)
20190402 07:08:38.937 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:38.937 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:38.938 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:38.938 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:08:38.938 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:38.938 - INFO - ${clean_out} = applying
20190402 07:08:38.938 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:38.938 - INFO - ${output} = applying
20190402 07:08:38.938 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:38.938 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:38.938 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:38.940 - INFO - echo $?
20190402 07:08:38.940 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:38.940 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:38.940 - INFO - 0
20190402 07:08:38.940 - INFO - ${rc} = 0
20190402 07:08:38.940 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:08:38.940 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:38.941 - INFO - 0
20190402 07:08:38.941 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:08:38.941 - INFO - ${rc} = 0
20190402 07:08:38.941 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:38.941 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:38.941 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:38.942 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:38.942 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:38.942 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:38.942 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:38.942 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:38.942 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:38.942 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:38.942 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:38.943 - INFO - +------ END KW: Utils.Run Command (1042)
20190402 07:08:38.943 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:38.943 - INFO - ${value} = applying
20190402 07:08:38.943 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:38.943 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:38.943 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:38.943 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:38.944 - FAIL - applying != applied
20190402 07:08:38.944 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:38.944 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:08:38.944 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:38.944 - INFO - +----- END KW: Utils.Check System Application Status (1046)
20190402 07:08:43.945 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:43.946 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:43.947 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:43.947 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:43.948 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:43.949 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:43.950 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:43.950 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:43.950 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:43.951 - INFO - &{result_dict} = { stdout= }
20190402 07:08:43.951 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:43.951 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:43.951 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:43.951 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:43.951 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:43.952 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:43.952 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:43.952 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:43.952 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:43.952 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:43.952 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:43.961 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:43.961 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:08:43.961 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:45.057 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:45.057 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:45.057 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1096)
20190402 07:08:45.057 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:45.058 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:45.058 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:45.058 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:45.058 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:45.058 - INFO - ${clean_out} = applying
20190402 07:08:45.058 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:45.058 - INFO - ${output} = applying
20190402 07:08:45.058 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:08:45.059 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:45.059 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:45.060 - INFO - echo $?
20190402 07:08:45.060 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:08:45.060 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:45.061 - INFO - 0
20190402 07:08:45.061 - INFO - ${rc} = 0
20190402 07:08:45.061 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:08:45.061 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:45.061 - INFO - 0
20190402 07:08:45.061 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:08:45.061 - INFO - ${rc} = 0
20190402 07:08:45.061 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:45.061 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:45.062 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:45.062 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:45.062 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:45.062 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:45.062 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:45.063 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:45.063 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:45.063 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:45.063 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:45.063 - INFO - +------ END KW: Utils.Run Command (1115)
20190402 07:08:45.063 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:45.063 - INFO - ${value} = applying
20190402 07:08:45.063 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:45.063 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:45.064 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:45.064 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:45.064 - FAIL - applying != applied
20190402 07:08:45.064 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:45.064 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:08:45.064 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:45.064 - INFO - +----- END KW: Utils.Check System Application Status (1120)
20190402 07:08:50.065 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:50.066 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:50.067 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:50.067 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:50.068 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:50.069 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:50.070 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:50.070 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:50.070 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:50.071 - INFO - &{result_dict} = { stdout= }
20190402 07:08:50.071 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:08:50.071 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:50.071 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:50.071 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:50.071 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:50.072 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:50.072 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:50.072 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:50.072 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:50.072 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:50.072 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:50.084 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:50.084 - INFO - +------- END KW: SSHLibrary.Write (12)
20190402 07:08:50.084 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:51.090 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:51.090 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:51.090 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1006)
20190402 07:08:51.090 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:51.091 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:51.091 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:51.091 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:51.091 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:51.091 - INFO - ${clean_out} = applying
20190402 07:08:51.092 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:08:51.092 - INFO - ${output} = applying
20190402 07:08:51.092 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:08:51.092 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:51.092 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:51.094 - INFO - echo $?
20190402 07:08:51.094 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:51.095 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:51.095 - INFO - 0
20190402 07:08:51.095 - INFO - ${rc} = 0
20190402 07:08:51.095 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:08:51.095 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:51.095 - INFO - 0
20190402 07:08:51.095 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:08:51.095 - INFO - ${rc} = 0
20190402 07:08:51.095 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:51.096 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:51.096 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:51.096 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:51.096 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:51.096 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:51.097 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:51.097 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:51.097 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:51.097 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:51.097 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:51.097 - INFO - +------ END KW: Utils.Run Command (1029)
20190402 07:08:51.097 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:51.097 - INFO - ${value} = applying
20190402 07:08:51.098 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:51.098 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:51.098 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:51.098 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:51.098 - FAIL - applying != applied
20190402 07:08:51.098 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:51.098 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:08:51.098 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:08:51.098 - INFO - +----- END KW: Utils.Check System Application Status (1033)
20190402 07:08:56.099 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:08:56.100 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:08:56.101 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:08:56.101 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:08:56.101 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:08:56.102 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:08:56.103 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:08:56.103 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:08:56.104 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:08:56.104 - INFO - &{result_dict} = { stdout= }
20190402 07:08:56.104 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:08:56.104 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:08:56.105 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:56.105 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:08:56.105 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:56.105 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:08:56.105 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:08:56.105 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:08:56.105 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:56.106 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:08:56.106 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:08:56.115 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:08:56.115 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:08:56.115 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:08:57.154 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:57.154 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:57.154 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1039)
20190402 07:08:57.154 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:08:57.155 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:08:57.155 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:08:57.155 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:08:57.155 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:08:57.155 - INFO - ${clean_out} = applying
20190402 07:08:57.155 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:08:57.156 - INFO - ${output} = applying
20190402 07:08:57.156 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:08:57.156 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:08:57.156 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:08:57.158 - INFO - echo $?
20190402 07:08:57.158 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:08:57.158 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:08:57.158 - INFO - 0
20190402 07:08:57.158 - INFO - ${rc} = 0
20190402 07:08:57.159 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:08:57.159 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:08:57.159 - INFO - 0
20190402 07:08:57.159 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:08:57.159 - INFO - ${rc} = 0
20190402 07:08:57.159 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:08:57.159 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:08:57.159 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:08:57.160 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:08:57.160 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:57.160 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:08:57.160 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:08:57.160 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:08:57.160 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:08:57.160 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:08:57.161 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:08:57.161 - INFO - +------ END KW: Utils.Run Command (1060)
20190402 07:08:57.161 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:08:57.161 - INFO - ${value} = applying
20190402 07:08:57.161 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:08:57.161 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:08:57.161 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:08:57.162 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:08:57.162 - FAIL - applying != applied
20190402 07:08:57.162 - DEBUG - Traceback (most recent call last):
  None
20190402 07:08:57.162 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:08:57.162 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:08:57.162 - INFO - +----- END KW: Utils.Check System Application Status (1063)
20190402 07:09:02.163 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:02.164 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:02.164 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:02.164 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:02.165 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:02.166 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:02.166 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:02.166 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:02.167 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:02.168 - INFO - &{result_dict} = { stdout= }
20190402 07:09:02.168 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:02.168 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:02.168 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:02.168 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:02.169 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:02.169 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:02.169 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:09:02.169 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:02.169 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:02.169 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:02.169 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:02.177 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:02.177 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:09:02.178 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:03.266 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:03.266 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:03.266 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1088)
20190402 07:09:03.266 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:03.266 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:03.267 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:03.267 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:09:03.267 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:03.267 - INFO - ${clean_out} = applying
20190402 07:09:03.267 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:03.267 - INFO - ${output} = applying
20190402 07:09:03.267 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:03.267 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:03.267 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:03.269 - INFO - echo $?
20190402 07:09:03.269 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:09:03.269 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:03.269 - INFO - 0
20190402 07:09:03.269 - INFO - ${rc} = 0
20190402 07:09:03.269 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:09:03.269 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:03.269 - INFO - 0
20190402 07:09:03.270 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:09:03.270 - INFO - ${rc} = 0
20190402 07:09:03.270 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:03.270 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:03.270 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:03.271 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:03.271 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:03.271 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:03.271 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:03.271 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:03.271 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:03.271 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:03.272 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:03.272 - INFO - +------ END KW: Utils.Run Command (1107)
20190402 07:09:03.272 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:03.272 - INFO - ${value} = applying
20190402 07:09:03.272 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:03.272 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:03.272 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:03.273 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:03.273 - FAIL - applying != applied
20190402 07:09:03.273 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:03.273 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:09:03.273 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:03.273 - INFO - +----- END KW: Utils.Check System Application Status (1111)
20190402 07:09:08.274 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:08.275 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:08.276 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:08.276 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:08.276 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:08.278 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:08.278 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:08.279 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:08.279 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:08.279 - INFO - &{result_dict} = { stdout= }
20190402 07:09:08.280 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:08.280 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:08.280 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:08.280 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:08.280 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:08.280 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:08.280 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:09:08.281 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:08.281 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:08.281 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:08.281 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:08.290 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:08.290 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:09:08.291 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:09.420 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:09.420 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:09.420 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1129)
20190402 07:09:09.420 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:09.420 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:09.421 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:09.421 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:09:09.421 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:09.421 - INFO - ${clean_out} = applying
20190402 07:09:09.421 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:09.421 - INFO - ${output} = applying
20190402 07:09:09.421 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:09.421 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:09.422 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:09.423 - INFO - echo $?
20190402 07:09:09.424 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:09:09.424 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:09.427 - INFO - 0
20190402 07:09:09.427 - INFO - ${rc} = 0
20190402 07:09:09.427 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:09:09.427 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:09.427 - INFO - 0
20190402 07:09:09.427 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:09.428 - INFO - ${rc} = 0
20190402 07:09:09.428 - INFO - +------- END KW: Utils.Get Return Code (7)
20190402 07:09:09.428 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:09.428 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:09.428 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:09.428 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:09:09.428 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:09.429 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:09.429 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:09.429 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:09.429 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:09.429 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:09.429 - INFO - +------ END KW: Utils.Run Command (1153)
20190402 07:09:09.429 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:09.430 - INFO - ${value} = applying
20190402 07:09:09.430 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:09:09.430 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:09.430 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:09.430 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:09.431 - FAIL - applying != applied
20190402 07:09:09.431 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:09.431 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:09:09.431 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:09.431 - INFO - +----- END KW: Utils.Check System Application Status (1157)
20190402 07:09:14.432 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:14.433 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:14.434 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:14.434 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:14.434 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:14.436 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:14.436 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:09:14.436 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:14.436 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:14.437 - INFO - &{result_dict} = { stdout= }
20190402 07:09:14.437 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:14.437 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:14.437 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:14.437 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:14.438 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:14.438 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:14.438 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:14.438 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:14.438 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:14.438 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:14.438 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:14.447 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:14.447 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:09:14.447 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:15.531 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:15.531 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:15.531 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1084)
20190402 07:09:15.531 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:15.532 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:15.532 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:15.532 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:09:15.532 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:15.532 - INFO - ${clean_out} = applying
20190402 07:09:15.532 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:15.532 - INFO - ${output} = applying
20190402 07:09:15.532 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:15.532 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:15.533 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:15.534 - INFO - echo $?
20190402 07:09:15.534 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:09:15.534 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:15.534 - INFO - 0
20190402 07:09:15.534 - INFO - ${rc} = 0
20190402 07:09:15.535 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:09:15.535 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:15.535 - INFO - 0
20190402 07:09:15.535 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:15.535 - INFO - ${rc} = 0
20190402 07:09:15.535 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:15.535 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:15.535 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:15.536 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:15.536 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:15.536 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:15.536 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:15.536 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:15.536 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:15.536 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:15.537 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:15.537 - INFO - +------ END KW: Utils.Run Command (1103)
20190402 07:09:15.537 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:15.537 - INFO - ${value} = applying
20190402 07:09:15.537 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:15.537 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:15.537 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:15.538 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:15.538 - FAIL - applying != applied
20190402 07:09:15.538 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:15.538 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:09:15.538 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:15.538 - INFO - +----- END KW: Utils.Check System Application Status (1107)
20190402 07:09:20.539 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:20.539 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:20.539 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:20.539 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:09:20.540 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:20.540 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:20.540 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:09:20.540 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:20.540 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:20.541 - INFO - &{result_dict} = { stdout= }
20190402 07:09:20.541 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:20.541 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:20.541 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:20.541 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:20.542 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:20.542 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:20.542 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:20.542 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:20.542 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:20.542 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:20.542 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:20.551 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:20.551 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:09:20.551 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:21.665 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:21.665 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:21.665 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1114)
20190402 07:09:21.666 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:21.666 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:21.666 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:21.666 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:09:21.666 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:21.667 - INFO - ${clean_out} = applying
20190402 07:09:21.667 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:09:21.667 - INFO - ${output} = applying
20190402 07:09:21.667 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:21.667 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:21.667 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:21.668 - INFO - echo $?
20190402 07:09:21.669 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:09:21.669 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:21.669 - INFO - 0
20190402 07:09:21.669 - INFO - ${rc} = 0
20190402 07:09:21.669 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:09:21.669 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:21.669 - INFO - 0
20190402 07:09:21.669 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:21.670 - INFO - ${rc} = 0
20190402 07:09:21.670 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:21.670 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:21.670 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:21.670 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:21.670 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:09:21.670 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:21.671 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:21.671 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:21.671 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:21.671 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:21.671 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:21.671 - INFO - +------ END KW: Utils.Run Command (1131)
20190402 07:09:21.671 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:21.672 - INFO - ${value} = applying
20190402 07:09:21.672 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:09:21.672 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:21.672 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:21.672 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:21.672 - FAIL - applying != applied
20190402 07:09:21.672 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:21.672 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:09:21.673 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:09:21.673 - INFO - +----- END KW: Utils.Check System Application Status (1134)
20190402 07:09:26.674 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:26.675 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:26.676 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:26.676 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:26.677 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:26.678 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:26.679 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:26.679 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:26.679 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:26.680 - INFO - &{result_dict} = { stdout= }
20190402 07:09:26.680 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:26.680 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:26.680 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:26.680 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:26.680 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:26.681 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:26.681 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:26.681 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:26.681 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:26.681 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:26.681 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:26.692 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:26.692 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:09:26.692 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:27.797 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:27.797 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:27.797 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1105)
20190402 07:09:27.797 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:27.798 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:27.798 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:27.798 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:09:27.798 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:27.798 - INFO - ${clean_out} = applying
20190402 07:09:27.798 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:27.798 - INFO - ${output} = applying
20190402 07:09:27.798 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:27.799 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:27.799 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:27.801 - INFO - echo $?
20190402 07:09:27.801 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:09:27.801 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:27.801 - INFO - 0
20190402 07:09:27.801 - INFO - ${rc} = 0
20190402 07:09:27.801 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:09:27.802 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:27.802 - INFO - 0
20190402 07:09:27.802 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:27.802 - INFO - ${rc} = 0
20190402 07:09:27.802 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:27.802 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:27.802 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:27.803 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:27.803 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:27.803 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:27.803 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:27.803 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:27.803 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:27.803 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:27.804 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:27.804 - INFO - +------ END KW: Utils.Run Command (1128)
20190402 07:09:27.804 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:27.804 - INFO - ${value} = applying
20190402 07:09:27.804 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:27.804 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:27.804 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:27.805 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:27.805 - FAIL - applying != applied
20190402 07:09:27.805 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:27.805 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:09:27.805 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:27.805 - INFO - +----- END KW: Utils.Check System Application Status (1132)
20190402 07:09:32.806 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:32.807 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:32.808 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:32.808 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:32.809 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:32.810 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:32.811 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:32.811 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:32.811 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:32.812 - INFO - &{result_dict} = { stdout= }
20190402 07:09:32.812 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:32.812 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:32.812 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:32.812 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:32.812 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:32.813 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:32.813 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:32.813 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:32.813 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:32.813 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:32.813 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:32.826 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:32.826 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:09:32.826 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:34.117 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:34.117 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:34.117 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1291)
20190402 07:09:34.117 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:34.117 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:34.118 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:34.118 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:09:34.118 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:34.118 - INFO - ${clean_out} = applying
20190402 07:09:34.118 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:34.118 - INFO - ${output} = applying
20190402 07:09:34.118 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:34.118 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:34.118 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:34.119 - INFO - echo $?
20190402 07:09:34.119 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:09:34.119 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:34.120 - INFO - 0
20190402 07:09:34.120 - INFO - ${rc} = 0
20190402 07:09:34.120 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:09:34.120 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:34.121 - INFO - 0
20190402 07:09:34.121 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:09:34.121 - INFO - ${rc} = 0
20190402 07:09:34.121 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:34.121 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:34.121 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:34.122 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:34.122 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:34.122 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:34.122 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:34.122 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:34.122 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:34.122 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:34.122 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:34.122 - INFO - +------ END KW: Utils.Run Command (1313)
20190402 07:09:34.123 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:34.123 - INFO - ${value} = applying
20190402 07:09:34.123 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:34.123 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:34.123 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:34.123 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:34.124 - FAIL - applying != applied
20190402 07:09:34.124 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:34.124 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:09:34.124 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:34.124 - INFO - +----- END KW: Utils.Check System Application Status (1318)
20190402 07:09:39.125 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:39.126 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:39.140 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:39.140 - INFO - +------ END KW: BuiltIn.Catenate (14)
20190402 07:09:39.141 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:39.141 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:39.141 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:09:39.141 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:39.142 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:39.142 - INFO - &{result_dict} = { stdout= }
20190402 07:09:39.142 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:09:39.142 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:39.142 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:39.142 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:39.143 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:39.143 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:39.143 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:39.143 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:39.143 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:39.143 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:39.143 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:39.145 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:39.145 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:09:39.145 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:40.267 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:40.267 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:40.267 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1122)
20190402 07:09:40.268 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:40.268 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:40.268 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:40.268 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:09:40.268 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:40.268 - INFO - ${clean_out} = applying
20190402 07:09:40.269 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:40.269 - INFO - ${output} = applying
20190402 07:09:40.269 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:40.269 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:40.269 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:40.270 - INFO - echo $?
20190402 07:09:40.270 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:09:40.270 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:40.271 - INFO - 0
20190402 07:09:40.271 - INFO - ${rc} = 0
20190402 07:09:40.271 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:09:40.271 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:40.271 - INFO - 0
20190402 07:09:40.271 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:40.271 - INFO - ${rc} = 0
20190402 07:09:40.271 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:09:40.271 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:40.272 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:40.272 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:40.272 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:40.272 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:40.272 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:40.272 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:40.273 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:40.273 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:09:40.273 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:40.273 - INFO - +------ END KW: Utils.Run Command (1132)
20190402 07:09:40.273 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:40.273 - INFO - ${value} = applying
20190402 07:09:40.273 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:40.273 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:40.274 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:40.274 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:40.274 - FAIL - applying != applied
20190402 07:09:40.274 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:40.274 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:09:40.274 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:40.274 - INFO - +----- END KW: Utils.Check System Application Status (1150)
20190402 07:09:45.275 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:45.276 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:45.277 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:45.278 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:45.278 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:45.279 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:45.280 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:45.280 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:45.280 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:45.281 - INFO - &{result_dict} = { stdout= }
20190402 07:09:45.281 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:45.281 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:45.281 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:45.281 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:45.281 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:45.282 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:45.282 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:45.282 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:45.282 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:45.282 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:45.282 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:45.293 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:45.293 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:09:45.293 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:46.396 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:46.397 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:46.397 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1104)
20190402 07:09:46.397 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:46.397 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:46.398 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:46.398 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:09:46.398 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:46.398 - INFO - ${clean_out} = applying
20190402 07:09:46.398 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:46.398 - INFO - ${output} = applying
20190402 07:09:46.398 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:46.398 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:46.398 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:46.400 - INFO - echo $?
20190402 07:09:46.400 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:09:46.400 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:46.401 - INFO - 0
20190402 07:09:46.401 - INFO - ${rc} = 0
20190402 07:09:46.401 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:09:46.401 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:46.401 - INFO - 0
20190402 07:09:46.401 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:46.401 - INFO - ${rc} = 0
20190402 07:09:46.401 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:46.401 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:46.402 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:46.402 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:46.402 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:46.402 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:46.402 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:46.402 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:46.403 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:46.403 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:09:46.403 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:46.403 - INFO - +------ END KW: Utils.Run Command (1125)
20190402 07:09:46.403 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:46.403 - INFO - ${value} = applying
20190402 07:09:46.403 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:46.403 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:46.404 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:46.404 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:46.404 - FAIL - applying != applied
20190402 07:09:46.404 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:46.404 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:09:46.404 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:46.404 - INFO - +----- END KW: Utils.Check System Application Status (1129)
20190402 07:09:51.405 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:51.407 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:51.407 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:51.408 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:51.408 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:51.409 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:51.410 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:51.410 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:51.410 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:51.411 - INFO - &{result_dict} = { stdout= }
20190402 07:09:51.411 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:09:51.411 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:51.411 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:51.411 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:51.411 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:51.412 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:51.412 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:09:51.412 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:51.412 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:51.412 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:51.412 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:51.421 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:51.421 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:09:51.421 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:52.491 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:52.492 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:52.492 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1071)
20190402 07:09:52.492 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:52.492 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:52.492 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:52.492 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:09:52.493 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:52.493 - INFO - ${clean_out} = applying
20190402 07:09:52.493 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:09:52.493 - INFO - ${output} = applying
20190402 07:09:52.493 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:52.493 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:52.493 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:52.495 - INFO - echo $?
20190402 07:09:52.495 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:09:52.495 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:52.495 - INFO - 0
20190402 07:09:52.495 - INFO - ${rc} = 0
20190402 07:09:52.496 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:09:52.496 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:52.496 - INFO - 0
20190402 07:09:52.496 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:52.496 - INFO - ${rc} = 0
20190402 07:09:52.496 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:09:52.496 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:52.497 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:52.497 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:52.497 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:52.497 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:52.497 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:52.497 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:52.497 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:52.497 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:09:52.498 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:52.498 - INFO - +------ END KW: Utils.Run Command (1090)
20190402 07:09:52.498 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:52.498 - INFO - ${value} = applying
20190402 07:09:52.498 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:52.498 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:52.499 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:52.499 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:52.499 - FAIL - applying != applied
20190402 07:09:52.499 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:52.499 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:09:52.499 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:52.499 - INFO - +----- END KW: Utils.Check System Application Status (1094)
20190402 07:09:57.500 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:09:57.501 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:09:57.502 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:09:57.502 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:09:57.503 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:09:57.504 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:09:57.505 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:09:57.505 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:09:57.506 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:09:57.507 - INFO - &{result_dict} = { stdout= }
20190402 07:09:57.508 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:09:57.508 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:09:57.509 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:57.509 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:09:57.510 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:09:57.511 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:09:57.511 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:09:57.512 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:09:57.512 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:57.512 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:09:57.513 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:09:57.538 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:09:57.538 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:09:57.538 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:09:58.589 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:58.589 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:58.589 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1051)
20190402 07:09:58.590 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:09:58.590 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:09:58.590 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:09:58.590 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:09:58.590 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:09:58.591 - INFO - ${clean_out} = applying
20190402 07:09:58.591 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:09:58.591 - INFO - ${output} = applying
20190402 07:09:58.591 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:09:58.591 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:09:58.591 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:09:58.593 - INFO - echo $?
20190402 07:09:58.593 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:09:58.593 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:09:58.596 - INFO - 0
20190402 07:09:58.596 - INFO - ${rc} = 0
20190402 07:09:58.597 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:09:58.597 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:09:58.597 - INFO - 0
20190402 07:09:58.597 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:09:58.597 - INFO - ${rc} = 0
20190402 07:09:58.597 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 07:09:58.597 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:09:58.598 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:09:58.598 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:58.598 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:58.598 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:09:58.598 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:09:58.599 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:09:58.599 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:09:58.599 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:09:58.599 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:09:58.599 - INFO - +------ END KW: Utils.Run Command (1096)
20190402 07:09:58.599 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:09:58.599 - INFO - ${value} = applying
20190402 07:09:58.599 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:09:58.599 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:09:58.600 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:09:58.600 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:09:58.600 - FAIL - applying != applied
20190402 07:09:58.600 - DEBUG - Traceback (most recent call last):
  None
20190402 07:09:58.600 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:09:58.600 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:09:58.600 - INFO - +----- END KW: Utils.Check System Application Status (1100)
20190402 07:10:03.601 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:03.603 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:03.603 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:03.604 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:10:03.604 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:03.605 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:03.606 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:10:03.607 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:03.608 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:03.609 - INFO - &{result_dict} = { stdout= }
20190402 07:10:03.609 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:10:03.610 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:03.611 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:03.611 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:03.612 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:03.612 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:03.613 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:10:03.613 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:03.613 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:03.614 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:10:03.614 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:03.641 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:03.641 - INFO - +------- END KW: SSHLibrary.Write (27)
20190402 07:10:03.641 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:04.775 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:04.775 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:04.775 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1134)
20190402 07:10:04.775 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:04.776 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:04.776 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:04.776 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:04.776 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:04.776 - INFO - ${clean_out} = applying
20190402 07:10:04.776 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:10:04.776 - INFO - ${output} = applying
20190402 07:10:04.776 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:04.777 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:04.777 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:04.778 - INFO - echo $?
20190402 07:10:04.778 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:10:04.778 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:04.779 - INFO - 0
20190402 07:10:04.779 - INFO - ${rc} = 0
20190402 07:10:04.779 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:10:04.779 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:04.779 - INFO - 0
20190402 07:10:04.779 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:04.779 - INFO - ${rc} = 0
20190402 07:10:04.779 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:10:04.779 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:04.780 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:04.780 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:04.780 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:04.780 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:04.780 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:04.781 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:04.781 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:04.781 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:04.781 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:04.781 - INFO - +------ END KW: Utils.Run Command (1177)
20190402 07:10:04.781 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:04.781 - INFO - ${value} = applying
20190402 07:10:04.781 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:04.781 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:04.782 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:04.782 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:04.782 - FAIL - applying != applied
20190402 07:10:04.782 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:04.782 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:04.782 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:04.782 - INFO - +----- END KW: Utils.Check System Application Status (1181)
20190402 07:10:09.783 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:09.784 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:09.785 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:09.785 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:09.786 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:09.787 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:09.787 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:09.788 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:09.788 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:09.789 - INFO - &{result_dict} = { stdout= }
20190402 07:10:09.790 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:09.790 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:09.791 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:09.791 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:09.792 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:09.792 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:09.793 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 07:10:09.793 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:09.793 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:09.793 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:09.794 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:09.815 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:09.815 - INFO - +------- END KW: SSHLibrary.Write (21)
20190402 07:10:09.815 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:11.161 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:11.161 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:11.162 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1346)
20190402 07:10:11.162 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:11.162 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:11.162 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:11.162 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:11.162 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:11.163 - INFO - ${clean_out} = applying
20190402 07:10:11.163 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:10:11.163 - INFO - ${output} = applying
20190402 07:10:11.163 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:11.163 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:11.163 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:11.164 - INFO - echo $?
20190402 07:10:11.165 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:10:11.165 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:11.165 - INFO - 0
20190402 07:10:11.165 - INFO - ${rc} = 0
20190402 07:10:11.165 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:10:11.165 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:11.165 - INFO - 0
20190402 07:10:11.165 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:11.165 - INFO - ${rc} = 0
20190402 07:10:11.166 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:10:11.166 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:11.166 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:11.166 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:11.166 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:11.166 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:11.167 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:11.167 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:11.167 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:11.167 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:11.167 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:11.167 - INFO - +------ END KW: Utils.Run Command (1382)
20190402 07:10:11.167 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:11.168 - INFO - ${value} = applying
20190402 07:10:11.168 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:10:11.168 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:11.168 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:11.168 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:11.168 - FAIL - applying != applied
20190402 07:10:11.168 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:11.168 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:11.169 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:11.169 - INFO - +----- END KW: Utils.Check System Application Status (1386)
20190402 07:10:16.169 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:16.171 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:16.172 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:16.172 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:16.172 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:16.174 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:16.174 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:16.174 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:16.174 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:16.175 - INFO - &{result_dict} = { stdout= }
20190402 07:10:16.175 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:16.175 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:16.175 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:16.175 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:16.176 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:16.176 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:16.176 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:16.176 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:16.176 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:16.176 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:16.176 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:16.185 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:16.185 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:10:16.185 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:17.293 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:17.293 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:17.293 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1108)
20190402 07:10:17.294 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:17.294 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:17.294 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:17.294 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:17.294 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:17.295 - INFO - ${clean_out} = applying
20190402 07:10:17.295 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:10:17.295 - INFO - ${output} = applying
20190402 07:10:17.295 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:17.295 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:17.295 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:17.296 - INFO - echo $?
20190402 07:10:17.296 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:10:17.297 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:17.297 - INFO - 0
20190402 07:10:17.297 - INFO - ${rc} = 0
20190402 07:10:17.297 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:10:17.297 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:17.297 - INFO - 0
20190402 07:10:17.297 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:17.297 - INFO - ${rc} = 0
20190402 07:10:17.297 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:10:17.298 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:17.298 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:17.298 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:17.298 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:17.298 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:17.299 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:17.299 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:17.299 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:17.299 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:17.299 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:17.299 - INFO - +------ END KW: Utils.Run Command (1127)
20190402 07:10:17.299 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:17.299 - INFO - ${value} = applying
20190402 07:10:17.299 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:17.300 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:17.300 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:17.300 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:17.300 - FAIL - applying != applied
20190402 07:10:17.300 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:17.300 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:17.300 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:17.301 - INFO - +----- END KW: Utils.Check System Application Status (1131)
20190402 07:10:22.301 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:22.303 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:22.304 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:22.304 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:22.304 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:22.306 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:22.306 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:22.306 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:22.306 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:22.307 - INFO - &{result_dict} = { stdout= }
20190402 07:10:22.307 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:22.307 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:22.307 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:22.307 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:22.307 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:22.308 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:22.308 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:22.308 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:22.308 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:22.308 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:22.308 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:22.317 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:22.317 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:10:22.317 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:23.447 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:23.447 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:23.447 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1130)
20190402 07:10:23.447 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:23.447 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:23.447 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:23.448 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:10:23.448 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:23.448 - INFO - ${clean_out} = applying
20190402 07:10:23.448 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:10:23.448 - INFO - ${output} = applying
20190402 07:10:23.448 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:23.448 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:23.448 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:23.450 - INFO - echo $?
20190402 07:10:23.450 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:10:23.450 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:23.450 - INFO - 0
20190402 07:10:23.450 - INFO - ${rc} = 0
20190402 07:10:23.450 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:10:23.451 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:23.451 - INFO - 0
20190402 07:10:23.451 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:10:23.451 - INFO - ${rc} = 0
20190402 07:10:23.451 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:10:23.451 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:23.451 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:23.452 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:23.452 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:23.452 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:23.452 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:23.452 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:23.452 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:23.452 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:23.452 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:23.453 - INFO - +------ END KW: Utils.Run Command (1149)
20190402 07:10:23.453 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:23.453 - INFO - ${value} = applying
20190402 07:10:23.453 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:23.453 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:23.453 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:23.453 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:23.454 - FAIL - applying != applied
20190402 07:10:23.454 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:23.454 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:10:23.454 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:23.454 - INFO - +----- END KW: Utils.Check System Application Status (1153)
20190402 07:10:28.455 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:28.456 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:28.457 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:28.457 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:28.457 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:28.459 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:28.459 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:10:28.460 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:28.460 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:28.460 - INFO - &{result_dict} = { stdout= }
20190402 07:10:28.460 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:10:28.461 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:28.461 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:28.461 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:28.461 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:28.461 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:28.461 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:10:28.462 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:28.462 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:28.462 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:28.462 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:28.470 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:28.470 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:10:28.470 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:29.756 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:29.756 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:29.756 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1286)
20190402 07:10:29.756 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:29.757 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:29.757 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:29.757 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:29.757 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:29.757 - INFO - ${clean_out} = applying
20190402 07:10:29.757 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:10:29.757 - INFO - ${output} = applying
20190402 07:10:29.757 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:29.758 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:29.758 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:29.759 - INFO - echo $?
20190402 07:10:29.759 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:10:29.759 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:29.760 - INFO - 0
20190402 07:10:29.760 - INFO - ${rc} = 0
20190402 07:10:29.760 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:10:29.760 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:29.760 - INFO - 0
20190402 07:10:29.760 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:29.760 - INFO - ${rc} = 0
20190402 07:10:29.760 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:10:29.761 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:29.761 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:29.761 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:29.761 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:29.761 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:29.762 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:29.762 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:29.762 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:29.762 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:29.762 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:29.762 - INFO - +------ END KW: Utils.Run Command (1305)
20190402 07:10:29.762 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:29.763 - INFO - ${value} = applying
20190402 07:10:29.763 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:10:29.763 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:29.763 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:29.763 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:29.763 - FAIL - applying != applied
20190402 07:10:29.763 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:29.763 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:29.764 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:29.764 - INFO - +----- END KW: Utils.Check System Application Status (1309)
20190402 07:10:34.765 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:34.766 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:34.767 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:34.767 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:34.767 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:34.769 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:34.769 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:34.769 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:34.769 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:34.770 - INFO - &{result_dict} = { stdout= }
20190402 07:10:34.770 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:34.770 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:34.770 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:34.770 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:34.770 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:34.771 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:34.771 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:34.771 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:34.771 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:34.771 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:34.771 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:34.785 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:34.785 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 07:10:34.785 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:35.869 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:35.869 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:35.869 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1084)
20190402 07:10:35.869 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:35.870 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:35.870 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:35.870 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:35.870 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:35.870 - INFO - ${clean_out} = applying
20190402 07:10:35.870 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:10:35.871 - INFO - ${output} = applying
20190402 07:10:35.871 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:10:35.871 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:35.871 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:35.872 - INFO - echo $?
20190402 07:10:35.872 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:10:35.873 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:35.873 - INFO - 0
20190402 07:10:35.873 - INFO - ${rc} = 0
20190402 07:10:35.873 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:10:35.873 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:35.873 - INFO - 0
20190402 07:10:35.873 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:35.873 - INFO - ${rc} = 0
20190402 07:10:35.873 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:10:35.873 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:35.874 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:35.874 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:35.874 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:35.874 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:35.874 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:35.875 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:35.875 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:35.875 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:35.875 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:35.875 - INFO - +------ END KW: Utils.Run Command (1108)
20190402 07:10:35.875 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:35.875 - INFO - ${value} = applying
20190402 07:10:35.875 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:35.876 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:35.876 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:35.876 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:35.876 - FAIL - applying != applied
20190402 07:10:35.876 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:35.876 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:35.876 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:35.877 - INFO - +----- END KW: Utils.Check System Application Status (1112)
20190402 07:10:40.877 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:40.879 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:40.880 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:40.880 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:40.880 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:40.882 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:40.882 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:40.882 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:40.882 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:40.883 - INFO - &{result_dict} = { stdout= }
20190402 07:10:40.883 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:40.883 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:40.883 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:40.883 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:40.884 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:40.884 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:40.884 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:40.884 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:40.884 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:40.884 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:40.884 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:40.892 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:40.892 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:10:40.892 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:41.958 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:41.958 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:41.958 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1066)
20190402 07:10:41.958 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:41.959 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:41.959 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:41.959 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:41.959 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:41.959 - INFO - ${clean_out} = applying
20190402 07:10:41.959 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:10:41.959 - INFO - ${output} = applying
20190402 07:10:41.959 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:41.959 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:41.960 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:41.962 - INFO - echo $?
20190402 07:10:41.962 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:10:41.962 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:41.963 - INFO - 0
20190402 07:10:41.964 - INFO - ${rc} = 0
20190402 07:10:41.964 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 07:10:41.964 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:41.964 - INFO - 0
20190402 07:10:41.964 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:41.964 - INFO - ${rc} = 0
20190402 07:10:41.964 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:10:41.964 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:41.965 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:41.965 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:41.965 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:41.965 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:41.965 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:41.965 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:41.966 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:41.966 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:10:41.966 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:41.966 - INFO - +------ END KW: Utils.Run Command (1086)
20190402 07:10:41.966 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:41.966 - INFO - ${value} = applying
20190402 07:10:41.966 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:41.966 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:41.967 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:41.967 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:41.967 - FAIL - applying != applied
20190402 07:10:41.967 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:41.967 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:41.967 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:41.967 - INFO - +----- END KW: Utils.Check System Application Status (1090)
20190402 07:10:46.968 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:46.970 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:46.971 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:46.971 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:46.971 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:46.973 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:46.973 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:46.973 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:46.973 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:46.974 - INFO - &{result_dict} = { stdout= }
20190402 07:10:46.974 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:46.974 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:46.974 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:46.974 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:46.974 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:46.975 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:46.975 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:46.975 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:46.975 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:46.975 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:46.975 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:46.984 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:46.984 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:10:46.984 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:48.035 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:48.035 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:48.035 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1051)
20190402 07:10:48.035 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:48.036 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:48.036 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:48.036 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:10:48.036 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:48.036 - INFO - ${clean_out} = applying
20190402 07:10:48.036 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:10:48.036 - INFO - ${output} = applying
20190402 07:10:48.036 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:48.036 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:48.037 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:48.038 - INFO - echo $?
20190402 07:10:48.038 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:10:48.038 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:48.038 - INFO - 0
20190402 07:10:48.038 - INFO - ${rc} = 0
20190402 07:10:48.038 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:10:48.039 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:48.039 - INFO - 0
20190402 07:10:48.039 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:48.039 - INFO - ${rc} = 0
20190402 07:10:48.039 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:10:48.039 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:48.039 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:48.040 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:48.040 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:48.040 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:48.040 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:48.040 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:48.040 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:48.040 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:48.041 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:48.041 - INFO - +------ END KW: Utils.Run Command (1070)
20190402 07:10:48.041 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:48.041 - INFO - ${value} = applying
20190402 07:10:48.041 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:48.041 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:48.041 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:48.042 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:48.042 - FAIL - applying != applied
20190402 07:10:48.042 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:48.042 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:10:48.042 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:10:48.042 - INFO - +----- END KW: Utils.Check System Application Status (1074)
20190402 07:10:53.043 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:53.044 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:53.045 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:53.045 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:10:53.046 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:53.047 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:53.048 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:10:53.048 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:53.048 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:53.049 - INFO - &{result_dict} = { stdout= }
20190402 07:10:53.049 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:53.049 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:53.049 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:53.049 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:53.049 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:53.050 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:53.050 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:53.050 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:53.050 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:53.050 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:53.050 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:53.060 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:53.060 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:10:53.060 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:10:54.086 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:54.087 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:54.087 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1027)
20190402 07:10:54.087 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:10:54.087 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:10:54.087 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:54.087 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:10:54.088 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:10:54.088 - INFO - ${clean_out} = applying
20190402 07:10:54.088 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:10:54.088 - INFO - ${output} = applying
20190402 07:10:54.088 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:10:54.088 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:10:54.088 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:10:54.089 - INFO - echo $?
20190402 07:10:54.090 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:10:54.090 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:10:54.090 - INFO - 0
20190402 07:10:54.090 - INFO - ${rc} = 0
20190402 07:10:54.090 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:10:54.090 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:10:54.090 - INFO - 0
20190402 07:10:54.090 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:10:54.090 - INFO - ${rc} = 0
20190402 07:10:54.090 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:10:54.091 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:10:54.091 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:10:54.091 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:54.091 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:54.091 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:10:54.092 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:54.092 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:10:54.092 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:10:54.092 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:10:54.092 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:10:54.092 - INFO - +------ END KW: Utils.Run Command (1046)
20190402 07:10:54.092 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:10:54.092 - INFO - ${value} = applying
20190402 07:10:54.093 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:10:54.093 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:10:54.093 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:10:54.093 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:10:54.093 - FAIL - applying != applied
20190402 07:10:54.093 - DEBUG - Traceback (most recent call last):
  None
20190402 07:10:54.093 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:10:54.093 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:10:54.093 - INFO - +----- END KW: Utils.Check System Application Status (1050)
20190402 07:10:59.094 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:10:59.096 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:10:59.097 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:10:59.097 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:10:59.098 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:10:59.099 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:10:59.099 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:10:59.099 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:10:59.100 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:10:59.100 - INFO - &{result_dict} = { stdout= }
20190402 07:10:59.100 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:10:59.100 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:10:59.100 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:10:59.100 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:10:59.101 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:10:59.101 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:10:59.101 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:10:59.101 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:10:59.101 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:10:59.101 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:10:59.101 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:10:59.104 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:10:59.104 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 07:10:59.104 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:00.170 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:00.170 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:00.170 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1066)
20190402 07:11:00.170 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:00.170 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:00.171 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:00.171 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:11:00.171 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:00.171 - INFO - ${clean_out} = applying
20190402 07:11:00.171 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:00.171 - INFO - ${output} = applying
20190402 07:11:00.171 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:00.171 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:00.172 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:00.173 - INFO - echo $?
20190402 07:11:00.173 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:11:00.173 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:00.173 - INFO - 0
20190402 07:11:00.174 - INFO - ${rc} = 0
20190402 07:11:00.174 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:11:00.174 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:00.174 - INFO - 0
20190402 07:11:00.174 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:00.174 - INFO - ${rc} = 0
20190402 07:11:00.174 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:11:00.174 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:00.175 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:00.175 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:00.175 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:00.175 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:00.175 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:00.175 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:00.176 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:00.176 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:11:00.176 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:00.176 - INFO - +------ END KW: Utils.Run Command (1078)
20190402 07:11:00.176 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:00.176 - INFO - ${value} = applying
20190402 07:11:00.176 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:00.176 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:00.177 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:00.177 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:00.177 - FAIL - applying != applied
20190402 07:11:00.177 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:00.177 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:00.177 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:00.177 - INFO - +----- END KW: Utils.Check System Application Status (1083)
20190402 07:11:05.178 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:05.179 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:05.180 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:05.181 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:11:05.181 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:05.183 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:05.183 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:05.183 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:05.184 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:05.184 - INFO - &{result_dict} = { stdout= }
20190402 07:11:05.184 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:11:05.184 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:05.184 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:05.184 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:05.185 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:05.185 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:05.185 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:05.185 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:05.185 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:05.185 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:05.185 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:05.194 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:05.194 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:11:05.194 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:06.285 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:06.285 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:06.285 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1091)
20190402 07:11:06.285 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:06.285 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:06.286 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:06.286 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:11:06.286 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:06.286 - INFO - ${clean_out} = applying
20190402 07:11:06.286 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:06.286 - INFO - ${output} = applying
20190402 07:11:06.286 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:06.286 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:06.286 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:06.288 - INFO - echo $?
20190402 07:11:06.288 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:11:06.288 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:06.290 - INFO - 0
20190402 07:11:06.290 - INFO - ${rc} = 0
20190402 07:11:06.290 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 07:11:06.290 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:06.290 - INFO - 0
20190402 07:11:06.290 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:06.290 - INFO - ${rc} = 0
20190402 07:11:06.290 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:11:06.290 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:06.291 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:06.291 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:06.291 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:06.291 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:06.291 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:06.291 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:06.291 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:06.292 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:11:06.292 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:06.292 - INFO - +------ END KW: Utils.Run Command (1111)
20190402 07:11:06.292 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:06.292 - INFO - ${value} = applying
20190402 07:11:06.292 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:06.292 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:06.293 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:06.293 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:06.293 - FAIL - applying != applied
20190402 07:11:06.293 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:06.293 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:06.293 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:06.293 - INFO - +----- END KW: Utils.Check System Application Status (1115)
20190402 07:11:11.294 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:11.295 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:11.296 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:11.296 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:11.297 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:11.298 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:11.299 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:11.299 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:11.299 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:11.300 - INFO - &{result_dict} = { stdout= }
20190402 07:11:11.300 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:11.300 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:11.300 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:11.300 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:11.300 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:11.301 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:11.301 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:11.301 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:11.301 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:11.301 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:11.301 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:11.314 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:11.314 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:11:11.315 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:12.335 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:12.335 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:12.335 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1020)
20190402 07:11:12.335 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:12.335 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:12.336 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:12.336 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:11:12.336 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:12.336 - INFO - ${clean_out} = applying
20190402 07:11:12.336 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:12.336 - INFO - ${output} = applying
20190402 07:11:12.336 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:12.336 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:12.337 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:12.339 - INFO - echo $?
20190402 07:11:12.339 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:11:12.339 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:12.339 - INFO - 0
20190402 07:11:12.339 - INFO - ${rc} = 0
20190402 07:11:12.339 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:11:12.339 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:12.339 - INFO - 0
20190402 07:11:12.340 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:12.340 - INFO - ${rc} = 0
20190402 07:11:12.340 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:11:12.340 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:12.340 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:12.341 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:12.341 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:12.341 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:12.341 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:12.341 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:12.341 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:12.341 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:12.341 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:12.341 - INFO - +------ END KW: Utils.Run Command (1044)
20190402 07:11:12.342 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:12.342 - INFO - ${value} = applying
20190402 07:11:12.342 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:12.342 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:12.342 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:12.342 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:12.342 - FAIL - applying != applied
20190402 07:11:12.342 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:12.342 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:12.343 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:12.343 - INFO - +----- END KW: Utils.Check System Application Status (1049)
20190402 07:11:17.344 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:17.345 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:17.346 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:17.346 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:17.346 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:17.348 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:17.348 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:11:17.348 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:17.348 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:17.349 - INFO - &{result_dict} = { stdout= }
20190402 07:11:17.349 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:17.349 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:17.349 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:17.349 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:17.350 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:17.350 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:17.350 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:17.350 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:17.350 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:17.350 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:17.350 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:17.364 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:17.364 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 07:11:17.365 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:18.421 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:18.421 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:18.421 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1056)
20190402 07:11:18.421 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:18.422 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:18.422 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:18.422 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:11:18.422 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:18.422 - INFO - ${clean_out} = applying
20190402 07:11:18.422 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:18.422 - INFO - ${output} = applying
20190402 07:11:18.422 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:18.423 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:18.423 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:18.424 - INFO - echo $?
20190402 07:11:18.425 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:11:18.425 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:18.425 - INFO - 0
20190402 07:11:18.425 - INFO - ${rc} = 0
20190402 07:11:18.425 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:11:18.425 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:18.425 - INFO - 0
20190402 07:11:18.425 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:18.425 - INFO - ${rc} = 0
20190402 07:11:18.425 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:11:18.426 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:18.426 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:18.426 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:18.426 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:18.426 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:18.427 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:18.427 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:18.427 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:18.427 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:18.427 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:18.427 - INFO - +------ END KW: Utils.Run Command (1081)
20190402 07:11:18.427 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:18.427 - INFO - ${value} = applying
20190402 07:11:18.427 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:18.428 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:18.428 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:18.428 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:18.428 - FAIL - applying != applied
20190402 07:11:18.428 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:18.428 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:18.428 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:18.428 - INFO - +----- END KW: Utils.Check System Application Status (1085)
20190402 07:11:23.429 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:23.430 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:23.431 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:23.432 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:23.432 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:23.433 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:23.434 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:23.434 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:23.434 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:23.435 - INFO - &{result_dict} = { stdout= }
20190402 07:11:23.435 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:23.435 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:23.435 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:23.435 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:23.435 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:23.436 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:23.436 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:23.436 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:23.436 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:23.436 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:23.436 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:23.445 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:23.446 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:11:23.446 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:24.487 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:24.487 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:24.487 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1041)
20190402 07:11:24.487 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:24.487 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:24.488 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:24.488 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:11:24.488 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:24.488 - INFO - ${clean_out} = applying
20190402 07:11:24.488 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:24.488 - INFO - ${output} = applying
20190402 07:11:24.488 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:24.488 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:24.489 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:24.490 - INFO - echo $?
20190402 07:11:24.490 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:11:24.490 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:24.490 - INFO - 0
20190402 07:11:24.490 - INFO - ${rc} = 0
20190402 07:11:24.490 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:11:24.490 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:24.490 - INFO - 0
20190402 07:11:24.491 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:11:24.491 - INFO - ${rc} = 0
20190402 07:11:24.491 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:11:24.491 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:24.491 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:24.491 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:24.492 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:24.492 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:24.492 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:24.492 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:24.492 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:24.492 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:24.492 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:24.492 - INFO - +------ END KW: Utils.Run Command (1060)
20190402 07:11:24.492 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:24.493 - INFO - ${value} = applying
20190402 07:11:24.493 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:11:24.493 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:24.493 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:24.493 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:24.493 - FAIL - applying != applied
20190402 07:11:24.493 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:24.493 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:24.494 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:24.494 - INFO - +----- END KW: Utils.Check System Application Status (1065)
20190402 07:11:29.494 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:29.496 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:29.497 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:29.497 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:29.497 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:29.499 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:29.499 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:11:29.499 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:29.499 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:29.500 - INFO - &{result_dict} = { stdout= }
20190402 07:11:29.500 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:29.500 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:29.500 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:29.500 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:29.500 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:29.501 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:29.501 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:29.501 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:29.501 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:29.501 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:29.501 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:29.509 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:29.509 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:11:29.510 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:30.659 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:30.660 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:30.660 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1150)
20190402 07:11:30.660 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:30.660 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:30.661 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:30.661 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:11:30.661 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:30.661 - INFO - ${clean_out} = applying
20190402 07:11:30.661 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:30.661 - INFO - ${output} = applying
20190402 07:11:30.661 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:30.661 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:30.662 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:30.663 - INFO - echo $?
20190402 07:11:30.663 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:11:30.664 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:30.664 - INFO - 0
20190402 07:11:30.664 - INFO - ${rc} = 0
20190402 07:11:30.664 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:11:30.664 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:30.664 - INFO - 0
20190402 07:11:30.664 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:30.664 - INFO - ${rc} = 0
20190402 07:11:30.664 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:11:30.665 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:30.665 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:30.665 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:30.665 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:30.665 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:30.666 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:30.666 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:30.666 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:30.666 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:30.666 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:30.666 - INFO - +------ END KW: Utils.Run Command (1169)
20190402 07:11:30.666 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:30.666 - INFO - ${value} = applying
20190402 07:11:30.666 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:30.667 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:30.667 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:30.667 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:30.667 - FAIL - applying != applied
20190402 07:11:30.667 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:30.667 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:30.667 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:30.667 - INFO - +----- END KW: Utils.Check System Application Status (1173)
20190402 07:11:35.668 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:35.669 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:35.670 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:35.671 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:11:35.671 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:35.672 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:35.673 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:35.673 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:35.673 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:35.674 - INFO - &{result_dict} = { stdout= }
20190402 07:11:35.674 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:35.674 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:35.674 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:35.674 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:35.674 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:35.674 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:35.675 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:35.675 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:35.675 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:35.675 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:35.675 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:35.688 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:35.688 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:11:35.688 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:36.694 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:36.694 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:36.694 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1006)
20190402 07:11:36.694 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:36.695 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:36.695 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:36.695 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:11:36.695 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:36.695 - INFO - ${clean_out} = applying
20190402 07:11:36.695 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:36.695 - INFO - ${output} = applying
20190402 07:11:36.695 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:36.695 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:36.696 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:36.698 - INFO - echo $?
20190402 07:11:36.698 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:11:36.699 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:36.699 - INFO - 0
20190402 07:11:36.699 - INFO - ${rc} = 0
20190402 07:11:36.699 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:11:36.699 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:36.699 - INFO - 0
20190402 07:11:36.699 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:36.699 - INFO - ${rc} = 0
20190402 07:11:36.699 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:11:36.699 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:36.700 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:36.700 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:36.700 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:36.700 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:36.700 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:36.701 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:36.701 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:36.701 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:11:36.701 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:36.701 - INFO - +------ END KW: Utils.Run Command (1030)
20190402 07:11:36.701 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:36.701 - INFO - ${value} = applying
20190402 07:11:36.701 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:36.702 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:36.702 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:36.702 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:36.702 - FAIL - applying != applied
20190402 07:11:36.702 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:36.702 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:36.702 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:36.702 - INFO - +----- END KW: Utils.Check System Application Status (1034)
20190402 07:11:41.703 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:41.704 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:41.705 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:41.706 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:41.706 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:41.707 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:41.708 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:41.708 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:41.708 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:41.709 - INFO - &{result_dict} = { stdout= }
20190402 07:11:41.709 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:41.709 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:41.709 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:41.709 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:41.709 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:41.710 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:41.710 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:41.710 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:41.710 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:41.710 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:41.710 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:41.719 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:41.720 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:11:41.720 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:42.726 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:42.726 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:42.726 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1006)
20190402 07:11:42.727 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:42.727 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:42.727 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:42.727 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:11:42.727 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:42.727 - INFO - ${clean_out} = applying
20190402 07:11:42.727 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:42.728 - INFO - ${output} = applying
20190402 07:11:42.728 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:42.728 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:42.728 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:42.729 - INFO - echo $?
20190402 07:11:42.729 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:11:42.730 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:42.730 - INFO - 0
20190402 07:11:42.730 - INFO - ${rc} = 0
20190402 07:11:42.730 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:11:42.730 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:42.730 - INFO - 0
20190402 07:11:42.730 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:42.730 - INFO - ${rc} = 0
20190402 07:11:42.730 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:11:42.731 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:42.731 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:42.731 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:42.731 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:42.732 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:42.732 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:42.732 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:42.732 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:42.732 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:42.732 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:42.732 - INFO - +------ END KW: Utils.Run Command (1026)
20190402 07:11:42.732 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:42.733 - INFO - ${value} = applying
20190402 07:11:42.733 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:11:42.733 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:42.733 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:42.733 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:42.733 - FAIL - applying != applied
20190402 07:11:42.733 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:42.733 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:11:42.733 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:11:42.734 - INFO - +----- END KW: Utils.Check System Application Status (1031)
20190402 07:11:47.734 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:47.735 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:47.736 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:47.736 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:47.737 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:47.738 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:47.739 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:47.739 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:47.740 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:47.741 - INFO - &{result_dict} = { stdout= }
20190402 07:11:47.741 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:47.742 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:47.743 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:47.743 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:47.744 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:47.744 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:47.745 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:11:47.745 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:47.745 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:47.746 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:47.746 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:47.770 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:47.770 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 07:11:47.771 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:48.792 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:48.792 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:48.792 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1021)
20190402 07:11:48.793 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:48.793 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:48.793 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:48.793 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:11:48.793 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:48.794 - INFO - ${clean_out} = applying
20190402 07:11:48.794 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:11:48.794 - INFO - ${output} = applying
20190402 07:11:48.794 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:48.794 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:48.794 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:48.796 - INFO - echo $?
20190402 07:11:48.796 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:11:48.796 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:48.796 - INFO - 0
20190402 07:11:48.796 - INFO - ${rc} = 0
20190402 07:11:48.796 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:11:48.797 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:48.797 - INFO - 0
20190402 07:11:48.797 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:11:48.797 - INFO - ${rc} = 0
20190402 07:11:48.797 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:11:48.797 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:48.797 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:48.798 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:48.798 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:48.798 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:48.798 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:48.798 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:48.798 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:48.798 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:48.799 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:48.799 - INFO - +------ END KW: Utils.Run Command (1062)
20190402 07:11:48.799 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:48.799 - INFO - ${value} = applying
20190402 07:11:48.799 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:48.799 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:48.800 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:48.800 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:48.800 - FAIL - applying != applied
20190402 07:11:48.800 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:48.800 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:11:48.800 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:48.800 - INFO - +----- END KW: Utils.Check System Application Status (1066)
20190402 07:11:53.801 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:53.802 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:53.803 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:53.803 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:11:53.804 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:53.805 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:53.806 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:11:53.806 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:53.806 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:53.807 - INFO - &{result_dict} = { stdout= }
20190402 07:11:53.807 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:53.807 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:53.807 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:53.807 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:53.808 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:53.808 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:53.808 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:11:53.808 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:53.808 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:53.808 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:11:53.808 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:53.817 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:53.817 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:11:53.817 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:11:54.902 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:54.902 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:54.902 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1085)
20190402 07:11:54.902 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:11:54.903 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:11:54.903 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:54.903 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:11:54.903 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:11:54.903 - INFO - ${clean_out} = applying
20190402 07:11:54.903 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:11:54.903 - INFO - ${output} = applying
20190402 07:11:54.903 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:11:54.903 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:11:54.904 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:11:54.905 - INFO - echo $?
20190402 07:11:54.905 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:11:54.906 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:11:54.907 - INFO - 0
20190402 07:11:54.907 - INFO - ${rc} = 0
20190402 07:11:54.907 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:11:54.907 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:11:54.908 - INFO - 0
20190402 07:11:54.908 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:11:54.908 - INFO - ${rc} = 0
20190402 07:11:54.908 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:11:54.908 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:11:54.908 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:11:54.909 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:54.909 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:54.909 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:11:54.909 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:11:54.909 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:11:54.909 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:11:54.909 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:11:54.910 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:11:54.910 - INFO - +------ END KW: Utils.Run Command (1106)
20190402 07:11:54.910 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:11:54.910 - INFO - ${value} = applying
20190402 07:11:54.910 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:11:54.910 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:11:54.910 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:11:54.911 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:11:54.911 - FAIL - applying != applied
20190402 07:11:54.911 - DEBUG - Traceback (most recent call last):
  None
20190402 07:11:54.911 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:11:54.911 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:11:54.911 - INFO - +----- END KW: Utils.Check System Application Status (1110)
20190402 07:11:59.912 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:11:59.913 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:11:59.913 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:11:59.913 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:11:59.914 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:11:59.915 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:11:59.915 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:11:59.916 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:11:59.916 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:11:59.917 - INFO - &{result_dict} = { stdout= }
20190402 07:11:59.917 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:11:59.917 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:11:59.918 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:59.918 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:11:59.919 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:11:59.920 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:11:59.920 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 07:11:59.920 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:11:59.920 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:11:59.921 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:11:59.921 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:11:59.947 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:11:59.947 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:11:59.947 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:01.011 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:01.011 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:01.011 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1064)
20190402 07:12:01.011 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:01.011 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:01.011 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:01.012 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:12:01.012 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:01.012 - INFO - ${clean_out} = applying
20190402 07:12:01.012 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:01.012 - INFO - ${output} = applying
20190402 07:12:01.012 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:01.012 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:01.012 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:01.014 - INFO - echo $?
20190402 07:12:01.014 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:01.014 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:01.014 - INFO - 0
20190402 07:12:01.014 - INFO - ${rc} = 0
20190402 07:12:01.015 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:12:01.015 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:01.015 - INFO - 0
20190402 07:12:01.015 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:01.015 - INFO - ${rc} = 0
20190402 07:12:01.015 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:01.015 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:01.015 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:01.016 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:01.016 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:01.016 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:01.016 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:01.016 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:01.016 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:01.016 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:01.017 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:01.017 - INFO - +------ END KW: Utils.Run Command (1103)
20190402 07:12:01.017 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:01.017 - INFO - ${value} = applying
20190402 07:12:01.017 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:01.017 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:01.017 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:01.018 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:01.018 - FAIL - applying != applied
20190402 07:12:01.018 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:01.018 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:12:01.018 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:01.018 - INFO - +----- END KW: Utils.Check System Application Status (1106)
20190402 07:12:06.019 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:06.020 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:06.020 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:06.020 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:12:06.021 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:06.022 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:06.022 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:12:06.022 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:06.023 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:06.024 - INFO - &{result_dict} = { stdout= }
20190402 07:12:06.024 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:12:06.024 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:06.024 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:06.025 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:06.025 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:06.025 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:06.025 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:12:06.025 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:06.025 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:06.025 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:12:06.025 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:06.036 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:06.037 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:12:06.037 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:07.164 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:07.164 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:07.164 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1127)
20190402 07:12:07.164 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:07.164 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:07.165 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:07.165 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:12:07.165 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:07.165 - INFO - ${clean_out} = applying
20190402 07:12:07.165 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:07.165 - INFO - ${output} = applying
20190402 07:12:07.165 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:07.165 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:07.166 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:07.167 - INFO - echo $?
20190402 07:12:07.167 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:12:07.167 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:07.168 - INFO - 0
20190402 07:12:07.168 - INFO - ${rc} = 0
20190402 07:12:07.168 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:12:07.168 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:07.168 - INFO - 0
20190402 07:12:07.168 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:07.168 - INFO - ${rc} = 0
20190402 07:12:07.168 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:07.168 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:07.169 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:07.169 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:07.169 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:07.169 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:07.169 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:07.169 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:07.170 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:07.170 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:12:07.170 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:07.170 - INFO - +------ END KW: Utils.Run Command (1149)
20190402 07:12:07.170 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:07.170 - INFO - ${value} = applying
20190402 07:12:07.170 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:07.170 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:07.171 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:07.171 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:07.171 - FAIL - applying != applied
20190402 07:12:07.171 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:07.171 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:12:07.172 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:07.172 - INFO - +----- END KW: Utils.Check System Application Status (1153)
20190402 07:12:12.173 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:12.174 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:12.175 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:12.175 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:12.175 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:12.176 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:12.177 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:12:12.177 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:12.177 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:12.178 - INFO - &{result_dict} = { stdout= }
20190402 07:12:12.178 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:12:12.178 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:12.178 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:12.178 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:12.178 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:12.179 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:12.179 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:12:12.179 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:12.179 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:12.179 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:12:12.179 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:12.188 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:12.188 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:12:12.188 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:13.202 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:13.202 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:13.202 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1014)
20190402 07:12:13.202 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:13.202 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:13.203 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:13.203 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:12:13.203 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:13.203 - INFO - ${clean_out} = applying
20190402 07:12:13.203 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:13.203 - INFO - ${output} = applying
20190402 07:12:13.203 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:13.203 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:13.203 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:13.205 - INFO - echo $?
20190402 07:12:13.205 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:13.205 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:13.206 - INFO - 0
20190402 07:12:13.206 - INFO - ${rc} = 0
20190402 07:12:13.206 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:12:13.206 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:13.206 - INFO - 0
20190402 07:12:13.206 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:13.206 - INFO - ${rc} = 0
20190402 07:12:13.206 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:13.206 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:13.207 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:13.207 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:13.207 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:13.207 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:13.207 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:13.207 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:13.208 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:13.208 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:12:13.208 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:13.208 - INFO - +------ END KW: Utils.Run Command (1033)
20190402 07:12:13.208 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:13.208 - INFO - ${value} = applying
20190402 07:12:13.208 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:13.208 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:13.209 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:13.209 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:13.209 - FAIL - applying != applied
20190402 07:12:13.209 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:13.209 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:12:13.209 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:13.209 - INFO - +----- END KW: Utils.Check System Application Status (1037)
20190402 07:12:18.210 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:18.211 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:18.212 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:18.213 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:12:18.213 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:18.214 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:18.215 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:12:18.215 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:18.215 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:18.216 - INFO - &{result_dict} = { stdout= }
20190402 07:12:18.216 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:12:18.216 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:18.216 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:18.216 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:18.216 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:18.217 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:18.217 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:12:18.217 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:18.217 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:18.217 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:12:18.217 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:18.230 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:18.231 - INFO - +------- END KW: SSHLibrary.Write (14)
20190402 07:12:18.231 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:19.258 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:19.258 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:19.258 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1027)
20190402 07:12:19.259 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:19.259 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:19.259 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:19.259 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:12:19.259 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:19.259 - INFO - ${clean_out} = applying
20190402 07:12:19.259 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:19.260 - INFO - ${output} = applying
20190402 07:12:19.260 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:12:19.260 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:19.260 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:19.261 - INFO - echo $?
20190402 07:12:19.262 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:19.262 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:19.262 - INFO - 0
20190402 07:12:19.262 - INFO - ${rc} = 0
20190402 07:12:19.262 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:12:19.262 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:19.262 - INFO - 0
20190402 07:12:19.262 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:19.263 - INFO - ${rc} = 0
20190402 07:12:19.263 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:19.263 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:19.263 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:19.263 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:19.263 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:12:19.263 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:19.264 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:19.264 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:19.264 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:19.264 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:19.264 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:19.264 - INFO - +------ END KW: Utils.Run Command (1051)
20190402 07:12:19.264 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:19.265 - INFO - ${value} = applying
20190402 07:12:19.265 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:12:19.265 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:19.265 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:19.265 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:19.265 - FAIL - applying != applied
20190402 07:12:19.265 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:19.265 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:12:19.265 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:12:19.266 - INFO - +----- END KW: Utils.Check System Application Status (1055)
20190402 07:12:24.266 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:24.268 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:24.268 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:24.269 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:24.269 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:24.271 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:24.272 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:12:24.273 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:24.273 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:24.275 - INFO - &{result_dict} = { stdout= }
20190402 07:12:24.275 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:12:24.276 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:24.277 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:24.277 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:24.278 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:24.278 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:24.279 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:12:24.279 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:24.279 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:24.280 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:12:24.280 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:24.305 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:24.306 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:12:24.306 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:25.361 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:25.362 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:25.362 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1056)
20190402 07:12:25.362 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:25.362 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:25.362 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:25.362 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:12:25.362 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:25.363 - INFO - ${clean_out} = applying
20190402 07:12:25.363 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:12:25.363 - INFO - ${output} = applying
20190402 07:12:25.363 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:25.363 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:25.363 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:25.365 - INFO - echo $?
20190402 07:12:25.365 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:25.365 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:25.367 - INFO - 0
20190402 07:12:25.367 - INFO - ${rc} = 0
20190402 07:12:25.367 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 07:12:25.367 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:25.367 - INFO - 0
20190402 07:12:25.367 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:25.368 - INFO - ${rc} = 0
20190402 07:12:25.368 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:12:25.368 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:25.368 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:25.368 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:25.368 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:12:25.369 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:25.369 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:25.369 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:25.369 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:25.369 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:25.369 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:25.369 - INFO - +------ END KW: Utils.Run Command (1100)
20190402 07:12:25.369 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:25.370 - INFO - ${value} = applying
20190402 07:12:25.370 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:12:25.370 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:25.370 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:25.370 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:25.370 - FAIL - applying != applied
20190402 07:12:25.370 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:25.370 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:12:25.371 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:25.371 - INFO - +----- END KW: Utils.Check System Application Status (1105)
20190402 07:12:30.371 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:30.373 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:30.374 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:30.374 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:30.374 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:30.376 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:30.377 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:12:30.377 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:30.378 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:30.380 - INFO - &{result_dict} = { stdout= }
20190402 07:12:30.380 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:12:30.381 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:30.381 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:30.382 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:30.383 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:30.383 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:30.384 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:12:30.384 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:30.384 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:30.384 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:12:30.385 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:30.411 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:30.411 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:12:30.412 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:31.420 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:31.420 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:31.420 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1009)
20190402 07:12:31.420 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:31.420 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:31.421 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:31.421 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:12:31.421 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:31.421 - INFO - ${clean_out} = applying
20190402 07:12:31.421 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:31.421 - INFO - ${output} = applying
20190402 07:12:31.421 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:31.421 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:31.422 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:31.423 - INFO - echo $?
20190402 07:12:31.423 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:12:31.423 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:31.423 - INFO - 0
20190402 07:12:31.423 - INFO - ${rc} = 0
20190402 07:12:31.423 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:12:31.423 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:31.424 - INFO - 0
20190402 07:12:31.424 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:12:31.424 - INFO - ${rc} = 0
20190402 07:12:31.424 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:31.424 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:31.424 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:31.425 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:31.425 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:31.425 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:31.425 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:31.425 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:31.425 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:31.425 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:31.426 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:31.426 - INFO - +------ END KW: Utils.Run Command (1052)
20190402 07:12:31.426 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:31.426 - INFO - ${value} = applying
20190402 07:12:31.426 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:31.426 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:31.427 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:31.427 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:31.427 - FAIL - applying != applied
20190402 07:12:31.427 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:31.427 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:12:31.427 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:31.427 - INFO - +----- END KW: Utils.Check System Application Status (1056)
20190402 07:12:36.428 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:36.429 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:36.430 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:36.430 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:36.431 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:36.432 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:36.433 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:12:36.433 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:36.433 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:36.434 - INFO - &{result_dict} = { stdout= }
20190402 07:12:36.434 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:12:36.434 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:36.434 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:36.434 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:36.434 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:36.435 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:36.435 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:12:36.435 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:36.435 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:36.435 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:12:36.435 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:36.443 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:36.443 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:12:36.443 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:37.503 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:37.504 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:37.504 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1061)
20190402 07:12:37.504 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:37.504 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:37.504 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:37.504 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:12:37.505 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:37.505 - INFO - ${clean_out} = applying
20190402 07:12:37.505 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:37.505 - INFO - ${output} = applying
20190402 07:12:37.505 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:37.505 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:37.505 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:37.507 - INFO - echo $?
20190402 07:12:37.507 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:37.507 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:37.507 - INFO - 0
20190402 07:12:37.507 - INFO - ${rc} = 0
20190402 07:12:37.507 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:12:37.507 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:37.507 - INFO - 0
20190402 07:12:37.508 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:12:37.508 - INFO - ${rc} = 0
20190402 07:12:37.508 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:37.508 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:37.508 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:37.509 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:37.509 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:37.509 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:37.509 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:37.509 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:37.509 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:37.509 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:37.509 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:37.509 - INFO - +------ END KW: Utils.Run Command (1078)
20190402 07:12:37.510 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:37.510 - INFO - ${value} = applying
20190402 07:12:37.510 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:37.510 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:37.510 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:37.510 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:37.510 - FAIL - applying != applied
20190402 07:12:37.511 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:37.511 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:12:37.511 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:37.511 - INFO - +----- END KW: Utils.Check System Application Status (1083)
20190402 07:12:42.512 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:42.513 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:42.514 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:42.514 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:42.514 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:42.516 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:42.516 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:12:42.516 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:42.516 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:42.517 - INFO - &{result_dict} = { stdout= }
20190402 07:12:42.517 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:12:42.517 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:42.517 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:42.517 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:42.517 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:42.518 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:42.518 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:12:42.518 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:42.518 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:42.518 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:12:42.518 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:42.529 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:42.529 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:12:42.530 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:44.026 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:44.026 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:44.026 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1496)
20190402 07:12:44.026 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:44.027 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:44.027 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:44.027 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:12:44.027 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:44.027 - INFO - ${clean_out} = applying
20190402 07:12:44.027 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:44.027 - INFO - ${output} = applying
20190402 07:12:44.027 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:44.028 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:44.028 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:44.030 - INFO - echo $?
20190402 07:12:44.030 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:44.030 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:44.030 - INFO - 0
20190402 07:12:44.030 - INFO - ${rc} = 0
20190402 07:12:44.030 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:12:44.030 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:44.030 - INFO - 0
20190402 07:12:44.030 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:44.031 - INFO - ${rc} = 0
20190402 07:12:44.031 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:44.031 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:44.031 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:44.031 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:44.031 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:12:44.032 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:44.032 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:44.032 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:44.032 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:44.032 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:44.032 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:44.032 - INFO - +------ END KW: Utils.Run Command (1518)
20190402 07:12:44.033 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:44.033 - INFO - ${value} = applying
20190402 07:12:44.033 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:44.033 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:44.033 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:44.033 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:44.033 - FAIL - applying != applied
20190402 07:12:44.033 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:44.034 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:12:44.034 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:44.034 - INFO - +----- END KW: Utils.Check System Application Status (1523)
20190402 07:12:49.034 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:49.036 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:49.037 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:49.037 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:49.037 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:49.038 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:49.039 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:12:49.040 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:49.040 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:49.042 - INFO - &{result_dict} = { stdout= }
20190402 07:12:49.042 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:12:49.042 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:49.043 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:49.043 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:49.044 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:49.045 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:49.045 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:12:49.045 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:49.046 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:49.046 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:12:49.046 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:49.068 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:49.069 - INFO - +------- END KW: SSHLibrary.Write (23)
20190402 07:12:49.069 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:51.295 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:51.295 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:51.295 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (2226)
20190402 07:12:51.295 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:51.295 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:51.296 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:51.296 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:12:51.296 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:51.296 - INFO - ${clean_out} = applying
20190402 07:12:51.296 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:51.296 - INFO - ${output} = applying
20190402 07:12:51.296 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:51.297 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:51.297 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:51.299 - INFO - echo $?
20190402 07:12:51.299 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:51.299 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:51.304 - INFO - 0
20190402 07:12:51.304 - INFO - ${rc} = 0
20190402 07:12:51.304 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:12:51.304 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:51.304 - INFO - 0
20190402 07:12:51.304 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:51.305 - INFO - ${rc} = 0
20190402 07:12:51.305 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:12:51.305 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:51.305 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:51.305 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:51.305 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:12:51.305 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:51.306 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:51.306 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:51.306 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:51.306 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:12:51.306 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:51.306 - INFO - +------ END KW: Utils.Run Command (2269)
20190402 07:12:51.306 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:51.307 - INFO - ${value} = applying
20190402 07:12:51.307 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:12:51.307 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:51.307 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:51.307 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:51.307 - FAIL - applying != applied
20190402 07:12:51.307 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:51.307 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:12:51.307 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:12:51.308 - INFO - +----- END KW: Utils.Check System Application Status (2274)
20190402 07:12:56.308 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:12:56.310 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:12:56.311 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:12:56.311 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:12:56.311 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:12:56.313 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:12:56.313 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:12:56.314 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:12:56.315 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:12:56.316 - INFO - &{result_dict} = { stdout= }
20190402 07:12:56.316 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:12:56.316 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:12:56.318 - INFO - +-------- END KW: Collections.Set To Dictionary (2)
20190402 07:12:56.318 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:12:56.319 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:12:56.320 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:12:56.320 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:12:56.320 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:12:56.321 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:56.321 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:12:56.321 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:12:56.351 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:12:56.352 - INFO - +------- END KW: SSHLibrary.Write (31)
20190402 07:12:56.352 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:12:57.603 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:57.604 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:57.604 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1252)
20190402 07:12:57.604 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:12:57.604 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:12:57.604 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:12:57.604 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:12:57.605 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:12:57.605 - INFO - ${clean_out} = applying
20190402 07:12:57.605 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:12:57.605 - INFO - ${output} = applying
20190402 07:12:57.605 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:12:57.605 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:12:57.605 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:12:57.607 - INFO - echo $?
20190402 07:12:57.607 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:12:57.607 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:12:57.608 - INFO - 0
20190402 07:12:57.608 - INFO - ${rc} = 0
20190402 07:12:57.608 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:12:57.608 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:12:57.608 - INFO - 0
20190402 07:12:57.608 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:12:57.608 - INFO - ${rc} = 0
20190402 07:12:57.608 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:12:57.608 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:12:57.609 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:12:57.609 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:57.609 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:57.609 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:12:57.609 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:12:57.609 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:12:57.610 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:12:57.610 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:12:57.610 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:12:57.610 - INFO - +------ END KW: Utils.Run Command (1299)
20190402 07:12:57.610 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:12:57.610 - INFO - ${value} = applying
20190402 07:12:57.610 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:12:57.610 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:12:57.611 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:12:57.611 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:12:57.611 - FAIL - applying != applied
20190402 07:12:57.611 - DEBUG - Traceback (most recent call last):
  None
20190402 07:12:57.611 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:12:57.611 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:12:57.611 - INFO - +----- END KW: Utils.Check System Application Status (1303)
20190402 07:13:02.612 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:02.613 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:02.614 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:02.614 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:02.615 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:02.616 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:02.617 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:13:02.617 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:02.618 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:02.620 - INFO - &{result_dict} = { stdout= }
20190402 07:13:02.620 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:13:02.621 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:02.621 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:02.622 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:02.623 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:02.624 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:02.624 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (7)
20190402 07:13:02.624 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:02.625 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:02.625 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:13:02.625 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:02.651 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:02.651 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:13:02.651 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:03.805 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:03.805 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:03.805 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1154)
20190402 07:13:03.805 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:03.805 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:03.806 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:03.806 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:13:03.806 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:03.806 - INFO - ${clean_out} = applying
20190402 07:13:03.806 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:03.806 - INFO - ${output} = applying
20190402 07:13:03.806 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:03.806 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:03.806 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:03.808 - INFO - echo $?
20190402 07:13:03.808 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:13:03.808 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:03.808 - INFO - 0
20190402 07:13:03.808 - INFO - ${rc} = 0
20190402 07:13:03.808 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:13:03.809 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:03.809 - INFO - 0
20190402 07:13:03.809 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:03.809 - INFO - ${rc} = 0
20190402 07:13:03.809 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:13:03.809 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:03.809 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:03.810 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:03.810 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:03.810 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:03.810 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:03.810 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:03.811 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:03.811 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:13:03.811 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:03.811 - INFO - +------ END KW: Utils.Run Command (1196)
20190402 07:13:03.811 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:03.811 - INFO - ${value} = applying
20190402 07:13:03.811 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:13:03.811 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:03.812 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:03.812 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:03.812 - FAIL - applying != applied
20190402 07:13:03.812 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:03.812 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:13:03.812 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:03.812 - INFO - +----- END KW: Utils.Check System Application Status (1200)
20190402 07:13:08.813 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:08.814 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:08.815 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:08.815 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:08.816 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:08.817 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:08.818 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:13:08.818 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:08.818 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:08.819 - INFO - &{result_dict} = { stdout= }
20190402 07:13:08.819 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:13:08.819 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:08.819 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:08.819 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:08.819 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:08.820 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:08.820 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:13:08.820 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:08.820 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:08.820 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:13:08.820 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:08.829 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:08.829 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:13:08.829 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:09.918 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:09.918 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:09.918 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1089)
20190402 07:13:09.918 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:09.918 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:09.919 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:09.919 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:13:09.919 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:09.919 - INFO - ${clean_out} = applying
20190402 07:13:09.919 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:09.919 - INFO - ${output} = applying
20190402 07:13:09.919 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:09.919 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:09.919 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:09.921 - INFO - echo $?
20190402 07:13:09.921 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:13:09.921 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:09.921 - INFO - 0
20190402 07:13:09.921 - INFO - ${rc} = 0
20190402 07:13:09.921 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:13:09.922 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:09.922 - INFO - 0
20190402 07:13:09.922 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:09.922 - INFO - ${rc} = 0
20190402 07:13:09.922 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:13:09.922 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:09.922 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:09.923 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:09.923 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:09.923 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:09.923 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:09.923 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:09.923 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:09.923 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:09.924 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:09.924 - INFO - +------ END KW: Utils.Run Command (1108)
20190402 07:13:09.924 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:09.924 - INFO - ${value} = applying
20190402 07:13:09.924 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:13:09.924 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:09.925 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:09.925 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:09.925 - FAIL - applying != applied
20190402 07:13:09.925 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:09.925 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:13:09.925 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:09.925 - INFO - +----- END KW: Utils.Check System Application Status (1112)
20190402 07:13:14.925 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:14.926 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:14.926 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:14.926 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:13:14.926 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:14.927 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:14.927 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:13:14.927 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:14.927 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:14.928 - INFO - &{result_dict} = { stdout= }
20190402 07:13:14.928 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:13:14.928 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:14.928 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:14.928 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:14.929 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:14.929 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:14.929 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:13:14.929 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:14.929 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:14.929 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:13:14.929 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:14.940 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:14.940 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:13:14.940 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:16.138 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:16.138 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:16.138 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1198)
20190402 07:13:16.138 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:16.139 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:16.139 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:16.139 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:13:16.139 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:16.139 - INFO - ${clean_out} = applying
20190402 07:13:16.139 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:16.139 - INFO - ${output} = applying
20190402 07:13:16.139 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:16.140 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:16.140 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:16.141 - INFO - echo $?
20190402 07:13:16.141 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:13:16.141 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:16.142 - INFO - 0
20190402 07:13:16.142 - INFO - ${rc} = 0
20190402 07:13:16.142 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:13:16.142 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:16.142 - INFO - 0
20190402 07:13:16.142 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:16.142 - INFO - ${rc} = 0
20190402 07:13:16.142 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:13:16.142 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:16.143 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:16.143 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:16.143 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:16.143 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:16.143 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:16.143 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:16.144 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:16.144 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:13:16.144 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:16.144 - INFO - +------ END KW: Utils.Run Command (1218)
20190402 07:13:16.144 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:16.144 - INFO - ${value} = applying
20190402 07:13:16.144 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:13:16.144 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:16.145 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:16.145 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:16.145 - FAIL - applying != applied
20190402 07:13:16.145 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:16.145 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:13:16.145 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:16.145 - INFO - +----- END KW: Utils.Check System Application Status (1220)
20190402 07:13:21.146 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:21.147 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:21.148 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:21.148 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:21.149 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:21.150 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:21.151 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:13:21.151 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:21.151 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:21.153 - INFO - &{result_dict} = { stdout= }
20190402 07:13:21.153 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:13:21.153 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:21.154 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:21.154 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:21.155 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:21.156 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:21.156 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:13:21.156 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:21.156 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:21.157 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:13:21.157 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:21.180 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:21.180 - INFO - +------- END KW: SSHLibrary.Write (23)
20190402 07:13:21.180 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:22.240 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:22.241 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:22.241 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1061)
20190402 07:13:22.241 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:22.241 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:22.241 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:22.241 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:13:22.241 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:22.242 - INFO - ${clean_out} = applying
20190402 07:13:22.242 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:13:22.242 - INFO - ${output} = applying
20190402 07:13:22.242 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:22.242 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:22.242 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:22.244 - INFO - echo $?
20190402 07:13:22.244 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:13:22.244 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:22.244 - INFO - 0
20190402 07:13:22.244 - INFO - ${rc} = 0
20190402 07:13:22.244 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:13:22.244 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:22.244 - INFO - 0
20190402 07:13:22.245 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:13:22.245 - INFO - ${rc} = 0
20190402 07:13:22.245 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:13:22.245 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:22.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:22.245 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:22.245 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:13:22.246 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:22.246 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:22.246 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:22.246 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:22.246 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:22.246 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:22.246 - INFO - +------ END KW: Utils.Run Command (1097)
20190402 07:13:22.246 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:22.247 - INFO - ${value} = applying
20190402 07:13:22.247 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:13:22.247 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:22.247 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:22.247 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:22.247 - FAIL - applying != applied
20190402 07:13:22.247 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:22.247 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:13:22.247 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:13:22.248 - INFO - +----- END KW: Utils.Check System Application Status (1102)
20190402 07:13:27.248 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:27.249 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:27.251 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:27.251 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:13:27.252 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:27.253 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:27.254 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:13:27.254 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:27.255 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:27.256 - INFO - &{result_dict} = { stdout= }
20190402 07:13:27.257 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:13:27.257 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:27.258 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:27.258 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:27.259 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:27.259 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:27.259 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:13:27.260 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:27.260 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:27.260 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:13:27.260 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:27.282 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:27.283 - INFO - +------- END KW: SSHLibrary.Write (22)
20190402 07:13:27.283 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:28.467 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:28.467 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:28.467 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1184)
20190402 07:13:28.467 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:28.468 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:28.468 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:28.468 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:13:28.468 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:28.468 - INFO - ${clean_out} = applying
20190402 07:13:28.468 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:28.468 - INFO - ${output} = applying
20190402 07:13:28.468 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:28.468 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:28.469 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:28.470 - INFO - echo $?
20190402 07:13:28.470 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:13:28.470 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:28.471 - INFO - 0
20190402 07:13:28.471 - INFO - ${rc} = 0
20190402 07:13:28.471 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:13:28.471 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:28.471 - INFO - 0
20190402 07:13:28.471 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:28.471 - INFO - ${rc} = 0
20190402 07:13:28.471 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:13:28.472 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:28.472 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:28.472 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:28.472 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:13:28.472 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:28.473 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:28.473 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:28.473 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:28.473 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:28.473 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:28.473 - INFO - +------ END KW: Utils.Run Command (1221)
20190402 07:13:28.473 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:28.473 - INFO - ${value} = applying
20190402 07:13:28.474 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:13:28.474 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:28.474 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:28.474 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:28.474 - FAIL - applying != applied
20190402 07:13:28.474 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:28.474 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:13:28.474 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:13:28.474 - INFO - +----- END KW: Utils.Check System Application Status (1226)
20190402 07:13:33.475 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:33.476 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:33.477 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:33.477 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:33.478 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:33.479 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:33.480 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:13:33.480 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:33.481 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:33.481 - INFO - &{result_dict} = { stdout= }
20190402 07:13:33.481 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:13:33.481 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:33.481 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:33.481 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:33.482 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:33.482 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:33.482 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:13:33.482 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:33.482 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:33.482 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:13:33.482 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:33.491 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:33.491 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:13:33.491 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:34.639 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:34.639 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:34.639 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1148)
20190402 07:13:34.639 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:34.640 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:34.640 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:34.640 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:13:34.640 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:34.640 - INFO - ${clean_out} = applying
20190402 07:13:34.640 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:34.640 - INFO - ${output} = applying
20190402 07:13:34.640 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:34.641 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:34.641 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:34.642 - INFO - echo $?
20190402 07:13:34.642 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:13:34.642 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:34.643 - INFO - 0
20190402 07:13:34.643 - INFO - ${rc} = 0
20190402 07:13:34.643 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:13:34.643 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:34.643 - INFO - 0
20190402 07:13:34.643 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:34.644 - INFO - ${rc} = 0
20190402 07:13:34.644 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:13:34.644 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:34.644 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:34.644 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:34.644 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:13:34.645 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:34.645 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:34.645 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:34.645 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:34.645 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:34.645 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:34.645 - INFO - +------ END KW: Utils.Run Command (1167)
20190402 07:13:34.645 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:34.646 - INFO - ${value} = applying
20190402 07:13:34.646 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:13:34.646 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:34.646 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:34.646 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:34.646 - FAIL - applying != applied
20190402 07:13:34.646 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:34.646 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:13:34.646 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:13:34.647 - INFO - +----- END KW: Utils.Check System Application Status (1172)
20190402 07:13:39.647 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:39.648 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:39.648 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:39.648 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:13:39.648 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:39.649 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:39.649 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:13:39.649 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:39.650 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:39.650 - INFO - &{result_dict} = { stdout= }
20190402 07:13:39.651 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:13:39.651 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:39.651 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:39.651 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:39.652 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:39.652 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:39.652 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:13:39.652 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:39.653 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:39.653 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:13:39.653 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:39.666 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:39.666 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:13:39.666 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:41.235 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:41.235 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:41.235 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1569)
20190402 07:13:41.235 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:41.235 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:41.236 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:41.236 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:13:41.236 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:41.236 - INFO - ${clean_out} = applying
20190402 07:13:41.236 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:41.236 - INFO - ${output} = applying
20190402 07:13:41.236 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:41.236 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:41.236 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:41.238 - INFO - echo $?
20190402 07:13:41.238 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:13:41.238 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:41.244 - INFO - 0
20190402 07:13:41.244 - INFO - ${rc} = 0
20190402 07:13:41.244 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:13:41.244 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:41.244 - INFO - 0
20190402 07:13:41.244 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:41.245 - INFO - ${rc} = 0
20190402 07:13:41.245 - INFO - +------- END KW: Utils.Get Return Code (9)
20190402 07:13:41.245 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:41.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:41.246 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:41.246 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:41.246 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:41.246 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:41.246 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:41.246 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:41.246 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:41.246 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:41.247 - INFO - +------ END KW: Utils.Run Command (1599)
20190402 07:13:41.247 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:41.247 - INFO - ${value} = applying
20190402 07:13:41.247 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:13:41.247 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:41.247 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:41.247 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:41.248 - FAIL - applying != applied
20190402 07:13:41.248 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:41.248 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:13:41.248 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:41.248 - INFO - +----- END KW: Utils.Check System Application Status (1601)
20190402 07:13:46.249 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:46.250 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:46.251 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:46.251 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:46.251 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:46.253 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:46.253 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:13:46.253 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:46.253 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:46.254 - INFO - &{result_dict} = { stdout= }
20190402 07:13:46.254 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:13:46.254 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:46.254 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:46.254 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:46.254 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:46.255 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:46.255 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:13:46.255 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:46.255 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:46.255 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:13:46.255 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:46.264 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:46.264 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:13:46.264 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:47.802 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:47.802 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:47.802 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1538)
20190402 07:13:47.802 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:47.803 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:47.803 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:47.803 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:13:47.803 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:47.803 - INFO - ${clean_out} = applying
20190402 07:13:47.803 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:47.803 - INFO - ${output} = applying
20190402 07:13:47.803 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:47.804 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:47.804 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:47.806 - INFO - echo $?
20190402 07:13:47.806 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:13:47.806 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:47.806 - INFO - 0
20190402 07:13:47.806 - INFO - ${rc} = 0
20190402 07:13:47.806 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:13:47.807 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:47.807 - INFO - 0
20190402 07:13:47.807 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:13:47.807 - INFO - ${rc} = 0
20190402 07:13:47.807 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:13:47.807 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:47.807 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:47.808 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:47.808 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:47.808 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:47.808 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:47.808 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:47.808 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:47.808 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:47.809 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:47.809 - INFO - +------ END KW: Utils.Run Command (1558)
20190402 07:13:47.809 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:47.809 - INFO - ${value} = applying
20190402 07:13:47.809 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:13:47.809 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:47.809 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:47.810 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:47.810 - FAIL - applying != applied
20190402 07:13:47.810 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:47.810 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:13:47.810 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:47.810 - INFO - +----- END KW: Utils.Check System Application Status (1562)
20190402 07:13:52.811 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:52.812 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:52.813 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:52.813 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:52.814 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:52.815 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:52.816 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:13:52.816 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:52.816 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:52.817 - INFO - &{result_dict} = { stdout= }
20190402 07:13:52.817 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:13:52.817 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:52.817 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:52.817 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:52.817 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:52.818 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:52.818 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:13:52.818 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:52.818 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:52.818 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:13:52.818 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:52.826 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:52.826 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:13:52.827 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:13:54.260 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:54.260 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:54.260 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1433)
20190402 07:13:54.260 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:13:54.261 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:13:54.261 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:54.261 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:13:54.261 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:13:54.261 - INFO - ${clean_out} = applying
20190402 07:13:54.261 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:13:54.261 - INFO - ${output} = applying
20190402 07:13:54.261 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:13:54.261 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:13:54.262 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:13:54.263 - INFO - echo $?
20190402 07:13:54.263 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:13:54.263 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:13:54.265 - INFO - 0
20190402 07:13:54.265 - INFO - ${rc} = 0
20190402 07:13:54.265 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 07:13:54.265 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:13:54.265 - INFO - 0
20190402 07:13:54.266 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:13:54.266 - INFO - ${rc} = 0
20190402 07:13:54.266 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:13:54.266 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:13:54.266 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:13:54.267 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:13:54.267 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:54.267 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:13:54.267 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:54.267 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:13:54.267 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:13:54.267 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:13:54.268 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:13:54.268 - INFO - +------ END KW: Utils.Run Command (1455)
20190402 07:13:54.268 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:13:54.268 - INFO - ${value} = applying
20190402 07:13:54.268 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:13:54.268 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:13:54.268 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:13:54.269 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:13:54.269 - FAIL - applying != applied
20190402 07:13:54.269 - DEBUG - Traceback (most recent call last):
  None
20190402 07:13:54.269 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:13:54.269 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:13:54.269 - INFO - +----- END KW: Utils.Check System Application Status (1458)
20190402 07:13:59.270 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:13:59.271 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:13:59.272 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:13:59.272 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:13:59.272 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:13:59.274 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:13:59.274 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:13:59.275 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:13:59.275 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:13:59.275 - INFO - &{result_dict} = { stdout= }
20190402 07:13:59.275 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:13:59.276 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:13:59.276 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:59.276 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:13:59.276 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:13:59.276 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:13:59.276 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:13:59.276 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:13:59.277 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:13:59.277 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:13:59.277 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:13:59.290 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:13:59.290 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:13:59.290 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:00.572 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:00.572 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:00.572 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1282)
20190402 07:14:00.572 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:00.573 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:00.573 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:00.573 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:00.573 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:00.573 - INFO - ${clean_out} = applying
20190402 07:14:00.573 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:14:00.574 - INFO - ${output} = applying
20190402 07:14:00.574 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:14:00.574 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:00.574 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:00.576 - INFO - echo $?
20190402 07:14:00.576 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:14:00.577 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:00.577 - INFO - 0
20190402 07:14:00.577 - INFO - ${rc} = 0
20190402 07:14:00.577 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:14:00.577 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:00.577 - INFO - 0
20190402 07:14:00.577 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:00.577 - INFO - ${rc} = 0
20190402 07:14:00.577 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:14:00.577 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:00.578 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:00.578 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:00.578 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:00.578 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:00.578 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:00.579 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:00.579 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:00.579 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:00.579 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:00.579 - INFO - +------ END KW: Utils.Run Command (1307)
20190402 07:14:00.579 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:00.579 - INFO - ${value} = applying
20190402 07:14:00.579 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:00.580 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:00.580 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:00.580 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:00.580 - FAIL - applying != applied
20190402 07:14:00.580 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:00.580 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:14:00.580 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:00.580 - INFO - +----- END KW: Utils.Check System Application Status (1311)
20190402 07:14:05.581 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:05.582 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:05.583 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:05.584 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:05.584 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:05.585 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:05.586 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:05.586 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:05.586 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:05.587 - INFO - &{result_dict} = { stdout= }
20190402 07:14:05.587 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:05.587 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:05.587 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:05.587 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:05.587 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:05.588 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:05.588 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:05.588 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:05.588 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:05.588 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:14:05.588 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:05.597 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:05.597 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:14:05.597 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:07.181 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:07.182 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:07.182 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1585)
20190402 07:14:07.182 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:07.182 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:07.182 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:07.182 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:07.183 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:07.183 - INFO - ${clean_out} = applying
20190402 07:14:07.183 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:14:07.183 - INFO - ${output} = applying
20190402 07:14:07.183 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:07.183 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:07.183 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:07.185 - INFO - echo $?
20190402 07:14:07.185 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:14:07.185 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:07.186 - INFO - 0
20190402 07:14:07.186 - INFO - ${rc} = 0
20190402 07:14:07.186 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:14:07.186 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:07.186 - INFO - 0
20190402 07:14:07.186 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:07.186 - INFO - ${rc} = 0
20190402 07:14:07.186 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:14:07.187 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:07.187 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:07.187 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:07.187 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:07.187 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:07.187 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:07.188 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:07.188 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:07.188 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:07.188 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:07.188 - INFO - +------ END KW: Utils.Run Command (1604)
20190402 07:14:07.188 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:07.188 - INFO - ${value} = applying
20190402 07:14:07.188 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:07.189 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:07.189 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:07.189 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:07.189 - FAIL - applying != applied
20190402 07:14:07.189 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:07.189 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:14:07.189 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:07.189 - INFO - +----- END KW: Utils.Check System Application Status (1608)
20190402 07:14:12.190 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:12.191 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:12.192 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:12.192 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:12.193 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:12.194 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:12.195 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:12.195 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:12.195 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:12.196 - INFO - &{result_dict} = { stdout= }
20190402 07:14:12.196 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:12.196 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:12.196 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:12.196 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:12.196 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:12.197 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:12.197 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:12.197 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:12.197 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:12.197 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:14:12.197 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:12.206 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:12.207 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:14:12.207 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:13.355 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:13.356 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:13.356 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1149)
20190402 07:14:13.356 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:13.356 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:13.356 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:13.356 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:13.356 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:13.357 - INFO - ${clean_out} = applying
20190402 07:14:13.357 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:14:13.357 - INFO - ${output} = applying
20190402 07:14:13.357 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:13.357 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:13.357 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:13.359 - INFO - echo $?
20190402 07:14:13.359 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:14:13.359 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:13.359 - INFO - 0
20190402 07:14:13.359 - INFO - ${rc} = 0
20190402 07:14:13.359 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:14:13.359 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:13.359 - INFO - 0
20190402 07:14:13.360 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:14:13.360 - INFO - ${rc} = 0
20190402 07:14:13.360 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:14:13.360 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:13.360 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:13.361 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:13.361 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:13.361 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:13.361 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:13.361 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:13.361 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:13.361 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:13.362 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:13.362 - INFO - +------ END KW: Utils.Run Command (1169)
20190402 07:14:13.362 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:13.362 - INFO - ${value} = applying
20190402 07:14:13.362 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:13.362 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:13.362 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:13.363 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:13.363 - FAIL - applying != applied
20190402 07:14:13.363 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:13.363 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:14:13.363 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:13.363 - INFO - +----- END KW: Utils.Check System Application Status (1173)
20190402 07:14:18.364 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:18.365 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:18.366 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:18.366 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:18.366 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:18.368 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:18.369 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:18.369 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:18.369 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:18.370 - INFO - &{result_dict} = { stdout= }
20190402 07:14:18.370 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:18.370 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:18.370 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:18.370 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:18.371 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:18.371 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:18.371 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:18.371 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:18.371 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:18.371 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:14:18.371 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:18.373 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:18.373 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:14:18.373 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:19.732 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:19.732 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:19.732 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1359)
20190402 07:14:19.733 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:19.733 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:19.733 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:19.733 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:19.733 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:19.733 - INFO - ${clean_out} = applying
20190402 07:14:19.733 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:14:19.734 - INFO - ${output} = applying
20190402 07:14:19.734 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:19.734 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:19.734 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:19.735 - INFO - echo $?
20190402 07:14:19.735 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:14:19.735 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:19.735 - INFO - 0
20190402 07:14:19.735 - INFO - ${rc} = 0
20190402 07:14:19.735 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:14:19.736 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:19.736 - INFO - 0
20190402 07:14:19.736 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:19.736 - INFO - ${rc} = 0
20190402 07:14:19.736 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:14:19.736 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:19.736 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:19.737 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:19.737 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:19.737 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:19.737 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:19.737 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:19.737 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:19.737 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:19.738 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:19.738 - INFO - +------ END KW: Utils.Run Command (1372)
20190402 07:14:19.738 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:19.738 - INFO - ${value} = applying
20190402 07:14:19.738 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:19.738 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:19.739 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:19.739 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:19.739 - FAIL - applying != applied
20190402 07:14:19.739 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:19.739 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:14:19.739 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:19.739 - INFO - +----- END KW: Utils.Check System Application Status (1375)
20190402 07:14:24.740 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:24.741 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:24.742 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:24.742 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:24.743 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:24.744 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:24.745 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:24.745 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:24.745 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:24.746 - INFO - &{result_dict} = { stdout= }
20190402 07:14:24.746 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:24.746 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:24.746 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:24.746 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:24.746 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:24.747 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:24.747 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:24.747 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:24.747 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:24.747 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:14:24.747 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:24.757 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:24.758 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:14:24.758 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:26.015 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:26.015 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:26.015 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1257)
20190402 07:14:26.015 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:26.015 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:26.016 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:26.016 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:14:26.016 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:26.016 - INFO - ${clean_out} = applying
20190402 07:14:26.016 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:14:26.016 - INFO - ${output} = applying
20190402 07:14:26.016 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:26.016 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:26.017 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:26.018 - INFO - echo $?
20190402 07:14:26.018 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:14:26.018 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:26.023 - INFO - 0
20190402 07:14:26.023 - INFO - ${rc} = 0
20190402 07:14:26.023 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:14:26.023 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:26.024 - INFO - 0
20190402 07:14:26.024 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:14:26.024 - INFO - ${rc} = 0
20190402 07:14:26.024 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:14:26.024 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:26.024 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:26.025 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:26.025 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:26.025 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:26.025 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:26.025 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:26.025 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:26.025 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:26.025 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:26.025 - INFO - +------ END KW: Utils.Run Command (1283)
20190402 07:14:26.026 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:26.026 - INFO - ${value} = applying
20190402 07:14:26.026 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:26.026 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:26.026 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:26.026 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:26.027 - FAIL - applying != applied
20190402 07:14:26.027 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:26.027 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:14:26.027 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:26.027 - INFO - +----- END KW: Utils.Check System Application Status (1287)
20190402 07:14:31.028 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:31.029 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:31.030 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:31.030 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:31.031 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:31.032 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:31.033 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:31.033 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:31.033 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:31.034 - INFO - &{result_dict} = { stdout= }
20190402 07:14:31.034 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:31.034 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:31.034 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:31.034 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:31.034 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:31.035 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:31.035 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:31.035 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:31.035 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:31.035 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:14:31.035 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:31.043 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:31.043 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:14:31.043 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:32.150 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:32.150 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:32.150 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1107)
20190402 07:14:32.150 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:32.151 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:32.151 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:32.151 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:32.151 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:32.151 - INFO - ${clean_out} = applying
20190402 07:14:32.151 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:14:32.151 - INFO - ${output} = applying
20190402 07:14:32.151 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:32.152 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:32.152 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:32.153 - INFO - echo $?
20190402 07:14:32.153 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:14:32.153 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:32.153 - INFO - 0
20190402 07:14:32.153 - INFO - ${rc} = 0
20190402 07:14:32.153 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:14:32.154 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:32.154 - INFO - 0
20190402 07:14:32.154 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:32.154 - INFO - ${rc} = 0
20190402 07:14:32.154 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:14:32.154 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:32.154 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:32.155 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:32.155 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:32.155 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:32.155 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:32.155 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:32.155 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:32.155 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:32.156 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:32.156 - INFO - +------ END KW: Utils.Run Command (1126)
20190402 07:14:32.156 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:32.156 - INFO - ${value} = applying
20190402 07:14:32.156 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:32.156 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:32.156 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:32.157 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:32.157 - FAIL - applying != applied
20190402 07:14:32.157 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:32.157 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:14:32.157 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:32.157 - INFO - +----- END KW: Utils.Check System Application Status (1129)
20190402 07:14:37.158 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:37.159 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:37.161 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:37.161 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:14:37.161 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:37.163 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:37.163 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:14:37.163 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:37.163 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:37.164 - INFO - &{result_dict} = { stdout= }
20190402 07:14:37.164 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:37.164 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:37.164 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:37.164 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:37.165 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:37.165 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:37.165 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:37.165 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:37.165 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:37.165 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:14:37.165 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:37.174 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:37.174 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:14:37.175 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:38.211 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:38.211 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:38.212 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1036)
20190402 07:14:38.212 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:38.212 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:38.212 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:38.212 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:38.212 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:38.213 - INFO - ${clean_out} = applying
20190402 07:14:38.213 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:14:38.213 - INFO - ${output} = applying
20190402 07:14:38.213 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:38.213 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:38.213 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:38.215 - INFO - echo $?
20190402 07:14:38.215 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:14:38.215 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:38.216 - INFO - 0
20190402 07:14:38.216 - INFO - ${rc} = 0
20190402 07:14:38.216 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:14:38.216 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:38.216 - INFO - 0
20190402 07:14:38.216 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:38.217 - INFO - ${rc} = 0
20190402 07:14:38.217 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:14:38.217 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:38.217 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:38.217 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:38.218 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:38.218 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:38.218 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:38.218 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:38.218 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:38.218 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:38.218 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:38.218 - INFO - +------ END KW: Utils.Run Command (1057)
20190402 07:14:38.219 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:38.219 - INFO - ${value} = applying
20190402 07:14:38.219 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:38.219 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:38.219 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:38.219 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:38.219 - FAIL - applying != applied
20190402 07:14:38.220 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:38.220 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:14:38.220 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:38.220 - INFO - +----- END KW: Utils.Check System Application Status (1062)
20190402 07:14:43.220 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:43.221 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:43.222 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:43.222 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:43.222 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:43.223 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:43.224 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:43.225 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:43.225 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:43.225 - INFO - &{result_dict} = { stdout= }
20190402 07:14:43.225 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:14:43.226 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:43.226 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:43.226 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:43.226 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:43.226 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:43.226 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:14:43.226 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:43.227 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:43.227 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:14:43.227 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:43.235 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:43.235 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:14:43.235 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:44.494 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:44.494 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:44.494 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1259)
20190402 07:14:44.494 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:44.495 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:44.495 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:44.495 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:44.495 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:44.495 - INFO - ${clean_out} = applying
20190402 07:14:44.495 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:14:44.495 - INFO - ${output} = applying
20190402 07:14:44.495 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:44.495 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:44.496 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:44.497 - INFO - echo $?
20190402 07:14:44.497 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:14:44.497 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:44.497 - INFO - 0
20190402 07:14:44.498 - INFO - ${rc} = 0
20190402 07:14:44.498 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:14:44.498 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:44.498 - INFO - 0
20190402 07:14:44.498 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:44.498 - INFO - ${rc} = 0
20190402 07:14:44.498 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:14:44.498 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:44.499 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:44.499 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:44.499 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:44.499 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:44.499 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:44.499 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:44.499 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:44.500 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:14:44.500 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:44.500 - INFO - +------ END KW: Utils.Run Command (1278)
20190402 07:14:44.500 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:44.500 - INFO - ${value} = applying
20190402 07:14:44.500 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:44.500 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:44.501 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:44.501 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:44.501 - FAIL - applying != applied
20190402 07:14:44.501 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:44.501 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:14:44.501 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:44.501 - INFO - +----- END KW: Utils.Check System Application Status (1281)
20190402 07:14:49.502 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:49.503 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:49.504 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:49.504 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:49.505 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:49.506 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:49.507 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:49.507 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:49.507 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:49.508 - INFO - &{result_dict} = { stdout= }
20190402 07:14:49.508 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:49.508 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:49.509 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:49.509 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:49.509 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:49.509 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:49.509 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:49.509 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:49.510 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:49.510 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:14:49.510 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:49.519 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:49.519 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:14:49.519 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:50.788 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:50.789 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:50.789 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1270)
20190402 07:14:50.789 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:50.789 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:50.789 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:50.789 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:50.789 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:50.790 - INFO - ${clean_out} = applying
20190402 07:14:50.790 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:14:50.790 - INFO - ${output} = applying
20190402 07:14:50.790 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:50.790 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:50.790 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:50.792 - INFO - echo $?
20190402 07:14:50.792 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:14:50.792 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:50.792 - INFO - 0
20190402 07:14:50.792 - INFO - ${rc} = 0
20190402 07:14:50.792 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:14:50.793 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:50.793 - INFO - 0
20190402 07:14:50.793 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:50.793 - INFO - ${rc} = 0
20190402 07:14:50.793 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:14:50.793 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:50.793 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:50.794 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:50.794 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:50.794 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:50.794 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:50.794 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:50.794 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:50.794 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:50.795 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:50.795 - INFO - +------ END KW: Utils.Run Command (1290)
20190402 07:14:50.795 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:50.795 - INFO - ${value} = applying
20190402 07:14:50.795 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:50.795 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:50.795 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:50.796 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:50.796 - FAIL - applying != applied
20190402 07:14:50.796 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:50.796 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:14:50.796 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:50.796 - INFO - +----- END KW: Utils.Check System Application Status (1294)
20190402 07:14:55.797 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:14:55.798 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:14:55.799 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:14:55.799 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:14:55.800 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:14:55.801 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:14:55.802 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:14:55.802 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:14:55.802 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:14:55.803 - INFO - &{result_dict} = { stdout= }
20190402 07:14:55.803 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:14:55.803 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:14:55.803 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:55.803 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:14:55.804 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:55.804 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:14:55.804 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:14:55.804 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:14:55.804 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:55.805 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:14:55.805 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:14:55.813 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:14:55.813 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:14:55.813 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:14:56.899 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:56.900 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:56.900 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1087)
20190402 07:14:56.900 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:14:56.900 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:14:56.900 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:14:56.900 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:14:56.900 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:14:56.901 - INFO - ${clean_out} = applying
20190402 07:14:56.901 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:14:56.901 - INFO - ${output} = applying
20190402 07:14:56.901 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:14:56.901 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:14:56.901 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:14:56.903 - INFO - echo $?
20190402 07:14:56.903 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:14:56.903 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:14:56.903 - INFO - 0
20190402 07:14:56.903 - INFO - ${rc} = 0
20190402 07:14:56.903 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:14:56.904 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:14:56.904 - INFO - 0
20190402 07:14:56.904 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:14:56.904 - INFO - ${rc} = 0
20190402 07:14:56.904 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:14:56.904 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:14:56.904 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:14:56.905 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:14:56.905 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:56.905 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:14:56.905 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:14:56.905 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:14:56.905 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:14:56.905 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:14:56.906 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:14:56.906 - INFO - +------ END KW: Utils.Run Command (1106)
20190402 07:14:56.906 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:14:56.906 - INFO - ${value} = applying
20190402 07:14:56.906 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:14:56.906 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:14:56.906 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:14:56.907 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:14:56.907 - FAIL - applying != applied
20190402 07:14:56.907 - DEBUG - Traceback (most recent call last):
  None
20190402 07:14:56.907 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:14:56.907 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:14:56.907 - INFO - +----- END KW: Utils.Check System Application Status (1110)
20190402 07:15:01.907 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:01.908 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:01.909 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:01.909 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:01.909 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:01.909 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:01.910 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:01.910 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:01.910 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:01.911 - INFO - &{result_dict} = { stdout= }
20190402 07:15:01.911 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:01.911 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:01.911 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:01.911 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:01.911 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:01.912 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:01.912 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:15:01.912 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:01.912 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:01.912 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:15:01.912 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:01.917 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:01.917 - INFO - +------- END KW: SSHLibrary.Write (5)
20190402 07:15:01.917 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:03.114 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:03.114 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:03.114 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1197)
20190402 07:15:03.114 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:03.115 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:03.115 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:03.115 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:03.115 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:03.115 - INFO - ${clean_out} = applying
20190402 07:15:03.115 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:03.115 - INFO - ${output} = applying
20190402 07:15:03.115 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:15:03.115 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:03.116 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:03.117 - INFO - echo $?
20190402 07:15:03.117 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:15:03.117 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:03.117 - INFO - 0
20190402 07:15:03.117 - INFO - ${rc} = 0
20190402 07:15:03.118 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:15:03.118 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:03.118 - INFO - 0
20190402 07:15:03.118 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:03.118 - INFO - ${rc} = 0
20190402 07:15:03.118 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:03.118 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:03.119 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:03.119 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:03.119 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:03.119 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:03.119 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:03.119 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:03.119 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:03.119 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:15:03.120 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:03.120 - INFO - +------ END KW: Utils.Run Command (1211)
20190402 07:15:03.120 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:03.120 - INFO - ${value} = applying
20190402 07:15:03.120 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:15:03.120 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:03.120 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:03.121 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:03.121 - FAIL - applying != applied
20190402 07:15:03.121 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:03.121 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:15:03.121 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:03.121 - INFO - +----- END KW: Utils.Check System Application Status (1214)
20190402 07:15:08.122 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:08.123 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:08.124 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:08.124 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:08.125 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:08.126 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:08.127 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:08.127 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:08.127 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:08.128 - INFO - &{result_dict} = { stdout= }
20190402 07:15:08.128 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:08.128 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:08.128 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:08.128 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:08.128 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:08.129 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:08.129 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:15:08.129 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:08.129 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:08.129 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:15:08.129 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:08.138 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:08.138 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:15:08.138 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:09.346 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:09.346 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:09.346 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1208)
20190402 07:15:09.346 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:09.347 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:09.347 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:09.347 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:09.347 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:09.348 - INFO - ${clean_out} = applying
20190402 07:15:09.348 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:15:09.348 - INFO - ${output} = applying
20190402 07:15:09.348 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:15:09.348 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:09.348 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:09.350 - INFO - echo $?
20190402 07:15:09.350 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:15:09.350 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:09.350 - INFO - 0
20190402 07:15:09.351 - INFO - ${rc} = 0
20190402 07:15:09.351 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:15:09.351 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:09.351 - INFO - 0
20190402 07:15:09.351 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:09.351 - INFO - ${rc} = 0
20190402 07:15:09.351 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:09.351 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:09.352 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:09.352 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:09.352 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:09.352 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:09.352 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:09.352 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:09.353 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:09.353 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:15:09.353 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:09.353 - INFO - +------ END KW: Utils.Run Command (1228)
20190402 07:15:09.353 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:09.353 - INFO - ${value} = applying
20190402 07:15:09.353 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:15:09.353 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:09.354 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:09.354 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:09.354 - FAIL - applying != applied
20190402 07:15:09.354 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:09.354 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:15:09.354 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:09.354 - INFO - +----- END KW: Utils.Check System Application Status (1232)
20190402 07:15:14.355 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:14.356 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:14.357 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:14.357 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:14.357 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:14.359 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:14.359 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:14.360 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:14.360 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:14.360 - INFO - &{result_dict} = { stdout= }
20190402 07:15:14.361 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:14.361 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:14.361 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:14.361 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:14.361 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:14.361 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:14.361 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:15:14.362 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:14.362 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:14.362 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:15:14.362 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:14.371 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:14.371 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:15:14.371 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:15.483 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:15.484 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:15.484 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1113)
20190402 07:15:15.484 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:15.484 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:15.484 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:15.484 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:15.484 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:15.485 - INFO - ${clean_out} = applying
20190402 07:15:15.485 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:15:15.485 - INFO - ${output} = applying
20190402 07:15:15.485 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:15:15.485 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:15.485 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:15.487 - INFO - echo $?
20190402 07:15:15.487 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:15:15.487 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:15.487 - INFO - 0
20190402 07:15:15.487 - INFO - ${rc} = 0
20190402 07:15:15.487 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:15:15.487 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:15.487 - INFO - 0
20190402 07:15:15.487 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:15.488 - INFO - ${rc} = 0
20190402 07:15:15.488 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:15.488 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:15.488 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:15.488 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:15.488 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:15:15.489 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:15.489 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:15.489 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:15.489 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:15.489 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:15:15.489 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:15.489 - INFO - +------ END KW: Utils.Run Command (1132)
20190402 07:15:15.489 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:15.490 - INFO - ${value} = applying
20190402 07:15:15.490 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:15:15.490 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:15.490 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:15.490 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:15.490 - FAIL - applying != applied
20190402 07:15:15.490 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:15.490 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:15:15.490 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:15:15.491 - INFO - +----- END KW: Utils.Check System Application Status (1136)
20190402 07:15:20.491 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:20.493 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:20.494 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:20.494 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:20.494 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:20.496 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:20.497 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:15:20.497 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:20.498 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:20.499 - INFO - &{result_dict} = { stdout= }
20190402 07:15:20.500 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:20.500 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:20.501 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:20.501 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:20.502 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:20.503 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:20.503 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:15:20.503 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:20.504 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:20.504 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:15:20.504 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:20.529 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:20.529 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:15:20.530 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:22.370 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:22.371 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:22.371 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1841)
20190402 07:15:22.371 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:22.371 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:22.371 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:22.371 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:22.372 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:22.372 - INFO - ${clean_out} = applying
20190402 07:15:22.372 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:22.372 - INFO - ${output} = applying
20190402 07:15:22.372 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:15:22.372 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:22.372 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:22.374 - INFO - echo $?
20190402 07:15:22.374 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:15:22.374 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:22.375 - INFO - 0
20190402 07:15:22.375 - INFO - ${rc} = 0
20190402 07:15:22.375 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:15:22.375 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:22.376 - INFO - 0
20190402 07:15:22.376 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:15:22.376 - INFO - ${rc} = 0
20190402 07:15:22.376 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:15:22.376 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:22.376 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:22.377 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:22.377 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:22.377 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:22.377 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:22.377 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:22.378 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:22.378 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:15:22.378 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:22.378 - INFO - +------ END KW: Utils.Run Command (1884)
20190402 07:15:22.378 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:22.378 - INFO - ${value} = applying
20190402 07:15:22.378 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:15:22.378 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:22.379 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:22.379 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:22.379 - FAIL - applying != applied
20190402 07:15:22.379 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:22.379 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:15:22.379 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:22.379 - INFO - +----- END KW: Utils.Check System Application Status (1888)
20190402 07:15:27.380 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:27.381 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:27.382 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:27.383 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:27.383 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:27.384 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:27.385 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:27.385 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:27.385 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:27.386 - INFO - &{result_dict} = { stdout= }
20190402 07:15:27.386 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:27.386 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:27.386 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:27.386 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:27.386 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:27.387 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:27.387 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:15:27.387 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:27.387 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:27.387 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:15:27.387 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:27.397 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:27.397 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:15:27.397 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:28.968 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:28.968 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:28.968 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1571)
20190402 07:15:28.969 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:28.969 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:28.969 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:28.969 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:28.969 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:28.969 - INFO - ${clean_out} = applying
20190402 07:15:28.970 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:28.970 - INFO - ${output} = applying
20190402 07:15:28.970 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:15:28.970 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:28.970 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:28.971 - INFO - echo $?
20190402 07:15:28.971 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:15:28.971 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:28.972 - INFO - 0
20190402 07:15:28.972 - INFO - ${rc} = 0
20190402 07:15:28.972 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:15:28.972 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:28.972 - INFO - 0
20190402 07:15:28.972 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:28.973 - INFO - ${rc} = 0
20190402 07:15:28.973 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:28.973 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:28.973 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:28.973 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:28.973 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:15:28.973 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:28.974 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:28.974 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:28.974 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:28.974 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:15:28.974 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:28.974 - INFO - +------ END KW: Utils.Run Command (1591)
20190402 07:15:28.974 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:28.975 - INFO - ${value} = applying
20190402 07:15:28.975 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:15:28.975 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:28.975 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:28.975 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:28.976 - FAIL - applying != applied
20190402 07:15:28.976 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:28.976 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:15:28.976 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:28.976 - INFO - +----- END KW: Utils.Check System Application Status (1596)
20190402 07:15:33.976 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:33.977 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:33.977 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:33.977 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:33.977 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:33.977 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:33.978 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:33.978 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:33.978 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:33.978 - INFO - &{result_dict} = { stdout= }
20190402 07:15:33.978 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:15:33.978 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:33.979 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:33.979 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:33.979 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:33.979 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:33.979 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:15:33.979 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:33.979 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:33.979 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:15:33.980 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:33.981 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:33.981 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 07:15:33.981 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:35.119 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:35.119 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:35.119 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1138)
20190402 07:15:35.119 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:35.120 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:35.120 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:35.120 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:35.120 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:35.120 - INFO - ${clean_out} = applying
20190402 07:15:35.120 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:35.120 - INFO - ${output} = applying
20190402 07:15:35.121 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:15:35.121 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:35.121 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:35.122 - INFO - echo $?
20190402 07:15:35.123 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:15:35.123 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:35.123 - INFO - 0
20190402 07:15:35.123 - INFO - ${rc} = 0
20190402 07:15:35.123 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:15:35.123 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:35.123 - INFO - 0
20190402 07:15:35.123 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:35.124 - INFO - ${rc} = 0
20190402 07:15:35.124 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:35.124 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:35.124 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:35.124 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:35.124 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:15:35.124 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:35.125 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:35.125 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:35.125 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:35.125 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:15:35.125 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:35.125 - INFO - +------ END KW: Utils.Run Command (1148)
20190402 07:15:35.125 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:35.126 - INFO - ${value} = applying
20190402 07:15:35.126 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:15:35.126 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:35.126 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:35.126 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:35.126 - FAIL - applying != applied
20190402 07:15:35.126 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:35.127 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:15:35.127 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:35.127 - INFO - +----- END KW: Utils.Check System Application Status (1151)
20190402 07:15:40.127 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:40.127 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:40.128 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:40.128 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:40.128 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:40.128 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:40.129 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:40.129 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:40.129 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:40.129 - INFO - &{result_dict} = { stdout= }
20190402 07:15:40.129 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:15:40.129 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:40.130 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:40.130 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:40.130 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:40.130 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:40.130 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:15:40.130 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:40.130 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:40.131 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:15:40.131 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:40.139 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:40.139 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:15:40.139 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:41.458 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:41.458 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:41.458 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1319)
20190402 07:15:41.458 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:41.459 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:41.459 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:41.459 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:41.459 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:41.459 - INFO - ${clean_out} = applying
20190402 07:15:41.459 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:41.460 - INFO - ${output} = applying
20190402 07:15:41.460 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:15:41.460 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:41.460 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:41.462 - INFO - echo $?
20190402 07:15:41.462 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:15:41.462 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:41.462 - INFO - 0
20190402 07:15:41.462 - INFO - ${rc} = 0
20190402 07:15:41.462 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:15:41.462 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:41.462 - INFO - 0
20190402 07:15:41.463 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:15:41.463 - INFO - ${rc} = 0
20190402 07:15:41.463 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:41.463 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:41.463 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:41.463 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:41.463 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:15:41.464 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:41.464 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:41.464 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:41.464 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:41.464 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:15:41.464 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:41.464 - INFO - +------ END KW: Utils.Run Command (1336)
20190402 07:15:41.464 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:41.465 - INFO - ${value} = applying
20190402 07:15:41.465 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:15:41.465 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:41.465 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:41.465 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:41.465 - FAIL - applying != applied
20190402 07:15:41.465 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:41.465 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:15:41.465 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:15:41.466 - INFO - +----- END KW: Utils.Check System Application Status (1339)
20190402 07:15:46.466 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:46.466 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:46.467 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:46.467 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:15:46.467 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:46.467 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:46.468 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:15:46.468 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:46.468 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:46.468 - INFO - &{result_dict} = { stdout= }
20190402 07:15:46.468 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:15:46.469 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:46.469 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:46.469 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:46.469 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:46.469 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:46.469 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:15:46.469 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:46.470 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:46.470 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:15:46.470 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:46.478 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:46.478 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:15:46.478 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:47.657 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:47.657 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:47.657 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1179)
20190402 07:15:47.657 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:47.658 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:47.658 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:47.658 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:47.658 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:47.658 - INFO - ${clean_out} = applying
20190402 07:15:47.658 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:47.658 - INFO - ${output} = applying
20190402 07:15:47.658 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:15:47.658 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:47.659 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:47.660 - INFO - echo $?
20190402 07:15:47.660 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:15:47.660 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:47.661 - INFO - 0
20190402 07:15:47.661 - INFO - ${rc} = 0
20190402 07:15:47.661 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:15:47.661 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:47.661 - INFO - 0
20190402 07:15:47.661 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:47.661 - INFO - ${rc} = 0
20190402 07:15:47.661 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:15:47.661 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:47.662 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:47.662 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:47.662 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:47.662 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:47.662 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:47.662 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:47.662 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:47.663 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:15:47.663 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:47.663 - INFO - +------ END KW: Utils.Run Command (1196)
20190402 07:15:47.663 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:47.663 - INFO - ${value} = applying
20190402 07:15:47.663 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:15:47.663 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:47.664 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:47.664 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:47.664 - FAIL - applying != applied
20190402 07:15:47.664 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:47.664 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:15:47.664 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:47.664 - INFO - +----- END KW: Utils.Check System Application Status (1198)
20190402 07:15:52.664 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:52.665 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:52.665 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:52.665 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:15:52.665 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:52.666 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:52.666 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:15:52.666 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:52.666 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:52.667 - INFO - &{result_dict} = { stdout= }
20190402 07:15:52.667 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:52.667 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:52.667 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:52.667 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:52.668 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:52.668 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:52.668 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:15:52.668 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:52.668 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:52.668 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:15:52.668 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:52.676 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:52.676 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:15:52.677 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:15:54.010 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:54.010 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:54.010 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1333)
20190402 07:15:54.010 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:15:54.011 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:15:54.011 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:54.011 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:15:54.011 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:15:54.011 - INFO - ${clean_out} = applying
20190402 07:15:54.011 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:15:54.011 - INFO - ${output} = applying
20190402 07:15:54.011 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:15:54.011 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:15:54.012 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:15:54.019 - INFO - echo $?
20190402 07:15:54.019 - INFO - +-------- END KW: SSHLibrary.Write (7)
20190402 07:15:54.019 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:15:54.026 - INFO - 0
20190402 07:15:54.026 - INFO - ${rc} = 0
20190402 07:15:54.026 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 07:15:54.027 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:15:54.027 - INFO - 0
20190402 07:15:54.027 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:15:54.027 - INFO - ${rc} = 0
20190402 07:15:54.027 - INFO - +------- END KW: Utils.Get Return Code (16)
20190402 07:15:54.027 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:15:54.028 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:15:54.028 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:54.028 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:54.028 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:15:54.028 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:54.028 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:15:54.029 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:15:54.029 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:15:54.029 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:15:54.029 - INFO - +------ END KW: Utils.Run Command (1364)
20190402 07:15:54.029 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:15:54.029 - INFO - ${value} = applying
20190402 07:15:54.029 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:15:54.029 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:15:54.030 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:15:54.030 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:15:54.030 - FAIL - applying != applied
20190402 07:15:54.030 - DEBUG - Traceback (most recent call last):
  None
20190402 07:15:54.030 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:15:54.030 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:15:54.030 - INFO - +----- END KW: Utils.Check System Application Status (1366)
20190402 07:15:59.031 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:15:59.032 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:15:59.032 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:15:59.033 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:15:59.033 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:15:59.034 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:15:59.035 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:15:59.035 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:15:59.035 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:15:59.036 - INFO - &{result_dict} = { stdout= }
20190402 07:15:59.036 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:15:59.036 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:15:59.037 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:15:59.037 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:15:59.037 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:15:59.037 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:15:59.037 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:15:59.037 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:15:59.037 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:15:59.038 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:15:59.038 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:15:59.047 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:15:59.047 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:15:59.047 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:00.257 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:00.257 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:00.257 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1210)
20190402 07:16:00.257 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:00.258 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:00.258 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:00.258 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:00.258 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:00.258 - INFO - ${clean_out} = applying
20190402 07:16:00.258 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:00.258 - INFO - ${output} = applying
20190402 07:16:00.258 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:00.259 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:00.259 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:00.260 - INFO - echo $?
20190402 07:16:00.260 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:16:00.260 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:00.260 - INFO - 0
20190402 07:16:00.260 - INFO - ${rc} = 0
20190402 07:16:00.260 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:16:00.260 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:00.261 - INFO - 0
20190402 07:16:00.261 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:16:00.261 - INFO - ${rc} = 0
20190402 07:16:00.261 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:16:00.261 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:00.261 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:00.262 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:00.262 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:00.262 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:00.262 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:00.262 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:00.262 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:00.262 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:00.263 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:00.263 - INFO - +------ END KW: Utils.Run Command (1230)
20190402 07:16:00.263 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:00.263 - INFO - ${value} = applying
20190402 07:16:00.263 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:00.263 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:00.263 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:00.263 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:00.264 - FAIL - applying != applied
20190402 07:16:00.264 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:00.264 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:16:00.264 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:00.264 - INFO - +----- END KW: Utils.Check System Application Status (1233)
20190402 07:16:05.265 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:05.266 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:05.267 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:05.267 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:05.267 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:05.269 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:05.269 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:16:05.269 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:05.269 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:05.270 - INFO - &{result_dict} = { stdout= }
20190402 07:16:05.270 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:05.270 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:05.270 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:05.270 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:05.270 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:05.271 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:05.271 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:16:05.271 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:05.271 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:05.271 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:05.271 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:05.282 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:05.282 - INFO - +------- END KW: SSHLibrary.Write (11)
20190402 07:16:05.282 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:06.503 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:06.503 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:06.503 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1221)
20190402 07:16:06.503 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:06.504 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:06.504 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:06.504 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:06.504 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:06.504 - INFO - ${clean_out} = applying
20190402 07:16:06.504 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:06.504 - INFO - ${output} = applying
20190402 07:16:06.504 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:06.505 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:06.505 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:06.506 - INFO - echo $?
20190402 07:16:06.506 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:16:06.506 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:06.507 - INFO - 0
20190402 07:16:06.507 - INFO - ${rc} = 0
20190402 07:16:06.507 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:16:06.507 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:06.507 - INFO - 0
20190402 07:16:06.507 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:06.507 - INFO - ${rc} = 0
20190402 07:16:06.507 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:16:06.507 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:06.508 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:06.508 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:06.508 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:06.508 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:06.508 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:06.508 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:06.509 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:06.509 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:16:06.509 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:06.509 - INFO - +------ END KW: Utils.Run Command (1242)
20190402 07:16:06.509 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:06.509 - INFO - ${value} = applying
20190402 07:16:06.509 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:06.509 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:06.510 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:06.510 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:06.510 - FAIL - applying != applied
20190402 07:16:06.510 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:06.510 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:06.510 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:06.510 - INFO - +----- END KW: Utils.Check System Application Status (1246)
20190402 07:16:11.511 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:11.513 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:11.514 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:11.514 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:11.514 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:11.515 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:11.516 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:16:11.517 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:11.517 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:11.519 - INFO - &{result_dict} = { stdout= }
20190402 07:16:11.519 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:16:11.519 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:11.520 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:11.521 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:11.521 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:11.522 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:11.522 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:16:11.522 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:11.523 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:11.523 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:16:11.523 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:11.549 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:11.549 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:16:11.549 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:12.763 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:12.763 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:12.764 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1214)
20190402 07:16:12.764 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:12.764 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:12.764 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:12.765 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:12.765 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:12.765 - INFO - ${clean_out} = applying
20190402 07:16:12.765 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:12.765 - INFO - ${output} = applying
20190402 07:16:12.765 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:12.765 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:12.765 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:12.767 - INFO - echo $?
20190402 07:16:12.767 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:16:12.767 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:12.767 - INFO - 0
20190402 07:16:12.767 - INFO - ${rc} = 0
20190402 07:16:12.767 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:16:12.767 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:12.767 - INFO - 0
20190402 07:16:12.768 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:16:12.768 - INFO - ${rc} = 0
20190402 07:16:12.768 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:12.768 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:12.768 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:12.768 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:12.769 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:16:12.769 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:12.769 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:12.769 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:12.769 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:12.769 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:12.769 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:12.769 - INFO - +------ END KW: Utils.Run Command (1255)
20190402 07:16:12.770 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:12.770 - INFO - ${value} = applying
20190402 07:16:12.770 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:12.770 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:12.770 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:12.770 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:12.770 - FAIL - applying != applied
20190402 07:16:12.770 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:12.770 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:12.771 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:16:12.771 - INFO - +----- END KW: Utils.Check System Application Status (1260)
20190402 07:16:17.771 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:17.773 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:17.773 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:17.774 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:17.774 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:17.775 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:17.776 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:16:17.776 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:17.776 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:17.777 - INFO - &{result_dict} = { stdout= }
20190402 07:16:17.777 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:17.777 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:17.777 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:17.777 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:17.777 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:17.778 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:17.778 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:16:17.778 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:17.778 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:17.778 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:17.778 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:17.784 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:17.785 - INFO - +------- END KW: SSHLibrary.Write (7)
20190402 07:16:17.785 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:19.040 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:19.040 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:19.040 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1255)
20190402 07:16:19.041 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:19.041 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:19.041 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:19.041 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:19.041 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:19.042 - INFO - ${clean_out} = applying
20190402 07:16:19.042 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:16:19.042 - INFO - ${output} = applying
20190402 07:16:19.042 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:19.042 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:19.043 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:19.044 - INFO - echo $?
20190402 07:16:19.044 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:16:19.044 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:19.045 - INFO - 0
20190402 07:16:19.045 - INFO - ${rc} = 0
20190402 07:16:19.045 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:16:19.045 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:19.045 - INFO - 0
20190402 07:16:19.045 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:19.045 - INFO - ${rc} = 0
20190402 07:16:19.045 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:19.045 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:19.046 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:19.046 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:19.046 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:19.046 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:19.046 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:19.047 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:19.047 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:19.047 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:19.047 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:19.047 - INFO - +------ END KW: Utils.Run Command (1273)
20190402 07:16:19.047 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:19.047 - INFO - ${value} = applying
20190402 07:16:19.047 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:19.047 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:19.048 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:19.048 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:19.048 - FAIL - applying != applied
20190402 07:16:19.048 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:19.048 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:19.048 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:19.048 - INFO - +----- END KW: Utils.Check System Application Status (1277)
20190402 07:16:24.049 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:24.050 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:24.051 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:24.051 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:24.052 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:24.053 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:24.054 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:16:24.054 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:24.054 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:24.055 - INFO - &{result_dict} = { stdout= }
20190402 07:16:24.055 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:24.055 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:24.055 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:24.055 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:24.055 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:24.055 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:24.055 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:16:24.056 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:24.056 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:24.056 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:24.056 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:24.065 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:24.065 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:16:24.065 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:25.296 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:25.296 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:25.296 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1231)
20190402 07:16:25.296 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:25.297 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:25.297 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:25.297 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:25.297 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:25.297 - INFO - ${clean_out} = applying
20190402 07:16:25.297 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:25.297 - INFO - ${output} = applying
20190402 07:16:25.297 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:25.297 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:25.298 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:25.299 - INFO - echo $?
20190402 07:16:25.300 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:16:25.300 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:25.300 - INFO - 0
20190402 07:16:25.300 - INFO - ${rc} = 0
20190402 07:16:25.300 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:16:25.300 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:25.300 - INFO - 0
20190402 07:16:25.300 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:25.300 - INFO - ${rc} = 0
20190402 07:16:25.300 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:25.301 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:25.301 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:25.301 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:25.301 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:16:25.301 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:25.302 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:25.302 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:25.302 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:25.302 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:25.302 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:25.302 - INFO - +------ END KW: Utils.Run Command (1250)
20190402 07:16:25.302 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:25.302 - INFO - ${value} = applying
20190402 07:16:25.303 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:25.303 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:25.303 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:25.303 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:25.303 - FAIL - applying != applied
20190402 07:16:25.303 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:25.303 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:25.303 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:16:25.303 - INFO - +----- END KW: Utils.Check System Application Status (1254)
20190402 07:16:30.304 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:30.305 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:30.306 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:30.307 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:30.307 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:30.308 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:30.309 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:16:30.309 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:30.309 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:30.310 - INFO - &{result_dict} = { stdout= }
20190402 07:16:30.310 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:30.310 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:30.310 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:30.310 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:30.310 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:30.311 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:30.311 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:16:30.311 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:30.311 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:30.311 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:30.311 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:30.314 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:30.314 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 07:16:30.314 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:31.735 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:31.735 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:31.735 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1421)
20190402 07:16:31.735 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:31.735 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:31.736 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:31.736 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:16:31.736 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:31.736 - INFO - ${clean_out} = applying
20190402 07:16:31.736 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:31.736 - INFO - ${output} = applying
20190402 07:16:31.736 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:31.736 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:31.736 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:31.738 - INFO - echo $?
20190402 07:16:31.738 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:16:31.738 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:31.738 - INFO - 0
20190402 07:16:31.738 - INFO - ${rc} = 0
20190402 07:16:31.738 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:16:31.739 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:31.739 - INFO - 0
20190402 07:16:31.739 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:31.739 - INFO - ${rc} = 0
20190402 07:16:31.739 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:31.739 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:31.740 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:31.740 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:31.740 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:31.740 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:31.740 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:31.741 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:31.741 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:31.741 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:16:31.741 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:31.741 - INFO - +------ END KW: Utils.Run Command (1434)
20190402 07:16:31.741 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:31.741 - INFO - ${value} = applying
20190402 07:16:31.741 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:31.741 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:31.742 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:31.742 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:31.742 - FAIL - applying != applied
20190402 07:16:31.742 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:31.742 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:31.742 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:31.742 - INFO - +----- END KW: Utils.Check System Application Status (1438)
20190402 07:16:36.743 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:36.744 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:36.745 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:36.746 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:36.746 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:36.747 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:36.748 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:16:36.748 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:36.748 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:36.749 - INFO - &{result_dict} = { stdout= }
20190402 07:16:36.749 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:36.749 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:36.749 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:36.749 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:36.749 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:36.750 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:36.750 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:16:36.750 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:36.750 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:36.750 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:36.750 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:36.758 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:36.759 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:16:36.759 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:37.863 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:37.864 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:37.864 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1105)
20190402 07:16:37.864 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:37.864 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:37.864 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:37.865 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:37.865 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:37.865 - INFO - ${clean_out} = applying
20190402 07:16:37.865 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:37.865 - INFO - ${output} = applying
20190402 07:16:37.865 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:37.865 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:37.865 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:37.867 - INFO - echo $?
20190402 07:16:37.867 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:16:37.867 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:37.867 - INFO - 0
20190402 07:16:37.867 - INFO - ${rc} = 0
20190402 07:16:37.867 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:16:37.867 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:37.868 - INFO - 0
20190402 07:16:37.868 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:16:37.868 - INFO - ${rc} = 0
20190402 07:16:37.868 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:37.868 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:37.868 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:37.869 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:37.869 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:37.869 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:37.869 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:37.869 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:37.869 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:37.869 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:37.870 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:37.870 - INFO - +------ END KW: Utils.Run Command (1124)
20190402 07:16:37.870 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:37.870 - INFO - ${value} = applying
20190402 07:16:37.870 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:37.870 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:37.871 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:37.871 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:37.871 - FAIL - applying != applied
20190402 07:16:37.871 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:37.871 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:16:37.871 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:37.871 - INFO - +----- END KW: Utils.Check System Application Status (1128)
20190402 07:16:42.872 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:42.873 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:42.873 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:42.873 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:16:42.874 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:42.875 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:42.875 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:16:42.875 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:42.876 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:42.877 - INFO - &{result_dict} = { stdout= }
20190402 07:16:42.877 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:42.877 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:42.878 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:42.878 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:42.879 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:42.879 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:42.880 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 07:16:42.880 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:42.880 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:42.880 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:42.881 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:42.903 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:42.903 - INFO - +------- END KW: SSHLibrary.Write (22)
20190402 07:16:42.903 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:43.941 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:43.941 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:43.941 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1038)
20190402 07:16:43.941 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:43.941 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:43.942 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:43.942 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:16:43.942 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:43.942 - INFO - ${clean_out} = applying
20190402 07:16:43.942 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:43.942 - INFO - ${output} = applying
20190402 07:16:43.942 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:43.942 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:43.943 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:43.944 - INFO - echo $?
20190402 07:16:43.944 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:16:43.944 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:43.944 - INFO - 0
20190402 07:16:43.945 - INFO - ${rc} = 0
20190402 07:16:43.945 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:16:43.945 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:43.945 - INFO - 0
20190402 07:16:43.945 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:43.945 - INFO - ${rc} = 0
20190402 07:16:43.945 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:43.945 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:43.946 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:43.946 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:43.946 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:43.946 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:43.946 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:43.946 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:43.947 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:43.947 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:16:43.947 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:43.947 - INFO - +------ END KW: Utils.Run Command (1073)
20190402 07:16:43.947 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:43.947 - INFO - ${value} = applying
20190402 07:16:43.947 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:43.947 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:43.948 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:43.948 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:43.948 - FAIL - applying != applied
20190402 07:16:43.948 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:43.948 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:43.948 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:43.948 - INFO - +----- END KW: Utils.Check System Application Status (1076)
20190402 07:16:48.949 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:48.950 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:48.951 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:48.951 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:16:48.952 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:48.953 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:48.954 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:16:48.954 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:48.954 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:48.955 - INFO - &{result_dict} = { stdout= }
20190402 07:16:48.955 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:48.955 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:48.955 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:48.955 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:48.955 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:48.956 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:48.956 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:16:48.956 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:48.956 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:48.956 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:48.956 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:48.966 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:48.966 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:16:48.966 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:50.038 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:50.038 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:50.039 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1073)
20190402 07:16:50.039 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:50.039 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:50.039 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:50.039 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:16:50.039 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:50.040 - INFO - ${clean_out} = applying
20190402 07:16:50.040 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:16:50.040 - INFO - ${output} = applying
20190402 07:16:50.040 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:50.040 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:50.040 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:50.042 - INFO - echo $?
20190402 07:16:50.042 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:16:50.042 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:50.042 - INFO - 0
20190402 07:16:50.042 - INFO - ${rc} = 0
20190402 07:16:50.043 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:16:50.043 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:50.043 - INFO - 0
20190402 07:16:50.043 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:50.043 - INFO - ${rc} = 0
20190402 07:16:50.043 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:50.043 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:50.043 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:50.044 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:50.044 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:50.044 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:50.044 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:50.044 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:50.044 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:50.044 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:50.045 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:50.045 - INFO - +------ END KW: Utils.Run Command (1093)
20190402 07:16:50.045 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:50.045 - INFO - ${value} = applying
20190402 07:16:50.045 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:50.045 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:50.045 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:50.046 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:50.046 - FAIL - applying != applied
20190402 07:16:50.046 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:50.046 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:16:50.046 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:50.046 - INFO - +----- END KW: Utils.Check System Application Status (1097)
20190402 07:16:55.047 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:16:55.048 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:16:55.050 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:16:55.050 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:16:55.050 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:16:55.052 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:16:55.052 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:16:55.052 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:16:55.052 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:16:55.053 - INFO - &{result_dict} = { stdout= }
20190402 07:16:55.053 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:16:55.053 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:16:55.053 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:55.053 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:16:55.054 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:55.054 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:16:55.054 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:16:55.054 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:16:55.054 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:55.054 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:16:55.054 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:16:55.063 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:16:55.063 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:16:55.063 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:16:56.132 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:56.132 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:56.132 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1069)
20190402 07:16:56.132 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:16:56.133 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:16:56.133 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:16:56.133 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:16:56.133 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:16:56.133 - INFO - ${clean_out} = applying
20190402 07:16:56.133 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:16:56.133 - INFO - ${output} = applying
20190402 07:16:56.133 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:16:56.133 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:16:56.134 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:16:56.135 - INFO - echo $?
20190402 07:16:56.135 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:16:56.135 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:16:56.135 - INFO - 0
20190402 07:16:56.135 - INFO - ${rc} = 0
20190402 07:16:56.135 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:16:56.136 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:16:56.136 - INFO - 0
20190402 07:16:56.136 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:16:56.136 - INFO - ${rc} = 0
20190402 07:16:56.136 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:16:56.136 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:16:56.136 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:16:56.137 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:16:56.137 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:56.137 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:16:56.137 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:16:56.137 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:16:56.137 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:16:56.137 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:16:56.138 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:16:56.138 - INFO - +------ END KW: Utils.Run Command (1088)
20190402 07:16:56.138 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:16:56.138 - INFO - ${value} = applying
20190402 07:16:56.138 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:16:56.138 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:16:56.139 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:16:56.139 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:16:56.139 - FAIL - applying != applied
20190402 07:16:56.139 - DEBUG - Traceback (most recent call last):
  None
20190402 07:16:56.139 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:16:56.139 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:16:56.139 - INFO - +----- END KW: Utils.Check System Application Status (1092)
20190402 07:17:01.140 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:01.141 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:01.142 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:01.142 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:01.142 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:01.144 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:01.145 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:17:01.145 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:01.145 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:01.146 - INFO - &{result_dict} = { stdout= }
20190402 07:17:01.146 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:01.146 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:01.146 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:01.146 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:01.146 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:01.147 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:01.147 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:01.147 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:01.147 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:01.147 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:01.147 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:01.156 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:01.156 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:01.156 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:02.230 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:02.231 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:02.231 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1075)
20190402 07:17:02.231 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:02.231 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:02.231 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:02.232 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:17:02.232 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:02.232 - INFO - ${clean_out} = applying
20190402 07:17:02.232 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:02.232 - INFO - ${output} = applying
20190402 07:17:02.232 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:17:02.232 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:02.232 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:02.234 - INFO - echo $?
20190402 07:17:02.234 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:17:02.234 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:02.235 - INFO - 0
20190402 07:17:02.235 - INFO - ${rc} = 0
20190402 07:17:02.235 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:17:02.235 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:02.235 - INFO - 0
20190402 07:17:02.235 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:17:02.235 - INFO - ${rc} = 0
20190402 07:17:02.235 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:02.236 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:02.236 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:02.236 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:02.236 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:17:02.236 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:02.237 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:02.237 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:02.237 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:02.237 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:17:02.237 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:02.237 - INFO - +------ END KW: Utils.Run Command (1095)
20190402 07:17:02.237 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:02.237 - INFO - ${value} = applying
20190402 07:17:02.237 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:02.238 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:02.238 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:02.238 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:02.238 - FAIL - applying != applied
20190402 07:17:02.238 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:02.238 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:02.238 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:17:02.238 - INFO - +----- END KW: Utils.Check System Application Status (1098)
20190402 07:17:07.239 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:07.240 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:07.241 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:07.241 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:07.242 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:07.243 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:07.244 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:17:07.244 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:07.244 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:07.245 - INFO - &{result_dict} = { stdout= }
20190402 07:17:07.245 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:07.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:07.245 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:07.245 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:07.245 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:07.246 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:07.246 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:07.246 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:07.246 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:07.246 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:07.246 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:07.255 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:07.255 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:07.255 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:08.322 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:08.322 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:08.322 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1067)
20190402 07:17:08.322 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:08.322 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:08.323 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:08.323 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:17:08.323 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:08.323 - INFO - ${clean_out} = applying
20190402 07:17:08.323 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:08.323 - INFO - ${output} = applying
20190402 07:17:08.323 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:17:08.323 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:08.323 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:08.325 - INFO - echo $?
20190402 07:17:08.325 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:17:08.325 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:08.325 - INFO - 0
20190402 07:17:08.325 - INFO - ${rc} = 0
20190402 07:17:08.325 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:17:08.325 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:08.326 - INFO - 0
20190402 07:17:08.326 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:17:08.326 - INFO - ${rc} = 0
20190402 07:17:08.326 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:08.326 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:08.326 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:08.327 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:08.327 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:08.327 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:08.327 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:08.327 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:08.327 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:08.327 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:17:08.327 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:08.327 - INFO - +------ END KW: Utils.Run Command (1085)
20190402 07:17:08.328 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:08.328 - INFO - ${value} = applying
20190402 07:17:08.328 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:08.328 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:08.328 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:08.328 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:08.328 - FAIL - applying != applied
20190402 07:17:08.329 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:08.329 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:17:08.329 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:08.329 - INFO - +----- END KW: Utils.Check System Application Status (1090)
20190402 07:17:13.330 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:13.331 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:13.332 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:13.332 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:13.333 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:13.334 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:13.334 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:17:13.334 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:13.334 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:13.335 - INFO - &{result_dict} = { stdout= }
20190402 07:17:13.335 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:13.335 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:13.335 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:13.335 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:13.336 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:13.336 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:13.336 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:13.336 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:13.336 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:13.336 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:13.337 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:13.346 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:13.346 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:13.346 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:14.474 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:14.474 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:14.475 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1128)
20190402 07:17:14.475 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:14.475 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:14.475 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:14.475 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:14.475 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:14.476 - INFO - ${clean_out} = applying
20190402 07:17:14.476 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:17:14.476 - INFO - ${output} = applying
20190402 07:17:14.476 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:17:14.476 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:14.476 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:14.478 - INFO - echo $?
20190402 07:17:14.478 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:17:14.478 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:14.478 - INFO - 0
20190402 07:17:14.478 - INFO - ${rc} = 0
20190402 07:17:14.478 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:17:14.478 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:14.479 - INFO - 0
20190402 07:17:14.479 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:17:14.479 - INFO - ${rc} = 0
20190402 07:17:14.479 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:14.479 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:14.479 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:14.480 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:14.480 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:14.480 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:14.480 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:14.480 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:14.480 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:14.480 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:17:14.480 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:14.481 - INFO - +------ END KW: Utils.Run Command (1147)
20190402 07:17:14.481 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:14.481 - INFO - ${value} = applying
20190402 07:17:14.481 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:14.481 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:14.481 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:14.481 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:14.481 - FAIL - applying != applied
20190402 07:17:14.482 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:14.482 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:17:14.482 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:14.482 - INFO - +----- END KW: Utils.Check System Application Status (1153)
20190402 07:17:19.482 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:19.484 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:19.485 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:19.485 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:19.485 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:19.487 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:19.487 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:17:19.487 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:19.487 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:19.488 - INFO - &{result_dict} = { stdout= }
20190402 07:17:19.488 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:19.488 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:19.488 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:19.488 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:19.488 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:19.489 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:19.489 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:19.489 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:19.489 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:19.489 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:19.489 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:19.498 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:19.499 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:19.499 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:20.616 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:20.616 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:20.616 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1117)
20190402 07:17:20.617 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:20.617 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:20.617 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:20.617 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:20.618 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:20.618 - INFO - ${clean_out} = applying
20190402 07:17:20.618 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:20.618 - INFO - ${output} = applying
20190402 07:17:20.618 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:17:20.618 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:20.618 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:20.620 - INFO - echo $?
20190402 07:17:20.620 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:17:20.620 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:20.621 - INFO - 0
20190402 07:17:20.621 - INFO - ${rc} = 0
20190402 07:17:20.621 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:17:20.621 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:20.621 - INFO - 0
20190402 07:17:20.621 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:17:20.621 - INFO - ${rc} = 0
20190402 07:17:20.621 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:20.621 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:20.622 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:20.622 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:20.622 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:20.622 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:20.622 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:20.623 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:20.623 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:20.623 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:17:20.623 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:20.623 - INFO - +------ END KW: Utils.Run Command (1138)
20190402 07:17:20.623 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:20.623 - INFO - ${value} = applying
20190402 07:17:20.623 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:20.624 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:20.624 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:20.624 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:20.624 - FAIL - applying != applied
20190402 07:17:20.624 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:20.624 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:20.624 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:17:20.624 - INFO - +----- END KW: Utils.Check System Application Status (1142)
20190402 07:17:25.625 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:25.627 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:25.628 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:25.628 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:17:25.628 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:25.630 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:25.630 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:17:25.630 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:25.630 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:25.631 - INFO - &{result_dict} = { stdout= }
20190402 07:17:25.631 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:25.631 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:25.631 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:25.631 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:25.631 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:25.632 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:25.632 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:25.632 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:25.632 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:25.632 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:25.632 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:25.641 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:25.641 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:25.641 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:26.757 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:26.757 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:26.757 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1116)
20190402 07:17:26.757 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:26.757 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:26.758 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:26.758 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:17:26.758 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:26.758 - INFO - ${clean_out} = applying
20190402 07:17:26.758 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:26.758 - INFO - ${output} = applying
20190402 07:17:26.758 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:17:26.758 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:26.759 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:26.760 - INFO - echo $?
20190402 07:17:26.760 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:17:26.760 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:26.761 - INFO - 0
20190402 07:17:26.761 - INFO - ${rc} = 0
20190402 07:17:26.761 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:17:26.761 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:26.761 - INFO - 0
20190402 07:17:26.761 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:17:26.761 - INFO - ${rc} = 0
20190402 07:17:26.761 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:26.761 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:26.762 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:26.762 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:26.762 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:26.762 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:26.762 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:26.762 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:26.763 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:26.763 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:17:26.763 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:26.763 - INFO - +------ END KW: Utils.Run Command (1135)
20190402 07:17:26.763 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:26.763 - INFO - ${value} = applying
20190402 07:17:26.763 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:26.763 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:26.764 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:26.764 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:26.764 - FAIL - applying != applied
20190402 07:17:26.764 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:26.764 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:26.764 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:26.764 - INFO - +----- END KW: Utils.Check System Application Status (1139)
20190402 07:17:31.765 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:31.766 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:31.767 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:31.767 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:31.768 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:31.769 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:31.770 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:17:31.770 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:31.770 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:31.771 - INFO - &{result_dict} = { stdout= }
20190402 07:17:31.771 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:31.771 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:31.771 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:31.771 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:31.771 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:31.772 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:31.772 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:31.772 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:31.772 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:31.772 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:31.772 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:31.781 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:31.781 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:31.781 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:32.855 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:32.855 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:32.855 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1074)
20190402 07:17:32.855 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:32.856 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:32.856 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:32.856 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:32.856 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:32.856 - INFO - ${clean_out} = applying
20190402 07:17:32.856 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:32.857 - INFO - ${output} = applying
20190402 07:17:32.857 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:17:32.857 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:32.857 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:32.859 - INFO - echo $?
20190402 07:17:32.859 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:17:32.859 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:32.859 - INFO - 0
20190402 07:17:32.859 - INFO - ${rc} = 0
20190402 07:17:32.859 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:17:32.859 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:32.860 - INFO - 0
20190402 07:17:32.860 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:17:32.860 - INFO - ${rc} = 0
20190402 07:17:32.860 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:32.860 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:32.860 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:32.861 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:32.861 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:32.861 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:32.861 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:32.861 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:32.861 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:32.861 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:17:32.862 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:32.862 - INFO - +------ END KW: Utils.Run Command (1094)
20190402 07:17:32.862 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:32.862 - INFO - ${value} = applying
20190402 07:17:32.862 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:32.862 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:32.863 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:32.863 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:32.863 - FAIL - applying != applied
20190402 07:17:32.863 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:32.863 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:32.863 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:32.863 - INFO - +----- END KW: Utils.Check System Application Status (1098)
20190402 07:17:37.864 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:37.865 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:37.866 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:37.866 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:37.867 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:37.868 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:37.869 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:17:37.869 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:37.869 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:37.870 - INFO - &{result_dict} = { stdout= }
20190402 07:17:37.870 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:37.870 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:37.870 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:37.870 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:37.871 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:37.871 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:37.871 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:37.871 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:37.871 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:37.871 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:37.871 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:37.879 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:37.879 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:17:37.879 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:38.937 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:38.938 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:38.938 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1059)
20190402 07:17:38.938 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:38.938 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:38.938 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:38.938 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:38.938 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:38.939 - INFO - ${clean_out} = applying
20190402 07:17:38.939 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:17:38.939 - INFO - ${output} = applying
20190402 07:17:38.939 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:17:38.939 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:38.939 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:38.941 - INFO - echo $?
20190402 07:17:38.941 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:17:38.941 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:38.941 - INFO - 0
20190402 07:17:38.941 - INFO - ${rc} = 0
20190402 07:17:38.941 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:17:38.941 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:38.941 - INFO - 0
20190402 07:17:38.942 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:17:38.942 - INFO - ${rc} = 0
20190402 07:17:38.942 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:38.942 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:38.943 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:38.943 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:38.943 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:38.943 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:38.943 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:38.943 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:38.944 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:38.944 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:17:38.944 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:38.944 - INFO - +------ END KW: Utils.Run Command (1077)
20190402 07:17:38.944 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:38.944 - INFO - ${value} = applying
20190402 07:17:38.944 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:38.944 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:38.945 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:38.945 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:38.945 - FAIL - applying != applied
20190402 07:17:38.945 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:38.945 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:38.945 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:38.945 - INFO - +----- END KW: Utils.Check System Application Status (1081)
20190402 07:17:43.946 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:43.947 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:43.948 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:43.948 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:43.949 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:43.951 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:43.951 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:17:43.952 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:43.952 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:43.953 - INFO - &{result_dict} = { stdout= }
20190402 07:17:43.953 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:43.953 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:43.953 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:43.953 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:43.953 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:43.953 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:43.954 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:17:43.954 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:43.954 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:43.954 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:43.954 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:43.962 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:43.962 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:17:43.962 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:45.116 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:45.116 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:45.116 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1154)
20190402 07:17:45.116 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:45.117 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:45.117 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:45.117 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:45.117 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:45.117 - INFO - ${clean_out} = applying
20190402 07:17:45.117 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:45.117 - INFO - ${output} = applying
20190402 07:17:45.118 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:17:45.118 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:45.118 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:45.119 - INFO - echo $?
20190402 07:17:45.119 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:17:45.119 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:45.120 - INFO - 0
20190402 07:17:45.120 - INFO - ${rc} = 0
20190402 07:17:45.120 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:17:45.120 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:45.120 - INFO - 0
20190402 07:17:45.120 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:17:45.120 - INFO - ${rc} = 0
20190402 07:17:45.120 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:17:45.120 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:45.121 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:45.121 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:45.121 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:45.121 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:45.121 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:45.121 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:45.122 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:45.122 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:17:45.122 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:45.122 - INFO - +------ END KW: Utils.Run Command (1173)
20190402 07:17:45.122 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:45.122 - INFO - ${value} = applying
20190402 07:17:45.122 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:45.123 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:45.123 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:45.123 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:45.123 - FAIL - applying != applied
20190402 07:17:45.123 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:45.123 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:45.123 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:17:45.123 - INFO - +----- END KW: Utils.Check System Application Status (1177)
20190402 07:17:50.124 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:50.126 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:50.127 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:50.127 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:50.127 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:50.129 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:50.129 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:17:50.129 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:50.129 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:50.130 - INFO - &{result_dict} = { stdout= }
20190402 07:17:50.130 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:50.130 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:50.130 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:50.130 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:50.131 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:50.131 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:50.131 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:50.131 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:50.131 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:50.131 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:50.131 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:50.140 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:50.140 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:50.140 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:51.212 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:51.212 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:51.212 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1072)
20190402 07:17:51.212 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:51.213 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:51.213 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:51.213 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:51.213 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:51.213 - INFO - ${clean_out} = applying
20190402 07:17:51.213 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:51.213 - INFO - ${output} = applying
20190402 07:17:51.214 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:17:51.214 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:51.214 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:51.215 - INFO - echo $?
20190402 07:17:51.215 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:17:51.215 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:51.216 - INFO - 0
20190402 07:17:51.216 - INFO - ${rc} = 0
20190402 07:17:51.216 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:17:51.216 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:51.216 - INFO - 0
20190402 07:17:51.216 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:17:51.216 - INFO - ${rc} = 0
20190402 07:17:51.216 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:17:51.216 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:51.217 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:51.217 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:51.217 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:51.217 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:51.217 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:51.217 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:51.217 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:51.218 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:17:51.218 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:51.218 - INFO - +------ END KW: Utils.Run Command (1091)
20190402 07:17:51.218 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:51.218 - INFO - ${value} = applying
20190402 07:17:51.218 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:17:51.218 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:51.219 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:51.219 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:51.219 - FAIL - applying != applied
20190402 07:17:51.219 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:51.219 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:51.219 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:17:51.219 - INFO - +----- END KW: Utils.Check System Application Status (1095)
20190402 07:17:56.220 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:17:56.221 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:17:56.222 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:17:56.222 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:17:56.223 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:17:56.224 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:17:56.225 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:17:56.225 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:17:56.225 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:17:56.226 - INFO - &{result_dict} = { stdout= }
20190402 07:17:56.226 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:17:56.226 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:17:56.226 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:56.226 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:17:56.226 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:56.227 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:17:56.227 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:17:56.227 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:17:56.227 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:56.227 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:17:56.227 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:17:56.236 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:17:56.236 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:17:56.236 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:17:57.324 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:57.324 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:57.324 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1088)
20190402 07:17:57.324 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:17:57.325 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:17:57.325 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:17:57.325 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:17:57.325 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:17:57.325 - INFO - ${clean_out} = applying
20190402 07:17:57.325 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:17:57.326 - INFO - ${output} = applying
20190402 07:17:57.326 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:17:57.326 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:17:57.326 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:17:57.327 - INFO - echo $?
20190402 07:17:57.327 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:17:57.328 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:17:57.328 - INFO - 0
20190402 07:17:57.328 - INFO - ${rc} = 0
20190402 07:17:57.328 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:17:57.328 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:17:57.328 - INFO - 0
20190402 07:17:57.328 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:17:57.329 - INFO - ${rc} = 0
20190402 07:17:57.329 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:17:57.329 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:17:57.329 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:17:57.329 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:17:57.329 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:17:57.329 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:17:57.330 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:17:57.330 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:17:57.330 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:17:57.330 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:17:57.330 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:17:57.330 - INFO - +------ END KW: Utils.Run Command (1107)
20190402 07:17:57.330 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:17:57.331 - INFO - ${value} = applying
20190402 07:17:57.331 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:17:57.331 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:17:57.331 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:17:57.331 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:17:57.331 - FAIL - applying != applied
20190402 07:17:57.331 - DEBUG - Traceback (most recent call last):
  None
20190402 07:17:57.331 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:17:57.331 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:17:57.332 - INFO - +----- END KW: Utils.Check System Application Status (1111)
20190402 07:18:02.332 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:02.334 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:02.335 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:02.335 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:18:02.336 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:02.337 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:02.337 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:18:02.337 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:02.338 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:02.338 - INFO - &{result_dict} = { stdout= }
20190402 07:18:02.338 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:18:02.338 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:02.338 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:02.338 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:02.339 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:02.339 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:02.339 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:18:02.339 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:02.339 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:02.339 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:02.339 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:02.349 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:02.349 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:18:02.349 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:03.432 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:03.432 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:03.432 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1083)
20190402 07:18:03.433 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:03.433 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:03.433 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:03.433 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:03.433 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:03.433 - INFO - ${clean_out} = applying
20190402 07:18:03.434 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:18:03.434 - INFO - ${output} = applying
20190402 07:18:03.434 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:03.434 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:03.434 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:03.436 - INFO - echo $?
20190402 07:18:03.436 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:18:03.436 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:03.436 - INFO - 0
20190402 07:18:03.436 - INFO - ${rc} = 0
20190402 07:18:03.436 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:18:03.436 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:03.436 - INFO - 0
20190402 07:18:03.437 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:18:03.437 - INFO - ${rc} = 0
20190402 07:18:03.437 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:18:03.437 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:03.437 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:03.437 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:03.437 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:18:03.438 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:03.438 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:03.438 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:03.438 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:03.438 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:03.438 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:03.438 - INFO - +------ END KW: Utils.Run Command (1102)
20190402 07:18:03.438 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:03.439 - INFO - ${value} = applying
20190402 07:18:03.439 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:18:03.439 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:03.439 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:03.439 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:03.439 - FAIL - applying != applied
20190402 07:18:03.439 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:03.440 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:03.440 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:03.440 - INFO - +----- END KW: Utils.Check System Application Status (1108)
20190402 07:18:08.440 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:08.442 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:08.442 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:08.443 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:08.443 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:08.444 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:08.446 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 07:18:08.446 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:08.447 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:08.448 - INFO - &{result_dict} = { stdout= }
20190402 07:18:08.449 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:08.449 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:08.450 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:08.450 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:08.451 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:08.452 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:08.452 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:18:08.452 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:08.453 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:08.453 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:18:08.453 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:08.478 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:08.478 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:18:08.478 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:09.587 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:09.587 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:09.587 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1109)
20190402 07:18:09.587 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:09.587 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:09.588 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:09.588 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:18:09.588 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:09.588 - INFO - ${clean_out} = applying
20190402 07:18:09.588 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:18:09.588 - INFO - ${output} = applying
20190402 07:18:09.588 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:09.588 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:09.588 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:09.590 - INFO - echo $?
20190402 07:18:09.590 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:18:09.590 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:09.590 - INFO - 0
20190402 07:18:09.590 - INFO - ${rc} = 0
20190402 07:18:09.590 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:18:09.590 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:09.591 - INFO - 0
20190402 07:18:09.591 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:18:09.591 - INFO - ${rc} = 0
20190402 07:18:09.591 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:18:09.591 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:09.591 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:09.592 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:09.592 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:09.592 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:09.592 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:09.592 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:09.592 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:09.592 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:09.592 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:09.593 - INFO - +------ END KW: Utils.Run Command (1149)
20190402 07:18:09.593 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:09.593 - INFO - ${value} = applying
20190402 07:18:09.593 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:18:09.593 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:09.593 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:09.593 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:09.594 - FAIL - applying != applied
20190402 07:18:09.594 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:09.594 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:09.594 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:09.594 - INFO - +----- END KW: Utils.Check System Application Status (1154)
20190402 07:18:14.595 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:14.596 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:14.597 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:14.597 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:14.597 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:14.599 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:14.599 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:18:14.599 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:14.599 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:14.600 - INFO - &{result_dict} = { stdout= }
20190402 07:18:14.600 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:14.600 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:14.600 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:14.600 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:14.601 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:14.601 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:14.601 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:18:14.601 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:14.601 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:14.601 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:14.601 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:14.610 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:14.610 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:18:14.610 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:15.673 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:15.673 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:15.673 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1063)
20190402 07:18:15.673 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:15.674 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:15.674 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:15.674 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:15.674 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:15.674 - INFO - ${clean_out} = applying
20190402 07:18:15.674 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:18:15.674 - INFO - ${output} = applying
20190402 07:18:15.674 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:15.675 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:15.675 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:15.676 - INFO - echo $?
20190402 07:18:15.676 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:18:15.676 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:15.677 - INFO - 0
20190402 07:18:15.677 - INFO - ${rc} = 0
20190402 07:18:15.677 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:18:15.677 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:15.677 - INFO - 0
20190402 07:18:15.677 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:18:15.677 - INFO - ${rc} = 0
20190402 07:18:15.677 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:18:15.677 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:15.678 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:15.678 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:15.678 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:15.678 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:15.678 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:15.678 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:15.679 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:15.679 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:18:15.679 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:15.679 - INFO - +------ END KW: Utils.Run Command (1082)
20190402 07:18:15.679 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:15.679 - INFO - ${value} = applying
20190402 07:18:15.679 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:18:15.679 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:15.680 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:15.680 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:15.680 - FAIL - applying != applied
20190402 07:18:15.680 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:15.680 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:18:15.680 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:15.680 - INFO - +----- END KW: Utils.Check System Application Status (1086)
20190402 07:18:20.681 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:20.682 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:20.682 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:20.683 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:20.683 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:20.684 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:20.685 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:18:20.685 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:20.686 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:20.686 - INFO - &{result_dict} = { stdout= }
20190402 07:18:20.686 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:20.686 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:20.687 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:20.687 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:20.687 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:20.687 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:20.687 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:18:20.688 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:20.688 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:20.688 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:20.688 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:20.698 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:20.698 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:18:20.698 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:21.752 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:21.752 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:21.752 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1054)
20190402 07:18:21.752 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:21.753 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:21.753 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:21.753 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:21.753 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:21.753 - INFO - ${clean_out} = applying
20190402 07:18:21.753 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:18:21.753 - INFO - ${output} = applying
20190402 07:18:21.753 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:21.753 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:21.754 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:21.755 - INFO - echo $?
20190402 07:18:21.755 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:18:21.755 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:21.755 - INFO - 0
20190402 07:18:21.755 - INFO - ${rc} = 0
20190402 07:18:21.756 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:18:21.756 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:21.756 - INFO - 0
20190402 07:18:21.756 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:18:21.756 - INFO - ${rc} = 0
20190402 07:18:21.756 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:18:21.756 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:21.756 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:21.757 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:21.757 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:21.757 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:21.757 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:21.757 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:21.757 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:21.757 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:21.758 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:21.758 - INFO - +------ END KW: Utils.Run Command (1075)
20190402 07:18:21.758 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:21.758 - INFO - ${value} = applying
20190402 07:18:21.758 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:18:21.758 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:21.758 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:21.759 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:21.759 - FAIL - applying != applied
20190402 07:18:21.759 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:21.759 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:21.759 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:21.759 - INFO - +----- END KW: Utils.Check System Application Status (1078)
20190402 07:18:26.759 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:26.760 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:26.760 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:26.760 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 07:18:26.760 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:26.761 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:26.761 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:18:26.761 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:26.761 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:26.762 - INFO - &{result_dict} = { stdout= }
20190402 07:18:26.762 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:26.762 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:26.762 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:26.762 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:26.763 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:26.763 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:26.763 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:18:26.763 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:26.763 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:26.763 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:26.763 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:26.772 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:26.773 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:18:26.773 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:28.680 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:28.680 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:28.680 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1907)
20190402 07:18:28.680 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:28.681 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:28.681 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:28.681 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:18:28.681 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:28.681 - INFO - ${clean_out} = applying
20190402 07:18:28.681 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:18:28.681 - INFO - ${output} = applying
20190402 07:18:28.681 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:28.681 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:28.682 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:28.685 - INFO - echo $?
20190402 07:18:28.685 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:18:28.685 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:28.688 - INFO - 0
20190402 07:18:28.688 - INFO - ${rc} = 0
20190402 07:18:28.688 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:18:28.688 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:28.688 - INFO - 0
20190402 07:18:28.689 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:18:28.689 - INFO - ${rc} = 0
20190402 07:18:28.689 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:18:28.689 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:28.689 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:28.689 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:28.690 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:28.690 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:28.690 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:28.690 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:28.690 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:28.690 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:28.690 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:28.690 - INFO - +------ END KW: Utils.Run Command (1930)
20190402 07:18:28.691 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:28.691 - INFO - ${value} = applying
20190402 07:18:28.691 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:18:28.691 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:28.691 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:28.691 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:28.691 - FAIL - applying != applied
20190402 07:18:28.691 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:28.692 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:28.692 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:28.692 - INFO - +----- END KW: Utils.Check System Application Status (1933)
20190402 07:18:33.693 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:33.694 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:33.695 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:33.695 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:33.695 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:33.697 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:33.698 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:18:33.698 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:33.699 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:33.700 - INFO - &{result_dict} = { stdout= }
20190402 07:18:33.700 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:33.701 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:33.702 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:33.702 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:33.703 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:33.704 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:33.704 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:18:33.704 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:33.705 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:33.705 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:18:33.706 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:33.731 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:33.731 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:18:33.731 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:34.881 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:34.881 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:34.882 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1150)
20190402 07:18:34.882 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:34.882 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:34.882 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:34.882 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:34.882 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:34.883 - INFO - ${clean_out} = applying
20190402 07:18:34.883 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:18:34.883 - INFO - ${output} = applying
20190402 07:18:34.883 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:34.883 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:34.883 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:34.885 - INFO - echo $?
20190402 07:18:34.885 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:18:34.885 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:34.885 - INFO - 0
20190402 07:18:34.885 - INFO - ${rc} = 0
20190402 07:18:34.885 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:18:34.886 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:34.886 - INFO - 0
20190402 07:18:34.886 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:18:34.886 - INFO - ${rc} = 0
20190402 07:18:34.886 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:18:34.886 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:34.886 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:34.887 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:34.887 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:34.887 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:34.887 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:34.887 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:34.887 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:34.887 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:34.888 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:34.888 - INFO - +------ END KW: Utils.Run Command (1193)
20190402 07:18:34.888 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:34.888 - INFO - ${value} = applying
20190402 07:18:34.888 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:18:34.888 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:34.888 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:34.889 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:34.889 - FAIL - applying != applied
20190402 07:18:34.889 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:34.889 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:34.889 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:34.889 - INFO - +----- END KW: Utils.Check System Application Status (1197)
20190402 07:18:39.890 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:39.891 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:39.892 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:39.892 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:39.892 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:39.894 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:39.894 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:18:39.895 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:39.895 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:39.895 - INFO - &{result_dict} = { stdout= }
20190402 07:18:39.896 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:39.896 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:39.896 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:39.896 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:39.896 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:39.896 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:39.896 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:18:39.897 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:39.897 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:39.897 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:39.897 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:39.905 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:39.905 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:18:39.905 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:41.003 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:41.003 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:41.003 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1098)
20190402 07:18:41.004 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:41.004 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:41.004 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:41.004 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:41.004 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:41.004 - INFO - ${clean_out} = applying
20190402 07:18:41.005 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:18:41.005 - INFO - ${output} = applying
20190402 07:18:41.005 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:41.005 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:41.005 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:41.007 - INFO - echo $?
20190402 07:18:41.008 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:18:41.008 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:41.008 - INFO - 0
20190402 07:18:41.008 - INFO - ${rc} = 0
20190402 07:18:41.008 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:18:41.008 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:41.008 - INFO - 0
20190402 07:18:41.008 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:18:41.009 - INFO - ${rc} = 0
20190402 07:18:41.009 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:18:41.009 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:41.009 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:41.009 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:41.009 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:18:41.009 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:41.010 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:41.010 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:41.010 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:41.010 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:41.010 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:41.010 - INFO - +------ END KW: Utils.Run Command (1118)
20190402 07:18:41.010 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:41.011 - INFO - ${value} = applying
20190402 07:18:41.011 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:18:41.011 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:41.011 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:41.011 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:41.011 - FAIL - applying != applied
20190402 07:18:41.011 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:41.011 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:18:41.011 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:18:41.011 - INFO - +----- END KW: Utils.Check System Application Status (1121)
20190402 07:18:46.012 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:46.014 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:46.014 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:46.015 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:18:46.015 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:46.017 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:46.017 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:18:46.017 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:46.017 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:46.018 - INFO - &{result_dict} = { stdout= }
20190402 07:18:46.018 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:46.018 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:46.018 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:46.018 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:46.018 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:46.019 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:46.019 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:18:46.019 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:46.019 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:46.019 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:46.019 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:46.021 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:46.021 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:18:46.021 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:47.276 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:47.276 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:47.276 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1255)
20190402 07:18:47.276 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:47.277 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:47.277 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:47.277 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:47.277 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:47.277 - INFO - ${clean_out} = applying
20190402 07:18:47.277 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:18:47.277 - INFO - ${output} = applying
20190402 07:18:47.277 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:47.278 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:47.278 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:47.280 - INFO - echo $?
20190402 07:18:47.280 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:18:47.281 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:47.285 - INFO - 0
20190402 07:18:47.285 - INFO - ${rc} = 0
20190402 07:18:47.285 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:18:47.285 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:47.285 - INFO - 0
20190402 07:18:47.285 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:18:47.285 - INFO - ${rc} = 0
20190402 07:18:47.286 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:18:47.286 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:47.286 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:47.287 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:47.287 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:47.287 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:47.287 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:47.287 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:47.287 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:47.287 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:47.287 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:47.287 - INFO - +------ END KW: Utils.Run Command (1272)
20190402 07:18:47.288 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:47.288 - INFO - ${value} = applying
20190402 07:18:47.288 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:18:47.288 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:47.288 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:47.288 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:47.288 - FAIL - applying != applied
20190402 07:18:47.289 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:47.289 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:47.289 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:47.289 - INFO - +----- END KW: Utils.Check System Application Status (1277)
20190402 07:18:52.290 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:52.291 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:52.292 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:52.292 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:52.292 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:52.294 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:52.295 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:18:52.295 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:52.296 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:52.297 - INFO - &{result_dict} = { stdout= }
20190402 07:18:52.298 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:18:52.298 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:52.299 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:52.299 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:52.300 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:52.301 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:52.301 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:18:52.302 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:52.302 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:52.302 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:52.303 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:52.327 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:52.328 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 07:18:52.328 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:53.438 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:53.438 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:53.438 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1110)
20190402 07:18:53.438 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:53.439 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:53.439 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:53.439 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:53.439 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:53.439 - INFO - ${clean_out} = applying
20190402 07:18:53.439 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:18:53.439 - INFO - ${output} = applying
20190402 07:18:53.439 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:53.440 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:53.440 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:53.441 - INFO - echo $?
20190402 07:18:53.441 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:18:53.442 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:53.442 - INFO - 0
20190402 07:18:53.442 - INFO - ${rc} = 0
20190402 07:18:53.442 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:18:53.442 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:53.442 - INFO - 0
20190402 07:18:53.442 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:18:53.442 - INFO - ${rc} = 0
20190402 07:18:53.442 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:18:53.442 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:53.443 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:53.443 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:53.443 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:53.443 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:53.443 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:53.444 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:53.444 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:53.444 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:18:53.444 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:53.444 - INFO - +------ END KW: Utils.Run Command (1152)
20190402 07:18:53.444 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:53.444 - INFO - ${value} = applying
20190402 07:18:53.445 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:18:53.445 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:53.445 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:53.445 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:53.445 - FAIL - applying != applied
20190402 07:18:53.445 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:53.445 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:18:53.445 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:18:53.445 - INFO - +----- END KW: Utils.Check System Application Status (1156)
20190402 07:18:58.446 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:18:58.448 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:18:58.449 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:18:58.449 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:18:58.449 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:18:58.451 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:18:58.451 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:18:58.451 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:18:58.451 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:18:58.452 - INFO - &{result_dict} = { stdout= }
20190402 07:18:58.452 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:18:58.452 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:18:58.452 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:58.452 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:18:58.453 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:58.453 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:18:58.453 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:18:58.453 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:18:58.453 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:58.453 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:18:58.453 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:18:58.461 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:18:58.461 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:18:58.461 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:18:59.699 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:59.699 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:59.699 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1238)
20190402 07:18:59.700 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:18:59.700 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:18:59.700 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:18:59.700 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:18:59.700 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:18:59.700 - INFO - ${clean_out} = applying
20190402 07:18:59.701 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:18:59.701 - INFO - ${output} = applying
20190402 07:18:59.701 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:18:59.701 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:18:59.701 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:18:59.703 - INFO - echo $?
20190402 07:18:59.703 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:18:59.703 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:18:59.706 - INFO - 0
20190402 07:18:59.706 - INFO - ${rc} = 0
20190402 07:18:59.706 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:18:59.706 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:18:59.706 - INFO - 0
20190402 07:18:59.706 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:18:59.706 - INFO - ${rc} = 0
20190402 07:18:59.706 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:18:59.707 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:18:59.707 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:18:59.707 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:18:59.707 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:18:59.707 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:18:59.708 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:18:59.708 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:18:59.708 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:18:59.708 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:18:59.708 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:18:59.708 - INFO - +------ END KW: Utils.Run Command (1259)
20190402 07:18:59.708 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:18:59.708 - INFO - ${value} = applying
20190402 07:18:59.709 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:18:59.709 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:18:59.709 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:18:59.709 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:18:59.710 - FAIL - applying != applied
20190402 07:18:59.710 - DEBUG - Traceback (most recent call last):
  None
20190402 07:18:59.710 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:18:59.710 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:18:59.710 - INFO - +----- END KW: Utils.Check System Application Status (1264)
20190402 07:19:04.711 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:04.712 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:04.713 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:04.713 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:04.714 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:04.715 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:04.716 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:19:04.716 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:04.717 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:04.718 - INFO - &{result_dict} = { stdout= }
20190402 07:19:04.719 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:19:04.719 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:04.720 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:04.721 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:04.721 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:04.722 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:04.722 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:19:04.723 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:04.723 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:04.723 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:04.724 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:04.749 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:04.749 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:19:04.749 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:05.828 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:05.829 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:05.829 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1080)
20190402 07:19:05.829 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:05.829 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:05.829 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:05.829 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:19:05.830 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:05.830 - INFO - ${clean_out} = applying
20190402 07:19:05.830 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:05.830 - INFO - ${output} = applying
20190402 07:19:05.830 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:05.830 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:05.830 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:05.832 - INFO - echo $?
20190402 07:19:05.832 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:19:05.832 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:05.832 - INFO - 0
20190402 07:19:05.832 - INFO - ${rc} = 0
20190402 07:19:05.833 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:19:05.833 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:05.833 - INFO - 0
20190402 07:19:05.833 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:05.833 - INFO - ${rc} = 0
20190402 07:19:05.833 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:19:05.833 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:05.833 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:05.834 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:05.834 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:05.834 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:05.834 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:05.834 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:05.834 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:05.834 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:05.835 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:05.835 - INFO - +------ END KW: Utils.Run Command (1121)
20190402 07:19:05.835 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:05.835 - INFO - ${value} = applying
20190402 07:19:05.835 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:05.835 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:05.835 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:05.836 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:05.836 - FAIL - applying != applied
20190402 07:19:05.836 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:05.836 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:19:05.836 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:05.836 - INFO - +----- END KW: Utils.Check System Application Status (1125)
20190402 07:19:10.837 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:10.838 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:10.840 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:10.840 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:19:10.840 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:10.842 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:10.843 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:19:10.843 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:10.844 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:10.846 - INFO - &{result_dict} = { stdout= }
20190402 07:19:10.846 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:19:10.846 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:10.847 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:10.848 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:10.848 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:10.849 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:10.849 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:19:10.850 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:10.850 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:10.850 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:10.851 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:10.868 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:10.868 - INFO - +------- END KW: SSHLibrary.Write (17)
20190402 07:19:10.868 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:11.961 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:11.961 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:11.962 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1093)
20190402 07:19:11.962 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:11.962 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:11.962 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:11.962 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:19:11.962 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:11.963 - INFO - ${clean_out} = applying
20190402 07:19:11.963 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:19:11.963 - INFO - ${output} = applying
20190402 07:19:11.963 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:11.963 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:11.963 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:11.965 - INFO - echo $?
20190402 07:19:11.966 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:19:11.966 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:11.966 - INFO - 0
20190402 07:19:11.966 - INFO - ${rc} = 0
20190402 07:19:11.966 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:19:11.966 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:11.966 - INFO - 0
20190402 07:19:11.966 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:11.966 - INFO - ${rc} = 0
20190402 07:19:11.966 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:19:11.966 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:11.967 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:11.967 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:11.967 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:11.967 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:11.967 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:11.968 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:11.968 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:11.968 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:19:11.968 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:11.968 - INFO - +------ END KW: Utils.Run Command (1128)
20190402 07:19:11.968 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:11.968 - INFO - ${value} = applying
20190402 07:19:11.968 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:11.968 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:11.969 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:11.969 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:11.969 - FAIL - applying != applied
20190402 07:19:11.969 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:11.969 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:11.969 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:11.969 - INFO - +----- END KW: Utils.Check System Application Status (1132)
20190402 07:19:16.970 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:16.971 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:16.972 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:16.973 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:16.973 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:16.974 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:16.976 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (2)
20190402 07:19:16.976 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:16.977 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:16.979 - INFO - &{result_dict} = { stdout= }
20190402 07:19:16.979 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:19:16.979 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:16.980 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:16.981 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:16.981 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:16.982 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:16.982 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:19:16.983 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:16.983 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:16.983 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:16.984 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:17.009 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:17.010 - INFO - +------- END KW: SSHLibrary.Write (26)
20190402 07:19:17.010 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:18.121 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:18.121 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:18.121 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1111)
20190402 07:19:18.121 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:18.122 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:18.122 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:18.122 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:19:18.122 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:18.122 - INFO - ${clean_out} = applying
20190402 07:19:18.122 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:18.122 - INFO - ${output} = applying
20190402 07:19:18.122 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:18.122 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:18.123 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:18.124 - INFO - echo $?
20190402 07:19:18.124 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:19:18.124 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:18.125 - INFO - 0
20190402 07:19:18.125 - INFO - ${rc} = 0
20190402 07:19:18.125 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:19:18.125 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:18.125 - INFO - 0
20190402 07:19:18.125 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:18.125 - INFO - ${rc} = 0
20190402 07:19:18.125 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:19:18.126 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:18.126 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:18.126 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:18.126 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:18.126 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:18.127 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:18.127 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:18.127 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:18.127 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:18.127 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:18.127 - INFO - +------ END KW: Utils.Run Command (1154)
20190402 07:19:18.127 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:18.127 - INFO - ${value} = applying
20190402 07:19:18.127 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:18.128 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:18.128 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:18.128 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:18.128 - FAIL - applying != applied
20190402 07:19:18.128 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:18.128 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:18.128 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:18.128 - INFO - +----- END KW: Utils.Check System Application Status (1158)
20190402 07:19:23.129 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:23.131 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:23.131 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:23.132 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:23.132 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:23.133 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:23.134 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:19:23.134 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:23.134 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:23.135 - INFO - &{result_dict} = { stdout= }
20190402 07:19:23.135 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:19:23.135 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:23.135 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:23.135 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:23.136 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:23.136 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:23.136 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:19:23.136 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:23.136 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:23.136 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:23.136 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:23.145 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:23.146 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:19:23.146 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:24.294 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:24.294 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:24.294 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1148)
20190402 07:19:24.294 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:24.294 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:24.295 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:24.295 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:19:24.295 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:24.295 - INFO - ${clean_out} = applying
20190402 07:19:24.295 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:24.295 - INFO - ${output} = applying
20190402 07:19:24.295 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:24.295 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:24.296 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:24.297 - INFO - echo $?
20190402 07:19:24.297 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:19:24.297 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:24.298 - INFO - 0
20190402 07:19:24.298 - INFO - ${rc} = 0
20190402 07:19:24.298 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:19:24.298 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:24.298 - INFO - 0
20190402 07:19:24.298 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:24.298 - INFO - ${rc} = 0
20190402 07:19:24.299 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:19:24.299 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:24.299 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:24.299 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:24.299 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:24.299 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:24.300 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:24.300 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:24.300 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:24.300 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:24.300 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:24.300 - INFO - +------ END KW: Utils.Run Command (1168)
20190402 07:19:24.300 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:24.300 - INFO - ${value} = applying
20190402 07:19:24.301 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:19:24.301 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:24.301 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:24.301 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:24.301 - FAIL - applying != applied
20190402 07:19:24.301 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:24.301 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:24.301 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:24.301 - INFO - +----- END KW: Utils.Check System Application Status (1172)
20190402 07:19:29.302 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:29.303 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:29.304 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:29.304 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:29.305 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:29.306 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:29.307 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:19:29.307 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:29.307 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:29.308 - INFO - &{result_dict} = { stdout= }
20190402 07:19:29.308 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:19:29.308 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:29.308 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:29.308 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:29.308 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:29.309 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:29.309 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:19:29.309 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:29.309 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:29.309 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:29.309 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:29.319 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:29.319 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:19:29.319 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:30.895 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:30.896 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:30.896 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1577)
20190402 07:19:30.896 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:30.896 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:30.896 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:30.896 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:19:30.897 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:30.897 - INFO - ${clean_out} = applying
20190402 07:19:30.897 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:30.897 - INFO - ${output} = applying
20190402 07:19:30.897 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:30.897 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:30.897 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:30.899 - INFO - echo $?
20190402 07:19:30.899 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:19:30.899 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:30.904 - INFO - 0
20190402 07:19:30.904 - INFO - ${rc} = 0
20190402 07:19:30.904 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (5)
20190402 07:19:30.904 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:30.904 - INFO - 0
20190402 07:19:30.905 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:30.905 - INFO - ${rc} = 0
20190402 07:19:30.905 - INFO - +------- END KW: Utils.Get Return Code (8)
20190402 07:19:30.905 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:30.905 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:30.905 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:30.905 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:30.906 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:30.906 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:30.906 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:30.906 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:30.906 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:30.906 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:30.906 - INFO - +------ END KW: Utils.Run Command (1601)
20190402 07:19:30.906 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:30.907 - INFO - ${value} = applying
20190402 07:19:30.907 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:19:30.907 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:30.907 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:30.907 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:30.907 - FAIL - applying != applied
20190402 07:19:30.907 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:30.907 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:30.907 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:30.908 - INFO - +----- END KW: Utils.Check System Application Status (1606)
20190402 07:19:35.908 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:35.909 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:35.910 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:35.910 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:35.910 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:35.911 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:35.912 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:19:35.912 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:35.913 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:35.913 - INFO - &{result_dict} = { stdout= }
20190402 07:19:35.913 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:19:35.913 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:35.914 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:35.914 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:35.914 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:35.914 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:35.914 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:19:35.914 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:35.915 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:35.915 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:19:35.915 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:35.923 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:35.923 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:19:35.923 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:37.141 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:37.141 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:37.142 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1219)
20190402 07:19:37.142 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:37.142 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:37.142 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:37.143 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:19:37.143 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:37.143 - INFO - ${clean_out} = applying
20190402 07:19:37.143 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:37.143 - INFO - ${output} = applying
20190402 07:19:37.143 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:37.143 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:37.143 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:37.146 - INFO - echo $?
20190402 07:19:37.147 - INFO - +-------- END KW: SSHLibrary.Write (4)
20190402 07:19:37.147 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:37.153 - INFO - 0
20190402 07:19:37.153 - INFO - ${rc} = 0
20190402 07:19:37.153 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (6)
20190402 07:19:37.154 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:37.154 - INFO - 0
20190402 07:19:37.154 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:37.154 - INFO - ${rc} = 0
20190402 07:19:37.154 - INFO - +------- END KW: Utils.Get Return Code (11)
20190402 07:19:37.154 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:37.155 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:37.155 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:37.155 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:37.155 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:37.155 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:37.155 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:37.156 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:37.156 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:19:37.156 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:37.156 - INFO - +------ END KW: Utils.Run Command (1246)
20190402 07:19:37.156 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:37.156 - INFO - ${value} = applying
20190402 07:19:37.156 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:37.156 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:37.157 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:37.157 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:37.157 - FAIL - applying != applied
20190402 07:19:37.157 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:37.157 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:37.157 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:37.157 - INFO - +----- END KW: Utils.Check System Application Status (1249)
20190402 07:19:42.158 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:42.159 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:42.160 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:42.161 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:19:42.161 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:42.163 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:42.163 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:19:42.163 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:42.163 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:42.164 - INFO - &{result_dict} = { stdout= }
20190402 07:19:42.164 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:19:42.164 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:42.164 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:42.164 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:42.164 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:42.165 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:42.165 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:19:42.165 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:42.165 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:42.165 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:42.165 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:42.175 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:42.175 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:19:42.175 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:43.341 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:43.341 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:43.341 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1166)
20190402 07:19:43.341 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:43.341 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:43.342 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:43.342 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:19:43.342 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:43.342 - INFO - ${clean_out} = applying
20190402 07:19:43.342 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:43.342 - INFO - ${output} = applying
20190402 07:19:43.342 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:43.343 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:43.343 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:43.344 - INFO - echo $?
20190402 07:19:43.344 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:19:43.344 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:43.345 - INFO - 0
20190402 07:19:43.345 - INFO - ${rc} = 0
20190402 07:19:43.345 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:19:43.345 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:43.345 - INFO - 0
20190402 07:19:43.345 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:43.345 - INFO - ${rc} = 0
20190402 07:19:43.345 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:19:43.345 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:43.346 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:43.346 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:43.346 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:43.346 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:43.346 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:43.346 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:43.346 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:43.347 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:43.347 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:43.347 - INFO - +------ END KW: Utils.Run Command (1186)
20190402 07:19:43.347 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:43.347 - INFO - ${value} = applying
20190402 07:19:43.347 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:43.347 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:43.348 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:43.348 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:43.348 - FAIL - applying != applied
20190402 07:19:43.348 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:43.348 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:43.348 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:43.348 - INFO - +----- END KW: Utils.Check System Application Status (1190)
20190402 07:19:48.349 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:48.350 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:48.351 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:48.351 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:48.352 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:48.353 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:48.354 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:19:48.354 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:48.354 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:48.355 - INFO - &{result_dict} = { stdout= }
20190402 07:19:48.355 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:19:48.355 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:48.355 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:48.355 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:48.355 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:48.356 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:48.356 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:19:48.356 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:48.356 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:48.356 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:48.356 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:48.366 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:48.366 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:19:48.366 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:49.762 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:49.763 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:49.763 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1397)
20190402 07:19:49.763 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:49.763 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:49.763 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:49.764 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:19:49.764 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:49.764 - INFO - ${clean_out} = applying
20190402 07:19:49.764 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:49.764 - INFO - ${output} = applying
20190402 07:19:49.764 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:49.764 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:49.764 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:49.766 - INFO - echo $?
20190402 07:19:49.766 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:19:49.766 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:49.767 - INFO - 0
20190402 07:19:49.767 - INFO - ${rc} = 0
20190402 07:19:49.767 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:19:49.767 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:49.767 - INFO - 0
20190402 07:19:49.767 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:49.767 - INFO - ${rc} = 0
20190402 07:19:49.767 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:19:49.767 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:49.768 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:49.768 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:49.768 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:49.768 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:49.768 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:49.769 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:49.769 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:49.769 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:49.769 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:49.769 - INFO - +------ END KW: Utils.Run Command (1417)
20190402 07:19:49.769 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:49.769 - INFO - ${value} = applying
20190402 07:19:49.769 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:49.770 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:49.770 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:49.770 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:49.770 - FAIL - applying != applied
20190402 07:19:49.770 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:49.770 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:49.770 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:49.770 - INFO - +----- END KW: Utils.Check System Application Status (1421)
20190402 07:19:54.771 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:19:54.773 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:19:54.774 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:19:54.774 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:19:54.775 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:19:54.776 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:19:54.776 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:19:54.776 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:19:54.777 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:19:54.777 - INFO - &{result_dict} = { stdout= }
20190402 07:19:54.777 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:19:54.777 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:19:54.777 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:54.777 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:19:54.778 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:19:54.778 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:19:54.778 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:19:54.778 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:19:54.778 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:54.778 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:19:54.778 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:19:54.786 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:19:54.786 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:19:54.786 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:19:55.966 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:55.966 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:55.967 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1181)
20190402 07:19:55.967 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:19:55.967 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:19:55.967 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:19:55.967 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:19:55.968 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:19:55.968 - INFO - ${clean_out} = applying
20190402 07:19:55.968 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:19:55.968 - INFO - ${output} = applying
20190402 07:19:55.968 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:19:55.968 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:19:55.968 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:19:55.970 - INFO - echo $?
20190402 07:19:55.970 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:19:55.971 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:19:55.971 - INFO - 0
20190402 07:19:55.971 - INFO - ${rc} = 0
20190402 07:19:55.971 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:19:55.971 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:19:55.971 - INFO - 0
20190402 07:19:55.971 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:19:55.971 - INFO - ${rc} = 0
20190402 07:19:55.971 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:19:55.972 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:19:55.972 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:19:55.972 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:55.972 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:19:55.973 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:19:55.973 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:19:55.973 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:19:55.973 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:19:55.973 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:19:55.973 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:19:55.973 - INFO - +------ END KW: Utils.Run Command (1199)
20190402 07:19:55.974 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:19:55.974 - INFO - ${value} = applying
20190402 07:19:55.974 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:19:55.974 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:19:55.974 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:19:55.974 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:19:55.974 - FAIL - applying != applied
20190402 07:19:55.974 - DEBUG - Traceback (most recent call last):
  None
20190402 07:19:55.975 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:19:55.975 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:19:55.975 - INFO - +----- END KW: Utils.Check System Application Status (1204)
20190402 07:20:00.976 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:00.977 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:00.978 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:00.978 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:00.978 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:00.980 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:00.980 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:20:00.980 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:00.981 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:00.981 - INFO - &{result_dict} = { stdout= }
20190402 07:20:00.981 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:20:00.981 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:00.981 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:00.981 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:00.982 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:00.982 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:00.982 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:20:00.982 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:00.982 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:00.982 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:20:00.982 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:00.991 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:00.992 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:20:00.992 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:02.207 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:02.208 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:02.208 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1216)
20190402 07:20:02.208 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:02.208 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:02.208 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:02.208 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:20:02.209 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:02.209 - INFO - ${clean_out} = applying
20190402 07:20:02.209 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:02.209 - INFO - ${output} = applying
20190402 07:20:02.209 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:02.209 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:02.209 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:02.211 - INFO - echo $?
20190402 07:20:02.211 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:20:02.211 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:02.211 - INFO - 0
20190402 07:20:02.211 - INFO - ${rc} = 0
20190402 07:20:02.211 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:20:02.211 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:02.212 - INFO - 0
20190402 07:20:02.212 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:20:02.212 - INFO - ${rc} = 0
20190402 07:20:02.212 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:02.212 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:02.212 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:02.213 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:02.213 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:02.213 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:02.213 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:02.213 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:02.213 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:02.213 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:02.213 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:02.214 - INFO - +------ END KW: Utils.Run Command (1235)
20190402 07:20:02.214 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:02.214 - INFO - ${value} = applying
20190402 07:20:02.214 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:02.214 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:02.214 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:02.215 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:02.215 - FAIL - applying != applied
20190402 07:20:02.215 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:02.215 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:20:02.215 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:02.215 - INFO - +----- END KW: Utils.Check System Application Status (1240)
20190402 07:20:07.216 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:07.217 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:07.218 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:07.218 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:07.219 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:07.220 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:07.221 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:07.221 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:07.221 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:07.222 - INFO - &{result_dict} = { stdout= }
20190402 07:20:07.222 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:20:07.222 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:07.222 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:07.222 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:07.222 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:07.223 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:07.223 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:20:07.223 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:07.223 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:07.223 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:20:07.223 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:07.232 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:07.232 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:20:07.232 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:08.398 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:08.398 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:08.398 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1166)
20190402 07:20:08.398 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:08.398 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:08.399 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:08.399 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:20:08.399 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:08.399 - INFO - ${clean_out} = applying
20190402 07:20:08.399 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:08.399 - INFO - ${output} = applying
20190402 07:20:08.399 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:08.399 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:08.400 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:08.401 - INFO - echo $?
20190402 07:20:08.401 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:20:08.401 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:08.401 - INFO - 0
20190402 07:20:08.401 - INFO - ${rc} = 0
20190402 07:20:08.401 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:20:08.402 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:08.402 - INFO - 0
20190402 07:20:08.402 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:08.402 - INFO - ${rc} = 0
20190402 07:20:08.402 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:08.402 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:08.402 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:08.403 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:08.403 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:08.403 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:08.403 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:08.403 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:08.403 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:08.403 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:08.404 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:08.404 - INFO - +------ END KW: Utils.Run Command (1186)
20190402 07:20:08.404 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:08.404 - INFO - ${value} = applying
20190402 07:20:08.404 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:08.404 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:08.404 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:08.404 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:08.405 - FAIL - applying != applied
20190402 07:20:08.405 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:08.405 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:20:08.405 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:08.405 - INFO - +----- END KW: Utils.Check System Application Status (1189)
20190402 07:20:13.406 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:13.407 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:13.408 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:13.408 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:13.409 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:13.410 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:13.411 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:13.412 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:13.412 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:13.414 - INFO - &{result_dict} = { stdout= }
20190402 07:20:13.414 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:20:13.415 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:13.416 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:13.416 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:13.417 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:13.418 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:13.418 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:20:13.418 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:13.419 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:13.419 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:20:13.419 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:13.448 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:13.448 - INFO - +------- END KW: SSHLibrary.Write (29)
20190402 07:20:13.448 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:14.528 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:14.528 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:14.528 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1080)
20190402 07:20:14.528 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:14.528 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:14.529 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:14.529 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:20:14.529 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:14.529 - INFO - ${clean_out} = applying
20190402 07:20:14.529 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:14.529 - INFO - ${output} = applying
20190402 07:20:14.529 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:14.529 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:14.530 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:14.531 - INFO - echo $?
20190402 07:20:14.531 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:20:14.531 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:14.531 - INFO - 0
20190402 07:20:14.532 - INFO - ${rc} = 0
20190402 07:20:14.532 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:20:14.532 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:14.532 - INFO - 0
20190402 07:20:14.532 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:14.532 - INFO - ${rc} = 0
20190402 07:20:14.532 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:14.532 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:14.533 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:14.533 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:14.533 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:14.533 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:14.533 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:14.533 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:14.534 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:14.534 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:20:14.534 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:14.534 - INFO - +------ END KW: Utils.Run Command (1125)
20190402 07:20:14.534 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:14.534 - INFO - ${value} = applying
20190402 07:20:14.534 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:14.534 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:14.535 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:14.535 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:14.535 - FAIL - applying != applied
20190402 07:20:14.535 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:14.535 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:20:14.535 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:14.535 - INFO - +----- END KW: Utils.Check System Application Status (1129)
20190402 07:20:19.536 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:19.538 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:19.538 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:19.539 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:19.539 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:19.541 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:19.541 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:19.541 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:19.541 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:19.542 - INFO - &{result_dict} = { stdout= }
20190402 07:20:19.542 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:20:19.542 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:19.542 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:19.542 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:19.543 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:19.543 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:19.543 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:20:19.543 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:19.543 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:19.543 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:20:19.543 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:19.552 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:19.553 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:20:19.553 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:20.673 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:20.673 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:20.673 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1120)
20190402 07:20:20.673 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:20.673 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:20.674 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:20.674 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:20:20.674 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:20.674 - INFO - ${clean_out} = applying
20190402 07:20:20.674 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:20.674 - INFO - ${output} = applying
20190402 07:20:20.674 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:20.674 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:20.675 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:20.676 - INFO - echo $?
20190402 07:20:20.676 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:20:20.676 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:20.676 - INFO - 0
20190402 07:20:20.676 - INFO - ${rc} = 0
20190402 07:20:20.676 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:20:20.676 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:20.677 - INFO - 0
20190402 07:20:20.677 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:20:20.677 - INFO - ${rc} = 0
20190402 07:20:20.677 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:20.677 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:20.677 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:20.678 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:20.678 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:20.678 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:20.678 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:20.678 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:20.678 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:20.678 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:20.678 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:20.679 - INFO - +------ END KW: Utils.Run Command (1139)
20190402 07:20:20.679 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:20.679 - INFO - ${value} = applying
20190402 07:20:20.679 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:20.679 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:20.679 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:20.679 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:20.680 - FAIL - applying != applied
20190402 07:20:20.680 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:20.680 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:20:20.680 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:20.680 - INFO - +----- END KW: Utils.Check System Application Status (1144)
20190402 07:20:25.681 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:25.682 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:25.683 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:25.683 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:25.684 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:25.685 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:25.686 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:25.686 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:25.687 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:25.688 - INFO - &{result_dict} = { stdout= }
20190402 07:20:25.688 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:20:25.689 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:25.690 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:25.690 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:25.691 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:25.692 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:25.693 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (7)
20190402 07:20:25.693 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:25.694 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:25.694 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:20:25.695 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:25.720 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:25.720 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:20:25.720 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:27.262 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:27.262 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:27.262 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1542)
20190402 07:20:27.262 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:27.262 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:27.263 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:27.263 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:20:27.263 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:27.263 - INFO - ${clean_out} = applying
20190402 07:20:27.263 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:27.263 - INFO - ${output} = applying
20190402 07:20:27.263 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:27.263 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:27.264 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:27.265 - INFO - echo $?
20190402 07:20:27.265 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:20:27.265 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:27.266 - INFO - 0
20190402 07:20:27.266 - INFO - ${rc} = 0
20190402 07:20:27.266 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:20:27.266 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:27.266 - INFO - 0
20190402 07:20:27.266 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:27.266 - INFO - ${rc} = 0
20190402 07:20:27.266 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:27.267 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:27.267 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:27.267 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:27.267 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:20:27.267 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:27.268 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:27.268 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:27.268 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:27.268 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:27.268 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:27.268 - INFO - +------ END KW: Utils.Run Command (1584)
20190402 07:20:27.268 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:27.268 - INFO - ${value} = applying
20190402 07:20:27.268 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:27.269 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:27.269 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:27.269 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:27.269 - FAIL - applying != applied
20190402 07:20:27.269 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:27.269 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:20:27.269 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:20:27.269 - INFO - +----- END KW: Utils.Check System Application Status (1588)
20190402 07:20:32.270 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:32.272 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:32.273 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:32.273 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:20:32.274 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:32.275 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:32.275 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:20:32.275 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:32.276 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:32.276 - INFO - &{result_dict} = { stdout= }
20190402 07:20:32.276 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:20:32.276 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:32.276 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:32.276 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:32.277 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:32.277 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:32.277 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:20:32.277 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:32.277 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:32.277 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:20:32.277 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:32.287 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:32.287 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:20:32.287 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:33.392 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:33.393 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:33.393 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1106)
20190402 07:20:33.393 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:33.393 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:33.393 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:33.394 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:20:33.394 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:33.394 - INFO - ${clean_out} = applying
20190402 07:20:33.394 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:33.394 - INFO - ${output} = applying
20190402 07:20:33.394 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:33.394 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:33.394 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:33.397 - INFO - echo $?
20190402 07:20:33.397 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:20:33.397 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:33.398 - INFO - 0
20190402 07:20:33.398 - INFO - ${rc} = 0
20190402 07:20:33.398 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:20:33.398 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:33.398 - INFO - 0
20190402 07:20:33.398 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:33.399 - INFO - ${rc} = 0
20190402 07:20:33.399 - INFO - +------- END KW: Utils.Get Return Code (5)
20190402 07:20:33.399 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:33.399 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:33.399 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:33.399 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:20:33.400 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:33.400 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:33.400 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:33.400 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:33.400 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:33.400 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:33.400 - INFO - +------ END KW: Utils.Run Command (1126)
20190402 07:20:33.401 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:33.401 - INFO - ${value} = applying
20190402 07:20:33.401 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:33.401 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:33.401 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:33.401 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:33.402 - FAIL - applying != applied
20190402 07:20:33.402 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:33.402 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:20:33.402 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:33.402 - INFO - +----- END KW: Utils.Check System Application Status (1132)
20190402 07:20:38.403 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:38.404 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:38.405 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:38.405 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:38.406 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:38.407 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:38.408 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:38.408 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:38.408 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:38.408 - INFO - &{result_dict} = { stdout= }
20190402 07:20:38.408 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:20:38.408 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:38.409 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:38.409 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:38.409 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:38.409 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:38.409 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:20:38.409 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:38.409 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:38.410 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:20:38.410 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:38.413 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:38.413 - INFO - +------- END KW: SSHLibrary.Write (3)
20190402 07:20:38.413 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:39.736 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:39.736 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:39.737 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1324)
20190402 07:20:39.737 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:39.737 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:39.737 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:39.737 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:20:39.737 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:39.738 - INFO - ${clean_out} = applying
20190402 07:20:39.738 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:20:39.738 - INFO - ${output} = applying
20190402 07:20:39.738 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:39.738 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:39.738 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:39.741 - INFO - echo $?
20190402 07:20:39.741 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 07:20:39.741 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:39.754 - INFO - 0
20190402 07:20:39.754 - INFO - ${rc} = 0
20190402 07:20:39.754 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (13)
20190402 07:20:39.754 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:39.754 - INFO - 0
20190402 07:20:39.755 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:39.755 - INFO - ${rc} = 0
20190402 07:20:39.755 - INFO - +------- END KW: Utils.Get Return Code (17)
20190402 07:20:39.755 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:39.755 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:39.755 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:39.756 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:39.756 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:39.756 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:39.756 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:39.756 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:39.756 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:39.756 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:39.756 - INFO - +------ END KW: Utils.Run Command (1350)
20190402 07:20:39.757 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:39.757 - INFO - ${value} = applying
20190402 07:20:39.757 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:39.757 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:39.757 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:39.757 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:39.757 - FAIL - applying != applied
20190402 07:20:39.758 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:39.758 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:20:39.758 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:39.758 - INFO - +----- END KW: Utils.Check System Application Status (1356)
20190402 07:20:44.759 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:44.760 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:44.761 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:44.761 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:44.761 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:44.763 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:44.764 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:44.764 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:44.765 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:44.767 - INFO - &{result_dict} = { stdout= }
20190402 07:20:44.767 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:20:44.767 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:44.768 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:44.769 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:44.769 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:44.770 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:44.770 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:20:44.771 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:44.771 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:44.772 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:20:44.772 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:44.796 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:44.797 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:20:44.797 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:45.929 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:45.929 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:45.929 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1132)
20190402 07:20:45.929 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:45.930 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:45.930 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:45.930 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:20:45.930 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:45.930 - INFO - ${clean_out} = applying
20190402 07:20:45.930 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:45.930 - INFO - ${output} = applying
20190402 07:20:45.930 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:45.930 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:45.931 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:45.932 - INFO - echo $?
20190402 07:20:45.932 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:20:45.932 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:45.932 - INFO - 0
20190402 07:20:45.933 - INFO - ${rc} = 0
20190402 07:20:45.933 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:20:45.933 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:45.933 - INFO - 0
20190402 07:20:45.933 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:45.933 - INFO - ${rc} = 0
20190402 07:20:45.933 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:45.933 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:45.934 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:45.934 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:45.934 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:45.934 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:45.934 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:45.934 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:45.934 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:45.935 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:20:45.935 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:45.935 - INFO - +------ END KW: Utils.Run Command (1174)
20190402 07:20:45.935 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:45.935 - INFO - ${value} = applying
20190402 07:20:45.935 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:45.935 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:45.936 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:45.936 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:45.936 - FAIL - applying != applied
20190402 07:20:45.936 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:45.936 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:20:45.936 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:45.936 - INFO - +----- END KW: Utils.Check System Application Status (1178)
20190402 07:20:50.937 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:50.938 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:50.938 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:50.938 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:50.938 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:50.939 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:50.940 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:50.940 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:50.940 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:50.941 - INFO - &{result_dict} = { stdout= }
20190402 07:20:50.941 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:20:50.942 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:50.942 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:50.942 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:50.942 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:50.943 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:50.943 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:20:50.943 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:50.943 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:50.943 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:20:50.943 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:50.952 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:50.952 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:20:50.952 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:52.094 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:52.094 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:52.094 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1142)
20190402 07:20:52.094 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:52.095 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:52.095 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:52.095 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:20:52.095 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:52.095 - INFO - ${clean_out} = applying
20190402 07:20:52.095 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:52.095 - INFO - ${output} = applying
20190402 07:20:52.095 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:52.096 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:52.096 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:52.097 - INFO - echo $?
20190402 07:20:52.097 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:20:52.098 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:52.098 - INFO - 0
20190402 07:20:52.098 - INFO - ${rc} = 0
20190402 07:20:52.098 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:20:52.098 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:52.098 - INFO - 0
20190402 07:20:52.098 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:52.098 - INFO - ${rc} = 0
20190402 07:20:52.098 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:20:52.098 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:52.099 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:52.099 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:52.099 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:52.099 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:52.099 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:52.099 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:52.100 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:52.100 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:20:52.100 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:52.100 - INFO - +------ END KW: Utils.Run Command (1162)
20190402 07:20:52.100 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:52.100 - INFO - ${value} = applying
20190402 07:20:52.100 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:52.100 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:52.101 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:52.101 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:52.101 - FAIL - applying != applied
20190402 07:20:52.101 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:52.101 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:20:52.101 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:52.101 - INFO - +----- END KW: Utils.Check System Application Status (1164)
20190402 07:20:57.102 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:20:57.103 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:20:57.104 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:20:57.105 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:20:57.105 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:20:57.106 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:20:57.107 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:20:57.108 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:20:57.109 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:20:57.110 - INFO - &{result_dict} = { stdout= }
20190402 07:20:57.110 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 07:20:57.111 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:20:57.112 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:57.112 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:20:57.113 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:57.114 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:20:57.114 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:20:57.114 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:20:57.114 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:57.115 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:20:57.115 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:20:57.144 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:20:57.145 - INFO - +------- END KW: SSHLibrary.Write (30)
20190402 07:20:57.145 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:20:58.272 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:58.273 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:58.273 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1128)
20190402 07:20:58.273 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:20:58.273 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:20:58.274 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:20:58.274 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:20:58.274 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:20:58.274 - INFO - ${clean_out} = applying
20190402 07:20:58.274 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:20:58.274 - INFO - ${output} = applying
20190402 07:20:58.274 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:20:58.274 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:20:58.275 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:20:58.276 - INFO - echo $?
20190402 07:20:58.276 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:20:58.276 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:20:58.276 - INFO - 0
20190402 07:20:58.276 - INFO - ${rc} = 0
20190402 07:20:58.277 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:20:58.277 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:20:58.277 - INFO - 0
20190402 07:20:58.277 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:20:58.277 - INFO - ${rc} = 0
20190402 07:20:58.277 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:20:58.277 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:20:58.277 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:20:58.278 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:20:58.278 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:58.278 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:20:58.278 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:20:58.278 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:20:58.278 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:20:58.278 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:20:58.279 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:20:58.279 - INFO - +------ END KW: Utils.Run Command (1174)
20190402 07:20:58.279 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:20:58.279 - INFO - ${value} = applying
20190402 07:20:58.279 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:20:58.279 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:20:58.279 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:20:58.280 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:20:58.280 - FAIL - applying != applied
20190402 07:20:58.280 - DEBUG - Traceback (most recent call last):
  None
20190402 07:20:58.280 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:20:58.280 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:20:58.280 - INFO - +----- END KW: Utils.Check System Application Status (1178)
20190402 07:21:03.281 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:03.282 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:03.283 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:03.283 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:03.284 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:03.285 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:03.286 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:21:03.286 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:03.286 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:03.287 - INFO - &{result_dict} = { stdout= }
20190402 07:21:03.287 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:03.287 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:03.287 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:03.287 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:03.287 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:03.288 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:03.288 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:03.288 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:03.288 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:03.288 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:03.288 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:03.297 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:03.297 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:21:03.297 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:04.360 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:04.360 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:04.360 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1063)
20190402 07:21:04.360 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:04.360 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:04.361 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:04.361 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:21:04.361 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:04.361 - INFO - ${clean_out} = applying
20190402 07:21:04.361 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:04.361 - INFO - ${output} = applying
20190402 07:21:04.361 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:04.362 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:04.362 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:04.363 - INFO - echo $?
20190402 07:21:04.363 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:21:04.363 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:04.367 - INFO - 0
20190402 07:21:04.367 - INFO - ${rc} = 0
20190402 07:21:04.367 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:21:04.367 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:04.367 - INFO - 0
20190402 07:21:04.368 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:04.368 - INFO - ${rc} = 0
20190402 07:21:04.368 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 07:21:04.368 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:04.368 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:04.368 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:04.368 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:21:04.369 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:04.369 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:04.369 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:04.369 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:04.369 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:21:04.369 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:04.369 - INFO - +------ END KW: Utils.Run Command (1085)
20190402 07:21:04.369 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:04.370 - INFO - ${value} = applying
20190402 07:21:04.370 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:21:04.370 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:04.370 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:04.370 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:04.370 - FAIL - applying != applied
20190402 07:21:04.370 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:04.370 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:04.370 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:21:04.371 - INFO - +----- END KW: Utils.Check System Application Status (1090)
20190402 07:21:09.371 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:09.373 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:09.374 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:09.374 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:09.374 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:09.376 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:09.376 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:21:09.376 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:09.377 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:09.377 - INFO - &{result_dict} = { stdout= }
20190402 07:21:09.377 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:21:09.377 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:09.377 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:09.377 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:09.378 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:09.378 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:09.378 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:09.378 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:09.378 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:09.378 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:09.378 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:09.386 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:09.386 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:21:09.386 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:10.493 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:10.493 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:10.493 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1107)
20190402 07:21:10.493 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:10.493 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:10.494 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:10.494 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:21:10.494 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:10.494 - INFO - ${clean_out} = applying
20190402 07:21:10.494 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:10.494 - INFO - ${output} = applying
20190402 07:21:10.494 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:10.494 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:10.494 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:10.496 - INFO - echo $?
20190402 07:21:10.496 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:21:10.496 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:10.496 - INFO - 0
20190402 07:21:10.497 - INFO - ${rc} = 0
20190402 07:21:10.497 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:21:10.497 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:10.497 - INFO - 0
20190402 07:21:10.497 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:10.497 - INFO - ${rc} = 0
20190402 07:21:10.497 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:21:10.497 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:10.498 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:10.498 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:10.498 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:10.498 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:10.498 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:10.498 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:10.498 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:10.498 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:21:10.499 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:10.499 - INFO - +------ END KW: Utils.Run Command (1125)
20190402 07:21:10.499 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:10.499 - INFO - ${value} = applying
20190402 07:21:10.499 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:10.499 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:10.500 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:10.500 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:10.500 - FAIL - applying != applied
20190402 07:21:10.500 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:10.500 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:10.500 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:10.500 - INFO - +----- END KW: Utils.Check System Application Status (1129)
20190402 07:21:15.501 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:15.502 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:15.503 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:15.503 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:15.504 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:15.505 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:15.506 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:21:15.506 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:15.506 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:15.507 - INFO - &{result_dict} = { stdout= }
20190402 07:21:15.507 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:15.507 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:15.507 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:15.507 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:15.507 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:15.508 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:15.508 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:15.508 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:15.508 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:15.508 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:15.508 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:15.515 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:15.515 - INFO - +------- END KW: SSHLibrary.Write (7)
20190402 07:21:15.515 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:16.598 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:16.599 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:16.599 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1084)
20190402 07:21:16.599 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:16.599 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:16.599 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:16.599 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:21:16.600 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:16.600 - INFO - ${clean_out} = applying
20190402 07:21:16.600 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:16.600 - INFO - ${output} = applying
20190402 07:21:16.600 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:16.600 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:16.600 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:16.602 - INFO - echo $?
20190402 07:21:16.602 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:21:16.602 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:16.602 - INFO - 0
20190402 07:21:16.602 - INFO - ${rc} = 0
20190402 07:21:16.602 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:21:16.602 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:16.603 - INFO - 0
20190402 07:21:16.603 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:21:16.603 - INFO - ${rc} = 0
20190402 07:21:16.603 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:21:16.603 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:16.603 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:16.604 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:16.604 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:16.604 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:16.604 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:16.604 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:16.604 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:16.605 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:21:16.605 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:16.605 - INFO - +------ END KW: Utils.Run Command (1101)
20190402 07:21:16.605 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:16.605 - INFO - ${value} = applying
20190402 07:21:16.605 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:16.605 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:16.606 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:16.606 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:16.606 - FAIL - applying != applied
20190402 07:21:16.606 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:16.606 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:16.606 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:16.606 - INFO - +----- END KW: Utils.Check System Application Status (1105)
20190402 07:21:21.607 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:21.608 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:21.609 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:21.610 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:21.610 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:21.611 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:21.612 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:21:21.613 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:21.614 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:21.615 - INFO - &{result_dict} = { stdout= }
20190402 07:21:21.615 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:21.616 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:21.617 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:21.617 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:21.618 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:21.619 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:21.619 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:21:21.619 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:21.620 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:21.620 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:21:21.620 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:21.638 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:21.638 - INFO - +------- END KW: SSHLibrary.Write (18)
20190402 07:21:21.639 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:22.745 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:22.745 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:22.745 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1106)
20190402 07:21:22.745 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:22.746 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:22.746 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:22.746 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:21:22.746 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:22.746 - INFO - ${clean_out} = applying
20190402 07:21:22.746 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:22.746 - INFO - ${output} = applying
20190402 07:21:22.746 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:22.747 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:22.747 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:22.748 - INFO - echo $?
20190402 07:21:22.748 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:21:22.748 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:22.749 - INFO - 0
20190402 07:21:22.749 - INFO - ${rc} = 0
20190402 07:21:22.749 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:21:22.749 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:22.749 - INFO - 0
20190402 07:21:22.749 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:22.749 - INFO - ${rc} = 0
20190402 07:21:22.749 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:21:22.749 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:22.750 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:22.750 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:22.750 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:22.750 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:22.750 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:22.751 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:22.751 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:22.751 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:21:22.751 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:22.751 - INFO - +------ END KW: Utils.Run Command (1141)
20190402 07:21:22.751 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:22.752 - INFO - ${value} = applying
20190402 07:21:22.752 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:21:22.752 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:22.752 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:22.752 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:22.752 - FAIL - applying != applied
20190402 07:21:22.752 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:22.752 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:22.752 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:21:22.752 - INFO - +----- END KW: Utils.Check System Application Status (1145)
20190402 07:21:27.753 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:27.755 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:27.755 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:27.756 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:27.756 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:27.758 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:27.758 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:21:27.758 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:27.758 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:27.759 - INFO - &{result_dict} = { stdout= }
20190402 07:21:27.759 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:27.759 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:27.759 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:27.759 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:27.760 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:27.760 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:27.760 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:27.760 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:27.760 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:27.760 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:27.760 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:27.770 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:27.770 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:21:27.770 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:28.872 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:28.872 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:28.872 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1102)
20190402 07:21:28.872 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:28.873 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:28.873 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:28.873 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:21:28.873 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:28.873 - INFO - ${clean_out} = applying
20190402 07:21:28.873 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:28.873 - INFO - ${output} = applying
20190402 07:21:28.874 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:28.874 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:28.874 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:28.875 - INFO - echo $?
20190402 07:21:28.875 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:21:28.876 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:28.876 - INFO - 0
20190402 07:21:28.876 - INFO - ${rc} = 0
20190402 07:21:28.876 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:21:28.876 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:28.876 - INFO - 0
20190402 07:21:28.876 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:28.876 - INFO - ${rc} = 0
20190402 07:21:28.876 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:21:28.877 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:28.877 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:28.877 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:28.877 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:28.877 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:28.877 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:28.878 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:28.878 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:28.878 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:21:28.878 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:28.878 - INFO - +------ END KW: Utils.Run Command (1122)
20190402 07:21:28.878 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:28.878 - INFO - ${value} = applying
20190402 07:21:28.878 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:28.879 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:28.879 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:28.879 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:28.879 - FAIL - applying != applied
20190402 07:21:28.879 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:28.879 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:28.879 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:21:28.880 - INFO - +----- END KW: Utils.Check System Application Status (1126)
20190402 07:21:33.880 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:33.882 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:33.883 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:33.883 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:33.883 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:33.885 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:33.885 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:21:33.885 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:33.885 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:33.886 - INFO - &{result_dict} = { stdout= }
20190402 07:21:33.886 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:33.886 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:33.886 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:33.886 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:33.887 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:33.887 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:33.887 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:33.887 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:33.887 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:33.887 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:33.887 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:33.896 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:33.896 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:21:33.896 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:35.021 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:35.021 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:35.021 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1125)
20190402 07:21:35.021 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:35.022 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:35.022 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:35.022 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:21:35.022 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:35.022 - INFO - ${clean_out} = applying
20190402 07:21:35.022 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:35.022 - INFO - ${output} = applying
20190402 07:21:35.022 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:35.022 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:35.023 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:35.024 - INFO - echo $?
20190402 07:21:35.024 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:21:35.024 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:35.024 - INFO - 0
20190402 07:21:35.025 - INFO - ${rc} = 0
20190402 07:21:35.025 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:21:35.025 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:35.025 - INFO - 0
20190402 07:21:35.025 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:35.025 - INFO - ${rc} = 0
20190402 07:21:35.025 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:21:35.025 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:35.026 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:35.026 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:35.026 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:35.026 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:35.026 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:35.026 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:35.026 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:35.027 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:21:35.027 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:35.027 - INFO - +------ END KW: Utils.Run Command (1144)
20190402 07:21:35.027 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:35.027 - INFO - ${value} = applying
20190402 07:21:35.027 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:35.027 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:35.028 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:35.028 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:35.028 - FAIL - applying != applied
20190402 07:21:35.028 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:35.028 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:35.028 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:35.028 - INFO - +----- END KW: Utils.Check System Application Status (1148)
20190402 07:21:40.029 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:40.031 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:40.031 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:40.032 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:21:40.032 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:40.033 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:40.034 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:21:40.035 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:40.036 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:40.037 - INFO - &{result_dict} = { stdout= }
20190402 07:21:40.037 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:40.038 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:40.039 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:40.039 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:40.040 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:40.041 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:40.041 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:21:40.041 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:40.042 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:40.042 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:21:40.042 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:40.069 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:40.069 - INFO - +------- END KW: SSHLibrary.Write (27)
20190402 07:21:40.069 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:41.662 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:41.663 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:41.663 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1594)
20190402 07:21:41.663 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:41.663 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:41.663 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:41.663 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:21:41.664 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:41.664 - INFO - ${clean_out} = applying
20190402 07:21:41.664 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:41.664 - INFO - ${output} = applying
20190402 07:21:41.664 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:41.664 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:41.664 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:41.666 - INFO - echo $?
20190402 07:21:41.666 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:21:41.666 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:41.670 - INFO - 0
20190402 07:21:41.670 - INFO - ${rc} = 0
20190402 07:21:41.671 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 07:21:41.671 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:41.671 - INFO - 0
20190402 07:21:41.671 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:41.671 - INFO - ${rc} = 0
20190402 07:21:41.671 - INFO - +------- END KW: Utils.Get Return Code (7)
20190402 07:21:41.671 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:41.672 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:41.672 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:41.672 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:41.672 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:41.672 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:41.672 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:41.672 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:41.673 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:21:41.673 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:41.673 - INFO - +------ END KW: Utils.Run Command (1641)
20190402 07:21:41.673 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:41.673 - INFO - ${value} = applying
20190402 07:21:41.673 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:41.673 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:41.674 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:41.674 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:41.674 - FAIL - applying != applied
20190402 07:21:41.674 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:41.674 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:41.674 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:41.675 - INFO - +----- END KW: Utils.Check System Application Status (1646)
20190402 07:21:46.675 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:46.677 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:46.677 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:46.678 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:46.678 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:46.679 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:46.680 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:21:46.680 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:46.680 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:46.681 - INFO - &{result_dict} = { stdout= }
20190402 07:21:46.681 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:21:46.681 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:46.681 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:46.681 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:46.681 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:46.682 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:46.682 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:46.682 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:46.682 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:46.682 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:46.682 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:46.690 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:46.691 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:21:46.691 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:47.954 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:47.955 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:47.955 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1264)
20190402 07:21:47.955 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:47.955 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:47.956 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:47.956 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:21:47.956 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:47.956 - INFO - ${clean_out} = applying
20190402 07:21:47.956 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:47.956 - INFO - ${output} = applying
20190402 07:21:47.956 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:47.956 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:47.956 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:47.958 - INFO - echo $?
20190402 07:21:47.958 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:21:47.958 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:47.959 - INFO - 0
20190402 07:21:47.959 - INFO - ${rc} = 0
20190402 07:21:47.959 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:21:47.959 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:47.959 - INFO - 0
20190402 07:21:47.959 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:21:47.959 - INFO - ${rc} = 0
20190402 07:21:47.959 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:21:47.959 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:47.960 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:47.960 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:47.960 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:47.960 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:47.960 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:47.960 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:47.960 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:47.961 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:21:47.961 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:47.961 - INFO - +------ END KW: Utils.Run Command (1283)
20190402 07:21:47.961 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:47.961 - INFO - ${value} = applying
20190402 07:21:47.961 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:47.961 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:47.962 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:47.962 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:47.962 - FAIL - applying != applied
20190402 07:21:47.962 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:47.962 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:21:47.962 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:47.962 - INFO - +----- END KW: Utils.Check System Application Status (1287)
20190402 07:21:52.963 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:52.964 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:52.966 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:52.966 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:21:52.967 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:52.968 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:52.968 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:21:52.968 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:52.969 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:52.969 - INFO - &{result_dict} = { stdout= }
20190402 07:21:52.969 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:21:52.969 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:52.969 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:52.969 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:52.970 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:52.970 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:52.970 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:52.970 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:52.970 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:52.970 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:52.970 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:52.978 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:52.978 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:21:52.978 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:21:54.305 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:54.305 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:54.305 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1327)
20190402 07:21:54.305 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:21:54.305 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:21:54.306 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:54.306 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:21:54.306 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:21:54.306 - INFO - ${clean_out} = applying
20190402 07:21:54.306 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:21:54.306 - INFO - ${output} = applying
20190402 07:21:54.306 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:21:54.306 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:21:54.307 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:21:54.308 - INFO - echo $?
20190402 07:21:54.308 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:21:54.308 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:21:54.308 - INFO - 0
20190402 07:21:54.308 - INFO - ${rc} = 0
20190402 07:21:54.308 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:21:54.308 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:21:54.309 - INFO - 0
20190402 07:21:54.309 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:21:54.309 - INFO - ${rc} = 0
20190402 07:21:54.309 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:21:54.309 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:21:54.309 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:21:54.310 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:54.310 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:54.310 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:21:54.310 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:54.310 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:21:54.310 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:21:54.310 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:21:54.310 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:21:54.310 - INFO - +------ END KW: Utils.Run Command (1343)
20190402 07:21:54.311 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:21:54.311 - INFO - ${value} = applying
20190402 07:21:54.311 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:21:54.311 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:21:54.311 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:21:54.311 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:21:54.311 - FAIL - applying != applied
20190402 07:21:54.312 - DEBUG - Traceback (most recent call last):
  None
20190402 07:21:54.312 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:21:54.312 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:21:54.312 - INFO - +----- END KW: Utils.Check System Application Status (1349)
20190402 07:21:59.312 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:21:59.314 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:21:59.314 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:21:59.315 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:21:59.315 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:21:59.316 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:21:59.317 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:21:59.317 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:21:59.318 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:21:59.318 - INFO - &{result_dict} = { stdout= }
20190402 07:21:59.318 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:21:59.318 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:21:59.318 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:21:59.318 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:21:59.319 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:21:59.319 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:21:59.319 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:21:59.319 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:21:59.319 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:21:59.319 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:21:59.319 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:21:59.327 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:21:59.327 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:21:59.327 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:00.491 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:00.491 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:00.491 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1164)
20190402 07:22:00.491 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:00.492 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:00.492 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:00.492 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:00.492 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:00.492 - INFO - ${clean_out} = applying
20190402 07:22:00.492 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:00.492 - INFO - ${output} = applying
20190402 07:22:00.492 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:00.492 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:00.493 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:00.494 - INFO - echo $?
20190402 07:22:00.494 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:22:00.495 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:00.495 - INFO - 0
20190402 07:22:00.495 - INFO - ${rc} = 0
20190402 07:22:00.495 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:00.495 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:00.495 - INFO - 0
20190402 07:22:00.495 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:00.495 - INFO - ${rc} = 0
20190402 07:22:00.496 - INFO - +------- END KW: Utils.Get Return Code (4)
20190402 07:22:00.496 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:00.496 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:00.496 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:00.496 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:22:00.497 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:00.497 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:00.497 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:00.497 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:00.497 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:00.497 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:00.497 - INFO - +------ END KW: Utils.Run Command (1182)
20190402 07:22:00.497 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:00.498 - INFO - ${value} = applying
20190402 07:22:00.498 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:22:00.498 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:00.498 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:00.498 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:00.498 - FAIL - applying != applied
20190402 07:22:00.498 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:00.498 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:22:00.499 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:22:00.499 - INFO - +----- END KW: Utils.Check System Application Status (1187)
20190402 07:22:05.500 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:05.501 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:05.502 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:05.502 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:05.503 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:05.504 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:05.505 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:22:05.506 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:05.506 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:05.508 - INFO - &{result_dict} = { stdout= }
20190402 07:22:05.509 - INFO - +-------- END KW: BuiltIn.Create Dictionary (3)
20190402 07:22:05.509 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:05.510 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:05.511 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:05.512 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:05.513 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:05.514 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (8)
20190402 07:22:05.514 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:05.515 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:05.515 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:22:05.516 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:05.540 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:05.541 - INFO - +------- END KW: SSHLibrary.Write (24)
20190402 07:22:05.541 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:06.869 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:06.869 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:06.869 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1328)
20190402 07:22:06.869 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:06.870 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:06.870 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:06.870 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:06.870 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:06.870 - INFO - ${clean_out} = applying
20190402 07:22:06.870 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:06.870 - INFO - ${output} = applying
20190402 07:22:06.870 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:06.870 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:06.871 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:06.872 - INFO - echo $?
20190402 07:22:06.873 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:22:06.873 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:06.873 - INFO - 0
20190402 07:22:06.873 - INFO - ${rc} = 0
20190402 07:22:06.873 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:06.873 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:06.873 - INFO - 0
20190402 07:22:06.873 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:06.873 - INFO - ${rc} = 0
20190402 07:22:06.873 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:06.874 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:06.874 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:06.874 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:06.874 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:06.874 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:06.875 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:06.875 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:06.875 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:06.875 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:06.875 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:06.875 - INFO - +------ END KW: Utils.Run Command (1373)
20190402 07:22:06.875 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:06.876 - INFO - ${value} = applying
20190402 07:22:06.876 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:22:06.876 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:06.876 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:06.876 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:06.876 - FAIL - applying != applied
20190402 07:22:06.876 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:06.876 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:22:06.876 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:22:06.876 - INFO - +----- END KW: Utils.Check System Application Status (1377)
20190402 07:22:11.877 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:11.878 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:11.879 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:11.879 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:11.880 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:11.881 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:11.882 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:22:11.882 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:11.882 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:11.883 - INFO - &{result_dict} = { stdout= }
20190402 07:22:11.883 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:22:11.883 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:11.883 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:11.883 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:11.883 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:11.884 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:11.884 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:22:11.884 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:11.884 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:11.884 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:22:11.884 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:11.894 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:11.894 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:22:11.894 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:12.941 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:12.942 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:12.942 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1048)
20190402 07:22:12.942 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:12.942 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:12.942 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:12.942 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:12.943 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:12.943 - INFO - ${clean_out} = applying
20190402 07:22:12.943 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:12.943 - INFO - ${output} = applying
20190402 07:22:12.943 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:12.943 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:12.943 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:12.945 - INFO - echo $?
20190402 07:22:12.945 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:22:12.945 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:12.945 - INFO - 0
20190402 07:22:12.945 - INFO - ${rc} = 0
20190402 07:22:12.945 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:12.946 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:12.946 - INFO - 0
20190402 07:22:12.946 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:12.946 - INFO - ${rc} = 0
20190402 07:22:12.946 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:12.946 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:12.946 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:12.947 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:12.947 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:12.947 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:12.947 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:12.947 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:12.947 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:12.947 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:12.948 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:12.948 - INFO - +------ END KW: Utils.Run Command (1068)
20190402 07:22:12.948 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:12.948 - INFO - ${value} = applying
20190402 07:22:12.948 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:22:12.948 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:12.948 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:12.949 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:12.949 - FAIL - applying != applied
20190402 07:22:12.949 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:12.949 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:22:12.949 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:12.949 - INFO - +----- END KW: Utils.Check System Application Status (1072)
20190402 07:22:17.950 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:17.950 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:17.951 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:17.951 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:17.951 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:17.952 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:17.952 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:22:17.952 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:17.953 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:17.954 - INFO - &{result_dict} = { stdout= }
20190402 07:22:17.954 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:22:17.954 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:17.954 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:17.955 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:17.955 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:17.955 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:17.955 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (3)
20190402 07:22:17.955 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:17.956 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:17.956 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:22:17.956 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:17.964 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:17.964 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:22:17.964 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:19.088 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:19.089 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:19.089 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1125)
20190402 07:22:19.089 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:19.089 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:19.090 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:19.090 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:22:19.090 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:19.090 - INFO - ${clean_out} = applying
20190402 07:22:19.090 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:19.090 - INFO - ${output} = applying
20190402 07:22:19.090 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:19.090 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:19.091 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:19.092 - INFO - echo $?
20190402 07:22:19.092 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:22:19.092 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:19.092 - INFO - 0
20190402 07:22:19.092 - INFO - ${rc} = 0
20190402 07:22:19.092 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:19.093 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:19.093 - INFO - 0
20190402 07:22:19.093 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:19.093 - INFO - ${rc} = 0
20190402 07:22:19.093 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:19.093 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:19.093 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:19.094 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:19.094 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:19.094 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:19.094 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:19.094 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:19.094 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:19.094 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:19.095 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:19.095 - INFO - +------ END KW: Utils.Run Command (1144)
20190402 07:22:19.095 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:19.095 - INFO - ${value} = applying
20190402 07:22:19.095 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:22:19.095 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:19.095 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:19.096 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:19.096 - FAIL - applying != applied
20190402 07:22:19.096 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:19.096 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:22:19.096 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:19.096 - INFO - +----- END KW: Utils.Check System Application Status (1147)
20190402 07:22:24.097 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:24.098 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:24.099 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:24.099 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:24.099 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:24.101 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:24.101 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:22:24.101 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:24.101 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:24.102 - INFO - &{result_dict} = { stdout= }
20190402 07:22:24.102 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:22:24.102 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:24.102 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:24.102 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:24.103 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:24.103 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:24.103 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:22:24.103 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:24.103 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:24.103 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:22:24.103 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:24.113 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:24.113 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:22:24.113 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:25.472 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:25.472 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:25.472 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1359)
20190402 07:22:25.472 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:25.473 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:25.473 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:25.473 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:25.473 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:25.473 - INFO - ${clean_out} = applying
20190402 07:22:25.473 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:25.474 - INFO - ${output} = applying
20190402 07:22:25.474 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:22:25.474 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:25.474 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:25.475 - INFO - echo $?
20190402 07:22:25.475 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:22:25.475 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:25.476 - INFO - 0
20190402 07:22:25.476 - INFO - ${rc} = 0
20190402 07:22:25.476 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:22:25.476 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:25.476 - INFO - 0
20190402 07:22:25.476 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:25.476 - INFO - ${rc} = 0
20190402 07:22:25.476 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:22:25.476 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:25.477 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:25.477 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:25.477 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:25.477 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:25.477 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:25.477 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:25.478 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:25.478 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:22:25.478 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:25.478 - INFO - +------ END KW: Utils.Run Command (1379)
20190402 07:22:25.478 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:25.478 - INFO - ${value} = applying
20190402 07:22:25.478 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:22:25.478 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:25.479 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:25.479 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:25.479 - FAIL - applying != applied
20190402 07:22:25.479 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:25.479 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:22:25.479 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:25.479 - INFO - +----- END KW: Utils.Check System Application Status (1383)
20190402 07:22:30.480 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:30.482 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:30.482 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:30.483 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:22:30.483 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:30.485 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:30.485 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:22:30.485 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:30.485 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:30.486 - INFO - &{result_dict} = { stdout= }
20190402 07:22:30.486 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:22:30.486 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:30.486 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:30.486 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:30.486 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:30.487 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:30.487 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:22:30.487 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:30.487 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:30.487 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:22:30.487 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:30.500 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:30.500 - INFO - +------- END KW: SSHLibrary.Write (13)
20190402 07:22:30.500 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:31.651 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:31.651 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:31.651 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1151)
20190402 07:22:31.651 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:31.652 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:31.652 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:31.652 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:31.652 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:31.652 - INFO - ${clean_out} = applying
20190402 07:22:31.652 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:31.652 - INFO - ${output} = applying
20190402 07:22:31.652 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:31.653 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:31.653 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:31.655 - INFO - echo $?
20190402 07:22:31.655 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:22:31.655 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:31.655 - INFO - 0
20190402 07:22:31.655 - INFO - ${rc} = 0
20190402 07:22:31.655 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:31.655 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:31.656 - INFO - 0
20190402 07:22:31.656 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:22:31.656 - INFO - ${rc} = 0
20190402 07:22:31.656 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:31.656 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:31.656 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:31.657 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:31.657 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:31.657 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:31.657 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:31.657 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:31.657 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:31.657 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:31.657 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:31.658 - INFO - +------ END KW: Utils.Run Command (1175)
20190402 07:22:31.658 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:31.658 - INFO - ${value} = applying
20190402 07:22:31.658 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:22:31.658 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:31.658 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:31.658 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:31.659 - FAIL - applying != applied
20190402 07:22:31.659 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:31.659 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:22:31.659 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:31.659 - INFO - +----- END KW: Utils.Check System Application Status (1179)
20190402 07:22:36.660 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:36.661 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:36.662 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:36.662 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:36.663 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:36.664 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:36.664 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:22:36.664 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:36.665 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:36.665 - INFO - &{result_dict} = { stdout= }
20190402 07:22:36.665 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:22:36.665 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:36.665 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:36.665 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:36.666 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:36.666 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:36.666 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:22:36.666 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:36.666 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:36.666 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:22:36.666 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:36.676 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:36.676 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:22:36.676 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:37.824 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:37.824 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:37.824 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1148)
20190402 07:22:37.825 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:37.825 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:37.825 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:37.825 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:37.825 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:37.825 - INFO - ${clean_out} = applying
20190402 07:22:37.825 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:37.826 - INFO - ${output} = applying
20190402 07:22:37.826 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:37.826 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:37.826 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:37.827 - INFO - echo $?
20190402 07:22:37.827 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:22:37.828 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:37.828 - INFO - 0
20190402 07:22:37.828 - INFO - ${rc} = 0
20190402 07:22:37.828 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:37.828 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:37.828 - INFO - 0
20190402 07:22:37.828 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:37.828 - INFO - ${rc} = 0
20190402 07:22:37.828 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:22:37.829 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:37.829 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:37.829 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:37.829 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:22:37.830 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:37.830 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:37.830 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:37.830 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:37.830 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:37.830 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:37.830 - INFO - +------ END KW: Utils.Run Command (1168)
20190402 07:22:37.831 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:37.831 - INFO - ${value} = applying
20190402 07:22:37.831 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:22:37.831 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:37.831 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:37.831 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:37.831 - FAIL - applying != applied
20190402 07:22:37.831 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:37.831 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:22:37.832 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:37.832 - INFO - +----- END KW: Utils.Check System Application Status (1173)
20190402 07:22:42.833 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:42.834 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:42.835 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:42.835 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:42.836 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:42.837 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:42.837 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:22:42.837 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:42.838 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:42.838 - INFO - &{result_dict} = { stdout= }
20190402 07:22:42.838 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:22:42.838 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:42.838 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:42.838 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:42.839 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:42.839 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:42.839 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:22:42.839 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:42.839 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:42.839 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:22:42.839 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:42.849 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:42.849 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:22:42.849 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:43.927 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:43.927 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:43.927 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1078)
20190402 07:22:43.928 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:43.928 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:43.928 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:43.928 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:43.928 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:43.928 - INFO - ${clean_out} = applying
20190402 07:22:43.928 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:43.929 - INFO - ${output} = applying
20190402 07:22:43.929 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:43.929 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:43.929 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:43.930 - INFO - echo $?
20190402 07:22:43.930 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:22:43.931 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:43.931 - INFO - 0
20190402 07:22:43.931 - INFO - ${rc} = 0
20190402 07:22:43.931 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:43.931 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:43.931 - INFO - 0
20190402 07:22:43.931 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:43.931 - INFO - ${rc} = 0
20190402 07:22:43.932 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:43.932 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:43.932 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:43.932 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:43.932 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:22:43.932 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:43.933 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:43.933 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:43.933 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:43.933 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:43.933 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:43.933 - INFO - +------ END KW: Utils.Run Command (1097)
20190402 07:22:43.933 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:43.934 - INFO - ${value} = applying
20190402 07:22:43.934 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:22:43.934 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:43.934 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:43.934 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:43.934 - FAIL - applying != applied
20190402 07:22:43.935 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:43.935 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:22:43.935 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:43.935 - INFO - +----- END KW: Utils.Check System Application Status (1103)
20190402 07:22:48.936 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:48.937 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:48.938 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:48.938 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:48.938 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:48.940 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:48.940 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:22:48.940 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:48.940 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:48.941 - INFO - &{result_dict} = { stdout= }
20190402 07:22:48.941 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:22:48.941 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:48.941 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:48.941 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:48.941 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:48.942 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:48.942 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:22:48.942 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:48.942 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:48.942 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:22:48.942 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:48.952 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:48.952 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:22:48.952 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:50.112 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:50.113 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:50.113 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1161)
20190402 07:22:50.113 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:50.113 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:50.113 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:50.113 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:50.114 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:50.114 - INFO - ${clean_out} = applying
20190402 07:22:50.114 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:22:50.114 - INFO - ${output} = applying
20190402 07:22:50.114 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:50.114 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:50.114 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:50.116 - INFO - echo $?
20190402 07:22:50.116 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:22:50.116 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:50.116 - INFO - 0
20190402 07:22:50.116 - INFO - ${rc} = 0
20190402 07:22:50.116 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:50.117 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:50.117 - INFO - 0
20190402 07:22:50.117 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:22:50.117 - INFO - ${rc} = 0
20190402 07:22:50.117 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:50.117 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:50.117 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:50.118 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:50.118 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:50.118 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:50.118 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:50.118 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:50.118 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:50.118 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:50.119 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:50.119 - INFO - +------ END KW: Utils.Run Command (1181)
20190402 07:22:50.119 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:50.119 - INFO - ${value} = applying
20190402 07:22:50.119 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:22:50.119 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:50.119 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:50.119 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:50.120 - FAIL - applying != applied
20190402 07:22:50.120 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:50.120 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:22:50.120 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:50.120 - INFO - +----- END KW: Utils.Check System Application Status (1185)
20190402 07:22:55.121 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:22:55.122 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:22:55.123 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:22:55.123 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:22:55.123 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:22:55.124 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:22:55.125 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:22:55.125 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:22:55.126 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:22:55.127 - INFO - &{result_dict} = { stdout= }
20190402 07:22:55.127 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:22:55.128 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:22:55.128 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:55.129 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:22:55.130 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:22:55.131 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:22:55.131 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:22:55.131 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:22:55.131 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:55.132 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:22:55.132 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:22:55.154 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:22:55.154 - INFO - +------- END KW: SSHLibrary.Write (22)
20190402 07:22:55.154 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:22:56.236 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:56.237 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:56.237 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1083)
20190402 07:22:56.237 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:22:56.237 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:22:56.237 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:22:56.237 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:22:56.237 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:22:56.238 - INFO - ${clean_out} = applying
20190402 07:22:56.238 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:22:56.238 - INFO - ${output} = applying
20190402 07:22:56.238 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:22:56.238 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:22:56.238 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:22:56.240 - INFO - echo $?
20190402 07:22:56.240 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:22:56.240 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:22:56.240 - INFO - 0
20190402 07:22:56.240 - INFO - ${rc} = 0
20190402 07:22:56.240 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:22:56.240 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:22:56.241 - INFO - 0
20190402 07:22:56.241 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:22:56.241 - INFO - ${rc} = 0
20190402 07:22:56.241 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:22:56.241 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:22:56.241 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:22:56.242 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:56.242 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:56.242 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:22:56.242 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:22:56.242 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:22:56.242 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:22:56.242 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:22:56.242 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:22:56.242 - INFO - +------ END KW: Utils.Run Command (1119)
20190402 07:22:56.243 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:22:56.243 - INFO - ${value} = applying
20190402 07:22:56.243 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:22:56.243 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:22:56.243 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:22:56.243 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:22:56.243 - FAIL - applying != applied
20190402 07:22:56.244 - DEBUG - Traceback (most recent call last):
  None
20190402 07:22:56.244 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:22:56.244 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:22:56.244 - INFO - +----- END KW: Utils.Check System Application Status (1123)
20190402 07:23:01.245 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:01.246 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:01.247 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:01.247 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:01.247 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:01.248 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:01.249 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:23:01.250 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:01.250 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:01.251 - INFO - &{result_dict} = { stdout= }
20190402 07:23:01.251 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:23:01.251 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:01.251 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:01.251 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:01.251 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:01.251 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:01.251 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:23:01.252 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:01.252 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:01.252 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:01.252 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:01.259 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:01.259 - INFO - +------- END KW: SSHLibrary.Write (7)
20190402 07:23:01.259 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:02.779 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:02.779 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:02.779 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1520)
20190402 07:23:02.779 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:02.779 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:02.780 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:02.780 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:23:02.780 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:02.780 - INFO - ${clean_out} = applying
20190402 07:23:02.780 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:02.780 - INFO - ${output} = applying
20190402 07:23:02.780 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:02.780 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:02.781 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:02.782 - INFO - echo $?
20190402 07:23:02.782 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:23:02.782 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:02.785 - INFO - 0
20190402 07:23:02.785 - INFO - ${rc} = 0
20190402 07:23:02.785 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 07:23:02.786 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:02.786 - INFO - 0
20190402 07:23:02.786 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:02.786 - INFO - ${rc} = 0
20190402 07:23:02.786 - INFO - +------- END KW: Utils.Get Return Code (6)
20190402 07:23:02.786 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:02.786 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:02.787 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:02.787 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:02.787 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:02.787 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:02.787 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:02.787 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:02.787 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:02.788 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:02.788 - INFO - +------ END KW: Utils.Run Command (1541)
20190402 07:23:02.788 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:02.788 - INFO - ${value} = applying
20190402 07:23:02.788 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:02.788 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:02.788 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:02.789 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:02.789 - FAIL - applying != applied
20190402 07:23:02.789 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:02.789 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:23:02.789 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:02.789 - INFO - +----- END KW: Utils.Check System Application Status (1544)
20190402 07:23:07.790 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:07.792 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:07.793 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:07.793 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:07.793 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:07.795 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:07.795 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:07.795 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:07.795 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:07.796 - INFO - &{result_dict} = { stdout= }
20190402 07:23:07.796 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:23:07.796 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:07.796 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:07.796 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:07.797 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:07.797 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:07.797 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:07.797 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:07.797 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:07.797 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:07.797 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:07.805 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:07.806 - INFO - +------- END KW: SSHLibrary.Write (9)
20190402 07:23:07.806 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:08.934 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:08.934 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:08.934 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1128)
20190402 07:23:08.934 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:08.935 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:08.935 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:08.935 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:23:08.935 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:08.935 - INFO - ${clean_out} = applying
20190402 07:23:08.935 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:08.935 - INFO - ${output} = applying
20190402 07:23:08.935 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:08.935 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:08.936 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:08.937 - INFO - echo $?
20190402 07:23:08.937 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:23:08.937 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:08.937 - INFO - 0
20190402 07:23:08.938 - INFO - ${rc} = 0
20190402 07:23:08.938 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:23:08.938 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:08.938 - INFO - 0
20190402 07:23:08.938 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:08.938 - INFO - ${rc} = 0
20190402 07:23:08.938 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:23:08.938 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:08.939 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:08.939 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:08.939 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:08.939 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:08.939 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:08.939 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:08.940 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:08.940 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:23:08.940 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:08.940 - INFO - +------ END KW: Utils.Run Command (1147)
20190402 07:23:08.940 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:08.940 - INFO - ${value} = applying
20190402 07:23:08.940 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:08.940 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:08.941 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:08.941 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:08.941 - FAIL - applying != applied
20190402 07:23:08.941 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:08.941 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:23:08.941 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:08.941 - INFO - +----- END KW: Utils.Check System Application Status (1151)
20190402 07:23:13.942 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:13.943 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:13.945 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:13.945 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:23:13.946 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:13.947 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:13.947 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:13.947 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:13.948 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:13.948 - INFO - &{result_dict} = { stdout= }
20190402 07:23:13.948 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:23:13.948 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:13.948 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:13.948 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:13.949 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:13.949 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:13.949 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:13.949 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:13.949 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:13.949 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:13.949 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:13.958 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:13.959 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:23:13.959 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:15.076 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:15.076 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:15.076 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1117)
20190402 07:23:15.076 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:15.076 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:15.077 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:15.077 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:23:15.077 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:15.077 - INFO - ${clean_out} = applying
20190402 07:23:15.077 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:15.077 - INFO - ${output} = applying
20190402 07:23:15.077 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:15.077 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:15.077 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:15.079 - INFO - echo $?
20190402 07:23:15.079 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:23:15.079 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:15.079 - INFO - 0
20190402 07:23:15.079 - INFO - ${rc} = 0
20190402 07:23:15.079 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:23:15.079 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:15.080 - INFO - 0
20190402 07:23:15.080 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:23:15.080 - INFO - ${rc} = 0
20190402 07:23:15.080 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:23:15.080 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:15.080 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:15.081 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:15.081 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:15.081 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:15.081 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:15.081 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:15.081 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:15.081 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:15.081 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:15.082 - INFO - +------ END KW: Utils.Run Command (1136)
20190402 07:23:15.082 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:15.082 - INFO - ${value} = applying
20190402 07:23:15.082 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:15.082 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:15.082 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:15.082 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:15.083 - FAIL - applying != applied
20190402 07:23:15.083 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:15.083 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:23:15.083 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:15.083 - INFO - +----- END KW: Utils.Check System Application Status (1141)
20190402 07:23:20.084 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:20.085 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:20.086 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:20.086 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:20.086 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:20.088 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:20.088 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:20.089 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:20.089 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:20.089 - INFO - &{result_dict} = { stdout= }
20190402 07:23:20.089 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:23:20.089 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:20.089 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:20.090 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:20.090 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:20.090 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:20.090 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:23:20.090 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:20.090 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:20.090 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:20.090 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:20.092 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:20.092 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:23:20.092 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:21.254 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:21.254 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:21.254 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1162)
20190402 07:23:21.254 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:21.255 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:21.255 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:21.255 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:23:21.255 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:21.255 - INFO - ${clean_out} = applying
20190402 07:23:21.255 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:21.255 - INFO - ${output} = applying
20190402 07:23:21.255 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:21.256 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:21.256 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:21.257 - INFO - echo $?
20190402 07:23:21.257 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:23:21.257 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:21.258 - INFO - 0
20190402 07:23:21.258 - INFO - ${rc} = 0
20190402 07:23:21.258 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:23:21.258 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:21.258 - INFO - 0
20190402 07:23:21.258 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:21.258 - INFO - ${rc} = 0
20190402 07:23:21.258 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:23:21.259 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:21.259 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:21.259 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:21.259 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:23:21.259 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:21.260 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:21.260 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:21.260 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:21.260 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:21.260 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:21.260 - INFO - +------ END KW: Utils.Run Command (1174)
20190402 07:23:21.260 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:21.260 - INFO - ${value} = applying
20190402 07:23:21.260 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:21.261 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:21.261 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:21.261 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:21.261 - FAIL - applying != applied
20190402 07:23:21.261 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:21.261 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:23:21.261 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:23:21.261 - INFO - +----- END KW: Utils.Check System Application Status (1178)
20190402 07:23:26.262 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:26.262 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:26.262 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:26.263 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:26.263 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:26.263 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:26.263 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:26.263 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:26.264 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:26.264 - INFO - &{result_dict} = { stdout= }
20190402 07:23:26.264 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:23:26.264 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:26.265 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:26.265 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:26.265 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:26.265 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:26.265 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:26.265 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:26.266 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:26.266 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:23:26.266 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:26.274 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:26.274 - INFO - +------- END KW: SSHLibrary.Write (8)
20190402 07:23:26.274 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:27.465 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:27.465 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:27.465 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1191)
20190402 07:23:27.465 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:27.465 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:27.466 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:27.466 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:23:27.466 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:27.466 - INFO - ${clean_out} = applying
20190402 07:23:27.466 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:27.466 - INFO - ${output} = applying
20190402 07:23:27.466 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:27.466 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:27.466 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:27.467 - INFO - echo $?
20190402 07:23:27.467 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:23:27.467 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:27.468 - INFO - 0
20190402 07:23:27.468 - INFO - ${rc} = 0
20190402 07:23:27.468 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:23:27.468 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:27.468 - INFO - 0
20190402 07:23:27.469 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:23:27.469 - INFO - ${rc} = 0
20190402 07:23:27.469 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:23:27.469 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:27.469 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:27.469 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:27.470 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:23:27.470 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:27.470 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:27.470 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:27.470 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:27.470 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:27.470 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:27.470 - INFO - +------ END KW: Utils.Run Command (1207)
20190402 07:23:27.471 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:27.471 - INFO - ${value} = applying
20190402 07:23:27.471 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:27.471 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:27.471 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:27.471 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:27.471 - FAIL - applying != applied
20190402 07:23:27.471 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:27.471 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:23:27.471 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:23:27.472 - INFO - +----- END KW: Utils.Check System Application Status (1210)
20190402 07:23:32.473 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:32.474 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:32.475 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:32.475 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:32.476 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:32.477 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:32.477 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:32.477 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:32.478 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:32.478 - INFO - &{result_dict} = { stdout= }
20190402 07:23:32.478 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:23:32.478 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:32.478 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:32.478 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:32.479 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:32.479 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:32.479 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:32.479 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:32.479 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:32.479 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:32.479 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:32.481 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:32.481 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:23:32.482 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:33.652 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:33.652 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:33.653 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1170)
20190402 07:23:33.653 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:33.653 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:33.653 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:33.653 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:23:33.653 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:33.654 - INFO - ${clean_out} = applying
20190402 07:23:33.654 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:23:33.654 - INFO - ${output} = applying
20190402 07:23:33.654 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:33.654 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:33.654 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:33.656 - INFO - echo $?
20190402 07:23:33.656 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:23:33.656 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:33.656 - INFO - 0
20190402 07:23:33.656 - INFO - ${rc} = 0
20190402 07:23:33.656 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:23:33.656 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:33.656 - INFO - 0
20190402 07:23:33.656 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:33.657 - INFO - ${rc} = 0
20190402 07:23:33.657 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:23:33.657 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:33.657 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:33.657 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:33.657 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 07:23:33.657 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:33.658 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:33.658 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:33.658 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:33.658 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:33.658 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:33.658 - INFO - +------ END KW: Utils.Run Command (1183)
20190402 07:23:33.658 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:33.659 - INFO - ${value} = applying
20190402 07:23:33.659 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 07:23:33.659 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:33.659 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:33.659 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:33.659 - FAIL - applying != applied
20190402 07:23:33.659 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:33.659 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:23:33.659 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:23:33.660 - INFO - +----- END KW: Utils.Check System Application Status (1188)
20190402 07:23:38.660 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:38.661 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:38.662 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:38.662 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:38.663 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:38.664 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:38.664 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:38.665 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:38.665 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:38.666 - INFO - &{result_dict} = { stdout= }
20190402 07:23:38.666 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:23:38.666 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:38.666 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:38.666 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:38.666 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:38.667 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:38.667 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:38.667 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:38.667 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:38.667 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:38.667 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:38.668 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:38.669 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 07:23:38.669 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:39.898 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:39.898 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:39.898 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1229)
20190402 07:23:39.898 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:39.899 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:39.899 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:39.899 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:23:39.899 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:39.899 - INFO - ${clean_out} = applying
20190402 07:23:39.899 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:39.899 - INFO - ${output} = applying
20190402 07:23:39.900 - INFO - +------- END KW: Utils.Remove Prompt Line (2)
20190402 07:23:39.900 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:39.900 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:39.901 - INFO - echo $?
20190402 07:23:39.901 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:23:39.902 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:39.902 - INFO - 0
20190402 07:23:39.902 - INFO - ${rc} = 0
20190402 07:23:39.902 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:23:39.902 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:39.902 - INFO - 0
20190402 07:23:39.902 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:39.902 - INFO - ${rc} = 0
20190402 07:23:39.902 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:23:39.902 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:39.903 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:39.903 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:39.903 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:39.903 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:39.903 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:39.903 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:39.904 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:39.904 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:23:39.904 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:39.904 - INFO - +------ END KW: Utils.Run Command (1241)
20190402 07:23:39.904 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:39.904 - INFO - ${value} = applying
20190402 07:23:39.904 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:39.904 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:39.905 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:39.905 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:39.905 - FAIL - applying != applied
20190402 07:23:39.905 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:39.905 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:23:39.905 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:39.905 - INFO - +----- END KW: Utils.Check System Application Status (1245)
20190402 07:23:44.906 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:44.907 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:44.907 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:44.908 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:44.908 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:44.909 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:44.910 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:23:44.910 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:44.910 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:44.911 - INFO - &{result_dict} = { stdout= }
20190402 07:23:44.911 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:23:44.911 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:44.912 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:44.912 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:44.912 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:44.912 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:44.912 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:44.912 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:44.912 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:44.913 - INFO - +------- END KW: SSHLibrary.Read (1)
20190402 07:23:44.913 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:44.920 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:44.920 - INFO - +------- END KW: SSHLibrary.Write (7)
20190402 07:23:44.920 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:46.079 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:46.079 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:46.079 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1159)
20190402 07:23:46.079 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:46.079 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:46.080 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:46.080 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:23:46.080 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:46.080 - INFO - ${clean_out} = applying
20190402 07:23:46.080 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:46.080 - INFO - ${output} = applying
20190402 07:23:46.080 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:46.081 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:46.081 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:46.082 - INFO - echo $?
20190402 07:23:46.082 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:23:46.082 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:46.083 - INFO - 0
20190402 07:23:46.083 - INFO - ${rc} = 0
20190402 07:23:46.083 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:23:46.083 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:46.083 - INFO - 0
20190402 07:23:46.083 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:46.083 - INFO - ${rc} = 0
20190402 07:23:46.083 - INFO - +------- END KW: Utils.Get Return Code (2)
20190402 07:23:46.083 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:46.084 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:46.084 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:46.084 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:46.084 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:46.084 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:46.084 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:46.085 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:46.085 - INFO - +------- END KW: Collections.Log Dictionary (1)
20190402 07:23:46.085 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:46.085 - INFO - +------ END KW: Utils.Run Command (1177)
20190402 07:23:46.085 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:46.085 - INFO - ${value} = applying
20190402 07:23:46.085 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:46.085 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:46.086 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:46.086 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:46.086 - FAIL - applying != applied
20190402 07:23:46.086 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:46.086 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:23:46.086 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:46.086 - INFO - +----- END KW: Utils.Check System Application Status (1180)
20190402 07:23:51.087 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:51.088 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:51.089 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:51.090 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 07:23:51.090 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:51.092 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:51.093 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:51.093 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:51.094 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:51.095 - INFO - &{result_dict} = { stdout= }
20190402 07:23:51.096 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 07:23:51.096 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:51.097 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:51.097 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:51.098 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:51.099 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:51.099 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (6)
20190402 07:23:51.100 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:51.100 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:51.100 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:51.101 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:51.126 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:51.126 - INFO - +------- END KW: SSHLibrary.Write (25)
20190402 07:23:51.126 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:52.261 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:52.261 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:52.261 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1135)
20190402 07:23:52.261 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:52.261 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:52.262 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:52.262 - INFO - +-------- END KW: String.Get Line (1)
20190402 07:23:52.262 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:52.262 - INFO - ${clean_out} = applying
20190402 07:23:52.262 - INFO - +-------- END KW: String.Remove String (0)
20190402 07:23:52.262 - INFO - ${output} = applying
20190402 07:23:52.262 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:52.262 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:52.263 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:52.264 - INFO - echo $?
20190402 07:23:52.264 - INFO - +-------- END KW: SSHLibrary.Write (1)
20190402 07:23:52.264 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:52.264 - INFO - 0
20190402 07:23:52.264 - INFO - ${rc} = 0
20190402 07:23:52.264 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:23:52.265 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:52.265 - INFO - 0
20190402 07:23:52.265 - INFO - +-------- END KW: BuiltIn.Log (0)
20190402 07:23:52.265 - INFO - ${rc} = 0
20190402 07:23:52.265 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:23:52.265 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:52.265 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:52.266 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:52.266 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:52.266 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:52.266 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:52.266 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:52.266 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:52.266 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:52.267 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:52.267 - INFO - +------ END KW: Utils.Run Command (1177)
20190402 07:23:52.267 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:52.267 - INFO - ${value} = applying
20190402 07:23:52.267 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:52.267 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:52.267 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:52.267 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:52.268 - FAIL - applying != applied
20190402 07:23:52.268 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:52.268 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:23:52.268 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:52.268 - INFO - +----- END KW: Utils.Check System Application Status (1181)
20190402 07:23:57.269 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:23:57.270 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:23:57.271 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:23:57.271 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:23:57.272 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:23:57.273 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:23:57.273 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:23:57.273 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:23:57.274 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:23:57.274 - INFO - &{result_dict} = { stdout= }
20190402 07:23:57.274 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:23:57.274 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:23:57.274 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:57.274 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:23:57.275 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:57.275 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:23:57.275 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:23:57.275 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:23:57.275 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:57.275 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:23:57.275 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:23:57.277 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:23:57.277 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:23:57.277 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:23:58.397 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:58.398 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:58.398 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1121)
20190402 07:23:58.398 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:23:58.398 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:23:58.398 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:23:58.398 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:23:58.398 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:23:58.399 - INFO - ${clean_out} = applying
20190402 07:23:58.399 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:23:58.399 - INFO - ${output} = applying
20190402 07:23:58.399 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:23:58.399 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:23:58.399 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:23:58.401 - INFO - echo $?
20190402 07:23:58.401 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:23:58.401 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:23:58.401 - INFO - 0
20190402 07:23:58.401 - INFO - ${rc} = 0
20190402 07:23:58.401 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:23:58.401 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:23:58.401 - INFO - 0
20190402 07:23:58.402 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:23:58.402 - INFO - ${rc} = 0
20190402 07:23:58.402 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:23:58.402 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:23:58.402 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:23:58.403 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:23:58.403 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:58.403 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:23:58.403 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:23:58.403 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:23:58.403 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 07:23:58.403 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:23:58.404 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 07:23:58.404 - INFO - +------ END KW: Utils.Run Command (1132)
20190402 07:23:58.404 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:23:58.404 - INFO - ${value} = applying
20190402 07:23:58.404 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:23:58.404 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:23:58.404 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:23:58.404 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:23:58.405 - FAIL - applying != applied
20190402 07:23:58.405 - DEBUG - Traceback (most recent call last):
  None
20190402 07:23:58.405 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:23:58.405 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:23:58.405 - INFO - +----- END KW: Utils.Check System Application Status (1136)
20190402 07:24:03.406 - INFO - +----- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:24:03.407 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:24:03.408 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:24:03.408 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 07:24:03.409 - INFO - +------ START KW: Utils.Run Command [ ${cmd} ]
20190402 07:24:03.410 - INFO - +------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:24:03.410 - INFO - +------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:24:03.410 - INFO - +------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:24:03.411 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:24:03.411 - INFO - &{result_dict} = { stdout= }
20190402 07:24:03.411 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:24:03.411 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:24:03.411 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 07:24:03.411 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:24:03.412 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:24:03.412 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:24:03.412 - INFO - +------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:24:03.412 - INFO - +------- START KW: SSHLibrary.Read [ ]
20190402 07:24:03.412 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:03.412 - INFO - +------- END KW: SSHLibrary.Read (0)
20190402 07:24:03.412 - INFO - +------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:24:03.422 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:24:03.422 - INFO - +------- END KW: SSHLibrary.Write (10)
20190402 07:24:03.422 - INFO - +------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:04.646 - INFO - applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:04.647 - INFO - ${output} = applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:04.647 - INFO - +------- END KW: SSHLibrary.Read Until Prompt (1225)
20190402 07:24:04.647 - INFO - +------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:24:04.647 - INFO - +-------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:24:04.647 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:04.647 - INFO - +-------- END KW: String.Get Line (0)
20190402 07:24:04.647 - INFO - +-------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:24:04.648 - INFO - ${clean_out} = applied
20190402 07:24:04.648 - INFO - +-------- END KW: String.Remove String (1)
20190402 07:24:04.648 - INFO - ${output} = applied
20190402 07:24:04.648 - INFO - +------- END KW: Utils.Remove Prompt Line (1)
20190402 07:24:04.648 - INFO - +------- START KW: Utils.Get Return Code [ ]
20190402 07:24:04.648 - INFO - +-------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:24:04.650 - INFO - echo $?
20190402 07:24:04.650 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 07:24:04.650 - INFO - +-------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:24:04.650 - INFO - 0
20190402 07:24:04.650 - INFO - ${rc} = 0
20190402 07:24:04.650 - INFO - +-------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:24:04.650 - INFO - +-------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:24:04.651 - INFO - 0
20190402 07:24:04.651 - INFO - +-------- END KW: BuiltIn.Log (1)
20190402 07:24:04.651 - INFO - ${rc} = 0
20190402 07:24:04.651 - INFO - +------- END KW: Utils.Get Return Code (3)
20190402 07:24:04.651 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:24:04.651 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:24:04.652 - INFO - +-------- END KW: Collections.Set To Dictionary (1)
20190402 07:24:04.652 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:04.652 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:24:04.652 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:24:04.652 - INFO - +------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:24:04.652 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applied
20190402 07:24:04.652 - INFO - +------- END KW: Collections.Log Dictionary (0)
20190402 07:24:04.652 - INFO - &{result} = { stdout=applied | stderr= | rc=0 }
20190402 07:24:04.653 - INFO - +------ END KW: Utils.Run Command (1244)
20190402 07:24:04.653 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:24:04.653 - INFO - ${value} = applied
20190402 07:24:04.653 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 07:24:04.653 - INFO - +------ START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:24:04.654 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:24:04.654 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:24:04.654 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 07:24:04.654 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:04.654 - INFO - +----- END KW: Utils.Check System Application Status (1249)
20190402 07:24:04.654 - INFO - +---- END KW: BuiltIn.Wait Until Keyword Succeeds (1527812)
20190402 07:24:04.654 - INFO - +--- END KW: Utils.System Application Apply (1528826)
20190402 07:24:04.654 - INFO - +--- START KW: BuiltIn.Wait Until Keyword Succeeds [ 60 min | 5 sec | Check System Application Status | ${application} | applied ]
20190402 07:24:04.654 - INFO - +---- START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 07:24:04.655 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 07:24:04.655 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 07:24:04.655 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 07:24:04.655 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 07:24:04.655 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:24:04.656 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:24:04.656 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:24:04.656 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:24:04.656 - INFO - &{result_dict} = { stdout= }
20190402 07:24:04.656 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 07:24:04.656 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:24:04.657 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 07:24:04.657 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:24:04.657 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:24:04.657 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:24:04.657 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:24:04.657 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 07:24:04.657 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:04.658 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 07:24:04.658 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:24:04.666 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 07:24:04.666 - INFO - +------ END KW: SSHLibrary.Write (8)
20190402 07:24:04.666 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:05.893 - INFO - applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:05.893 - INFO - ${output} = applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:05.893 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1227)
20190402 07:24:05.894 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:24:05.894 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:24:05.894 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:05.894 - INFO - +------- END KW: String.Get Line (0)
20190402 07:24:05.894 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:24:05.894 - INFO - ${clean_out} = applied
20190402 07:24:05.894 - INFO - +------- END KW: String.Remove String (0)
20190402 07:24:05.895 - INFO - ${output} = applied
20190402 07:24:05.895 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 07:24:05.895 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 07:24:05.895 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:24:05.897 - INFO - echo $?
20190402 07:24:05.897 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 07:24:05.897 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:24:05.897 - INFO - 0
20190402 07:24:05.897 - INFO - ${rc} = 0
20190402 07:24:05.897 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 07:24:05.897 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:24:05.897 - INFO - 0
20190402 07:24:05.897 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 07:24:05.898 - INFO - ${rc} = 0
20190402 07:24:05.898 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 07:24:05.898 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:24:05.898 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:24:05.898 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 07:24:05.898 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:05.898 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:24:05.899 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 07:24:05.899 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:24:05.899 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applied
20190402 07:24:05.899 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 07:24:05.899 - INFO - &{result} = { stdout=applied | stderr= | rc=0 }
20190402 07:24:05.899 - INFO - +----- END KW: Utils.Run Command (1244)
20190402 07:24:05.899 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 07:24:05.900 - INFO - ${value} = applied
20190402 07:24:05.900 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 07:24:05.900 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 07:24:05.900 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 07:24:05.900 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 07:24:05.900 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 07:24:05.900 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:05.900 - INFO - +---- END KW: Utils.Check System Application Status (1246)
20190402 07:24:05.900 - INFO - +--- END KW: BuiltIn.Wait Until Keyword Succeeds (1246)
20190402 07:24:05.901 - INFO - +-- END KW: Utils.Bring Up Services (1530073)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 07:24:05.901 - INFO - +-- START KW: Utils.Set Ceph Pool Replication [ ]
20190402 07:24:05.901 - INFO - +--- START KW: Utils.Run Command [ ceph osd pool ls | xargs -i ceph osd pool set {} size 1 | True ]
20190402 07:24:05.901 - INFO - +---- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:24:05.902 - INFO - +---- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:24:05.902 - INFO - +---- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:24:05.902 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:24:05.902 - INFO - &{result_dict} = { stdout= }
20190402 07:24:05.902 - INFO - +----- END KW: BuiltIn.Create Dictionary (0)
20190402 07:24:05.902 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:24:05.903 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 07:24:05.903 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:24:05.903 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 07:24:05.903 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:24:05.903 - INFO - +---- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:24:05.903 - INFO - +---- START KW: SSHLibrary.Read [ ]
20190402 07:24:05.904 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:05.904 - INFO - +---- END KW: SSHLibrary.Read (1)
20190402 07:24:05.904 - INFO - +---- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:24:05.905 - INFO - ceph osd pool ls | xargs -i ceph osd p ool set {} size 1
20190402 07:24:05.905 - INFO - +---- END KW: SSHLibrary.Write (1)
20190402 07:24:05.905 - INFO - +---- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:17.022 - INFO - set pool 0 size to 1
set pool 1 size to 1
set pool 2 size to 1
set pool 3 size to 1
set pool 4 size to 1
set pool 5 size to 1
set pool 6 size to 1
set pool 7 size to 1
set pool 8 size to 1
set pool 9 size to 1
set pool 10 size to 1
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.022 - INFO - ${output} = set pool 0 size to 1
set pool 1 size to 1
set pool 2 size to 1
set pool 3 size to 1
set pool 4 size to 1
set pool 5 size to 1
set pool 6 size to 1
set pool 7 size to 1
set pool 8 size to 1
se...
20190402 07:24:17.022 - INFO - +---- END KW: SSHLibrary.Read Until Prompt (11117)
20190402 07:24:17.022 - INFO - +---- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:24:17.023 - INFO - +----- START KW: String.Get Line [ ${output} | -1 ]
20190402 07:24:17.023 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.023 - INFO - +----- END KW: String.Get Line (1)
20190402 07:24:17.023 - INFO - +----- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:24:17.023 - INFO - ${clean_out} = set pool 0 size to 1
set pool 1 size to 1
set pool 2 size to 1
set pool 3 size to 1
set pool 4 size to 1
set pool 5 size to 1
set pool 6 size to 1
set pool 7 size to 1
set pool 8 size to 1
se...
20190402 07:24:17.023 - INFO - +----- END KW: String.Remove String (0)
20190402 07:24:17.023 - INFO - ${output} = set pool 0 size to 1
set pool 1 size to 1
set pool 2 size to 1
set pool 3 size to 1
set pool 4 size to 1
set pool 5 size to 1
set pool 6 size to 1
set pool 7 size to 1
set pool 8 size to 1
se...
20190402 07:24:17.023 - INFO - +---- END KW: Utils.Remove Prompt Line (1)
20190402 07:24:17.023 - INFO - +---- START KW: Utils.Get Return Code [ ]
20190402 07:24:17.024 - INFO - +----- START KW: SSHLibrary.Write [ echo $? ]
20190402 07:24:17.025 - INFO - echo $?
20190402 07:24:17.025 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 07:24:17.025 - INFO - +----- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:24:17.025 - INFO - 0
20190402 07:24:17.026 - INFO - ${rc} = 0
20190402 07:24:17.026 - INFO - +----- END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:24:17.026 - INFO - +----- START KW: BuiltIn.Log [ ${rc} ]
20190402 07:24:17.026 - INFO - 0
20190402 07:24:17.026 - INFO - +----- END KW: BuiltIn.Log (0)
20190402 07:24:17.026 - INFO - ${rc} = 0
20190402 07:24:17.026 - INFO - +---- END KW: Utils.Get Return Code (3)
20190402 07:24:17.026 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:24:17.027 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:24:17.027 - INFO - +----- END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.027 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:17.027 - INFO - +---- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:24:17.027 - INFO - +---- END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.027 - INFO - +---- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:24:17.028 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: set pool 0 size to 1
set pool 1 size to 1
set pool 2 size to 1
set pool 3 size to 1
set pool 4 size to 1
set pool 5 size to 1
set pool 6 size to 1
set pool 7 size to 1
set pool 8 size to 1
set pool 9 size to 1
set pool 10 size to 1
20190402 07:24:17.028 - INFO - +---- END KW: Collections.Log Dictionary (1)
20190402 07:24:17.028 - INFO - +--- END KW: Utils.Run Command (11127)
20190402 07:24:17.028 - INFO - +-- END KW: Utils.Set Ceph Pool Replication (11127)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 07:24:17.028 - INFO - +-- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/Utils/${clouds_yml} | ${host_image_path}/${clouds_yml} ]
20190402 07:24:17.032 - INFO - '/home/mgperezi/duplex/stx-test-suite/Utils/clouds.yml' -> '/home/wrsroot//clouds.yml'
20190402 07:24:17.032 - INFO - +-- END KW: SSHLibrary.Put File (4)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 07:24:17.032 - INFO - +-- START KW: Utils.Set Cluster Endpoints [ ${clouds_yml} ]
20190402 07:24:17.033 - INFO - +--- START KW: Utils.Execute Sudo Command [ mkdir -p /etc/openstack ]
20190402 07:24:17.033 - INFO - +---- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=: ]
20190402 07:24:17.033 - INFO - +---- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:24:17.033 - INFO - +---- START KW: SSHLibrary.Read [ ]
20190402 07:24:17.034 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.034 - INFO - +---- END KW: SSHLibrary.Read (1)
20190402 07:24:17.034 - INFO - +---- START KW: SSHLibrary.Write [ sudo -k ${cmd} ]
20190402 07:24:17.035 - INFO - sudo -k mkdir -p /etc/openstack
20190402 07:24:17.035 - INFO - +---- END KW: SSHLibrary.Write (1)
20190402 07:24:17.035 - INFO - +---- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:17.055 - INFO - Password:
20190402 07:24:17.055 - INFO - ${output} = Password:
20190402 07:24:17.055 - INFO - +---- END KW: SSHLibrary.Read Until Prompt (20)
20190402 07:24:17.055 - INFO - +---- START KW: Utils.Run Command [ ${CLI_USER_PASS} ]
20190402 07:24:17.055 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:24:17.056 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (1)
20190402 07:24:17.056 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:24:17.056 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:24:17.056 - INFO - &{result_dict} = { stdout= }
20190402 07:24:17.057 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:17.057 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:24:17.057 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.057 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:24:17.057 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.057 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:24:17.058 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (1)
20190402 07:24:17.058 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 07:24:17.058 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 07:24:17.058 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:24:17.058 - INFO - +----- END KW: SSHLibrary.Write (0)
20190402 07:24:17.059 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:17.105 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.105 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.105 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (46)
20190402 07:24:17.105 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:24:17.105 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 07:24:17.106 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.106 - INFO - +------ END KW: String.Get Line (1)
20190402 07:24:17.106 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:24:17.106 - INFO - ${clean_out} =
20190402 07:24:17.106 - INFO - +------ END KW: String.Remove String (0)
20190402 07:24:17.106 - INFO - ${output} =
20190402 07:24:17.106 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 07:24:17.106 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 07:24:17.107 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 07:24:17.107 - INFO - echo $?
20190402 07:24:17.107 - INFO - +------ END KW: SSHLibrary.Write (0)
20190402 07:24:17.107 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:24:17.108 - INFO - 0
20190402 07:24:17.108 - INFO - ${rc} = 0
20190402 07:24:17.108 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:24:17.108 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 07:24:17.108 - INFO - 0
20190402 07:24:17.108 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 07:24:17.109 - INFO - ${rc} = 0
20190402 07:24:17.109 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 07:24:17.109 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:24:17.109 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:24:17.109 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.109 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:17.109 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:24:17.110 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 07:24:17.110 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:24:17.110 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 07:24:17.110 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 07:24:17.110 - INFO - ${output} = {u'stdout': u'', u'stderr': u'', u'rc': u'0'}
20190402 07:24:17.110 - INFO - +---- END KW: Utils.Run Command (55)
20190402 07:24:17.110 - INFO - +--- END KW: Utils.Execute Sudo Command (77)
20190402 07:24:17.110 - INFO - +--- START KW: Utils.Execute Sudo Command [ mv ${clouds_yml} /etc/openstack/. ]
20190402 07:24:17.111 - INFO - +---- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=: ]
20190402 07:24:17.111 - INFO - +---- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:24:17.111 - INFO - +---- START KW: SSHLibrary.Read [ ]
20190402 07:24:17.111 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.111 - INFO - +---- END KW: SSHLibrary.Read (0)
20190402 07:24:17.111 - INFO - +---- START KW: SSHLibrary.Write [ sudo -k ${cmd} ]
20190402 07:24:17.114 - INFO - sudo -k mv clouds.yml /etc/openstack/. [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K.
20190402 07:24:17.114 - INFO - +---- END KW: SSHLibrary.Write (3)
20190402 07:24:17.114 - INFO - +---- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:17.125 - INFO - Password:
20190402 07:24:17.125 - INFO - ${output} = Password:
20190402 07:24:17.125 - INFO - +---- END KW: SSHLibrary.Read Until Prompt (11)
20190402 07:24:17.125 - INFO - +---- START KW: Utils.Run Command [ ${CLI_USER_PASS} ]
20190402 07:24:17.126 - INFO - +----- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 07:24:17.126 - INFO - +----- END KW: SSHLibrary.Set Client Configuration (0)
20190402 07:24:17.126 - INFO - +----- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 07:24:17.126 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 07:24:17.127 - INFO - &{result_dict} = { stdout= }
20190402 07:24:17.127 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:17.127 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 07:24:17.127 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.127 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 07:24:17.128 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 07:24:17.128 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 07:24:17.128 - INFO - +----- END KW: Utils.Create Empy Result Dictionary (2)
20190402 07:24:17.128 - INFO - +----- START KW: SSHLibrary.Read [ ]
20190402 07:24:17.128 - INFO - +----- END KW: SSHLibrary.Read (0)
20190402 07:24:17.128 - INFO - +----- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 07:24:17.129 - INFO - +----- END KW: SSHLibrary.Write (1)
20190402 07:24:17.129 - INFO - +----- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 07:24:17.174 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.174 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.174 - INFO - +----- END KW: SSHLibrary.Read Until Prompt (45)
20190402 07:24:17.174 - INFO - +----- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 07:24:17.174 - INFO - +------ START KW: String.Get Line [ ${output} | -1 ]
20190402 07:24:17.175 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 07:24:17.175 - INFO - +------ END KW: String.Get Line (1)
20190402 07:24:17.175 - INFO - +------ START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 07:24:17.175 - INFO - ${clean_out} =
20190402 07:24:17.175 - INFO - +------ END KW: String.Remove String (0)
20190402 07:24:17.175 - INFO - ${output} =
20190402 07:24:17.175 - INFO - +----- END KW: Utils.Remove Prompt Line (1)
20190402 07:24:17.175 - INFO - +----- START KW: Utils.Get Return Code [ ]
20190402 07:24:17.176 - INFO - +------ START KW: SSHLibrary.Write [ echo $? ]
20190402 07:24:17.176 - INFO - echo $?
20190402 07:24:17.176 - INFO - +------ END KW: SSHLibrary.Write (0)
20190402 07:24:17.176 - INFO - +------ START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 07:24:17.177 - INFO - 0
20190402 07:24:17.177 - INFO - ${rc} = 0
20190402 07:24:17.177 - INFO - +------ END KW: SSHLibrary.Read Until Regexp (1)
20190402 07:24:17.177 - INFO - +------ START KW: BuiltIn.Log [ ${rc} ]
20190402 07:24:17.177 - INFO - 0
20190402 07:24:17.177 - INFO - +------ END KW: BuiltIn.Log (0)
20190402 07:24:17.178 - INFO - ${rc} = 0
20190402 07:24:17.178 - INFO - +----- END KW: Utils.Get Return Code (3)
20190402 07:24:17.178 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 07:24:17.178 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 07:24:17.178 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 07:24:17.178 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:17.178 - INFO - +----- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 07:24:17.179 - INFO - +----- END KW: Collections.Set To Dictionary (1)
20190402 07:24:17.179 - INFO - +----- START KW: Collections.Log Dictionary [ ${result} ]
20190402 07:24:17.179 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 07:24:17.179 - INFO - +----- END KW: Collections.Log Dictionary (0)
20190402 07:24:17.179 - INFO - ${output} = {u'stdout': u'', u'stderr': u'', u'rc': u'0'}
20190402 07:24:17.179 - INFO - +---- END KW: Utils.Run Command (54)
20190402 07:24:17.179 - INFO - +--- END KW: Utils.Execute Sudo Command (69)
20190402 07:24:17.179 - INFO - +-- END KW: Utils.Set Cluster Endpoints (147)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 07:24:17.180 - INFO - +-- START KW: OpenStack.Provider Network Setup [ ${physnet0} | ${physnet1} ]
20190402 07:24:17.180 - INFO - +--- START KW: OpenStack.Run OS Command [ openstack project list | grep admin | awk '{print $2}' | True ]
20190402 07:24:17.180 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:17.180 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:17.180 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:17.181 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:17.181 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack project list | grep admin | awk '{print $2}''.
20190402 07:24:18.663 - INFO - Command exited with return code 0.
20190402 07:24:18.664 - INFO - ${stdout} = 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:18.664 - INFO - ${stderr} =
20190402 07:24:18.664 - INFO - ${rc} = 0
20190402 07:24:18.665 - INFO - +---- END KW: SSHLibrary.Execute Command (1483)
20190402 07:24:18.665 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:18.666 - INFO - ${res} = {u'stdout': u'0f11d1f07cb3473ea654e73eea746848', u'stderr': u'', u'rc': 0}
20190402 07:24:18.666 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:18.667 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:18.667 - INFO - +---- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:18.668 - INFO - &{output} = { stdout=0f11d1f07cb3473ea654e73eea746848 | stderr= | rc=0 }
20190402 07:24:18.668 - INFO - +--- END KW: OpenStack.Run OS Command (1488)
20190402 07:24:18.669 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:18.669 - INFO - ${adminid} = 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:18.669 - INFO - +--- END KW: Collections.Get From Dictionary (0)
20190402 07:24:18.669 - INFO - +--- START KW: BuiltIn.Set Variable [ openstack network segment range create ]
20190402 07:24:18.669 - INFO - ${openstack_cmd} = openstack network segment range create
20190402 07:24:18.669 - INFO - +--- END KW: BuiltIn.Set Variable (0)
20190402 07:24:18.669 - INFO - +--- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${physnet0}-a | --network-type vlan | --physical-network ${physnet0} | --minimum 400 | --maximum 499 | --private | --project ${adminid} ]
20190402 07:24:18.670 - INFO - ${cmd} = openstack network segment range create physnet0-a --network-type vlan --physical-network physnet0 --minimum 400 --maximum 499 --private --project 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:18.670 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:18.670 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:18.670 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:18.671 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:18.671 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:18.671 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:18.671 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network segment range create physnet0-a --network-type vlan --physical-network physnet0 --minimum 400 --maximum 499 --private --project 0f11d1f07cb3473ea654e73eea746848'.
20190402 07:24:21.810 - INFO - Command exited with return code 0.
20190402 07:24:21.810 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 07:24:21.811 - INFO - ${stderr} =
20190402 07:24:21.811 - INFO - ${rc} = 0
20190402 07:24:21.811 - INFO - +---- END KW: SSHLibrary.Execute Command (3140)
20190402 07:24:21.812 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:21.813 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 07:24:21.813 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:21.814 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:21.815 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:21.815 - INFO - +--- END KW: OpenStack.Run OS Command (3145)
20190402 07:24:21.815 - INFO - +--- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${physnet0}-b | --network-type vlan | --physical-network ${physnet0} | --minimum 10 | --maximum 10 ]
20190402 07:24:21.816 - INFO - ${cmd} = openstack network segment range create physnet0-b --network-type vlan --physical-network physnet0 --minimum 10 --maximum 10
20190402 07:24:21.816 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:21.816 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:21.816 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:21.816 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:21.816 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:21.816 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:21.817 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network segment range create physnet0-b --network-type vlan --physical-network physnet0 --minimum 10 --maximum 10'.
20190402 07:24:23.099 - INFO - Command exited with return code 0.
20190402 07:24:23.100 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 07:24:23.100 - INFO - ${stderr} =
20190402 07:24:23.100 - INFO - ${rc} = 0
20190402 07:24:23.100 - INFO - +---- END KW: SSHLibrary.Execute Command (1284)
20190402 07:24:23.101 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:23.103 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 07:24:23.103 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:23.103 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:23.104 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:23.104 - INFO - +--- END KW: OpenStack.Run OS Command (1288)
20190402 07:24:23.105 - INFO - +--- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${physnet1}-a | --network-type vlan | --physical-network ${physnet1} | --minimum 500 | --maximum 599 | --private | --project ${adminid} ]
20190402 07:24:23.105 - INFO - ${cmd} = openstack network segment range create physnet1-a --network-type vlan --physical-network physnet1 --minimum 500 --maximum 599 --private --project 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:23.105 - INFO - +--- END KW: BuiltIn.Catenate (0)
20190402 07:24:23.105 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:23.106 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:23.106 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:23.106 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:23.106 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:23.106 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network segment range create physnet1-a --network-type vlan --physical-network physnet1 --minimum 500 --maximum 599 --private --project 0f11d1f07cb3473ea654e73eea746848'.
20190402 07:24:24.489 - INFO - Command exited with return code 0.
20190402 07:24:24.490 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 07:24:24.490 - INFO - ${stderr} =
20190402 07:24:24.490 - INFO - ${rc} = 0
20190402 07:24:24.490 - INFO - +---- END KW: SSHLibrary.Execute Command (1384)
20190402 07:24:24.491 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:24.492 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 07:24:24.493 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:24.493 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:24.494 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:24.494 - INFO - +--- END KW: OpenStack.Run OS Command (1389)
20190402 07:24:24.495 - INFO - +-- END KW: OpenStack.Provider Network Setup (7314)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 07:24:24.495 - INFO - +-- START KW: OpenStack.Tenant Networking Setup [ ${physnet0} | ${physnet1} | ${externalnet} | ${publicnet} | ${privatenet} | ${internalnet} | ${publicsubnet} | ${privatesubnet} | ${internalsubnet} | ${externalsubnet} | ${publicrouter} | ${privaterouter} ]
20190402 07:24:24.497 - INFO - +--- START KW: OpenStack.Run OS Command [ openstack project list | grep admin | awk '{print $2}' | True ]
20190402 07:24:24.498 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:24.499 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:24.499 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:24.500 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:24.501 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack project list | grep admin | awk '{print $2}''.
20190402 07:24:25.734 - INFO - Command exited with return code 0.
20190402 07:24:25.734 - INFO - ${stdout} = 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:25.735 - INFO - ${stderr} =
20190402 07:24:25.735 - INFO - ${rc} = 0
20190402 07:24:25.735 - INFO - +---- END KW: SSHLibrary.Execute Command (1235)
20190402 07:24:25.735 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:25.737 - INFO - ${res} = {u'stdout': u'0f11d1f07cb3473ea654e73eea746848', u'stderr': u'', u'rc': 0}
20190402 07:24:25.737 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:25.737 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:25.738 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:25.739 - INFO - &{output} = { stdout=0f11d1f07cb3473ea654e73eea746848 | stderr= | rc=0 }
20190402 07:24:25.739 - INFO - +--- END KW: OpenStack.Run OS Command (1242)
20190402 07:24:25.740 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:25.741 - INFO - ${adminid} = 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:25.741 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:25.741 - INFO - +--- START KW: BuiltIn.Set Variable [ neutron net-create --tenant-id ${adminid} ]
20190402 07:24:25.742 - INFO - ${neutron_cmd} = neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:25.742 - INFO - +--- END KW: BuiltIn.Set Variable (1)
20190402 07:24:25.743 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --provider:network_type=vlan | --provider:physical_network=${physnet0} | --provider:segmentation_id=10 | --router:external ${externalnet} ]
20190402 07:24:25.743 - INFO - ${cmd} = neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --provider:network_type=vlan --provider:physical_network=physnet0 --provider:segmentation_id=10 --router:external external-net0
20190402 07:24:25.744 - INFO - +--- END KW: BuiltIn.Catenate (2)
20190402 07:24:25.744 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:25.745 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:25.746 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:25.746 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:25.746 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:25.747 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --provider:network_type=vlan --provider:physical_network=physnet0 --provider:segmentation_id=10 --router:external external-net0'.
20190402 07:24:27.031 - INFO - Command exited with return code 0.
20190402 07:24:27.032 - INFO - ${stdout} = Created a new network:
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+----------...
20190402 07:24:27.032 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:27.032 - INFO - ${rc} = 0
20190402 07:24:27.032 - INFO - +---- END KW: SSHLibrary.Execute Command (1286)
20190402 07:24:27.033 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:27.035 - INFO - ${res} = {u'stdout': u'Created a new network:\n+---------------------------+--------------------------------------+\n| Field                     | Value                                |\n+---------------------...
20190402 07:24:27.036 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:27.036 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:27.038 - INFO - +---- END KW: BuiltIn.Run Keyword If (2)
20190402 07:24:27.039 - INFO - +--- END KW: OpenStack.Run OS Command (1294)
20190402 07:24:27.039 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --provider:network_type=vlan | --provider:physical_network=${physnet0} | --provider:segmentation_id=400 ${publicnet} ]
20190402 07:24:27.040 - INFO - ${cmd} = neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --provider:network_type=vlan --provider:physical_network=physnet0 --provider:segmentation_id=400 public-net0
20190402 07:24:27.040 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:27.041 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:27.042 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:27.043 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:27.043 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:27.043 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:27.044 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --provider:network_type=vlan --provider:physical_network=physnet0 --provider:segmentation_id=400 public-net0'.
20190402 07:24:28.077 - INFO - Command exited with return code 0.
20190402 07:24:28.077 - INFO - ${stdout} = Created a new network:
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+----------...
20190402 07:24:28.078 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:28.078 - INFO - ${rc} = 0
20190402 07:24:28.078 - INFO - +---- END KW: SSHLibrary.Execute Command (1035)
20190402 07:24:28.079 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:28.080 - INFO - ${res} = {u'stdout': u'Created a new network:\n+---------------------------+--------------------------------------+\n| Field                     | Value                                |\n+---------------------...
20190402 07:24:28.080 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:28.081 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:28.082 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:28.082 - INFO - +--- END KW: OpenStack.Run OS Command (1041)
20190402 07:24:28.083 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --provider:network_type=vlan | --provider:physical_network=${physnet1} | --provider:segmentation_id=500 ${privatenet} ]
20190402 07:24:28.083 - INFO - ${cmd} = neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --provider:network_type=vlan --provider:physical_network=physnet1 --provider:segmentation_id=500 private-net0
20190402 07:24:28.084 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:28.084 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:28.085 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:28.086 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:28.086 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:28.086 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:28.088 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --provider:network_type=vlan --provider:physical_network=physnet1 --provider:segmentation_id=500 private-net0'.
20190402 07:24:29.070 - INFO - Command exited with return code 0.
20190402 07:24:29.070 - INFO - ${stdout} = Created a new network:
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+----------...
20190402 07:24:29.071 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:29.071 - INFO - ${rc} = 0
20190402 07:24:29.071 - INFO - +---- END KW: SSHLibrary.Execute Command (985)
20190402 07:24:29.072 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:29.073 - INFO - ${res} = {u'stdout': u'Created a new network:\n+---------------------------+--------------------------------------+\n| Field                     | Value                                |\n+---------------------...
20190402 07:24:29.074 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:29.074 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:29.075 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:29.075 - INFO - +--- END KW: OpenStack.Run OS Command (991)
20190402 07:24:29.075 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | ${internalnet} ]
20190402 07:24:29.075 - INFO - ${cmd} = neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 internal-net0
20190402 07:24:29.076 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:29.076 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:29.076 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:29.076 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:29.076 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:29.076 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:29.077 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 internal-net0'.
20190402 07:24:30.259 - INFO - Command exited with return code 0.
20190402 07:24:30.259 - INFO - ${stdout} = Created a new network:
+---------------------------+--------------------------------------+
| Field                     | Value                                |
+---------------------------+----------...
20190402 07:24:30.259 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:30.260 - INFO - ${rc} = 0
20190402 07:24:30.260 - INFO - +---- END KW: SSHLibrary.Execute Command (1184)
20190402 07:24:30.260 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:30.263 - INFO - ${res} = {u'stdout': u'Created a new network:\n+---------------------------+--------------------------------------+\n| Field                     | Value                                |\n+---------------------...
20190402 07:24:30.263 - INFO - +---- END KW: BuiltIn.Create Dictionary (3)
20190402 07:24:30.263 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:30.264 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:30.264 - INFO - +--- END KW: OpenStack.Run OS Command (1188)
20190402 07:24:30.264 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron net-list | grep ${publicnet} | awk '{print $2}' ]
20190402 07:24:30.265 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:30.265 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:30.265 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:30.265 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:30.265 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-list | grep public-net0 | awk '{print $2}''.
20190402 07:24:31.655 - INFO - Command exited with return code 0.
20190402 07:24:31.655 - INFO - ${stdout} = 901f0b8c-7e41-4828-af92-df1813184c45
20190402 07:24:31.655 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:31.656 - INFO - ${rc} = 0
20190402 07:24:31.656 - INFO - +---- END KW: SSHLibrary.Execute Command (1391)
20190402 07:24:31.656 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:31.658 - INFO - ${res} = {u'stdout': u'901f0b8c-7e41-4828-af92-df1813184c45', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:31.658 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:31.658 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:31.659 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:31.660 - INFO - &{output} = { stdout=901f0b8c-7e41-4828-af92-df1813184c45 | stderr=neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead. | rc=0 }
20190402 07:24:31.661 - INFO - +--- END KW: OpenStack.Run OS Command (1396)
20190402 07:24:31.661 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:31.662 - INFO - ${publicnetid} = 901f0b8c-7e41-4828-af92-df1813184c45
20190402 07:24:31.662 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:31.663 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron net-list | grep ${privatenet} | awk '{print $2}' ]
20190402 07:24:31.665 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:31.665 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:31.666 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:31.666 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:31.667 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-list | grep private-net0 | awk '{print $2}''.
20190402 07:24:32.856 - INFO - Command exited with return code 0.
20190402 07:24:32.856 - INFO - ${stdout} = f332d9b7-15fc-4a0f-8870-502d3f86b38e
20190402 07:24:32.857 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:32.857 - INFO - ${rc} = 0
20190402 07:24:32.857 - INFO - +---- END KW: SSHLibrary.Execute Command (1191)
20190402 07:24:32.858 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:32.859 - INFO - ${res} = {u'stdout': u'f332d9b7-15fc-4a0f-8870-502d3f86b38e', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:32.859 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:32.860 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:32.861 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:32.861 - INFO - &{output} = { stdout=f332d9b7-15fc-4a0f-8870-502d3f86b38e | stderr=neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead. | rc=0 }
20190402 07:24:32.861 - INFO - +--- END KW: OpenStack.Run OS Command (1198)
20190402 07:24:32.861 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:32.862 - INFO - ${privatenetid} = f332d9b7-15fc-4a0f-8870-502d3f86b38e
20190402 07:24:32.862 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:32.862 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron net-list | grep ${internalnet} | awk '{print $2}' ]
20190402 07:24:32.862 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:32.862 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:32.862 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:32.862 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:32.863 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-list | grep internal-net0 | awk '{print $2}''.
20190402 07:24:34.051 - INFO - Command exited with return code 0.
20190402 07:24:34.052 - INFO - ${stdout} = 773fde25-ab9d-49b0-b055-033eea408f15
20190402 07:24:34.052 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:34.052 - INFO - ${rc} = 0
20190402 07:24:34.052 - INFO - +---- END KW: SSHLibrary.Execute Command (1190)
20190402 07:24:34.053 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:34.054 - INFO - ${res} = {u'stdout': u'773fde25-ab9d-49b0-b055-033eea408f15', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:34.054 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:34.055 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:34.056 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:34.056 - INFO - &{output} = { stdout=773fde25-ab9d-49b0-b055-033eea408f15 | stderr=neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead. | rc=0 }
20190402 07:24:34.056 - INFO - +--- END KW: OpenStack.Run OS Command (1194)
20190402 07:24:34.056 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:34.056 - INFO - ${internalnetid} = 773fde25-ab9d-49b0-b055-033eea408f15
20190402 07:24:34.057 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:34.057 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron net-list | grep ${externalnet} | awk '{print $2}' ]
20190402 07:24:34.057 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:34.057 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:34.057 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:34.057 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:34.058 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron net-list | grep external-net0 | awk '{print $2}''.
20190402 07:24:35.271 - INFO - Command exited with return code 0.
20190402 07:24:35.271 - INFO - ${stdout} = 867d67fc-10e7-464e-8fdd-8c30f102826e
20190402 07:24:35.271 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:35.272 - INFO - ${rc} = 0
20190402 07:24:35.272 - INFO - +---- END KW: SSHLibrary.Execute Command (1215)
20190402 07:24:35.272 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:35.275 - INFO - ${res} = {u'stdout': u'867d67fc-10e7-464e-8fdd-8c30f102826e', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:35.275 - INFO - +---- END KW: BuiltIn.Create Dictionary (3)
20190402 07:24:35.275 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:35.276 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:35.277 - INFO - &{output} = { stdout=867d67fc-10e7-464e-8fdd-8c30f102826e | stderr=neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead. | rc=0 }
20190402 07:24:35.277 - INFO - +--- END KW: OpenStack.Run OS Command (1220)
20190402 07:24:35.277 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:35.278 - INFO - ${externalnetid} = 867d67fc-10e7-464e-8fdd-8c30f102826e
20190402 07:24:35.278 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:35.279 - INFO - +--- START KW: BuiltIn.Set Variable [ neutron subnet-create --tenant-id ${adminid} ]
20190402 07:24:35.279 - INFO - ${neutron_cmd} = neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848
20190402 07:24:35.280 - INFO - +--- END KW: BuiltIn.Set Variable (0)
20190402 07:24:35.280 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --name ${publicsubnet} | ${publicnet} 192.168.101.0/24 ]
20190402 07:24:35.281 - INFO - ${cmd} = neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name public-subnet0 public-net0 192.168.101.0/24
20190402 07:24:35.281 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:35.281 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:35.282 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:35.283 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:35.283 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:35.284 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:35.285 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name public-subnet0 public-net0 192.168.101.0/24'.
20190402 07:24:36.482 - INFO - Command exited with return code 0.
20190402 07:24:36.483 - INFO - ${stdout} = Created a new subnet:
+-------------------+------------------------------------------------------+
| Field             | Value                                                |
+-------------------+---...
20190402 07:24:36.483 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:36.483 - INFO - ${rc} = 0
20190402 07:24:36.484 - INFO - +---- END KW: SSHLibrary.Execute Command (1199)
20190402 07:24:36.484 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:36.486 - INFO - ${res} = {u'stdout': u'Created a new subnet:\n+-------------------+------------------------------------------------------+\n| Field             | Value                                                |\n+------...
20190402 07:24:36.486 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:36.486 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:36.487 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:36.487 - INFO - +--- END KW: OpenStack.Run OS Command (1206)
20190402 07:24:36.487 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --name ${privatesubnet} | ${privatenet} 192.168.201.0/24 ]
20190402 07:24:36.488 - INFO - ${cmd} = neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name private-subnet0 private-net0 192.168.201.0/24
20190402 07:24:36.488 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:36.488 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:36.488 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:36.488 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:36.488 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:36.488 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:36.489 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name private-subnet0 private-net0 192.168.201.0/24'.
20190402 07:24:37.853 - INFO - Command exited with return code 0.
20190402 07:24:37.853 - INFO - ${stdout} = Created a new subnet:
+-------------------+------------------------------------------------------+
| Field             | Value                                                |
+-------------------+---...
20190402 07:24:37.853 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:37.854 - INFO - ${rc} = 0
20190402 07:24:37.854 - INFO - +---- END KW: SSHLibrary.Execute Command (1366)
20190402 07:24:37.854 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:37.856 - INFO - ${res} = {u'stdout': u'Created a new subnet:\n+-------------------+------------------------------------------------------+\n| Field             | Value                                                |\n+------...
20190402 07:24:37.856 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:37.857 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:37.857 - INFO - +---- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:37.858 - INFO - +--- END KW: OpenStack.Run OS Command (1370)
20190402 07:24:37.858 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --name ${internalsubnet} | --no-gateway | ${internalnet} 10.10.0.0/24 ]
20190402 07:24:37.859 - INFO - ${cmd} = neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name internal-subnet0 --no-gateway internal-net0 10.10.0.0/24
20190402 07:24:37.860 - INFO - +--- END KW: BuiltIn.Catenate (2)
20190402 07:24:37.860 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:37.861 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:37.862 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:37.862 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:37.863 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:37.864 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name internal-subnet0 --no-gateway internal-net0 10.10.0.0/24'.
20190402 07:24:39.298 - INFO - Command exited with return code 0.
20190402 07:24:39.299 - INFO - ${stdout} = Created a new subnet:
+-------------------+----------------------------------------------+
| Field             | Value                                        |
+-------------------+-------------------...
20190402 07:24:39.299 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:39.299 - INFO - ${rc} = 0
20190402 07:24:39.300 - INFO - +---- END KW: SSHLibrary.Execute Command (1437)
20190402 07:24:39.300 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:39.302 - INFO - ${res} = {u'stdout': u'Created a new subnet:\n+-------------------+----------------------------------------------+\n| Field             | Value                                        |\n+-------------------+--...
20190402 07:24:39.302 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:39.302 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:39.303 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:39.303 - INFO - +--- END KW: OpenStack.Run OS Command (1443)
20190402 07:24:39.303 - INFO - +--- START KW: BuiltIn.Catenate [ ${neutron_cmd} | --name ${externalsubnet} | --gateway 192.168.1.1 | --disable-dhcp ${externalnet} 192.168.1.0/24 ]
20190402 07:24:39.304 - INFO - ${cmd} = neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name external-subnet0 --gateway 192.168.1.1 --disable-dhcp external-net0 192.168.1.0/24
20190402 07:24:39.304 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:39.304 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:39.304 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:39.304 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:39.304 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:39.304 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:39.305 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron subnet-create --tenant-id 0f11d1f07cb3473ea654e73eea746848 --name external-subnet0 --gateway 192.168.1.1 --disable-dhcp external-net0 192.168.1.0/24'.
20190402 07:24:40.537 - INFO - Command exited with return code 0.
20190402 07:24:40.538 - INFO - ${stdout} = Created a new subnet:
+-------------------+--------------------------------------------------+
| Field             | Value                                            |
+-------------------+-----------...
20190402 07:24:40.538 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:40.538 - INFO - ${rc} = 0
20190402 07:24:40.538 - INFO - +---- END KW: SSHLibrary.Execute Command (1234)
20190402 07:24:40.539 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:40.540 - INFO - ${res} = {u'stdout': u'Created a new subnet:\n+-------------------+--------------------------------------------------+\n| Field             | Value                                            |\n+--------------...
20190402 07:24:40.541 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:40.541 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:40.542 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:40.543 - INFO - +--- END KW: OpenStack.Run OS Command (1238)
20190402 07:24:40.543 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron router-create ${publicrouter} | True ]
20190402 07:24:40.544 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:40.545 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:40.545 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:40.545 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:40.547 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-create public-router0'.
20190402 07:24:41.479 - INFO - Command exited with return code 0.
20190402 07:24:41.480 - INFO - ${stdout} = Created a new router:
+-------------------------+--------------------------------------+
| Field                   | Value                                |
+-------------------------+-----------------...
20190402 07:24:41.480 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:41.480 - INFO - ${rc} = 0
20190402 07:24:41.481 - INFO - +---- END KW: SSHLibrary.Execute Command (935)
20190402 07:24:41.481 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:41.482 - INFO - ${res} = {u'stdout': u'Created a new router:\n+-------------------------+--------------------------------------+\n| Field                   | Value                                |\n+-------------------------+...
20190402 07:24:41.483 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:41.483 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:41.484 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:41.484 - INFO - +--- END KW: OpenStack.Run OS Command (941)
20190402 07:24:41.484 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron router-create ${privaterouter} | True ]
20190402 07:24:41.485 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:41.485 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:41.485 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:41.485 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:41.485 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-create private-router0'.
20190402 07:24:42.373 - INFO - Command exited with return code 0.
20190402 07:24:42.373 - INFO - ${stdout} = Created a new router:
+-------------------------+--------------------------------------+
| Field                   | Value                                |
+-------------------------+-----------------...
20190402 07:24:42.373 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:42.373 - INFO - ${rc} = 0
20190402 07:24:42.374 - INFO - +---- END KW: SSHLibrary.Execute Command (889)
20190402 07:24:42.374 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:42.376 - INFO - ${res} = {u'stdout': u'Created a new router:\n+-------------------------+--------------------------------------+\n| Field                   | Value                                |\n+-------------------------+...
20190402 07:24:42.376 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:42.376 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:42.377 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:42.377 - INFO - +--- END KW: OpenStack.Run OS Command (893)
20190402 07:24:42.378 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron router-list | grep ${privaterouter} | awk '{print $2}' ]
20190402 07:24:42.378 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:42.378 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:42.379 - INFO - +---- END KW: BuiltIn.Set Variable (1)
20190402 07:24:42.379 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:42.379 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-list | grep private-router0 | awk '{print $2}''.
20190402 07:24:43.561 - INFO - Command exited with return code 0.
20190402 07:24:43.561 - INFO - ${stdout} = 437b919f-bcd8-4fce-9f63-edc1dfd80c0a
20190402 07:24:43.562 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:43.562 - INFO - ${rc} = 0
20190402 07:24:43.562 - INFO - +---- END KW: SSHLibrary.Execute Command (1183)
20190402 07:24:43.563 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:43.564 - INFO - ${res} = {u'stdout': u'437b919f-bcd8-4fce-9f63-edc1dfd80c0a', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:43.564 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:43.565 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:43.566 - INFO - +---- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:43.566 - INFO - &{output} = { stdout=437b919f-bcd8-4fce-9f63-edc1dfd80c0a | stderr=neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead. | rc=0 }
20190402 07:24:43.566 - INFO - +--- END KW: OpenStack.Run OS Command (1188)
20190402 07:24:43.566 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:43.566 - INFO - ${privaterouterid} = 437b919f-bcd8-4fce-9f63-edc1dfd80c0a
20190402 07:24:43.567 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:43.567 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron router-list | grep ${publicrouter} | awk '{print $2}' ]
20190402 07:24:43.567 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:43.567 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:43.567 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:43.567 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:43.568 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-list | grep public-router0 | awk '{print $2}''.
20190402 07:24:44.900 - INFO - Command exited with return code 0.
20190402 07:24:44.901 - INFO - ${stdout} = cb12ca1f-d89d-408f-8cd6-6d0d59a9946b
20190402 07:24:44.901 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:44.901 - INFO - ${rc} = 0
20190402 07:24:44.902 - INFO - +---- END KW: SSHLibrary.Execute Command (1334)
20190402 07:24:44.902 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:44.904 - INFO - ${res} = {u'stdout': u'cb12ca1f-d89d-408f-8cd6-6d0d59a9946b', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:44.904 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:44.904 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:44.905 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:44.905 - INFO - &{output} = { stdout=cb12ca1f-d89d-408f-8cd6-6d0d59a9946b | stderr=neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead. | rc=0 }
20190402 07:24:44.905 - INFO - +--- END KW: OpenStack.Run OS Command (1338)
20190402 07:24:44.905 - INFO - +--- START KW: Collections.Get From Dictionary [ ${output} | stdout ]
20190402 07:24:44.906 - INFO - ${publicrouterid} = cb12ca1f-d89d-408f-8cd6-6d0d59a9946b
20190402 07:24:44.906 - INFO - +--- END KW: Collections.Get From Dictionary (1)
20190402 07:24:44.906 - INFO - +--- START KW: BuiltIn.Catenate [ neutron router-gateway-set --disable-snat | ${publicrouterid} | ${externalnetid} ]
20190402 07:24:44.906 - INFO - ${cmd} = neutron router-gateway-set --disable-snat cb12ca1f-d89d-408f-8cd6-6d0d59a9946b 867d67fc-10e7-464e-8fdd-8c30f102826e
20190402 07:24:44.906 - INFO - +--- END KW: BuiltIn.Catenate (0)
20190402 07:24:44.906 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:44.907 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:44.907 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:44.907 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:44.907 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:44.908 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-gateway-set --disable-snat cb12ca1f-d89d-408f-8cd6-6d0d59a9946b 867d67fc-10e7-464e-8fdd-8c30f102826e'.
20190402 07:24:47.676 - INFO - Command exited with return code 0.
20190402 07:24:47.677 - INFO - ${stdout} = Set gateway for router cb12ca1f-d89d-408f-8cd6-6d0d59a9946b
20190402 07:24:47.677 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:47.677 - INFO - ${rc} = 0
20190402 07:24:47.677 - INFO - +---- END KW: SSHLibrary.Execute Command (2770)
20190402 07:24:47.678 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:47.680 - INFO - ${res} = {u'stdout': u'Set gateway for router cb12ca1f-d89d-408f-8cd6-6d0d59a9946b', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:47.680 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:47.681 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:47.681 - INFO - +---- END KW: BuiltIn.Run Keyword If (0)
20190402 07:24:47.681 - INFO - +--- END KW: OpenStack.Run OS Command (2775)
20190402 07:24:47.681 - INFO - +--- START KW: BuiltIn.Catenate [ neutron router-gateway-set --disable-snat | ${privaterouterid} | ${externalnetid} ]
20190402 07:24:47.682 - INFO - ${cmd} = neutron router-gateway-set --disable-snat 437b919f-bcd8-4fce-9f63-edc1dfd80c0a 867d67fc-10e7-464e-8fdd-8c30f102826e
20190402 07:24:47.682 - INFO - +--- END KW: BuiltIn.Catenate (1)
20190402 07:24:47.682 - INFO - +--- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 07:24:47.682 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:47.682 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:47.682 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:47.683 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:47.683 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-gateway-set --disable-snat 437b919f-bcd8-4fce-9f63-edc1dfd80c0a 867d67fc-10e7-464e-8fdd-8c30f102826e'.
20190402 07:24:50.176 - INFO - Command exited with return code 0.
20190402 07:24:50.177 - INFO - ${stdout} = Set gateway for router 437b919f-bcd8-4fce-9f63-edc1dfd80c0a
20190402 07:24:50.177 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:50.177 - INFO - ${rc} = 0
20190402 07:24:50.177 - INFO - +---- END KW: SSHLibrary.Execute Command (2494)
20190402 07:24:50.178 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:50.179 - INFO - ${res} = {u'stdout': u'Set gateway for router 437b919f-bcd8-4fce-9f63-edc1dfd80c0a', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'rc': 0}
20190402 07:24:50.180 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:50.180 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:50.181 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:50.181 - INFO - +--- END KW: OpenStack.Run OS Command (2499)
20190402 07:24:50.181 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron router-interface-add ${publicrouter} ${publicsubnet} | True ]
20190402 07:24:50.182 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:50.182 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:50.182 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:50.182 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:50.182 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-interface-add public-router0 public-subnet0'.
20190402 07:24:52.633 - INFO - Command exited with return code 0.
20190402 07:24:52.634 - INFO - ${stdout} = Added interface 00b23a3e-77eb-42fd-afb5-556855d46685 to router public-router0.
20190402 07:24:52.634 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:52.634 - INFO - ${rc} = 0
20190402 07:24:52.634 - INFO - +---- END KW: SSHLibrary.Execute Command (2452)
20190402 07:24:52.635 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:52.636 - INFO - ${res} = {u'stdout': u'Added interface 00b23a3e-77eb-42fd-afb5-556855d46685 to router public-router0.', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u'...
20190402 07:24:52.637 - INFO - +---- END KW: BuiltIn.Create Dictionary (2)
20190402 07:24:52.637 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:52.638 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:52.638 - INFO - +--- END KW: OpenStack.Run OS Command (2457)
20190402 07:24:52.638 - INFO - +--- START KW: OpenStack.Run OS Command [ neutron router-interface-add ${privaterouter} ${privatesubnet} | True ]
20190402 07:24:52.639 - INFO - +---- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 07:24:52.639 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 07:24:52.639 - INFO - +---- END KW: BuiltIn.Set Variable (0)
20190402 07:24:52.639 - INFO - +---- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 07:24:52.639 - INFO - Executing command 'export OS_CLOUD=openstack_helm && neutron router-interface-add private-router0 private-subnet0'.
20190402 07:24:55.427 - INFO - Command exited with return code 0.
20190402 07:24:55.428 - INFO - ${stdout} = Added interface 85f69b05-5e1f-45da-9e0c-1d7eb5fc6c37 to router private-router0.
20190402 07:24:55.428 - INFO - ${stderr} = neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.
20190402 07:24:55.428 - INFO - ${rc} = 0
20190402 07:24:55.428 - INFO - +---- END KW: SSHLibrary.Execute Command (2789)
20190402 07:24:55.429 - INFO - +---- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 07:24:55.430 - INFO - ${res} = {u'stdout': u'Added interface 85f69b05-5e1f-45da-9e0c-1d7eb5fc6c37 to router private-router0.', u'stderr': u'neutron CLI is deprecated and will be removed in the future. Use openstack CLI instead.', u...
20190402 07:24:55.431 - INFO - +---- END KW: BuiltIn.Create Dictionary (1)
20190402 07:24:55.431 - INFO - +---- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 07:24:55.432 - INFO - +---- END KW: BuiltIn.Run Keyword If (1)
20190402 07:24:55.432 - INFO - +--- END KW: OpenStack.Run OS Command (2794)
20190402 07:24:55.432 - INFO - +-- END KW: OpenStack.Tenant Networking Setup (30937)
------------------------------------------------------------------------------
20190402 07:24:55.433 - INFO - +- END TEST: Provisioning Duplex System (1600755)
------------------------------------------------------------------------------
20190402 07:24:55.433 - INFO - + END SUITE: Provision-Containers (1602393)
==============================================================================
