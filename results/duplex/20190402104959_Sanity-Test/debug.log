==============================================================================
20190402 10:49:59.791 - INFO - + START SUITE: Sanity-Test [ ]
==============================================================================
20190402 10:49:59.792 - INFO - +- START SUITE: Sanity-Test.Sanity-OpenStack [ ]
==============================================================================
20190402 10:49:59.923 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.01-Instance-From-Image [ ]
==============================================================================
20190402 10:49:59.923 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190402 10:49:59.923 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 10:49:59.924 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 10:49:59.924 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 10:49:59.924 - INFO - ${controller_connection} = 1
20190402 10:49:59.924 - INFO - +------ END KW: SSHLibrary.Open Connection (0)
20190402 10:49:59.925 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 10:49:59.925 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 10:49:59.925 - INFO - Length is 10
20190402 10:49:59.925 - INFO - ${pwd_length} = 10
20190402 10:49:59.925 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190402 10:49:59.925 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 10:49:59.926 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 10:49:59.926 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 10:50:01.091 - INFO - Read output: Last login: Tue Apr  2 16:30:00 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 10:50:01.092 - INFO - /home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:39: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  m.add_string(self.Q_C.public_numbers().encode_point())
/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:96: CryptographyDeprecationWarning: Support for unsafe construction of public numbers from encoded data will be removed in a future version. Please use EllipticCurvePublicKey.from_encoded_point
  self.curve, Q_S_bytes
/home/mgperezi/duplex/stx-test-suite/Maria/lib/python2.7/site-packages/paramiko/kex_ecdh_nist.py:111: CryptographyDeprecationWarning: encode_point has been deprecated on EllipticCurvePublicNumbers and will be removed in a future version. Please use EllipticCurvePublicKey.public_bytes to obtain both compressed and uncompressed point encoding.
  hm.add_string(self.Q_C.public_numbers().encode_point())
20190402 10:50:01.092 - INFO - +-------- END KW: SSHLibrary.Login (1167)
20190402 10:50:01.092 - INFO - Returning from the enclosing user keyword.
20190402 10:50:01.092 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1167)
20190402 10:50:01.092 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1167)
20190402 10:50:01.092 - INFO - ${master_controller_connection} = 1
20190402 10:50:01.092 - INFO - +----- END KW: Utils.Connect to Controller Node (1168)
20190402 10:50:01.092 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 10:50:01.093 - INFO - ${master_controller_connection} = 1
20190402 10:50:01.093 - INFO - +----- END KW: BuiltIn.Set Suite Variable (1)
20190402 10:50:01.093 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 10:50:01.093 - INFO - 1
20190402 10:50:01.093 - INFO - +----- END KW: BuiltIn.Log (0)
20190402 10:50:01.093 - INFO - +---- END KW: Utils.Open Master Controller Connection (1170)
20190402 10:50:01.093 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 10:50:01.094 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 10:50:01.094 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 10:50:01.094 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 10:50:01.094 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 10:50:01.094 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 10:50:01.095 - INFO - &{result_dict} = { stdout= }
20190402 10:50:01.095 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:50:01.095 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 10:50:01.095 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 10:50:01.095 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 10:50:01.096 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 10:50:01.096 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 10:50:01.096 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 10:50:01.096 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 10:50:01.096 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 10:50:01.096 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 10:50:01.101 - INFO - source /etc/platform/openrc
20190402 10:50:01.101 - INFO - +------ END KW: SSHLibrary.Write (5)
20190402 10:50:01.102 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 10:50:01.584 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 10:50:01.584 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 10:50:01.584 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (482)
20190402 10:50:01.584 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 10:50:01.585 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 10:50:01.585 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 10:50:01.585 - INFO - +------- END KW: String.Get Line (0)
20190402 10:50:01.585 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 10:50:01.586 - INFO - ${clean_out} =
20190402 10:50:01.586 - INFO - +------- END KW: String.Remove String (1)
20190402 10:50:01.586 - INFO - ${output} =
20190402 10:50:01.586 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190402 10:50:01.586 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 10:50:01.586 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 10:50:01.588 - INFO - echo $?
20190402 10:50:01.588 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 10:50:01.588 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 10:50:01.588 - INFO - 0
20190402 10:50:01.589 - INFO - ${rc} = 0
20190402 10:50:01.589 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 10:50:01.589 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 10:50:01.589 - INFO - 0
20190402 10:50:01.589 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 10:50:01.589 - INFO - ${rc} = 0
20190402 10:50:01.589 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 10:50:01.590 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 10:50:01.590 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 10:50:01.591 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 10:50:01.591 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:50:01.591 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 10:50:01.591 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 10:50:01.591 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 10:50:01.591 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 10:50:01.592 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 10:50:01.592 - INFO - +----- END KW: Utils.Run Command (498)
20190402 10:50:01.592 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (499)
20190402 10:50:01.592 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1669)
------------------------------------------------------------------------------
20190402 10:50:01.592 - INFO - +--- START TEST: Create Flavors for Instances [ ]
------------------------------------------------------------------------------
20190402 10:50:01.593 - INFO - +---- START KW: BuiltIn.Catenate [ ${flavor_property_1} | ${flavor_property_2} ]
20190402 10:50:01.593 - INFO - ${properties} = --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190402 10:50:01.594 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:50:01.594 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190402 10:50:01.594 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 10:50:01.595 - INFO - ${openstack_cmd} = openstack flavor create
20190402 10:50:01.595 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 10:50:01.595 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 10:50:01.595 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190402 10:50:01.596 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 10:50:01.596 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 10:50:01.596 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:50:01.596 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:50:01.597 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:50:01.597 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:50:01.597 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190402 10:50:03.391 - INFO - Command exited with return code 0.
20190402 10:50:03.391 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 10:50:03.392 - INFO - ${stderr} =
20190402 10:50:03.392 - INFO - ${rc} = 0
20190402 10:50:03.392 - INFO - +------ END KW: SSHLibrary.Execute Command (1795)
20190402 10:50:03.392 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:50:03.393 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 10:50:03.394 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 10:50:03.394 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:50:03.395 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:50:03.395 - INFO - +----- END KW: OpenStack.Run OS Command (1799)
20190402 10:50:03.395 - INFO - +---- END KW: OpenStack.Create Flavor (1801)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:50:03.396 - INFO - +---- START KW: OpenStack.Create Flavor [ ${centos_flavor_ram} | ${centos_flavor_vcpus} | ${centos_flavor_disk} | ${properties} | ${centos_flavor_name} ]
20190402 10:50:03.397 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 10:50:03.397 - INFO - ${openstack_cmd} = openstack flavor create
20190402 10:50:03.397 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 10:50:03.398 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 10:50:03.398 - INFO - ${cmd} = openstack flavor create --ram 4096 --disk 40 --vcpus 2 --public --id auto f1.medium --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190402 10:50:03.399 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 10:50:03.399 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 10:50:03.400 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:50:03.401 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:50:03.401 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:50:03.401 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:50:03.402 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 4096 --disk 40 --vcpus 2 --public --id auto f1.medium --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared''.
20190402 10:50:04.834 - INFO - Command exited with return code 0.
20190402 10:50:04.834 - INFO - ${stdout} = +----------------------------+--------------------------------------------------------+
| Field                      | Value                                                  |
+-----------------------...
20190402 10:50:04.834 - INFO - ${stderr} =
20190402 10:50:04.834 - INFO - ${rc} = 0
20190402 10:50:04.835 - INFO - +------ END KW: SSHLibrary.Execute Command (1434)
20190402 10:50:04.835 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:50:04.836 - INFO - ${res} = {u'stdout': u"+----------------------------+--------------------------------------------------------+\n| Field                      | Value                                                  |\n+-------...
20190402 10:50:04.837 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 10:50:04.837 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:50:04.838 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:50:04.838 - INFO - +----- END KW: OpenStack.Run OS Command (1439)
20190402 10:50:04.838 - INFO - +---- END KW: OpenStack.Create Flavor (1442)
------------------------------------------------------------------------------
20190402 10:50:04.839 - INFO - +--- END TEST: Create Flavors for Instances (3247)
------------------------------------------------------------------------------
20190402 10:50:04.839 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190402 10:50:04.840 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190402 10:50:04.848 - INFO - [chan 3] Opened sftp connection (server version 3)
20190402 10:50:04.856 - INFO - [chan 4] Opened sftp connection (server version 3)
20190402 10:50:05.318 - INFO - '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2' -> '/home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2'
20190402 10:50:05.318 - INFO - +---- END KW: SSHLibrary.Put File (478)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:50:05.318 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${centos_image} | ${host_image_path}/${centos_image} ]
20190402 10:50:38.307 - INFO - '/home/mgperezi/duplex/stx-test-suite/CentOS-7-x86_64-GenericCloud.qcow2' -> '/home/wrsroot//CentOS-7-x86_64-GenericCloud.qcow2'
20190402 10:50:38.307 - INFO - +---- END KW: SSHLibrary.Put File (32989)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:50:38.307 - INFO - +---- START KW: OpenStack.Create Image [ ${host_image_path}/${cirros_image} | ${disk_format} | ${cirros_image_name} ]
20190402 10:50:38.308 - INFO - +----- START KW: SSHLibrary.File Should Exist [ ${file_path} ]
20190402 10:50:38.308 - INFO - +----- END KW: SSHLibrary.File Should Exist (1)
20190402 10:50:38.308 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack image create ]
20190402 10:50:38.308 - INFO - ${openstack_cmd} = openstack image create
20190402 10:50:38.308 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 10:50:38.308 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --file ${file_path} | --disk-format ${disk_format} | --public | ${name} ]
20190402 10:50:38.309 - INFO - ${cmd} = openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros
20190402 10:50:38.309 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 10:50:38.309 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 3 min ]
20190402 10:50:38.309 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:50:38.309 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:50:38.309 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:50:38.309 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:50:38.310 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros'.
20190402 10:50:43.451 - INFO - Command exited with return code 0.
20190402 10:50:43.452 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:50:43.452 - INFO - ${stderr} =
20190402 10:50:43.452 - INFO - ${rc} = 0
20190402 10:50:43.452 - INFO - +------ END KW: SSHLibrary.Execute Command (5143)
20190402 10:50:43.453 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:50:43.454 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:50:43.454 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:50:43.454 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:50:43.455 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:50:43.455 - INFO - +----- END KW: OpenStack.Run OS Command (5146)
20190402 10:50:43.455 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | image | ${name} | status | active ]
20190402 10:50:43.455 - INFO - +------ START KW: OpenStack.Check Field Value [ image | ${name} | status | active ]
20190402 10:50:43.456 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:50:43.456 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:50:43.456 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 10:50:43.456 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:50:43.456 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:50:43.457 - INFO - ${cmd} = openstack image show cirros|grep -w status|tail -1|awk '{print$4}'
20190402 10:50:43.457 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:50:43.457 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:50:43.457 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:50:43.457 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:50:43.457 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:50:43.457 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:50:43.458 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep -w status|tail -1|awk '{print$4}''.
20190402 10:50:44.790 - INFO - Command exited with return code 0.
20190402 10:50:44.790 - INFO - ${stdout} = active
20190402 10:50:44.791 - INFO - ${stderr} =
20190402 10:50:44.791 - INFO - ${rc} = 0
20190402 10:50:44.791 - INFO - +--------- END KW: SSHLibrary.Execute Command (1334)
20190402 10:50:44.791 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:50:44.791 - INFO - ${res} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 10:50:44.791 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:50:44.792 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:50:44.792 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:50:44.792 - INFO - ${result} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 10:50:44.792 - INFO - +-------- END KW: OpenStack.Run OS Command (1335)
20190402 10:50:44.792 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:50:44.792 - INFO - ${value} = active
20190402 10:50:44.792 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:50:44.793 - INFO - ${current_value} = active
20190402 10:50:44.793 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1337)
20190402 10:50:44.793 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:50:44.793 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:50:44.793 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:50:44.793 - INFO - +------ END KW: OpenStack.Check Field Value (1338)
20190402 10:50:44.793 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1338)
20190402 10:50:44.793 - INFO - +---- END KW: OpenStack.Create Image (6486)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:50:44.794 - INFO - +---- START KW: OpenStack.Create Image [ ${host_image_path}/${centos_image} | ${disk_format} | ${centos_image_name} ]
20190402 10:50:44.794 - INFO - +----- START KW: SSHLibrary.File Should Exist [ ${file_path} ]
20190402 10:50:44.801 - INFO - +----- END KW: SSHLibrary.File Should Exist (7)
20190402 10:50:44.801 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack image create ]
20190402 10:50:44.801 - INFO - ${openstack_cmd} = openstack image create
20190402 10:50:44.801 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 10:50:44.802 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --file ${file_path} | --disk-format ${disk_format} | --public | ${name} ]
20190402 10:50:44.802 - INFO - ${cmd} = openstack image create --file /home/wrsroot//CentOS-7-x86_64-GenericCloud.qcow2 --disk-format qcow2 --public centos
20190402 10:50:44.802 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 10:50:44.802 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 3 min ]
20190402 10:50:44.802 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:50:44.803 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:50:44.803 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:50:44.803 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:50:44.803 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image create --file /home/wrsroot//CentOS-7-x86_64-GenericCloud.qcow2 --disk-format qcow2 --public centos'.
20190402 10:50:58.518 - INFO - Command exited with return code 0.
20190402 10:50:58.518 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:50:58.518 - INFO - ${stderr} =
20190402 10:50:58.518 - INFO - ${rc} = 0
20190402 10:50:58.518 - INFO - +------ END KW: SSHLibrary.Execute Command (13715)
20190402 10:50:58.518 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:50:58.519 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:50:58.519 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:50:58.519 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:50:58.519 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:50:58.519 - INFO - +----- END KW: OpenStack.Run OS Command (13717)
20190402 10:50:58.519 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | image | ${name} | status | active ]
20190402 10:50:58.520 - INFO - +------ START KW: OpenStack.Check Field Value [ image | ${name} | status | active ]
20190402 10:50:58.520 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:50:58.520 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:50:58.521 - INFO - ${openstack_cmd} = openstack image show centos
20190402 10:50:58.521 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:50:58.521 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:50:58.521 - INFO - ${cmd} = openstack image show centos|grep -w status|tail -1|awk '{print$4}'
20190402 10:50:58.521 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:50:58.521 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:50:58.522 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:50:58.522 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:50:58.522 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:50:58.522 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:50:58.522 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show centos|grep -w status|tail -1|awk '{print$4}''.
20190402 10:51:00.412 - INFO - Command exited with return code 0.
20190402 10:51:00.412 - INFO - ${stdout} = active
20190402 10:51:00.412 - INFO - ${stderr} =
20190402 10:51:00.413 - INFO - ${rc} = 0
20190402 10:51:00.413 - INFO - +--------- END KW: SSHLibrary.Execute Command (1891)
20190402 10:51:00.413 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:00.414 - INFO - ${res} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 10:51:00.415 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:51:00.415 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:00.416 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:00.416 - INFO - ${result} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 10:51:00.416 - INFO - +-------- END KW: OpenStack.Run OS Command (1895)
20190402 10:51:00.417 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:00.417 - INFO - ${value} = active
20190402 10:51:00.417 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:51:00.418 - INFO - ${current_value} = active
20190402 10:51:00.419 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1898)
20190402 10:51:00.419 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:00.420 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:00.421 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 10:51:00.421 - INFO - +------ END KW: OpenStack.Check Field Value (1901)
20190402 10:51:00.421 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1902)
20190402 10:51:00.422 - INFO - +---- END KW: OpenStack.Create Image (15629)
------------------------------------------------------------------------------
20190402 10:51:00.423 - INFO - +--- END TEST: Create Images for Instances (55583)
------------------------------------------------------------------------------
20190402 10:51:00.423 - INFO - +--- START TEST: Create Networks for Instances [ ]
------------------------------------------------------------------------------
20190402 10:51:00.424 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190402 10:51:00.425 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190402 10:51:00.425 - INFO - ${openstack_cmd} = openstack network create
20190402 10:51:00.426 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 10:51:00.426 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190402 10:51:00.426 - INFO - ${cmd} = openstack network create network-1
20190402 10:51:00.427 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 10:51:00.427 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 10:51:00.428 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:00.428 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:00.428 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:51:00.429 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:00.429 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190402 10:51:01.965 - INFO - Command exited with return code 0.
20190402 10:51:01.966 - INFO - ${stdout} = +---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:51:01.966 - INFO - ${stderr} =
20190402 10:51:01.966 - INFO - ${rc} = 0
20190402 10:51:01.966 - INFO - +------ END KW: SSHLibrary.Execute Command (1537)
20190402 10:51:01.967 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:01.969 - INFO - ${res} = {u'stdout': u"+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:51:01.969 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 10:51:01.970 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:01.972 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:01.972 - INFO - +----- END KW: OpenStack.Run OS Command (1545)
20190402 10:51:01.973 - INFO - +---- END KW: OpenStack.Create Network (1549)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:51:01.973 - INFO - +---- START KW: OpenStack.Create Subnet [ ${network_name} | ${subnet_range} | ${subnet_extras} ]
20190402 10:51:01.974 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack subnet create ]
20190402 10:51:01.975 - INFO - ${openstack_cmd} = openstack subnet create
20190402 10:51:01.975 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 10:51:01.975 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --network ${network_name} | --subnet-range ${range_ip} ${additional_args} ]
20190402 10:51:01.976 - INFO - ${cmd} = openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1
20190402 10:51:01.976 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 10:51:01.976 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 10:51:01.977 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:01.978 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:01.978 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:51:01.978 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:01.979 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1'.
20190402 10:51:03.819 - INFO - Command exited with return code 0.
20190402 10:51:03.819 - INFO - ${stdout} = +-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:51:03.819 - INFO - ${stderr} =
20190402 10:51:03.819 - INFO - ${rc} = 0
20190402 10:51:03.820 - INFO - +------ END KW: SSHLibrary.Execute Command (1842)
20190402 10:51:03.820 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:03.821 - INFO - ${res} = {u'stdout': u"+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 10:51:03.821 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:03.822 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:03.822 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:51:03.823 - INFO - +----- END KW: OpenStack.Run OS Command (1847)
20190402 10:51:03.823 - INFO - +---- END KW: OpenStack.Create Subnet (1850)
------------------------------------------------------------------------------
20190402 10:51:03.824 - INFO - +--- END TEST: Create Networks for Instances (3400)
------------------------------------------------------------------------------
20190402 10:51:03.824 - INFO - +--- START TEST: Launch Instances [ ]
------------------------------------------------------------------------------
20190402 10:51:03.825 - INFO - +---- START KW: OpenStack.Create Instance [ ${network_name} | ${cirros_instance_name} | ${cirros_image_name} | ${cirros_flavor_name} ]
20190402 10:51:03.826 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190402 10:51:03.828 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 10:51:03.829 - INFO - ${openstack_cmd} = openstack network list
20190402 10:51:03.829 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:51:03.829 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 10:51:03.830 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 10:51:03.830 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 10:51:03.830 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:03.831 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:03.831 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:03.832 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:03.832 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:03.833 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 10:51:05.264 - INFO - Command exited with return code 0.
20190402 10:51:05.264 - INFO - ${stdout} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:05.264 - INFO - ${stderr} =
20190402 10:51:05.264 - INFO - ${rc} = 0
20190402 10:51:05.264 - INFO - +------- END KW: SSHLibrary.Execute Command (1432)
20190402 10:51:05.264 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:05.265 - INFO - ${res} = {u'stdout': u'e7dd2b18-db4f-4912-881c-3cf27dfbe7f2', u'stderr': u'', u'rc': 0}
20190402 10:51:05.265 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:05.265 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:05.265 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:51:05.266 - INFO - &{result} = { stdout=e7dd2b18-db4f-4912-881c-3cf27dfbe7f2 | stderr= | rc=0 }
20190402 10:51:05.266 - INFO - +------ END KW: OpenStack.Run OS Command (1436)
20190402 10:51:05.266 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:05.266 - INFO - ${output} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:05.266 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 10:51:05.266 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 10:51:05.267 - INFO - ${splitted_output} = [u'e7dd2b18-db4f-4912-881c-3cf27dfbe7f2']
20190402 10:51:05.267 - INFO - +------ END KW: String.Split String (1)
20190402 10:51:05.267 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 10:51:05.267 - INFO - ${net_id} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:05.267 - INFO - +------ END KW: Collections.Get From List (0)
20190402 10:51:05.267 - INFO - ${net_id} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:05.267 - INFO - +----- END KW: OpenStack.Get Net Id (1441)
20190402 10:51:05.267 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server create ]
20190402 10:51:05.267 - INFO - ${openstack_cmd} = openstack server create
20190402 10:51:05.267 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 10:51:05.268 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --image ${image} | --flavor ${flavor} | --nic net-id=${net_id} | ${vm_name} ]
20190402 10:51:05.268 - INFO - ${cmd} = openstack server create --image cirros --flavor f1.small --nic net-id=e7dd2b18-db4f-4912-881c-3cf27dfbe7f2 vm-cirros-1
20190402 10:51:05.268 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 10:51:05.268 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 10:51:05.268 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:05.268 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:05.269 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:51:05.269 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:05.269 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server create --image cirros --flavor f1.small --nic net-id=e7dd2b18-db4f-4912-881c-3cf27dfbe7f2 vm-cirros-1'.
20190402 10:51:07.882 - INFO - Command exited with return code 0.
20190402 10:51:07.883 - INFO - ${stdout} = +-------------------------------------+-------------------------------------------------+
| Field                               | Value                                           |
+-------------------...
20190402 10:51:07.883 - INFO - ${stderr} =
20190402 10:51:07.883 - INFO - ${rc} = 0
20190402 10:51:07.883 - INFO - +------ END KW: SSHLibrary.Execute Command (2614)
20190402 10:51:07.883 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:07.885 - INFO - ${res} = {u'stdout': u"+-------------------------------------+-------------------------------------------------+\n| Field                               | Value                                           |\n+---...
20190402 10:51:07.885 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 10:51:07.885 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:07.886 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:07.886 - INFO - +----- END KW: OpenStack.Run OS Command (2618)
20190402 10:51:07.886 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:51:07.887 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:51:07.888 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:07.889 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:07.889 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:51:07.889 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:07.890 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:07.890 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:51:07.890 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:51:07.891 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:07.892 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:07.892 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:07.893 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:07.893 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:07.894 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:51:25.721 - INFO - Command exited with return code 0.
20190402 10:51:25.721 - INFO - ${stdout} = BUILD
20190402 10:51:25.721 - INFO - ${stderr} =
20190402 10:51:25.721 - INFO - ${rc} = 0
20190402 10:51:25.722 - INFO - +--------- END KW: SSHLibrary.Execute Command (17829)
20190402 10:51:25.722 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:25.723 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 10:51:25.723 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:25.724 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:25.724 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:51:25.725 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 10:51:25.725 - INFO - +-------- END KW: OpenStack.Run OS Command (17834)
20190402 10:51:25.725 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:25.726 - INFO - ${value} = BUILD
20190402 10:51:25.726 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:51:25.726 - INFO - ${current_value} = BUILD
20190402 10:51:25.727 - INFO - +------- END KW: OpenStack.Retrieve Field Property (17838)
20190402 10:51:25.727 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:25.727 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:25.728 - FAIL - BUILD != ACTIVE
20190402 10:51:25.728 - DEBUG - Traceback (most recent call last):
  None
20190402 10:51:25.728 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:51:25.728 - INFO - +------ END KW: OpenStack.Check Field Value (17841)
20190402 10:51:35.729 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:51:35.729 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:35.730 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:35.731 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:51:35.731 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:35.731 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:35.731 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:51:35.731 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:51:35.732 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:35.732 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:35.733 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:35.733 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:35.733 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:35.733 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:51:37.525 - INFO - Command exited with return code 0.
20190402 10:51:37.525 - INFO - ${stdout} = ACTIVE
20190402 10:51:37.526 - INFO - ${stderr} =
20190402 10:51:37.526 - INFO - ${rc} = 0
20190402 10:51:37.526 - INFO - +--------- END KW: SSHLibrary.Execute Command (1793)
20190402 10:51:37.526 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:37.526 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:51:37.526 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:51:37.526 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:37.527 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:37.527 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:51:37.527 - INFO - +-------- END KW: OpenStack.Run OS Command (1795)
20190402 10:51:37.527 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:37.527 - INFO - ${value} = ACTIVE
20190402 10:51:37.527 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:51:37.527 - INFO - ${current_value} = ACTIVE
20190402 10:51:37.527 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1798)
20190402 10:51:37.528 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:37.528 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:37.528 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:51:37.528 - INFO - +------ END KW: OpenStack.Check Field Value (1799)
20190402 10:51:37.528 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (29642)
20190402 10:51:37.528 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | power_state | Running ]
20190402 10:51:37.528 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | power_state | Running ]
20190402 10:51:37.529 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:37.529 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:37.529 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:51:37.529 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:37.529 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:37.530 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w power_state|tail -1|awk '{print$4}'
20190402 10:51:37.530 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:51:37.530 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:37.530 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:37.531 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:37.531 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:37.531 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:37.531 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w power_state|tail -1|awk '{print$4}''.
20190402 10:51:39.162 - INFO - Command exited with return code 0.
20190402 10:51:39.162 - INFO - ${stdout} = Running
20190402 10:51:39.163 - INFO - ${stderr} =
20190402 10:51:39.163 - INFO - ${rc} = 0
20190402 10:51:39.163 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 10:51:39.163 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:39.165 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 10:51:39.165 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:51:39.165 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:39.166 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:39.167 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 10:51:39.167 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 10:51:39.168 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:39.169 - INFO - ${value} = Running
20190402 10:51:39.169 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:51:39.170 - INFO - ${current_value} = Running
20190402 10:51:39.170 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1641)
20190402 10:51:39.170 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:39.171 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:39.171 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:51:39.171 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 10:51:39.171 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1643)
20190402 10:51:39.172 - INFO - +---- END KW: OpenStack.Create Instance (35347)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:51:39.172 - INFO - +---- START KW: OpenStack.Create Instance [ ${network_name} | ${centos_instance_name} | ${centos_image_name} | ${centos_flavor_name} ]
20190402 10:51:39.173 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190402 10:51:39.174 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 10:51:39.174 - INFO - ${openstack_cmd} = openstack network list
20190402 10:51:39.174 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:51:39.175 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 10:51:39.175 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 10:51:39.175 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 10:51:39.176 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:39.177 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:39.177 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:39.177 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:39.177 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:39.178 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 10:51:40.610 - INFO - Command exited with return code 0.
20190402 10:51:40.610 - INFO - ${stdout} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:40.610 - INFO - ${stderr} =
20190402 10:51:40.610 - INFO - ${rc} = 0
20190402 10:51:40.610 - INFO - +------- END KW: SSHLibrary.Execute Command (1433)
20190402 10:51:40.611 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:40.611 - INFO - ${res} = {u'stdout': u'e7dd2b18-db4f-4912-881c-3cf27dfbe7f2', u'stderr': u'', u'rc': 0}
20190402 10:51:40.611 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:51:40.611 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:40.612 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:40.612 - INFO - &{result} = { stdout=e7dd2b18-db4f-4912-881c-3cf27dfbe7f2 | stderr= | rc=0 }
20190402 10:51:40.612 - INFO - +------ END KW: OpenStack.Run OS Command (1436)
20190402 10:51:40.612 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:40.613 - INFO - ${output} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:40.613 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 10:51:40.613 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 10:51:40.613 - INFO - ${splitted_output} = [u'e7dd2b18-db4f-4912-881c-3cf27dfbe7f2']
20190402 10:51:40.613 - INFO - +------ END KW: String.Split String (0)
20190402 10:51:40.614 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 10:51:40.614 - INFO - ${net_id} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:40.614 - INFO - +------ END KW: Collections.Get From List (1)
20190402 10:51:40.614 - INFO - ${net_id} = e7dd2b18-db4f-4912-881c-3cf27dfbe7f2
20190402 10:51:40.614 - INFO - +----- END KW: OpenStack.Get Net Id (1441)
20190402 10:51:40.614 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server create ]
20190402 10:51:40.615 - INFO - ${openstack_cmd} = openstack server create
20190402 10:51:40.615 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 10:51:40.615 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --image ${image} | --flavor ${flavor} | --nic net-id=${net_id} | ${vm_name} ]
20190402 10:51:40.615 - INFO - ${cmd} = openstack server create --image centos --flavor f1.medium --nic net-id=e7dd2b18-db4f-4912-881c-3cf27dfbe7f2 vm-centos-1
20190402 10:51:40.616 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 10:51:40.616 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 10:51:40.616 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:40.617 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:40.617 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:51:40.617 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:40.617 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server create --image centos --flavor f1.medium --nic net-id=e7dd2b18-db4f-4912-881c-3cf27dfbe7f2 vm-centos-1'.
20190402 10:51:42.851 - INFO - Command exited with return code 0.
20190402 10:51:42.852 - INFO - ${stdout} = +-------------------------------------+--------------------------------------------------+
| Field                               | Value                                            |
+-----------------...
20190402 10:51:42.852 - INFO - ${stderr} =
20190402 10:51:42.852 - INFO - ${rc} = 0
20190402 10:51:42.853 - INFO - +------ END KW: SSHLibrary.Execute Command (2235)
20190402 10:51:42.853 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:42.854 - INFO - ${res} = {u'stdout': u"+-------------------------------------+--------------------------------------------------+\n| Field                               | Value                                            |\n+-...
20190402 10:51:42.854 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:42.855 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:42.856 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:51:42.856 - INFO - +----- END KW: OpenStack.Run OS Command (2240)
20190402 10:51:42.856 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:51:42.857 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:51:42.858 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:42.859 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:42.860 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:51:42.860 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:42.860 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:42.861 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:51:42.861 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:51:42.861 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:42.862 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:42.863 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:42.863 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:42.863 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:42.864 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:51:44.613 - INFO - Command exited with return code 0.
20190402 10:51:44.613 - INFO - ${stdout} = BUILD
20190402 10:51:44.614 - INFO - ${stderr} =
20190402 10:51:44.614 - INFO - ${rc} = 0
20190402 10:51:44.614 - INFO - +--------- END KW: SSHLibrary.Execute Command (1751)
20190402 10:51:44.615 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:44.616 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 10:51:44.616 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:51:44.617 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:44.618 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:44.618 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 10:51:44.618 - INFO - +-------- END KW: OpenStack.Run OS Command (1757)
20190402 10:51:44.618 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:44.618 - INFO - ${value} = BUILD
20190402 10:51:44.618 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:51:44.619 - INFO - ${current_value} = BUILD
20190402 10:51:44.619 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1761)
20190402 10:51:44.619 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:44.619 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:44.619 - FAIL - BUILD != ACTIVE
20190402 10:51:44.619 - DEBUG - Traceback (most recent call last):
  None
20190402 10:51:44.619 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:51:44.619 - INFO - +------ END KW: OpenStack.Check Field Value (1762)
20190402 10:51:54.620 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:51:54.620 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:54.621 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:54.621 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:51:54.621 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:54.621 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:54.621 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:51:54.621 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:51:54.621 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:54.622 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:54.622 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:54.622 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:54.622 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:54.622 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:51:56.305 - INFO - Command exited with return code 0.
20190402 10:51:56.306 - INFO - ${stdout} = ACTIVE
20190402 10:51:56.306 - INFO - ${stderr} =
20190402 10:51:56.306 - INFO - ${rc} = 0
20190402 10:51:56.306 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 10:51:56.307 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:56.308 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:51:56.308 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:56.309 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:56.309 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:51:56.310 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:51:56.310 - INFO - +-------- END KW: OpenStack.Run OS Command (1689)
20190402 10:51:56.310 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:56.311 - INFO - ${value} = ACTIVE
20190402 10:51:56.311 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:51:56.311 - INFO - ${current_value} = ACTIVE
20190402 10:51:56.312 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1692)
20190402 10:51:56.312 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:56.312 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:56.313 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:51:56.313 - INFO - +------ END KW: OpenStack.Check Field Value (1693)
20190402 10:51:56.313 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13457)
20190402 10:51:56.313 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | power_state | Running ]
20190402 10:51:56.314 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | power_state | Running ]
20190402 10:51:56.315 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:56.316 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:56.317 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:51:56.317 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:51:56.317 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:56.318 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w power_state|tail -1|awk '{print$4}'
20190402 10:51:56.318 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:51:56.319 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:56.320 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:56.320 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:56.320 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:56.320 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:56.321 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w power_state|tail -1|awk '{print$4}''.
20190402 10:51:57.969 - INFO - Command exited with return code 0.
20190402 10:51:57.970 - INFO - ${stdout} = Running
20190402 10:51:57.970 - INFO - ${stderr} =
20190402 10:51:57.970 - INFO - ${rc} = 0
20190402 10:51:57.970 - INFO - +--------- END KW: SSHLibrary.Execute Command (1650)
20190402 10:51:57.971 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:57.972 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 10:51:57.972 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:57.972 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:57.973 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:51:57.973 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 10:51:57.973 - INFO - +-------- END KW: OpenStack.Run OS Command (1654)
20190402 10:51:57.974 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:51:57.974 - INFO - ${value} = Running
20190402 10:51:57.974 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:51:57.975 - INFO - ${current_value} = Running
20190402 10:51:57.975 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1660)
20190402 10:51:57.975 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:51:57.976 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:51:57.976 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:51:57.976 - INFO - +------ END KW: OpenStack.Check Field Value (1662)
20190402 10:51:57.976 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1663)
20190402 10:51:57.977 - INFO - +---- END KW: OpenStack.Create Instance (18805)
------------------------------------------------------------------------------
20190402 10:51:57.977 - INFO - +--- END TEST: Launch Instances (54153)
------------------------------------------------------------------------------
20190402 10:51:57.978 - INFO - +--- START TEST: Suspend Resume Instances [ ]
------------------------------------------------------------------------------
20190402 10:51:57.978 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name} ]
20190402 10:51:57.979 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190402 10:51:57.980 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:57.980 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:57.981 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:51:57.981 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:57.982 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-1'.
20190402 10:51:59.715 - INFO - Command exited with return code 0.
20190402 10:51:59.715 - INFO - ${stdout} =
20190402 10:51:59.715 - INFO - ${stderr} =
20190402 10:51:59.715 - INFO - ${rc} = 0
20190402 10:51:59.716 - INFO - +------ END KW: SSHLibrary.Execute Command (1735)
20190402 10:51:59.716 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:51:59.717 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:51:59.717 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:51:59.718 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:51:59.718 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:51:59.719 - INFO - +----- END KW: OpenStack.Run OS Command (1740)
20190402 10:51:59.719 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SUSPENDED ]
20190402 10:51:59.720 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 10:51:59.721 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:51:59.722 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:51:59.722 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:51:59.723 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:59.723 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:51:59.723 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:51:59.724 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:51:59.724 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:51:59.725 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:51:59.725 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:51:59.725 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:51:59.726 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:51:59.726 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:01.358 - INFO - Command exited with return code 0.
20190402 10:52:01.358 - INFO - ${stdout} = SUSPENDED
20190402 10:52:01.359 - INFO - ${stderr} =
20190402 10:52:01.359 - INFO - ${rc} = 0
20190402 10:52:01.359 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 10:52:01.359 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:01.360 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 10:52:01.360 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:01.360 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:01.360 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:01.360 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 10:52:01.360 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 10:52:01.361 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:01.361 - INFO - ${value} = SUSPENDED
20190402 10:52:01.361 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:01.361 - INFO - ${current_value} = SUSPENDED
20190402 10:52:01.361 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 10:52:01.361 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:01.362 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:01.362 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:52:01.362 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 10:52:01.362 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1643)
20190402 10:52:01.362 - INFO - +---- END KW: OpenStack.Suspend Instance (3384)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:01.362 - INFO - +---- START KW: OpenStack.Resume Instance [ ${cirros_instance_name} ]
20190402 10:52:01.363 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resume ${vm_name} | True | 30 sec ]
20190402 10:52:01.364 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:01.364 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:01.364 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:01.364 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:01.364 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resume vm-cirros-1'.
20190402 10:52:03.361 - INFO - Command exited with return code 0.
20190402 10:52:03.362 - INFO - ${stdout} =
20190402 10:52:03.362 - INFO - ${stderr} =
20190402 10:52:03.362 - INFO - ${rc} = 0
20190402 10:52:03.362 - INFO - +------ END KW: SSHLibrary.Execute Command (1998)
20190402 10:52:03.363 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:03.364 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:03.364 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:03.364 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:03.365 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:52:03.366 - INFO - +----- END KW: OpenStack.Run OS Command (2003)
20190402 10:52:03.366 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:52:03.367 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:52:03.368 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:03.369 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:03.370 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:52:03.370 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:03.370 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:03.371 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:03.371 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:52:03.371 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:03.372 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:03.373 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:03.373 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:03.373 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:03.374 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:05.123 - INFO - Command exited with return code 0.
20190402 10:52:05.123 - INFO - ${stdout} = ACTIVE
20190402 10:52:05.123 - INFO - ${stderr} =
20190402 10:52:05.123 - INFO - ${rc} = 0
20190402 10:52:05.124 - INFO - +--------- END KW: SSHLibrary.Execute Command (1750)
20190402 10:52:05.124 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:05.125 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:05.125 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:05.125 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:05.126 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:52:05.126 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:05.127 - INFO - +-------- END KW: OpenStack.Run OS Command (1756)
20190402 10:52:05.127 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:05.127 - INFO - ${value} = ACTIVE
20190402 10:52:05.128 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:05.128 - INFO - ${current_value} = ACTIVE
20190402 10:52:05.128 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1760)
20190402 10:52:05.128 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:05.129 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:05.129 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:52:05.129 - INFO - +------ END KW: OpenStack.Check Field Value (1762)
20190402 10:52:05.129 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1763)
20190402 10:52:05.130 - INFO - +---- END KW: OpenStack.Resume Instance (3768)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:05.130 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${centos_instance_name} ]
20190402 10:52:05.131 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190402 10:52:05.132 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:05.132 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:05.132 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:05.132 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:05.133 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-centos-1'.
20190402 10:52:06.817 - INFO - Command exited with return code 0.
20190402 10:52:06.817 - INFO - ${stdout} =
20190402 10:52:06.817 - INFO - ${stderr} =
20190402 10:52:06.817 - INFO - ${rc} = 0
20190402 10:52:06.817 - INFO - +------ END KW: SSHLibrary.Execute Command (1685)
20190402 10:52:06.817 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:06.818 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:06.818 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:06.818 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:06.818 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:06.818 - INFO - +----- END KW: OpenStack.Run OS Command (1687)
20190402 10:52:06.818 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SUSPENDED ]
20190402 10:52:06.818 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 10:52:06.819 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:06.819 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:06.820 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:06.820 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:06.820 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:06.820 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:06.820 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:52:06.820 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:06.820 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:06.821 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:06.821 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:06.821 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:06.821 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:08.483 - INFO - Command exited with return code 0.
20190402 10:52:08.483 - INFO - ${stdout} = ACTIVE
20190402 10:52:08.483 - INFO - ${stderr} =
20190402 10:52:08.484 - INFO - ${rc} = 0
20190402 10:52:08.484 - INFO - +--------- END KW: SSHLibrary.Execute Command (1663)
20190402 10:52:08.484 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:08.484 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:08.484 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:08.484 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:08.485 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:52:08.485 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:08.485 - INFO - +-------- END KW: OpenStack.Run OS Command (1665)
20190402 10:52:08.485 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:08.485 - INFO - ${value} = ACTIVE
20190402 10:52:08.485 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:08.486 - INFO - ${current_value} = ACTIVE
20190402 10:52:08.486 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1667)
20190402 10:52:08.486 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:08.486 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:08.486 - FAIL - ACTIVE != SUSPENDED
20190402 10:52:08.486 - DEBUG - Traceback (most recent call last):
  None
20190402 10:52:08.486 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:52:08.486 - INFO - +------ END KW: OpenStack.Check Field Value (1668)
20190402 10:52:18.487 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 10:52:18.488 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:18.489 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:18.490 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:18.490 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:18.490 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:18.491 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:18.491 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:52:18.491 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:18.492 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:18.493 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:18.493 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:18.493 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:18.494 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:20.127 - INFO - Command exited with return code 0.
20190402 10:52:20.127 - INFO - ${stdout} = SUSPENDED
20190402 10:52:20.127 - INFO - ${stderr} =
20190402 10:52:20.128 - INFO - ${rc} = 0
20190402 10:52:20.128 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 10:52:20.128 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:20.129 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 10:52:20.129 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:20.130 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:20.130 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:20.131 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 10:52:20.131 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 10:52:20.132 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:20.132 - INFO - ${value} = SUSPENDED
20190402 10:52:20.133 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:52:20.133 - INFO - ${current_value} = SUSPENDED
20190402 10:52:20.133 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 10:52:20.133 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:20.133 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:20.134 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:52:20.134 - INFO - +------ END KW: OpenStack.Check Field Value (1647)
20190402 10:52:20.134 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13316)
20190402 10:52:20.134 - INFO - +---- END KW: OpenStack.Suspend Instance (15004)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:20.134 - INFO - +---- START KW: OpenStack.Resume Instance [ ${centos_instance_name} ]
20190402 10:52:20.134 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resume ${vm_name} | True | 30 sec ]
20190402 10:52:20.135 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:20.135 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:20.135 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:20.135 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:20.135 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resume vm-centos-1'.
20190402 10:52:21.868 - INFO - Command exited with return code 0.
20190402 10:52:21.869 - INFO - ${stdout} =
20190402 10:52:21.869 - INFO - ${stderr} =
20190402 10:52:21.869 - INFO - ${rc} = 0
20190402 10:52:21.869 - INFO - +------ END KW: SSHLibrary.Execute Command (1734)
20190402 10:52:21.869 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:21.871 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:21.871 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 10:52:21.871 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:21.872 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:52:21.873 - INFO - +----- END KW: OpenStack.Run OS Command (1738)
20190402 10:52:21.873 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:52:21.873 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:52:21.874 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:21.875 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:21.876 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:21.876 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:21.876 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:21.877 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:21.877 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:52:21.877 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:21.878 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:21.878 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:21.878 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:21.879 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:21.879 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:23.614 - INFO - Command exited with return code 0.
20190402 10:52:23.615 - INFO - ${stdout} = SUSPENDED
20190402 10:52:23.615 - INFO - ${stderr} =
20190402 10:52:23.615 - INFO - ${rc} = 0
20190402 10:52:23.615 - INFO - +--------- END KW: SSHLibrary.Execute Command (1736)
20190402 10:52:23.615 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:23.615 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 10:52:23.616 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:23.616 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:23.616 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:23.616 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 10:52:23.616 - INFO - +-------- END KW: OpenStack.Run OS Command (1739)
20190402 10:52:23.616 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:23.616 - INFO - ${value} = SUSPENDED
20190402 10:52:23.616 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:23.617 - INFO - ${current_value} = SUSPENDED
20190402 10:52:23.617 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1743)
20190402 10:52:23.617 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:23.617 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:23.617 - FAIL - SUSPENDED != ACTIVE
20190402 10:52:23.617 - DEBUG - Traceback (most recent call last):
  None
20190402 10:52:23.617 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:52:23.617 - INFO - +------ END KW: OpenStack.Check Field Value (1744)
20190402 10:52:33.618 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:52:33.618 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:33.619 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:33.619 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:33.619 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:33.619 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:33.619 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:33.619 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:52:33.619 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:33.620 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:33.620 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:33.620 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:33.620 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:33.620 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:35.353 - INFO - Command exited with return code 0.
20190402 10:52:35.353 - INFO - ${stdout} = ACTIVE
20190402 10:52:35.353 - INFO - ${stderr} =
20190402 10:52:35.353 - INFO - ${rc} = 0
20190402 10:52:35.354 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 10:52:35.354 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:35.354 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:35.354 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:35.354 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:35.355 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:52:35.355 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:35.355 - INFO - +-------- END KW: OpenStack.Run OS Command (1736)
20190402 10:52:35.355 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:35.355 - INFO - ${value} = ACTIVE
20190402 10:52:35.355 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:35.356 - INFO - ${current_value} = ACTIVE
20190402 10:52:35.356 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1738)
20190402 10:52:35.356 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:35.356 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:35.356 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:52:35.356 - INFO - +------ END KW: OpenStack.Check Field Value (1738)
20190402 10:52:35.356 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13483)
20190402 10:52:35.356 - INFO - +---- END KW: OpenStack.Resume Instance (15222)
------------------------------------------------------------------------------
20190402 10:52:35.357 - INFO - +--- END TEST: Suspend Resume Instances (37379)
------------------------------------------------------------------------------
20190402 10:52:35.357 - INFO - +--- START TEST: Set Error Active Flags Instances [ ]
------------------------------------------------------------------------------
20190402 10:52:35.357 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name} | error ]
20190402 10:52:35.357 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 10:52:35.358 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:35.358 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:35.358 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:35.358 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:35.358 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-1'.
20190402 10:52:37.105 - INFO - Command exited with return code 0.
20190402 10:52:37.105 - INFO - ${stdout} =
20190402 10:52:37.105 - INFO - ${stderr} =
20190402 10:52:37.105 - INFO - ${rc} = 0
20190402 10:52:37.105 - INFO - +------ END KW: SSHLibrary.Execute Command (1747)
20190402 10:52:37.105 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:37.106 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:37.106 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:37.106 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:37.106 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:37.106 - INFO - +----- END KW: OpenStack.Run OS Command (1749)
20190402 10:52:37.107 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ERROR ]
20190402 10:52:37.107 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ERROR ]
20190402 10:52:37.107 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:37.108 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:37.108 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:52:37.108 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:37.108 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:37.108 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:37.108 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:52:37.108 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:37.109 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:37.109 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:37.109 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:37.109 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:37.109 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:38.843 - INFO - Command exited with return code 0.
20190402 10:52:38.843 - INFO - ${stdout} = ERROR
20190402 10:52:38.843 - INFO - ${stderr} =
20190402 10:52:38.844 - INFO - ${rc} = 0
20190402 10:52:38.844 - INFO - +--------- END KW: SSHLibrary.Execute Command (1735)
20190402 10:52:38.844 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:38.846 - INFO - ${res} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 10:52:38.846 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:52:38.846 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:38.848 - INFO - +--------- END KW: BuiltIn.Run Keyword If (2)
20190402 10:52:38.848 - INFO - ${result} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 10:52:38.849 - INFO - +-------- END KW: OpenStack.Run OS Command (1740)
20190402 10:52:38.849 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:38.850 - INFO - ${value} = ERROR
20190402 10:52:38.850 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:52:38.851 - INFO - ${current_value} = ERROR
20190402 10:52:38.851 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1744)
20190402 10:52:38.851 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:38.852 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:38.852 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:52:38.853 - INFO - +------ END KW: OpenStack.Check Field Value (1745)
20190402 10:52:38.853 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1746)
20190402 10:52:38.853 - INFO - +---- END KW: OpenStack.Set Error State Instance (3496)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:38.853 - INFO - +---- START KW: OpenStack.Set Active State Instance [ ${cirros_instance_name} | active ]
20190402 10:52:38.854 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 10:52:38.855 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:38.856 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:38.856 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:52:38.856 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:38.857 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state active vm-cirros-1'.
20190402 10:52:40.589 - INFO - Command exited with return code 0.
20190402 10:52:40.589 - INFO - ${stdout} =
20190402 10:52:40.589 - INFO - ${stderr} =
20190402 10:52:40.589 - INFO - ${rc} = 0
20190402 10:52:40.590 - INFO - +------ END KW: SSHLibrary.Execute Command (1733)
20190402 10:52:40.590 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:40.591 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:40.591 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:40.591 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:40.591 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:40.591 - INFO - +----- END KW: OpenStack.Run OS Command (1737)
20190402 10:52:40.592 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:52:40.592 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:52:40.592 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:40.593 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:40.593 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:52:40.593 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:40.593 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:40.594 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:40.594 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:52:40.594 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:40.594 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:40.594 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:40.595 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:40.595 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:40.595 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:42.434 - INFO - Command exited with return code 0.
20190402 10:52:42.434 - INFO - ${stdout} = ACTIVE
20190402 10:52:42.434 - INFO - ${stderr} =
20190402 10:52:42.434 - INFO - ${rc} = 0
20190402 10:52:42.434 - INFO - +--------- END KW: SSHLibrary.Execute Command (1839)
20190402 10:52:42.435 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:42.435 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:42.435 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:42.435 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:42.436 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:52:42.436 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:42.436 - INFO - +-------- END KW: OpenStack.Run OS Command (1842)
20190402 10:52:42.436 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:42.436 - INFO - ${value} = ACTIVE
20190402 10:52:42.436 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:42.437 - INFO - ${current_value} = ACTIVE
20190402 10:52:42.437 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1845)
20190402 10:52:42.437 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:42.437 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:42.437 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:52:42.437 - INFO - +------ END KW: OpenStack.Check Field Value (1845)
20190402 10:52:42.437 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1845)
20190402 10:52:42.437 - INFO - +---- END KW: OpenStack.Set Active State Instance (3584)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:42.438 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${centos_instance_name} | error ]
20190402 10:52:42.438 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 10:52:42.438 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:42.439 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:42.439 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:52:42.439 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:42.439 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-centos-1'.
20190402 10:52:44.372 - INFO - Command exited with return code 0.
20190402 10:52:44.373 - INFO - ${stdout} =
20190402 10:52:44.373 - INFO - ${stderr} =
20190402 10:52:44.373 - INFO - ${rc} = 0
20190402 10:52:44.373 - INFO - +------ END KW: SSHLibrary.Execute Command (1934)
20190402 10:52:44.373 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:44.374 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:44.374 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:44.374 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:44.374 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:44.374 - INFO - +----- END KW: OpenStack.Run OS Command (1936)
20190402 10:52:44.374 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ERROR ]
20190402 10:52:44.375 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ERROR ]
20190402 10:52:44.375 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:44.375 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:44.376 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:44.376 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:44.376 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:44.376 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:44.376 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:52:44.376 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:44.377 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:44.377 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:44.377 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:44.377 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:44.377 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:46.458 - INFO - Command exited with return code 0.
20190402 10:52:46.458 - INFO - ${stdout} = ERROR
20190402 10:52:46.458 - INFO - ${stderr} =
20190402 10:52:46.458 - INFO - ${rc} = 0
20190402 10:52:46.458 - INFO - +--------- END KW: SSHLibrary.Execute Command (2081)
20190402 10:52:46.459 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:46.459 - INFO - ${res} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 10:52:46.459 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:46.459 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:46.459 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:46.460 - INFO - ${result} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 10:52:46.460 - INFO - +-------- END KW: OpenStack.Run OS Command (2084)
20190402 10:52:46.460 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:46.460 - INFO - ${value} = ERROR
20190402 10:52:46.460 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:46.460 - INFO - ${current_value} = ERROR
20190402 10:52:46.460 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2085)
20190402 10:52:46.460 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:46.461 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:46.461 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:52:46.461 - INFO - +------ END KW: OpenStack.Check Field Value (2086)
20190402 10:52:46.461 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (2087)
20190402 10:52:46.461 - INFO - +---- END KW: OpenStack.Set Error State Instance (4023)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:46.461 - INFO - +---- START KW: OpenStack.Set Active State Instance [ ${centos_instance_name} | active ]
20190402 10:52:46.462 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 10:52:46.462 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:46.463 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:46.463 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:52:46.463 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:46.463 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state active vm-centos-1'.
20190402 10:52:48.143 - INFO - Command exited with return code 0.
20190402 10:52:48.143 - INFO - ${stdout} =
20190402 10:52:48.143 - INFO - ${stderr} =
20190402 10:52:48.143 - INFO - ${rc} = 0
20190402 10:52:48.143 - INFO - +------ END KW: SSHLibrary.Execute Command (1680)
20190402 10:52:48.143 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:48.144 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:48.144 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:48.144 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:48.144 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:48.145 - INFO - +----- END KW: OpenStack.Run OS Command (1683)
20190402 10:52:48.145 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:52:48.145 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:52:48.145 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:48.146 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:48.146 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:48.146 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:48.146 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:48.147 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:48.147 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:52:48.147 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:48.147 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:48.147 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:48.147 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:48.147 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:48.148 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:49.778 - INFO - Command exited with return code 0.
20190402 10:52:49.778 - INFO - ${stdout} = ACTIVE
20190402 10:52:49.779 - INFO - ${stderr} =
20190402 10:52:49.779 - INFO - ${rc} = 0
20190402 10:52:49.779 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 10:52:49.779 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:49.779 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:49.779 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:49.780 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:49.780 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:49.780 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:52:49.780 - INFO - +-------- END KW: OpenStack.Run OS Command (1633)
20190402 10:52:49.780 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:49.780 - INFO - ${value} = ACTIVE
20190402 10:52:49.780 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:49.781 - INFO - ${current_value} = ACTIVE
20190402 10:52:49.781 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 10:52:49.781 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:49.781 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:49.781 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:52:49.781 - INFO - +------ END KW: OpenStack.Check Field Value (1636)
20190402 10:52:49.781 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1636)
20190402 10:52:49.781 - INFO - +---- END KW: OpenStack.Set Active State Instance (3320)
------------------------------------------------------------------------------
20190402 10:52:49.781 - INFO - +--- END TEST: Set Error Active Flags Instances (14424)
------------------------------------------------------------------------------
20190402 10:52:49.782 - INFO - +--- START TEST: Pause Unpause Instances [ ]
------------------------------------------------------------------------------
20190402 10:52:49.782 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name} ]
20190402 10:52:49.782 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190402 10:52:49.783 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:49.783 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:49.783 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:49.783 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:49.783 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-1'.
20190402 10:52:51.513 - INFO - Command exited with return code 0.
20190402 10:52:51.514 - INFO - ${stdout} =
20190402 10:52:51.514 - INFO - ${stderr} =
20190402 10:52:51.514 - INFO - ${rc} = 0
20190402 10:52:51.514 - INFO - +------ END KW: SSHLibrary.Execute Command (1731)
20190402 10:52:51.514 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:51.514 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:51.515 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:51.515 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:51.515 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:51.515 - INFO - +----- END KW: OpenStack.Run OS Command (1733)
20190402 10:52:51.515 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | PAUSED ]
20190402 10:52:51.515 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | PAUSED ]
20190402 10:52:51.516 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:51.516 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:51.516 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:52:51.516 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:51.516 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:51.517 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:51.517 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:52:51.517 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:51.517 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:51.517 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:51.517 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:51.518 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:51.518 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:53.179 - INFO - Command exited with return code 0.
20190402 10:52:53.179 - INFO - ${stdout} = PAUSED
20190402 10:52:53.179 - INFO - ${stderr} =
20190402 10:52:53.179 - INFO - ${rc} = 0
20190402 10:52:53.179 - INFO - +--------- END KW: SSHLibrary.Execute Command (1662)
20190402 10:52:53.179 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:53.180 - INFO - ${res} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 10:52:53.180 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:53.180 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:53.180 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:53.180 - INFO - ${result} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 10:52:53.180 - INFO - +-------- END KW: OpenStack.Run OS Command (1663)
20190402 10:52:53.180 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:53.180 - INFO - ${value} = PAUSED
20190402 10:52:53.181 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:52:53.181 - INFO - ${current_value} = PAUSED
20190402 10:52:53.181 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1665)
20190402 10:52:53.181 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:53.181 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:53.181 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:52:53.181 - INFO - +------ END KW: OpenStack.Check Field Value (1666)
20190402 10:52:53.181 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1666)
20190402 10:52:53.181 - INFO - +---- END KW: OpenStack.Pause Instance (3399)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:53.182 - INFO - +---- START KW: OpenStack.Pause Instance [ ${centos_instance_name} ]
20190402 10:52:53.182 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190402 10:52:53.182 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:53.182 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:53.182 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:53.182 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:53.183 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-centos-1'.
20190402 10:52:55.063 - INFO - Command exited with return code 0.
20190402 10:52:55.063 - INFO - ${stdout} =
20190402 10:52:55.063 - INFO - ${stderr} =
20190402 10:52:55.064 - INFO - ${rc} = 0
20190402 10:52:55.064 - INFO - +------ END KW: SSHLibrary.Execute Command (1882)
20190402 10:52:55.064 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:55.065 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:55.065 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:55.065 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:55.065 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:55.066 - INFO - +----- END KW: OpenStack.Run OS Command (1883)
20190402 10:52:55.066 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | PAUSED ]
20190402 10:52:55.066 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | PAUSED ]
20190402 10:52:55.067 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:55.068 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:55.068 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:52:55.068 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:55.069 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:55.069 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:55.069 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:52:55.069 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:55.070 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:55.070 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:55.070 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:55.070 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:55.071 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:52:56.707 - INFO - Command exited with return code 0.
20190402 10:52:56.707 - INFO - ${stdout} = PAUSED
20190402 10:52:56.707 - INFO - ${stderr} =
20190402 10:52:56.707 - INFO - ${rc} = 0
20190402 10:52:56.707 - INFO - +--------- END KW: SSHLibrary.Execute Command (1637)
20190402 10:52:56.708 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:56.708 - INFO - ${res} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 10:52:56.708 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:52:56.709 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:56.709 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:56.709 - INFO - ${result} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 10:52:56.709 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 10:52:56.710 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:52:56.710 - INFO - ${value} = PAUSED
20190402 10:52:56.710 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:52:56.710 - INFO - ${current_value} = PAUSED
20190402 10:52:56.710 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 10:52:56.710 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:52:56.711 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:52:56.711 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:52:56.711 - INFO - +------ END KW: OpenStack.Check Field Value (1645)
20190402 10:52:56.711 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1645)
20190402 10:52:56.712 - INFO - +---- END KW: OpenStack.Pause Instance (3530)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:52:56.712 - INFO - +---- START KW: OpenStack.Unpause Instance [ ${cirros_instance_name} ]
20190402 10:52:56.712 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unpause ${vm_name} | True | 30 sec ]
20190402 10:52:56.713 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:56.713 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:56.713 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:52:56.713 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:56.714 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unpause vm-cirros-1'.
20190402 10:52:58.458 - INFO - Command exited with return code 0.
20190402 10:52:58.458 - INFO - ${stdout} =
20190402 10:52:58.458 - INFO - ${stderr} =
20190402 10:52:58.459 - INFO - ${rc} = 0
20190402 10:52:58.459 - INFO - +------ END KW: SSHLibrary.Execute Command (1746)
20190402 10:52:58.459 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:52:58.460 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:52:58.460 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:52:58.460 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:52:58.460 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:52:58.460 - INFO - +----- END KW: OpenStack.Run OS Command (1748)
20190402 10:52:58.461 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:52:58.461 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:52:58.462 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:52:58.462 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:52:58.462 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:52:58.463 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:52:58.463 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:52:58.463 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:52:58.463 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:52:58.463 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:52:58.464 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:52:58.464 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:52:58.464 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:52:58.464 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:52:58.465 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:00.100 - INFO - Command exited with return code 0.
20190402 10:53:00.100 - INFO - ${stdout} = ACTIVE
20190402 10:53:00.100 - INFO - ${stderr} =
20190402 10:53:00.100 - INFO - ${rc} = 0
20190402 10:53:00.101 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 10:53:00.101 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:00.102 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:00.102 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:53:00.102 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:00.102 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:53:00.103 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:00.103 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 10:53:00.103 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:00.103 - INFO - ${value} = ACTIVE
20190402 10:53:00.103 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:53:00.104 - INFO - ${current_value} = ACTIVE
20190402 10:53:00.104 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1642)
20190402 10:53:00.104 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:00.104 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:00.104 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:53:00.105 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 10:53:00.105 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1644)
20190402 10:53:00.105 - INFO - +---- END KW: OpenStack.Unpause Instance (3393)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:53:00.105 - INFO - +---- START KW: OpenStack.Unpause Instance [ ${centos_instance_name} ]
20190402 10:53:00.106 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unpause ${vm_name} | True | 30 sec ]
20190402 10:53:00.106 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:00.106 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:00.106 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:53:00.107 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:00.107 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unpause vm-centos-1'.
20190402 10:53:01.837 - INFO - Command exited with return code 0.
20190402 10:53:01.838 - INFO - ${stdout} =
20190402 10:53:01.838 - INFO - ${stderr} =
20190402 10:53:01.838 - INFO - ${rc} = 0
20190402 10:53:01.838 - INFO - +------ END KW: SSHLibrary.Execute Command (1731)
20190402 10:53:01.838 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:01.838 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:53:01.838 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:53:01.839 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:01.839 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:53:01.839 - INFO - +----- END KW: OpenStack.Run OS Command (1733)
20190402 10:53:01.839 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:53:01.840 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:53:01.840 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:53:01.840 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:53:01.840 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:53:01.841 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:53:01.841 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:53:01.841 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:53:01.841 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:53:01.841 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:53:01.842 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:01.842 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:01.842 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:53:01.842 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:01.842 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:03.423 - INFO - Command exited with return code 0.
20190402 10:53:03.423 - INFO - ${stdout} = ACTIVE
20190402 10:53:03.423 - INFO - ${stderr} =
20190402 10:53:03.423 - INFO - ${rc} = 0
20190402 10:53:03.423 - INFO - +--------- END KW: SSHLibrary.Execute Command (1581)
20190402 10:53:03.423 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:03.424 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:03.424 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:53:03.424 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:03.424 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:53:03.424 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:03.424 - INFO - +-------- END KW: OpenStack.Run OS Command (1583)
20190402 10:53:03.424 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:03.425 - INFO - ${value} = ACTIVE
20190402 10:53:03.425 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:53:03.425 - INFO - ${current_value} = ACTIVE
20190402 10:53:03.425 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1585)
20190402 10:53:03.425 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:03.425 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:03.425 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:53:03.426 - INFO - +------ END KW: OpenStack.Check Field Value (1585)
20190402 10:53:03.426 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1587)
20190402 10:53:03.426 - INFO - +---- END KW: OpenStack.Unpause Instance (3321)
------------------------------------------------------------------------------
20190402 10:53:03.426 - INFO - +--- END TEST: Pause Unpause Instances (13644)
------------------------------------------------------------------------------
20190402 10:53:03.426 - INFO - +--- START TEST: Stop Start Instances [ ]
------------------------------------------------------------------------------
20190402 10:53:03.427 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name} ]
20190402 10:53:03.427 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190402 10:53:03.427 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:03.427 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:03.428 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:53:03.428 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:03.428 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-1'.
20190402 10:53:05.166 - INFO - Command exited with return code 0.
20190402 10:53:05.166 - INFO - ${stdout} =
20190402 10:53:05.166 - INFO - ${stderr} =
20190402 10:53:05.166 - INFO - ${rc} = 0
20190402 10:53:05.166 - INFO - +------ END KW: SSHLibrary.Execute Command (1738)
20190402 10:53:05.166 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:05.167 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:53:05.167 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:53:05.167 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:05.167 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:53:05.168 - INFO - +----- END KW: OpenStack.Run OS Command (1741)
20190402 10:53:05.168 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SHUTOFF ]
20190402 10:53:05.168 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:53:05.168 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:53:05.169 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:53:05.169 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:53:05.169 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:53:05.169 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:53:05.169 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:53:05.169 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:53:05.169 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:53:05.170 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:05.170 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:05.170 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:53:05.170 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:05.170 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:06.801 - INFO - Command exited with return code 0.
20190402 10:53:06.801 - INFO - ${stdout} = ACTIVE
20190402 10:53:06.801 - INFO - ${stderr} =
20190402 10:53:06.801 - INFO - ${rc} = 0
20190402 10:53:06.801 - INFO - +--------- END KW: SSHLibrary.Execute Command (1631)
20190402 10:53:06.802 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:06.802 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:06.802 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:53:06.802 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:06.803 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:53:06.803 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:06.803 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 10:53:06.803 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:06.803 - INFO - ${value} = ACTIVE
20190402 10:53:06.804 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:53:06.804 - INFO - ${current_value} = ACTIVE
20190402 10:53:06.804 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 10:53:06.804 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:06.804 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:06.805 - FAIL - ACTIVE != SHUTOFF
20190402 10:53:06.805 - DEBUG - Traceback (most recent call last):
  None
20190402 10:53:06.805 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:53:06.805 - INFO - +------ END KW: OpenStack.Check Field Value (1637)
20190402 10:53:16.805 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:53:16.806 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:53:16.806 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:53:16.806 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:53:16.806 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:53:16.807 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:53:16.807 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:53:16.807 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:53:16.807 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:53:16.807 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:16.808 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:16.808 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:53:16.808 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:16.808 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:18.439 - INFO - Command exited with return code 0.
20190402 10:53:18.439 - INFO - ${stdout} = ACTIVE
20190402 10:53:18.439 - INFO - ${stderr} =
20190402 10:53:18.439 - INFO - ${rc} = 0
20190402 10:53:18.439 - INFO - +--------- END KW: SSHLibrary.Execute Command (1631)
20190402 10:53:18.439 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:18.440 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:18.440 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:53:18.440 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:18.440 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:53:18.441 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:18.441 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 10:53:18.441 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:18.441 - INFO - ${value} = ACTIVE
20190402 10:53:18.441 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:53:18.441 - INFO - ${current_value} = ACTIVE
20190402 10:53:18.441 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1635)
20190402 10:53:18.441 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:18.442 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:18.442 - FAIL - ACTIVE != SHUTOFF
20190402 10:53:18.442 - DEBUG - Traceback (most recent call last):
  None
20190402 10:53:18.442 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:53:18.442 - INFO - +------ END KW: OpenStack.Check Field Value (1637)
20190402 10:53:28.442 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:53:28.443 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:53:28.444 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:53:28.444 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:53:28.444 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:53:28.444 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:53:28.445 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:53:28.445 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:53:28.445 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:53:28.445 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:28.446 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:28.446 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:53:28.446 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:28.447 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:30.078 - INFO - Command exited with return code 0.
20190402 10:53:30.078 - INFO - ${stdout} = ACTIVE
20190402 10:53:30.078 - INFO - ${stderr} =
20190402 10:53:30.078 - INFO - ${rc} = 0
20190402 10:53:30.079 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 10:53:30.079 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:30.079 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:30.079 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:53:30.079 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:30.080 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:53:30.080 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:30.080 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 10:53:30.080 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:30.080 - INFO - ${value} = ACTIVE
20190402 10:53:30.080 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:53:30.080 - INFO - ${current_value} = ACTIVE
20190402 10:53:30.080 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 10:53:30.080 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:30.081 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:30.081 - FAIL - ACTIVE != SHUTOFF
20190402 10:53:30.081 - DEBUG - Traceback (most recent call last):
  None
20190402 10:53:30.081 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:53:30.081 - INFO - +------ END KW: OpenStack.Check Field Value (1639)
20190402 10:53:40.081 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:53:40.082 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:53:40.082 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:53:40.082 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:53:40.082 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:53:40.083 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:53:40.083 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:53:40.083 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:53:40.083 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:53:40.083 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:40.083 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:40.084 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:53:40.084 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:40.084 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:41.664 - INFO - Command exited with return code 0.
20190402 10:53:41.665 - INFO - ${stdout} = ACTIVE
20190402 10:53:41.665 - INFO - ${stderr} =
20190402 10:53:41.665 - INFO - ${rc} = 0
20190402 10:53:41.665 - INFO - +--------- END KW: SSHLibrary.Execute Command (1581)
20190402 10:53:41.665 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:41.665 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:41.665 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:53:41.666 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:41.666 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:53:41.666 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:41.666 - INFO - +-------- END KW: OpenStack.Run OS Command (1583)
20190402 10:53:41.666 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:41.666 - INFO - ${value} = ACTIVE
20190402 10:53:41.666 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:53:41.667 - INFO - ${current_value} = ACTIVE
20190402 10:53:41.667 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1585)
20190402 10:53:41.667 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:41.667 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:41.667 - FAIL - ACTIVE != SHUTOFF
20190402 10:53:41.667 - DEBUG - Traceback (most recent call last):
  None
20190402 10:53:41.667 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:53:41.667 - INFO - +------ END KW: OpenStack.Check Field Value (1586)
20190402 10:53:51.668 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:53:51.669 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:53:51.670 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:53:51.671 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:53:51.671 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:53:51.671 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:53:51.672 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:53:51.672 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:53:51.672 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:53:51.673 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:53:51.674 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:53:51.674 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:53:51.674 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:53:51.675 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:53:53.308 - INFO - Command exited with return code 0.
20190402 10:53:53.308 - INFO - ${stdout} = ACTIVE
20190402 10:53:53.308 - INFO - ${stderr} =
20190402 10:53:53.308 - INFO - ${rc} = 0
20190402 10:53:53.309 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 10:53:53.309 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:53:53.310 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:53.310 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:53:53.310 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:53:53.311 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:53:53.311 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:53:53.311 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 10:53:53.311 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:53:53.311 - INFO - ${value} = ACTIVE
20190402 10:53:53.312 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:53:53.312 - INFO - ${current_value} = ACTIVE
20190402 10:53:53.312 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 10:53:53.312 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:53:53.313 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:53:53.313 - FAIL - ACTIVE != SHUTOFF
20190402 10:53:53.313 - DEBUG - Traceback (most recent call last):
  None
20190402 10:53:53.313 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:53:53.313 - INFO - +------ END KW: OpenStack.Check Field Value (1645)
20190402 10:54:03.314 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:54:03.314 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:03.314 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:03.315 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:54:03.315 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:03.315 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:03.315 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:03.315 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:54:03.315 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:03.316 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:03.316 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:03.316 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:03.316 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:03.316 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:04.948 - INFO - Command exited with return code 0.
20190402 10:54:04.948 - INFO - ${stdout} = ACTIVE
20190402 10:54:04.948 - INFO - ${stderr} =
20190402 10:54:04.949 - INFO - ${rc} = 0
20190402 10:54:04.949 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 10:54:04.949 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:04.949 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:54:04.949 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:54:04.950 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:04.950 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:04.950 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:54:04.950 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 10:54:04.950 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:04.951 - INFO - ${value} = ACTIVE
20190402 10:54:04.951 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:54:04.951 - INFO - ${current_value} = ACTIVE
20190402 10:54:04.951 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 10:54:04.951 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:04.951 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:04.952 - FAIL - ACTIVE != SHUTOFF
20190402 10:54:04.952 - DEBUG - Traceback (most recent call last):
  None
20190402 10:54:04.952 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:54:04.952 - INFO - +------ END KW: OpenStack.Check Field Value (1638)
20190402 10:54:14.952 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:54:14.953 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:14.953 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:14.954 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:54:14.954 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:14.954 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:14.955 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:14.955 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:54:14.955 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:14.956 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:14.956 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:14.956 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:14.956 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:14.957 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:16.589 - INFO - Command exited with return code 0.
20190402 10:54:16.590 - INFO - ${stdout} = SHUTOFF
20190402 10:54:16.590 - INFO - ${stderr} =
20190402 10:54:16.590 - INFO - ${rc} = 0
20190402 10:54:16.590 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 10:54:16.590 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:16.590 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 10:54:16.591 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:16.591 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:16.591 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:16.591 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 10:54:16.591 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 10:54:16.591 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:16.592 - INFO - ${value} = SHUTOFF
20190402 10:54:16.592 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:54:16.592 - INFO - ${current_value} = SHUTOFF
20190402 10:54:16.592 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 10:54:16.592 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:16.592 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:16.593 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:54:16.593 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 10:54:16.593 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71425)
20190402 10:54:16.593 - INFO - +---- END KW: OpenStack.Stop Instance (73166)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:54:16.593 - INFO - +---- START KW: OpenStack.Stop Instance [ ${centos_instance_name} ]
20190402 10:54:16.593 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190402 10:54:16.594 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:16.594 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:16.594 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:54:16.594 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:16.594 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-centos-1'.
20190402 10:54:18.477 - INFO - Command exited with return code 0.
20190402 10:54:18.478 - INFO - ${stdout} =
20190402 10:54:18.478 - INFO - ${stderr} =
20190402 10:54:18.478 - INFO - ${rc} = 0
20190402 10:54:18.478 - INFO - +------ END KW: SSHLibrary.Execute Command (1884)
20190402 10:54:18.479 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:18.480 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:18.480 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:18.480 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:18.481 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:54:18.481 - INFO - +----- END KW: OpenStack.Run OS Command (1888)
20190402 10:54:18.481 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SHUTOFF ]
20190402 10:54:18.482 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 10:54:18.483 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:18.484 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:18.484 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:54:18.484 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:18.485 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:18.485 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:18.485 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:54:18.486 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:18.486 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:18.487 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:18.487 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:18.487 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:18.488 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:20.123 - INFO - Command exited with return code 0.
20190402 10:54:20.124 - INFO - ${stdout} = SHUTOFF
20190402 10:54:20.124 - INFO - ${stderr} =
20190402 10:54:20.124 - INFO - ${rc} = 0
20190402 10:54:20.124 - INFO - +--------- END KW: SSHLibrary.Execute Command (1637)
20190402 10:54:20.124 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:20.125 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 10:54:20.126 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:54:20.126 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:20.127 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:54:20.127 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 10:54:20.127 - INFO - +-------- END KW: OpenStack.Run OS Command (1642)
20190402 10:54:20.128 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:20.128 - INFO - ${value} = SHUTOFF
20190402 10:54:20.128 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:54:20.129 - INFO - ${current_value} = SHUTOFF
20190402 10:54:20.129 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1646)
20190402 10:54:20.129 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:20.130 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:20.130 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:54:20.130 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 10:54:20.130 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1649)
20190402 10:54:20.131 - INFO - +---- END KW: OpenStack.Stop Instance (3537)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:54:20.131 - INFO - +---- START KW: OpenStack.Start Instance [ ${cirros_instance_name} ]
20190402 10:54:20.132 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server start ${vm_name} | True | 30 sec ]
20190402 10:54:20.132 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:20.133 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:20.133 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:54:20.133 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:20.134 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server start vm-cirros-1'.
20190402 10:54:21.917 - INFO - Command exited with return code 0.
20190402 10:54:21.917 - INFO - ${stdout} =
20190402 10:54:21.917 - INFO - ${stderr} =
20190402 10:54:21.917 - INFO - ${rc} = 0
20190402 10:54:21.917 - INFO - +------ END KW: SSHLibrary.Execute Command (1784)
20190402 10:54:21.917 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:21.918 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:21.918 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:21.918 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:21.919 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:54:21.919 - INFO - +----- END KW: OpenStack.Run OS Command (1788)
20190402 10:54:21.919 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:54:21.920 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:54:21.920 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:21.921 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:21.921 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:54:21.921 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:21.921 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:21.921 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:21.922 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:54:21.922 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:21.922 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:21.923 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:21.923 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:21.923 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:21.923 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:23.554 - INFO - Command exited with return code 0.
20190402 10:54:23.555 - INFO - ${stdout} = SHUTOFF
20190402 10:54:23.555 - INFO - ${stderr} =
20190402 10:54:23.555 - INFO - ${rc} = 0
20190402 10:54:23.555 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 10:54:23.556 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:23.557 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 10:54:23.557 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:23.557 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:23.558 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:54:23.559 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 10:54:23.559 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 10:54:23.559 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:23.560 - INFO - ${value} = SHUTOFF
20190402 10:54:23.560 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:54:23.560 - INFO - ${current_value} = SHUTOFF
20190402 10:54:23.561 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 10:54:23.561 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:23.561 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:23.562 - FAIL - SHUTOFF != ACTIVE
20190402 10:54:23.562 - DEBUG - Traceback (most recent call last):
  None
20190402 10:54:23.562 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:54:23.562 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 10:54:33.563 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:54:33.563 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:33.563 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:33.564 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:54:33.564 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:33.564 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:33.564 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:33.564 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:54:33.564 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:33.565 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:33.565 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:33.565 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:33.565 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:33.565 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:35.300 - INFO - Command exited with return code 0.
20190402 10:54:35.300 - INFO - ${stdout} = ACTIVE
20190402 10:54:35.300 - INFO - ${stderr} =
20190402 10:54:35.300 - INFO - ${rc} = 0
20190402 10:54:35.300 - INFO - +--------- END KW: SSHLibrary.Execute Command (1735)
20190402 10:54:35.301 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:35.301 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:54:35.302 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:35.302 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:35.302 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:35.302 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:54:35.302 - INFO - +-------- END KW: OpenStack.Run OS Command (1738)
20190402 10:54:35.303 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:35.303 - INFO - ${value} = ACTIVE
20190402 10:54:35.303 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:54:35.303 - INFO - ${current_value} = ACTIVE
20190402 10:54:35.303 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1740)
20190402 10:54:35.303 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:35.304 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:35.304 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:54:35.304 - INFO - +------ END KW: OpenStack.Check Field Value (1741)
20190402 10:54:35.304 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13385)
20190402 10:54:35.304 - INFO - +---- END KW: OpenStack.Start Instance (15173)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:54:35.304 - INFO - +---- START KW: OpenStack.Start Instance [ ${centos_instance_name} ]
20190402 10:54:35.305 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server start ${vm_name} | True | 30 sec ]
20190402 10:54:35.305 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:35.305 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:35.305 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:54:35.306 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:35.306 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server start vm-centos-1'.
20190402 10:54:37.101 - INFO - Command exited with return code 0.
20190402 10:54:37.102 - INFO - ${stdout} =
20190402 10:54:37.102 - INFO - ${stderr} =
20190402 10:54:37.102 - INFO - ${rc} = 0
20190402 10:54:37.102 - INFO - +------ END KW: SSHLibrary.Execute Command (1796)
20190402 10:54:37.102 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:37.103 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:37.103 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:37.103 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:37.103 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:37.103 - INFO - +----- END KW: OpenStack.Run OS Command (1798)
20190402 10:54:37.103 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:54:37.104 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:54:37.104 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:37.104 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:37.105 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:54:37.105 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:37.105 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:37.105 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:37.105 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:54:37.105 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:37.106 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:37.106 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:37.106 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:37.106 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:37.107 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:38.838 - INFO - Command exited with return code 0.
20190402 10:54:38.838 - INFO - ${stdout} = ACTIVE
20190402 10:54:38.838 - INFO - ${stderr} =
20190402 10:54:38.838 - INFO - ${rc} = 0
20190402 10:54:38.838 - INFO - +--------- END KW: SSHLibrary.Execute Command (1732)
20190402 10:54:38.838 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:38.839 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:54:38.839 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:38.839 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:38.840 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:38.840 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:54:38.840 - INFO - +-------- END KW: OpenStack.Run OS Command (1735)
20190402 10:54:38.840 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:38.840 - INFO - ${value} = ACTIVE
20190402 10:54:38.840 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:54:38.840 - INFO - ${current_value} = ACTIVE
20190402 10:54:38.840 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1736)
20190402 10:54:38.841 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:38.841 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:38.841 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:54:38.841 - INFO - +------ END KW: OpenStack.Check Field Value (1737)
20190402 10:54:38.841 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1738)
20190402 10:54:38.841 - INFO - +---- END KW: OpenStack.Start Instance (3537)
------------------------------------------------------------------------------
20190402 10:54:38.841 - INFO - +--- END TEST: Stop Start Instances (95415)
------------------------------------------------------------------------------
20190402 10:54:38.842 - INFO - +--- START TEST: Lock Unlock Instances [ ]
------------------------------------------------------------------------------
20190402 10:54:38.842 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name} ]
20190402 10:54:38.842 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190402 10:54:38.843 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:38.843 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:38.843 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:54:38.843 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:38.843 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-1'.
20190402 10:54:41.010 - INFO - Command exited with return code 0.
20190402 10:54:41.010 - INFO - ${stdout} =
20190402 10:54:41.010 - INFO - ${stderr} =
20190402 10:54:41.010 - INFO - ${rc} = 0
20190402 10:54:41.011 - INFO - +------ END KW: SSHLibrary.Execute Command (2167)
20190402 10:54:41.011 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:41.011 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:41.011 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:54:41.012 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:41.012 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:41.012 - INFO - +----- END KW: OpenStack.Run OS Command (2170)
20190402 10:54:41.012 - INFO - +---- END KW: OpenStack.Lock Instance (2170)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:54:41.012 - INFO - +---- START KW: OpenStack.Lock Instance [ ${centos_instance_name} ]
20190402 10:54:41.012 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190402 10:54:41.013 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:41.013 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:41.013 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:54:41.013 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:41.013 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-centos-1'.
20190402 10:54:42.896 - INFO - Command exited with return code 0.
20190402 10:54:42.896 - INFO - ${stdout} =
20190402 10:54:42.896 - INFO - ${stderr} =
20190402 10:54:42.896 - INFO - ${rc} = 0
20190402 10:54:42.896 - INFO - +------ END KW: SSHLibrary.Execute Command (1883)
20190402 10:54:42.897 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:42.897 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:42.897 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:54:42.897 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:42.897 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:42.898 - INFO - +----- END KW: OpenStack.Run OS Command (1886)
20190402 10:54:42.898 - INFO - +---- END KW: OpenStack.Lock Instance (1886)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:54:42.898 - INFO - +---- START KW: OpenStack.Unlock Instance [ ${cirros_instance_name} ]
20190402 10:54:42.898 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unlock ${vm_name} | True | 30 sec ]
20190402 10:54:42.898 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:42.899 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:42.899 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:54:42.899 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:42.899 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unlock vm-cirros-1'.
20190402 10:54:44.782 - INFO - Command exited with return code 0.
20190402 10:54:44.782 - INFO - ${stdout} =
20190402 10:54:44.782 - INFO - ${stderr} =
20190402 10:54:44.782 - INFO - ${rc} = 0
20190402 10:54:44.782 - INFO - +------ END KW: SSHLibrary.Execute Command (1883)
20190402 10:54:44.783 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:44.783 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:44.783 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:54:44.783 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:44.784 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:54:44.784 - INFO - +----- END KW: OpenStack.Run OS Command (1886)
20190402 10:54:44.784 - INFO - +---- END KW: OpenStack.Unlock Instance (1886)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:54:44.784 - INFO - +---- START KW: OpenStack.Unlock Instance [ ${centos_instance_name} ]
20190402 10:54:44.784 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unlock ${vm_name} | True | 30 sec ]
20190402 10:54:44.785 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:44.785 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:44.785 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:54:44.785 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:44.785 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unlock vm-centos-1'.
20190402 10:54:46.467 - INFO - Command exited with return code 0.
20190402 10:54:46.467 - INFO - ${stdout} =
20190402 10:54:46.467 - INFO - ${stderr} =
20190402 10:54:46.468 - INFO - ${rc} = 0
20190402 10:54:46.468 - INFO - +------ END KW: SSHLibrary.Execute Command (1683)
20190402 10:54:46.468 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:46.469 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:46.469 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:46.470 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:46.470 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:46.471 - INFO - +----- END KW: OpenStack.Run OS Command (1687)
20190402 10:54:46.471 - INFO - +---- END KW: OpenStack.Unlock Instance (1687)
------------------------------------------------------------------------------
20190402 10:54:46.472 - INFO - +--- END TEST: Lock Unlock Instances (7629)
------------------------------------------------------------------------------
20190402 10:54:46.473 - INFO - +--- START TEST: Reboot Instances [ ]
------------------------------------------------------------------------------
20190402 10:54:46.473 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name} ]
20190402 10:54:46.474 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190402 10:54:46.475 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:46.476 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:46.476 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:54:46.476 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:46.477 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-1'.
20190402 10:54:48.193 - INFO - Command exited with return code 0.
20190402 10:54:48.194 - INFO - ${stdout} =
20190402 10:54:48.194 - INFO - ${stderr} =
20190402 10:54:48.194 - INFO - ${rc} = 0
20190402 10:54:48.194 - INFO - +------ END KW: SSHLibrary.Execute Command (1718)
20190402 10:54:48.194 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:48.195 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:54:48.195 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:48.195 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:48.195 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:48.196 - INFO - +----- END KW: OpenStack.Run OS Command (1722)
20190402 10:54:48.196 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBOOT ]
20190402 10:54:48.196 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBOOT ]
20190402 10:54:48.197 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:48.197 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:48.197 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:54:48.198 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:48.198 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:48.198 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:48.198 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:54:48.198 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:48.199 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:48.199 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:48.199 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:54:48.199 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:48.199 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:50.083 - INFO - Command exited with return code 0.
20190402 10:54:50.083 - INFO - ${stdout} = REBOOT
20190402 10:54:50.083 - INFO - ${stderr} =
20190402 10:54:50.083 - INFO - ${rc} = 0
20190402 10:54:50.083 - INFO - +--------- END KW: SSHLibrary.Execute Command (1884)
20190402 10:54:50.083 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:50.084 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:54:50.084 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:50.084 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:50.084 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:54:50.084 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:54:50.084 - INFO - +-------- END KW: OpenStack.Run OS Command (1886)
20190402 10:54:50.084 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:50.085 - INFO - ${value} = REBOOT
20190402 10:54:50.085 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:54:50.085 - INFO - ${current_value} = REBOOT
20190402 10:54:50.085 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1888)
20190402 10:54:50.085 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:50.085 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:50.085 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:54:50.085 - INFO - +------ END KW: OpenStack.Check Field Value (1889)
20190402 10:54:50.085 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1889)
20190402 10:54:50.085 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:54:50.086 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:54:50.086 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:54:50.086 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:54:50.087 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:54:50.087 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:50.087 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:54:50.087 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:54:50.087 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:54:50.087 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:54:50.087 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:54:50.088 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:54:50.088 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:54:50.088 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:54:50.088 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:54:51.718 - INFO - Command exited with return code 0.
20190402 10:54:51.719 - INFO - ${stdout} = REBOOT
20190402 10:54:51.719 - INFO - ${stderr} =
20190402 10:54:51.719 - INFO - ${rc} = 0
20190402 10:54:51.719 - INFO - +--------- END KW: SSHLibrary.Execute Command (1631)
20190402 10:54:51.719 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:54:51.720 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:54:51.720 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:54:51.720 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:54:51.721 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:54:51.721 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:54:51.721 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 10:54:51.721 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:54:51.721 - INFO - ${value} = REBOOT
20190402 10:54:51.722 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:54:51.722 - INFO - ${current_value} = REBOOT
20190402 10:54:51.722 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 10:54:51.722 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:54:51.722 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:54:51.723 - FAIL - REBOOT != ACTIVE
20190402 10:54:51.723 - DEBUG - Traceback (most recent call last):
  None
20190402 10:54:51.723 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:54:51.723 - INFO - +------ END KW: OpenStack.Check Field Value (1637)
20190402 10:55:01.724 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:55:01.725 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:55:01.726 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:55:01.726 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:55:01.727 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:01.727 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:55:01.727 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:55:01.727 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:55:01.728 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:55:01.728 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:55:01.729 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:55:01.729 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:55:01.729 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:55:01.729 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:55:03.320 - INFO - Command exited with return code 0.
20190402 10:55:03.320 - INFO - ${stdout} = REBOOT
20190402 10:55:03.320 - INFO - ${stderr} =
20190402 10:55:03.320 - INFO - ${rc} = 0
20190402 10:55:03.321 - INFO - +--------- END KW: SSHLibrary.Execute Command (1591)
20190402 10:55:03.321 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:55:03.321 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:03.322 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:55:03.322 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:55:03.322 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:55:03.322 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:03.322 - INFO - +-------- END KW: OpenStack.Run OS Command (1595)
20190402 10:55:03.323 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:55:03.323 - INFO - ${value} = REBOOT
20190402 10:55:03.323 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:55:03.323 - INFO - ${current_value} = REBOOT
20190402 10:55:03.323 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1598)
20190402 10:55:03.324 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:55:03.324 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:55:03.324 - FAIL - REBOOT != ACTIVE
20190402 10:55:03.324 - DEBUG - Traceback (most recent call last):
  None
20190402 10:55:03.324 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:55:03.324 - INFO - +------ END KW: OpenStack.Check Field Value (1601)
20190402 10:55:13.325 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:55:13.325 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:55:13.326 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:55:13.326 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:55:13.326 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:13.326 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:55:13.326 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:55:13.326 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:55:13.327 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:55:13.327 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:55:13.327 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:55:13.327 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:13.327 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:55:13.328 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:55:15.010 - INFO - Command exited with return code 0.
20190402 10:55:15.010 - INFO - ${stdout} = REBOOT
20190402 10:55:15.010 - INFO - ${stderr} =
20190402 10:55:15.010 - INFO - ${rc} = 0
20190402 10:55:15.010 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 10:55:15.011 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:55:15.011 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:15.011 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:55:15.011 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:55:15.011 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:55:15.012 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:15.012 - INFO - +-------- END KW: OpenStack.Run OS Command (1685)
20190402 10:55:15.012 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:55:15.012 - INFO - ${value} = REBOOT
20190402 10:55:15.012 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:55:15.012 - INFO - ${current_value} = REBOOT
20190402 10:55:15.012 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1687)
20190402 10:55:15.012 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:55:15.012 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:55:15.013 - FAIL - REBOOT != ACTIVE
20190402 10:55:15.013 - DEBUG - Traceback (most recent call last):
  None
20190402 10:55:15.013 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:55:15.013 - INFO - +------ END KW: OpenStack.Check Field Value (1688)
20190402 10:55:25.014 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:55:25.015 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:55:25.015 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:55:25.016 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:55:25.016 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:55:25.016 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:55:25.017 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:55:25.017 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:55:25.017 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:55:25.018 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:55:25.019 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:55:25.019 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:55:25.019 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:55:25.020 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:55:26.602 - INFO - Command exited with return code 0.
20190402 10:55:26.602 - INFO - ${stdout} = REBOOT
20190402 10:55:26.603 - INFO - ${stderr} =
20190402 10:55:26.603 - INFO - ${rc} = 0
20190402 10:55:26.603 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 10:55:26.603 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:55:26.604 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:26.605 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:55:26.605 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:55:26.606 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:55:26.606 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:26.606 - INFO - +-------- END KW: OpenStack.Run OS Command (1589)
20190402 10:55:26.607 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:55:26.607 - INFO - ${value} = REBOOT
20190402 10:55:26.607 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:55:26.608 - INFO - ${current_value} = REBOOT
20190402 10:55:26.608 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1593)
20190402 10:55:26.608 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:55:26.609 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:55:26.609 - FAIL - REBOOT != ACTIVE
20190402 10:55:26.609 - DEBUG - Traceback (most recent call last):
  None
20190402 10:55:26.609 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:55:26.609 - INFO - +------ END KW: OpenStack.Check Field Value (1595)
20190402 10:55:36.610 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:55:36.611 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:55:36.612 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:55:36.612 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:55:36.613 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:55:36.613 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:55:36.614 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:55:36.614 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:55:36.614 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:55:36.615 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:55:36.615 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:55:36.615 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:36.616 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:55:36.616 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:55:38.248 - INFO - Command exited with return code 0.
20190402 10:55:38.249 - INFO - ${stdout} = REBOOT
20190402 10:55:38.249 - INFO - ${stderr} =
20190402 10:55:38.249 - INFO - ${rc} = 0
20190402 10:55:38.249 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 10:55:38.250 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:55:38.251 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:38.251 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:55:38.251 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:55:38.252 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:55:38.252 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:38.252 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 10:55:38.253 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:55:38.253 - INFO - ${value} = REBOOT
20190402 10:55:38.253 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:55:38.254 - INFO - ${current_value} = REBOOT
20190402 10:55:38.254 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 10:55:38.254 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:55:38.255 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:55:38.255 - FAIL - REBOOT != ACTIVE
20190402 10:55:38.256 - DEBUG - Traceback (most recent call last):
  None
20190402 10:55:38.256 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 10:55:38.256 - INFO - +------ END KW: OpenStack.Check Field Value (1646)
20190402 10:55:48.256 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:55:48.257 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:55:48.258 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:55:48.258 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:55:48.258 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:48.258 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:55:48.259 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:55:48.259 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:55:48.259 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:55:48.259 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:55:48.259 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:55:48.259 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:48.259 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:55:48.260 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:55:49.891 - INFO - Command exited with return code 0.
20190402 10:55:49.891 - INFO - ${stdout} = REBOOT
20190402 10:55:49.891 - INFO - ${stderr} =
20190402 10:55:49.891 - INFO - ${rc} = 0
20190402 10:55:49.891 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 10:55:49.891 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:55:49.892 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:49.892 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:55:49.892 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:55:49.892 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:55:49.892 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:55:49.892 - INFO - +-------- END KW: OpenStack.Run OS Command (1633)
20190402 10:55:49.893 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:55:49.893 - INFO - ${value} = REBOOT
20190402 10:55:49.893 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:55:49.893 - INFO - ${current_value} = REBOOT
20190402 10:55:49.893 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 10:55:49.893 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:55:49.893 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:55:49.893 - FAIL - REBOOT != ACTIVE
20190402 10:55:49.893 - DEBUG - Traceback (most recent call last):
  None
20190402 10:55:49.893 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:55:49.894 - INFO - +------ END KW: OpenStack.Check Field Value (1638)
20190402 10:55:59.894 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:55:59.894 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:55:59.895 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:55:59.895 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:55:59.895 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:59.895 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:55:59.895 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:55:59.896 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:55:59.896 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:55:59.896 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:55:59.896 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:55:59.896 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:55:59.896 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:55:59.897 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:56:01.628 - INFO - Command exited with return code 0.
20190402 10:56:01.628 - INFO - ${stdout} = REBOOT
20190402 10:56:01.628 - INFO - ${stderr} =
20190402 10:56:01.628 - INFO - ${rc} = 0
20190402 10:56:01.628 - INFO - +--------- END KW: SSHLibrary.Execute Command (1732)
20190402 10:56:01.628 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:56:01.629 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:01.629 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:56:01.629 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:56:01.629 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:56:01.629 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:01.629 - INFO - +-------- END KW: OpenStack.Run OS Command (1733)
20190402 10:56:01.629 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:56:01.630 - INFO - ${value} = REBOOT
20190402 10:56:01.630 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:56:01.630 - INFO - ${current_value} = REBOOT
20190402 10:56:01.630 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1736)
20190402 10:56:01.630 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:56:01.630 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:56:01.630 - FAIL - REBOOT != ACTIVE
20190402 10:56:01.630 - DEBUG - Traceback (most recent call last):
  None
20190402 10:56:01.630 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:56:01.631 - INFO - +------ END KW: OpenStack.Check Field Value (1737)
20190402 10:56:11.631 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:56:11.632 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:56:11.633 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:56:11.633 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:56:11.633 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:56:11.634 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:56:11.635 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:56:11.635 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:56:11.635 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:56:11.636 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:56:11.637 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:56:11.637 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:56:11.637 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:56:11.638 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:56:13.271 - INFO - Command exited with return code 0.
20190402 10:56:13.271 - INFO - ${stdout} = REBOOT
20190402 10:56:13.272 - INFO - ${stderr} =
20190402 10:56:13.272 - INFO - ${rc} = 0
20190402 10:56:13.272 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 10:56:13.272 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:56:13.274 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:13.274 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:56:13.274 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:56:13.274 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:56:13.274 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:13.274 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 10:56:13.275 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:56:13.275 - INFO - ${value} = REBOOT
20190402 10:56:13.275 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:56:13.275 - INFO - ${current_value} = REBOOT
20190402 10:56:13.275 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 10:56:13.275 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:56:13.275 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:56:13.275 - FAIL - REBOOT != ACTIVE
20190402 10:56:13.276 - DEBUG - Traceback (most recent call last):
  None
20190402 10:56:13.276 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:56:13.276 - INFO - +------ END KW: OpenStack.Check Field Value (1645)
20190402 10:56:23.276 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:56:23.277 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:56:23.277 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:56:23.277 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:56:23.277 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:56:23.278 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:56:23.278 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:56:23.278 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:56:23.278 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:56:23.278 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:56:23.278 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:56:23.279 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:56:23.279 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:56:23.279 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:56:24.961 - INFO - Command exited with return code 0.
20190402 10:56:24.962 - INFO - ${stdout} = REBOOT
20190402 10:56:24.962 - INFO - ${stderr} =
20190402 10:56:24.962 - INFO - ${rc} = 0
20190402 10:56:24.962 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 10:56:24.962 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:56:24.962 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:24.962 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:56:24.963 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:56:24.963 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:56:24.963 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:24.963 - INFO - +-------- END KW: OpenStack.Run OS Command (1685)
20190402 10:56:24.963 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:56:24.963 - INFO - ${value} = REBOOT
20190402 10:56:24.963 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:56:24.964 - INFO - ${current_value} = REBOOT
20190402 10:56:24.964 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1687)
20190402 10:56:24.964 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:56:24.964 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:56:24.964 - FAIL - REBOOT != ACTIVE
20190402 10:56:24.964 - DEBUG - Traceback (most recent call last):
  None
20190402 10:56:24.964 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:56:24.964 - INFO - +------ END KW: OpenStack.Check Field Value (1688)
20190402 10:56:34.965 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:56:34.965 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:56:34.965 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:56:34.966 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:56:34.966 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:56:34.966 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:56:34.966 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:56:34.966 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:56:34.966 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:56:34.967 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:56:34.968 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:56:34.968 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:56:34.968 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:56:34.968 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:56:36.649 - INFO - Command exited with return code 0.
20190402 10:56:36.649 - INFO - ${stdout} = REBOOT
20190402 10:56:36.649 - INFO - ${stderr} =
20190402 10:56:36.649 - INFO - ${rc} = 0
20190402 10:56:36.650 - INFO - +--------- END KW: SSHLibrary.Execute Command (1682)
20190402 10:56:36.650 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:56:36.650 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:36.650 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:56:36.650 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:56:36.651 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:56:36.651 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:36.651 - INFO - +-------- END KW: OpenStack.Run OS Command (1685)
20190402 10:56:36.651 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:56:36.651 - INFO - ${value} = REBOOT
20190402 10:56:36.651 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:56:36.651 - INFO - ${current_value} = REBOOT
20190402 10:56:36.651 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1686)
20190402 10:56:36.652 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:56:36.652 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:56:36.652 - FAIL - REBOOT != ACTIVE
20190402 10:56:36.652 - DEBUG - Traceback (most recent call last):
  None
20190402 10:56:36.652 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:56:36.652 - INFO - +------ END KW: OpenStack.Check Field Value (1688)
20190402 10:56:46.653 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:56:46.653 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:56:46.654 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:56:46.654 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:56:46.654 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:56:46.654 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:56:46.655 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:56:46.655 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:56:46.655 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:56:46.655 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:56:46.655 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:56:46.655 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:56:46.655 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:56:46.656 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:56:48.287 - INFO - Command exited with return code 0.
20190402 10:56:48.288 - INFO - ${stdout} = REBOOT
20190402 10:56:48.288 - INFO - ${stderr} =
20190402 10:56:48.288 - INFO - ${rc} = 0
20190402 10:56:48.288 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 10:56:48.288 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:56:48.289 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:48.289 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:56:48.289 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:56:48.289 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:56:48.289 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:56:48.289 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 10:56:48.289 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:56:48.290 - INFO - ${value} = REBOOT
20190402 10:56:48.290 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:56:48.290 - INFO - ${current_value} = REBOOT
20190402 10:56:48.290 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 10:56:48.290 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:56:48.290 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:56:48.291 - FAIL - REBOOT != ACTIVE
20190402 10:56:48.291 - DEBUG - Traceback (most recent call last):
  None
20190402 10:56:48.291 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:56:48.291 - INFO - +------ END KW: OpenStack.Check Field Value (1638)
20190402 10:56:58.291 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:56:58.292 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:56:58.293 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:56:58.294 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:56:58.294 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:56:58.295 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:56:58.295 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:56:58.295 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:56:58.296 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:56:58.297 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:56:58.297 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:56:58.297 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:56:58.297 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:56:58.298 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:00.080 - INFO - Command exited with return code 0.
20190402 10:57:00.080 - INFO - ${stdout} = ACTIVE
20190402 10:57:00.080 - INFO - ${stderr} =
20190402 10:57:00.080 - INFO - ${rc} = 0
20190402 10:57:00.080 - INFO - +--------- END KW: SSHLibrary.Execute Command (1783)
20190402 10:57:00.080 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:00.081 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:57:00.081 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:00.082 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:00.082 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:57:00.082 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:57:00.082 - INFO - +-------- END KW: OpenStack.Run OS Command (1786)
20190402 10:57:00.082 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:00.083 - INFO - ${value} = ACTIVE
20190402 10:57:00.083 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:57:00.083 - INFO - ${current_value} = ACTIVE
20190402 10:57:00.083 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1791)
20190402 10:57:00.083 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:00.084 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:00.084 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:57:00.084 - INFO - +------ END KW: OpenStack.Check Field Value (1793)
20190402 10:57:00.084 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (129999)
20190402 10:57:00.084 - INFO - +---- END KW: OpenStack.Reboot Instance (133611)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:57:00.084 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${centos_instance_name} ]
20190402 10:57:00.085 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190402 10:57:00.086 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:00.086 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:00.086 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:57:00.086 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:00.087 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-centos-1'.
20190402 10:57:01.768 - INFO - Command exited with return code 0.
20190402 10:57:01.768 - INFO - ${stdout} =
20190402 10:57:01.768 - INFO - ${stderr} =
20190402 10:57:01.768 - INFO - ${rc} = 0
20190402 10:57:01.768 - INFO - +------ END KW: SSHLibrary.Execute Command (1682)
20190402 10:57:01.768 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:01.769 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:57:01.769 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:01.769 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:01.769 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:01.769 - INFO - +----- END KW: OpenStack.Run OS Command (1684)
20190402 10:57:01.770 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBOOT ]
20190402 10:57:01.770 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBOOT ]
20190402 10:57:01.770 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:01.771 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:01.771 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:57:01.771 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:01.771 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:01.771 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:01.771 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:57:01.772 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:01.772 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:01.772 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:01.772 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:01.772 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:01.773 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:03.435 - INFO - Command exited with return code 0.
20190402 10:57:03.436 - INFO - ${stdout} = REBOOT
20190402 10:57:03.436 - INFO - ${stderr} =
20190402 10:57:03.436 - INFO - ${rc} = 0
20190402 10:57:03.436 - INFO - +--------- END KW: SSHLibrary.Execute Command (1664)
20190402 10:57:03.436 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:03.437 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:57:03.437 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:03.437 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:03.437 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:03.437 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 10:57:03.437 - INFO - +-------- END KW: OpenStack.Run OS Command (1665)
20190402 10:57:03.437 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:03.437 - INFO - ${value} = REBOOT
20190402 10:57:03.438 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:57:03.438 - INFO - ${current_value} = REBOOT
20190402 10:57:03.438 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1668)
20190402 10:57:03.438 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:03.438 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:03.438 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:57:03.438 - INFO - +------ END KW: OpenStack.Check Field Value (1668)
20190402 10:57:03.438 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1668)
20190402 10:57:03.438 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:57:03.439 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:57:03.439 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:03.439 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:03.440 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:57:03.440 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:03.440 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:03.440 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:03.440 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:57:03.440 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:03.441 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:03.441 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:03.441 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:03.441 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:03.441 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:05.105 - INFO - Command exited with return code 0.
20190402 10:57:05.105 - INFO - ${stdout} = ACTIVE
20190402 10:57:05.105 - INFO - ${stderr} =
20190402 10:57:05.105 - INFO - ${rc} = 0
20190402 10:57:05.105 - INFO - +--------- END KW: SSHLibrary.Execute Command (1664)
20190402 10:57:05.105 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:05.106 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:57:05.106 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:05.106 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:05.106 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:05.106 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:57:05.107 - INFO - +-------- END KW: OpenStack.Run OS Command (1666)
20190402 10:57:05.107 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:05.107 - INFO - ${value} = ACTIVE
20190402 10:57:05.107 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:57:05.107 - INFO - ${current_value} = ACTIVE
20190402 10:57:05.107 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1668)
20190402 10:57:05.107 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:05.107 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:05.107 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:57:05.108 - INFO - +------ END KW: OpenStack.Check Field Value (1669)
20190402 10:57:05.108 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1670)
20190402 10:57:05.108 - INFO - +---- END KW: OpenStack.Reboot Instance (5024)
------------------------------------------------------------------------------
20190402 10:57:05.108 - INFO - +--- END TEST: Reboot Instances (138636)
------------------------------------------------------------------------------
20190402 10:57:05.108 - INFO - +--- START TEST: Rebuild Instances [ ]
------------------------------------------------------------------------------
20190402 10:57:05.108 - INFO - +---- START KW: OpenStack.Rebuild Instance [ ${cirros_instance_name} ]
20190402 10:57:05.109 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild ${vm_name} | True | 30 sec ]
20190402 10:57:05.109 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:05.109 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:05.109 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:57:05.109 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:05.110 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild vm-cirros-1'.
20190402 10:57:07.056 - INFO - Command exited with return code 0.
20190402 10:57:07.056 - INFO - ${stdout} = +-------------------+----------------------------------------------------------+
| Field             | Value                                                    |
+-------------------+-----------------...
20190402 10:57:07.057 - INFO - ${stderr} =
20190402 10:57:07.057 - INFO - ${rc} = 0
20190402 10:57:07.057 - INFO - +------ END KW: SSHLibrary.Execute Command (1948)
20190402 10:57:07.057 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:07.057 - INFO - ${res} = {u'stdout': u'+-------------------+----------------------------------------------------------+\n| Field             | Value                                                    |\n+-------------------+-...
20190402 10:57:07.057 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:57:07.057 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:07.058 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 10:57:07.058 - INFO - +----- END KW: OpenStack.Run OS Command (1949)
20190402 10:57:07.058 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBUILD ]
20190402 10:57:07.058 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBUILD ]
20190402 10:57:07.059 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:07.059 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:07.059 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:57:07.059 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:07.059 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:07.059 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:07.060 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:57:07.060 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:07.060 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:07.060 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:07.060 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:07.060 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:07.061 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:08.893 - INFO - Command exited with return code 0.
20190402 10:57:08.893 - INFO - ${stdout} = REBUILD
20190402 10:57:08.893 - INFO - ${stderr} =
20190402 10:57:08.894 - INFO - ${rc} = 0
20190402 10:57:08.894 - INFO - +--------- END KW: SSHLibrary.Execute Command (1834)
20190402 10:57:08.894 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:08.895 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:08.895 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:08.896 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:08.896 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:08.897 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:08.897 - INFO - +-------- END KW: OpenStack.Run OS Command (1837)
20190402 10:57:08.897 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:08.898 - INFO - ${value} = REBUILD
20190402 10:57:08.898 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:57:08.898 - INFO - ${current_value} = REBUILD
20190402 10:57:08.898 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1839)
20190402 10:57:08.899 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:08.899 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:08.899 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:57:08.899 - INFO - +------ END KW: OpenStack.Check Field Value (1841)
20190402 10:57:08.900 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1842)
20190402 10:57:08.900 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:57:08.901 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:57:08.903 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:08.904 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:08.905 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:57:08.905 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:08.905 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:08.906 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:08.906 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:57:08.906 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:08.907 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:08.908 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:08.908 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:08.908 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:08.909 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:10.541 - INFO - Command exited with return code 0.
20190402 10:57:10.542 - INFO - ${stdout} = REBUILD
20190402 10:57:10.542 - INFO - ${stderr} =
20190402 10:57:10.542 - INFO - ${rc} = 0
20190402 10:57:10.542 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 10:57:10.543 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:10.544 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:10.544 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:10.544 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:10.545 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:57:10.545 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:10.545 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 10:57:10.546 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:10.546 - INFO - ${value} = REBUILD
20190402 10:57:10.546 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:57:10.547 - INFO - ${current_value} = REBUILD
20190402 10:57:10.547 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 10:57:10.547 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:10.548 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:10.548 - FAIL - REBUILD != ACTIVE
20190402 10:57:10.548 - DEBUG - Traceback (most recent call last):
  None
20190402 10:57:10.548 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:57:10.549 - INFO - +------ END KW: OpenStack.Check Field Value (1647)
20190402 10:57:20.549 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:57:20.550 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:20.550 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:20.551 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:57:20.551 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:20.551 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:20.551 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:20.552 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:57:20.552 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:20.552 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:20.553 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:20.553 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:20.553 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:20.553 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:22.185 - INFO - Command exited with return code 0.
20190402 10:57:22.185 - INFO - ${stdout} = REBUILD
20190402 10:57:22.185 - INFO - ${stderr} =
20190402 10:57:22.185 - INFO - ${rc} = 0
20190402 10:57:22.185 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 10:57:22.186 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:22.186 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:22.187 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:22.187 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:22.187 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:22.187 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:22.187 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 10:57:22.188 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:22.188 - INFO - ${value} = REBUILD
20190402 10:57:22.188 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:57:22.188 - INFO - ${current_value} = REBUILD
20190402 10:57:22.188 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1638)
20190402 10:57:22.189 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:22.189 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:22.189 - FAIL - REBUILD != ACTIVE
20190402 10:57:22.189 - DEBUG - Traceback (most recent call last):
  None
20190402 10:57:22.189 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:57:22.189 - INFO - +------ END KW: OpenStack.Check Field Value (1640)
20190402 10:57:32.190 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:57:32.190 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:32.191 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:32.191 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:57:32.191 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:32.191 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:32.192 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:32.192 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:57:32.192 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:32.192 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:32.192 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:32.192 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:32.193 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:32.193 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:33.824 - INFO - Command exited with return code 0.
20190402 10:57:33.825 - INFO - ${stdout} = REBUILD
20190402 10:57:33.825 - INFO - ${stderr} =
20190402 10:57:33.825 - INFO - ${rc} = 0
20190402 10:57:33.825 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 10:57:33.825 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:33.826 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:33.826 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:33.826 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:33.826 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:33.826 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:33.826 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 10:57:33.826 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:33.827 - INFO - ${value} = REBUILD
20190402 10:57:33.827 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:57:33.827 - INFO - ${current_value} = REBUILD
20190402 10:57:33.827 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 10:57:33.827 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:33.827 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:33.827 - FAIL - REBUILD != ACTIVE
20190402 10:57:33.827 - DEBUG - Traceback (most recent call last):
  None
20190402 10:57:33.827 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:57:33.827 - INFO - +------ END KW: OpenStack.Check Field Value (1637)
20190402 10:57:43.828 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:57:43.829 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:43.830 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:43.831 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:57:43.831 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:43.831 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:43.832 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:43.832 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:57:43.833 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:43.834 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:43.835 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:43.835 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:43.835 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:43.836 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:45.418 - INFO - Command exited with return code 0.
20190402 10:57:45.419 - INFO - ${stdout} = REBUILD
20190402 10:57:45.419 - INFO - ${stderr} =
20190402 10:57:45.419 - INFO - ${rc} = 0
20190402 10:57:45.419 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 10:57:45.419 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:45.420 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:45.420 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:45.420 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:45.421 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:57:45.421 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:45.421 - INFO - +-------- END KW: OpenStack.Run OS Command (1588)
20190402 10:57:45.421 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:45.422 - INFO - ${value} = REBUILD
20190402 10:57:45.422 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:57:45.422 - INFO - ${current_value} = REBUILD
20190402 10:57:45.422 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1593)
20190402 10:57:45.423 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:45.423 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:45.423 - FAIL - REBUILD != ACTIVE
20190402 10:57:45.423 - DEBUG - Traceback (most recent call last):
  None
20190402 10:57:45.423 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:57:45.423 - INFO - +------ END KW: OpenStack.Check Field Value (1595)
20190402 10:57:55.424 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:57:55.425 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:57:55.426 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:57:55.426 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:57:55.426 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:57:55.426 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:57:55.427 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:57:55.427 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:57:55.427 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:57:55.428 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:57:55.429 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:57:55.429 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:57:55.429 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:57:55.430 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:57:57.112 - INFO - Command exited with return code 0.
20190402 10:57:57.112 - INFO - ${stdout} = REBUILD
20190402 10:57:57.112 - INFO - ${stderr} =
20190402 10:57:57.112 - INFO - ${rc} = 0
20190402 10:57:57.113 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 10:57:57.113 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:57:57.114 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:57.114 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:57:57.115 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:57:57.116 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:57:57.116 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:57:57.116 - INFO - +-------- END KW: OpenStack.Run OS Command (1689)
20190402 10:57:57.117 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:57:57.117 - INFO - ${value} = REBUILD
20190402 10:57:57.118 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:57:57.118 - INFO - ${current_value} = REBUILD
20190402 10:57:57.118 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1693)
20190402 10:57:57.119 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:57:57.119 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:57:57.120 - FAIL - REBUILD != ACTIVE
20190402 10:57:57.120 - DEBUG - Traceback (most recent call last):
  None
20190402 10:57:57.120 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:57:57.120 - INFO - +------ END KW: OpenStack.Check Field Value (1696)
20190402 10:58:07.121 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:58:07.121 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:07.121 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:07.122 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:58:07.122 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:07.122 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:07.122 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:07.122 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:58:07.122 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:07.123 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:07.123 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:07.123 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:07.123 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:07.123 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:08.962 - INFO - Command exited with return code 0.
20190402 10:58:08.963 - INFO - ${stdout} = REBUILD
20190402 10:58:08.963 - INFO - ${stderr} =
20190402 10:58:08.963 - INFO - ${rc} = 0
20190402 10:58:08.963 - INFO - +--------- END KW: SSHLibrary.Execute Command (1840)
20190402 10:58:08.963 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:08.963 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:58:08.963 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:58:08.964 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:08.964 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:08.964 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:58:08.964 - INFO - +-------- END KW: OpenStack.Run OS Command (1842)
20190402 10:58:08.964 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:08.964 - INFO - ${value} = REBUILD
20190402 10:58:08.964 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:58:08.965 - INFO - ${current_value} = REBUILD
20190402 10:58:08.965 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1844)
20190402 10:58:08.965 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:08.965 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:08.965 - FAIL - REBUILD != ACTIVE
20190402 10:58:08.965 - DEBUG - Traceback (most recent call last):
  None
20190402 10:58:08.965 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:58:08.966 - INFO - +------ END KW: OpenStack.Check Field Value (1845)
20190402 10:58:18.966 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:58:18.967 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:18.968 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:18.968 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:58:18.968 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:18.968 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:18.969 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:18.969 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:58:18.969 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:18.970 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:18.970 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:18.970 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:18.970 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:18.971 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:20.604 - INFO - Command exited with return code 0.
20190402 10:58:20.604 - INFO - ${stdout} = ACTIVE
20190402 10:58:20.604 - INFO - ${stderr} =
20190402 10:58:20.604 - INFO - ${rc} = 0
20190402 10:58:20.604 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 10:58:20.604 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:20.605 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:58:20.605 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:20.605 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:20.605 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:20.605 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:58:20.606 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 10:58:20.606 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:20.606 - INFO - ${value} = ACTIVE
20190402 10:58:20.606 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:58:20.606 - INFO - ${current_value} = ACTIVE
20190402 10:58:20.606 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 10:58:20.606 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:20.606 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:20.607 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:58:20.607 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 10:58:20.607 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71707)
20190402 10:58:20.607 - INFO - +---- END KW: OpenStack.Rebuild Instance (75499)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:58:20.607 - INFO - +---- START KW: OpenStack.Rebuild Instance [ ${centos_instance_name} ]
20190402 10:58:20.607 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild ${vm_name} | True | 30 sec ]
20190402 10:58:20.608 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:20.608 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:20.608 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 10:58:20.608 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:20.608 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild vm-centos-1'.
20190402 10:58:22.792 - INFO - Command exited with return code 0.
20190402 10:58:22.792 - INFO - ${stdout} = +-------------------+----------------------------------------------------------+
| Field             | Value                                                    |
+-------------------+-----------------...
20190402 10:58:22.792 - INFO - ${stderr} =
20190402 10:58:22.792 - INFO - ${rc} = 0
20190402 10:58:22.792 - INFO - +------ END KW: SSHLibrary.Execute Command (2184)
20190402 10:58:22.792 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:22.793 - INFO - ${res} = {u'stdout': u'+-------------------+----------------------------------------------------------+\n| Field             | Value                                                    |\n+-------------------+-...
20190402 10:58:22.793 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:22.793 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:22.793 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:22.793 - INFO - +----- END KW: OpenStack.Run OS Command (2186)
20190402 10:58:22.794 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBUILD ]
20190402 10:58:22.794 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBUILD ]
20190402 10:58:22.794 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:22.795 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:22.795 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:58:22.795 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:22.795 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:22.795 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:22.795 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:58:22.795 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:22.796 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:22.796 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:22.796 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:22.796 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:22.797 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:24.395 - INFO - Command exited with return code 0.
20190402 10:58:24.395 - INFO - ${stdout} = REBUILD
20190402 10:58:24.395 - INFO - ${stderr} =
20190402 10:58:24.395 - INFO - ${rc} = 0
20190402 10:58:24.395 - INFO - +--------- END KW: SSHLibrary.Execute Command (1599)
20190402 10:58:24.395 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:24.396 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:58:24.396 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:24.396 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:24.396 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:24.396 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 10:58:24.396 - INFO - +-------- END KW: OpenStack.Run OS Command (1601)
20190402 10:58:24.397 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:24.397 - INFO - ${value} = REBUILD
20190402 10:58:24.397 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:58:24.397 - INFO - ${current_value} = REBUILD
20190402 10:58:24.397 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1603)
20190402 10:58:24.397 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:24.398 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:24.398 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:58:24.398 - INFO - +------ END KW: OpenStack.Check Field Value (1604)
20190402 10:58:24.398 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1604)
20190402 10:58:24.398 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:58:24.398 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:58:24.399 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:24.399 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:24.399 - INFO - ${openstack_cmd} = openstack server show vm-centos-1
20190402 10:58:24.399 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:24.399 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:24.400 - INFO - ${cmd} = openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:24.400 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:58:24.400 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:24.400 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:24.401 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:24.401 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:24.401 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:24.401 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-centos-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:26.313 - INFO - Command exited with return code 0.
20190402 10:58:26.313 - INFO - ${stdout} = ACTIVE
20190402 10:58:26.314 - INFO - ${stderr} =
20190402 10:58:26.314 - INFO - ${rc} = 0
20190402 10:58:26.314 - INFO - +--------- END KW: SSHLibrary.Execute Command (1913)
20190402 10:58:26.314 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:26.316 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:58:26.316 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:58:26.316 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:26.317 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:58:26.317 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:58:26.318 - INFO - +-------- END KW: OpenStack.Run OS Command (1918)
20190402 10:58:26.318 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:26.319 - INFO - ${value} = ACTIVE
20190402 10:58:26.319 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:58:26.319 - INFO - ${current_value} = ACTIVE
20190402 10:58:26.319 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1920)
20190402 10:58:26.320 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:26.320 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:26.320 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:58:26.321 - INFO - +------ END KW: OpenStack.Check Field Value (1923)
20190402 10:58:26.321 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1923)
20190402 10:58:26.321 - INFO - +---- END KW: OpenStack.Rebuild Instance (5714)
------------------------------------------------------------------------------
20190402 10:58:26.322 - INFO - +--- END TEST: Rebuild Instances (81213)
------------------------------------------------------------------------------
20190402 10:58:26.323 - INFO - +--- START TEST: Resize Instances [ ]
------------------------------------------------------------------------------
20190402 10:58:26.323 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name_2} ]
20190402 10:58:26.324 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 10:58:26.325 - INFO - ${openstack_cmd} = openstack flavor create
20190402 10:58:26.325 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 10:58:26.325 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 10:58:26.326 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small
20190402 10:58:26.326 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 10:58:26.326 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 10:58:26.327 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:26.328 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:26.328 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:58:26.328 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:26.329 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small'.
20190402 10:58:27.711 - INFO - Command exited with return code 0.
20190402 10:58:27.711 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 10:58:27.711 - INFO - ${stderr} =
20190402 10:58:27.711 - INFO - ${rc} = 0
20190402 10:58:27.711 - INFO - +------ END KW: SSHLibrary.Execute Command (1383)
20190402 10:58:27.711 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:27.712 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 10:58:27.712 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:27.712 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:27.712 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:27.712 - INFO - +----- END KW: OpenStack.Run OS Command (1386)
20190402 10:58:27.713 - INFO - +---- END KW: OpenStack.Create Flavor (1389)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:58:27.713 - INFO - +---- START KW: OpenStack.Resize Instance [ ${cirros_instance_name} | ${cirros_flavor_name_2} ]
20190402 10:58:27.713 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --flavor ${flavor} ${vm_name} | True | 30 sec ]
20190402 10:58:27.714 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:27.714 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:27.714 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:58:27.714 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:27.714 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --flavor f2.small vm-cirros-1'.
20190402 10:58:30.899 - INFO - Command exited with return code 0.
20190402 10:58:30.900 - INFO - ${stdout} =
20190402 10:58:30.900 - INFO - ${stderr} =
20190402 10:58:30.900 - INFO - ${rc} = 0
20190402 10:58:30.900 - INFO - +------ END KW: SSHLibrary.Execute Command (3186)
20190402 10:58:30.901 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:30.902 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:58:30.902 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:30.902 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:30.902 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:30.903 - INFO - +----- END KW: OpenStack.Run OS Command (3190)
20190402 10:58:30.903 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | RESIZE ]
20190402 10:58:30.903 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | RESIZE ]
20190402 10:58:30.903 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:30.904 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:30.904 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:58:30.904 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:30.904 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:30.905 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:30.905 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:58:30.905 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:30.905 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:30.905 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:30.905 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:30.905 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:30.906 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:32.653 - INFO - Command exited with return code 0.
20190402 10:58:32.654 - INFO - ${stdout} = RESIZE
20190402 10:58:32.654 - INFO - ${stderr} =
20190402 10:58:32.654 - INFO - ${rc} = 0
20190402 10:58:32.654 - INFO - +--------- END KW: SSHLibrary.Execute Command (1749)
20190402 10:58:32.655 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:32.656 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:32.656 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:32.656 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:32.657 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:58:32.657 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:32.658 - INFO - +-------- END KW: OpenStack.Run OS Command (1753)
20190402 10:58:32.658 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:32.658 - INFO - ${value} = RESIZE
20190402 10:58:32.659 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:58:32.659 - INFO - ${current_value} = RESIZE
20190402 10:58:32.659 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1756)
20190402 10:58:32.659 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:32.660 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:32.660 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:58:32.660 - INFO - +------ END KW: OpenStack.Check Field Value (1757)
20190402 10:58:32.661 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1758)
20190402 10:58:32.661 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:58:32.662 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:58:32.662 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:32.663 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:32.664 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:58:32.664 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:32.664 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:32.665 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:32.665 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:58:32.665 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:32.667 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:32.667 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:32.668 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:32.668 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:32.669 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:34.351 - INFO - Command exited with return code 0.
20190402 10:58:34.352 - INFO - ${stdout} = RESIZE
20190402 10:58:34.352 - INFO - ${stderr} =
20190402 10:58:34.352 - INFO - ${rc} = 0
20190402 10:58:34.352 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 10:58:34.352 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:34.354 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:34.354 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:58:34.354 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:34.355 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:58:34.355 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:34.355 - INFO - +-------- END KW: OpenStack.Run OS Command (1690)
20190402 10:58:34.356 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:34.356 - INFO - ${value} = RESIZE
20190402 10:58:34.356 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:58:34.357 - INFO - ${current_value} = RESIZE
20190402 10:58:34.357 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1695)
20190402 10:58:34.357 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:34.358 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:34.358 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:58:34.358 - DEBUG - Traceback (most recent call last):
  None
20190402 10:58:34.358 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:58:34.359 - INFO - +------ END KW: OpenStack.Check Field Value (1696)
20190402 10:58:44.359 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:58:44.360 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:44.361 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:44.362 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:58:44.362 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:44.362 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:44.363 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:44.364 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:58:44.364 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:44.365 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:44.365 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:44.365 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:58:44.366 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:44.367 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:46.000 - INFO - Command exited with return code 0.
20190402 10:58:46.000 - INFO - ${stdout} = RESIZE
20190402 10:58:46.000 - INFO - ${stderr} =
20190402 10:58:46.000 - INFO - ${rc} = 0
20190402 10:58:46.001 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 10:58:46.001 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:46.002 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:46.002 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:46.003 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:46.003 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:46.004 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:46.004 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 10:58:46.004 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:46.005 - INFO - ${value} = RESIZE
20190402 10:58:46.005 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:58:46.005 - INFO - ${current_value} = RESIZE
20190402 10:58:46.005 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 10:58:46.006 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:46.006 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:46.007 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:58:46.007 - DEBUG - Traceback (most recent call last):
  None
20190402 10:58:46.007 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:58:46.007 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 10:58:56.007 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:58:56.008 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:58:56.008 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:58:56.009 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:58:56.009 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:56.009 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:58:56.009 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:58:56.009 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:58:56.009 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:58:56.009 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:58:56.010 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:58:56.010 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:58:56.010 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:58:56.010 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:58:57.641 - INFO - Command exited with return code 0.
20190402 10:58:57.641 - INFO - ${stdout} = RESIZE
20190402 10:58:57.641 - INFO - ${stderr} =
20190402 10:58:57.642 - INFO - ${rc} = 0
20190402 10:58:57.642 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 10:58:57.642 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:58:57.643 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:57.643 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:58:57.644 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:58:57.644 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:58:57.644 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:58:57.645 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 10:58:57.645 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:58:57.645 - INFO - ${value} = RESIZE
20190402 10:58:57.646 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:58:57.646 - INFO - ${current_value} = RESIZE
20190402 10:58:57.646 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1638)
20190402 10:58:57.646 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:58:57.647 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:58:57.647 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:58:57.647 - DEBUG - Traceback (most recent call last):
  None
20190402 10:58:57.648 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:58:57.648 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 10:59:07.649 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:59:07.650 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:07.650 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:07.651 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:07.651 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:07.651 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:07.652 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:07.652 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:59:07.652 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:07.653 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:07.654 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:07.654 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:07.655 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:07.655 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:09.238 - INFO - Command exited with return code 0.
20190402 10:59:09.239 - INFO - ${stdout} = RESIZE
20190402 10:59:09.239 - INFO - ${stderr} =
20190402 10:59:09.239 - INFO - ${rc} = 0
20190402 10:59:09.239 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 10:59:09.240 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:09.241 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:09.241 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:59:09.241 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:09.242 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:59:09.242 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:09.242 - INFO - +-------- END KW: OpenStack.Run OS Command (1590)
20190402 10:59:09.242 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:09.243 - INFO - ${value} = RESIZE
20190402 10:59:09.243 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:59:09.243 - INFO - ${current_value} = RESIZE
20190402 10:59:09.244 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1593)
20190402 10:59:09.244 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:09.244 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:09.245 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:59:09.245 - DEBUG - Traceback (most recent call last):
  None
20190402 10:59:09.245 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:59:09.245 - INFO - +------ END KW: OpenStack.Check Field Value (1596)
20190402 10:59:19.246 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:59:19.247 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:19.249 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:19.250 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:19.250 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:19.250 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:19.250 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:19.250 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:59:19.251 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:19.251 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:19.251 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:19.251 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:59:19.251 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:19.252 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:20.834 - INFO - Command exited with return code 0.
20190402 10:59:20.834 - INFO - ${stdout} = RESIZE
20190402 10:59:20.834 - INFO - ${stderr} =
20190402 10:59:20.834 - INFO - ${rc} = 0
20190402 10:59:20.835 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 10:59:20.835 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:20.836 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:20.836 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:59:20.837 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:20.837 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 10:59:20.838 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:20.838 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 10:59:20.838 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:20.839 - INFO - ${value} = RESIZE
20190402 10:59:20.839 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 10:59:20.839 - INFO - ${current_value} = RESIZE
20190402 10:59:20.840 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1593)
20190402 10:59:20.840 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:20.841 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:20.841 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:59:20.841 - DEBUG - Traceback (most recent call last):
  None
20190402 10:59:20.841 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:59:20.841 - INFO - +------ END KW: OpenStack.Check Field Value (1595)
20190402 10:59:30.842 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:59:30.843 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:30.844 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:30.844 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:30.845 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:30.845 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:30.846 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:30.846 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:59:30.846 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:30.848 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:30.849 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:30.849 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:30.849 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:30.850 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:32.583 - INFO - Command exited with return code 0.
20190402 10:59:32.583 - INFO - ${stdout} = RESIZE
20190402 10:59:32.583 - INFO - ${stderr} =
20190402 10:59:32.584 - INFO - ${rc} = 0
20190402 10:59:32.584 - INFO - +--------- END KW: SSHLibrary.Execute Command (1735)
20190402 10:59:32.584 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:32.585 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:32.585 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:59:32.585 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:32.586 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:59:32.586 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:32.586 - INFO - +-------- END KW: OpenStack.Run OS Command (1740)
20190402 10:59:32.587 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:32.587 - INFO - ${value} = RESIZE
20190402 10:59:32.587 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:59:32.587 - INFO - ${current_value} = RESIZE
20190402 10:59:32.588 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1745)
20190402 10:59:32.588 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:32.588 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:32.588 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:59:32.589 - DEBUG - Traceback (most recent call last):
  None
20190402 10:59:32.589 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:59:32.589 - INFO - +------ END KW: OpenStack.Check Field Value (1747)
20190402 10:59:42.589 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:59:42.590 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:42.590 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:42.591 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:42.591 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:42.591 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:42.591 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:42.591 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:59:42.591 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:42.592 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:42.592 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:42.592 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:42.592 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:42.592 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:44.323 - INFO - Command exited with return code 0.
20190402 10:59:44.323 - INFO - ${stdout} = VERIFY_RESIZE
20190402 10:59:44.323 - INFO - ${stderr} =
20190402 10:59:44.323 - INFO - ${rc} = 0
20190402 10:59:44.323 - INFO - +--------- END KW: SSHLibrary.Execute Command (1731)
20190402 10:59:44.324 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:44.324 - INFO - ${res} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:44.324 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:59:44.324 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:44.325 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:59:44.325 - INFO - ${result} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:44.325 - INFO - +-------- END KW: OpenStack.Run OS Command (1734)
20190402 10:59:44.325 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:44.325 - INFO - ${value} = VERIFY_RESIZE
20190402 10:59:44.325 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:59:44.325 - INFO - ${current_value} = VERIFY_RESIZE
20190402 10:59:44.325 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1735)
20190402 10:59:44.326 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:44.326 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:44.326 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:59:44.326 - INFO - +------ END KW: OpenStack.Check Field Value (1737)
20190402 10:59:44.326 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71665)
20190402 10:59:44.326 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --confirm ${vm_name} | True | 30 sec ]
20190402 10:59:44.326 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:44.327 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:44.327 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:59:44.327 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:44.327 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --confirm vm-cirros-1'.
20190402 10:59:46.158 - INFO - Command exited with return code 0.
20190402 10:59:46.159 - INFO - ${stdout} =
20190402 10:59:46.159 - INFO - ${stderr} =
20190402 10:59:46.159 - INFO - ${rc} = 0
20190402 10:59:46.159 - INFO - +------ END KW: SSHLibrary.Execute Command (1832)
20190402 10:59:46.159 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:46.159 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:59:46.159 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 10:59:46.160 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:46.160 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:59:46.160 - INFO - +----- END KW: OpenStack.Run OS Command (1834)
20190402 10:59:46.160 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 10:59:46.161 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 10:59:46.161 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:46.162 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:46.162 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:46.162 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:59:46.162 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:46.163 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:46.163 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:59:46.163 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:46.163 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:46.164 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:46.164 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:46.164 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:46.164 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:47.849 - INFO - Command exited with return code 0.
20190402 10:59:47.849 - INFO - ${stdout} = ACTIVE
20190402 10:59:47.850 - INFO - ${stderr} =
20190402 10:59:47.850 - INFO - ${rc} = 0
20190402 10:59:47.850 - INFO - +--------- END KW: SSHLibrary.Execute Command (1686)
20190402 10:59:47.850 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:47.852 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:59:47.852 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 10:59:47.852 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:47.853 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:59:47.853 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 10:59:47.853 - INFO - +-------- END KW: OpenStack.Run OS Command (1690)
20190402 10:59:47.854 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:47.854 - INFO - ${value} = ACTIVE
20190402 10:59:47.854 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:59:47.855 - INFO - ${current_value} = ACTIVE
20190402 10:59:47.855 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1694)
20190402 10:59:47.855 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:47.856 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:47.856 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 10:59:47.856 - INFO - +------ END KW: OpenStack.Check Field Value (1695)
20190402 10:59:47.857 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1697)
20190402 10:59:47.857 - INFO - +---- END KW: OpenStack.Resize Instance (80144)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 10:59:47.857 - INFO - +---- START KW: OpenStack.Resize Instance [ ${cirros_instance_name} | ${cirros_flavor_name} ]
20190402 10:59:47.858 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --flavor ${flavor} ${vm_name} | True | 30 sec ]
20190402 10:59:47.859 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:47.860 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:47.860 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 10:59:47.860 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:47.861 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --flavor f1.small vm-cirros-1'.
20190402 10:59:50.946 - INFO - Command exited with return code 0.
20190402 10:59:50.947 - INFO - ${stdout} =
20190402 10:59:50.947 - INFO - ${stderr} =
20190402 10:59:50.947 - INFO - ${rc} = 0
20190402 10:59:50.947 - INFO - +------ END KW: SSHLibrary.Execute Command (3087)
20190402 10:59:50.947 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:50.947 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 10:59:50.948 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 10:59:50.948 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:50.948 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 10:59:50.948 - INFO - +----- END KW: OpenStack.Run OS Command (3090)
20190402 10:59:50.948 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | RESIZE ]
20190402 10:59:50.949 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | RESIZE ]
20190402 10:59:50.949 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:50.949 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:50.950 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:50.950 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:50.950 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:50.950 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:50.950 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 10:59:50.950 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:50.951 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:50.951 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:50.951 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 10:59:50.951 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:50.951 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:52.765 - INFO - Command exited with return code 0.
20190402 10:59:52.765 - INFO - ${stdout} = RESIZE
20190402 10:59:52.766 - INFO - ${stderr} =
20190402 10:59:52.766 - INFO - ${rc} = 0
20190402 10:59:52.766 - INFO - +--------- END KW: SSHLibrary.Execute Command (1815)
20190402 10:59:52.766 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:52.766 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:52.766 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 10:59:52.766 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:52.767 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:59:52.767 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:52.767 - INFO - +-------- END KW: OpenStack.Run OS Command (1817)
20190402 10:59:52.767 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:52.767 - INFO - ${value} = RESIZE
20190402 10:59:52.767 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:59:52.767 - INFO - ${current_value} = RESIZE
20190402 10:59:52.767 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1818)
20190402 10:59:52.768 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:52.768 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:52.768 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:59:52.768 - INFO - +------ END KW: OpenStack.Check Field Value (1819)
20190402 10:59:52.768 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1820)
20190402 10:59:52.768 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:59:52.768 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 10:59:52.769 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 10:59:52.769 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 10:59:52.769 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 10:59:52.769 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 10:59:52.769 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 10:59:52.770 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 10:59:52.770 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 10:59:52.770 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 10:59:52.770 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 10:59:52.771 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 10:59:52.771 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 10:59:52.771 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 10:59:52.771 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 10:59:54.434 - INFO - Command exited with return code 0.
20190402 10:59:54.434 - INFO - ${stdout} = RESIZE
20190402 10:59:54.434 - INFO - ${stderr} =
20190402 10:59:54.434 - INFO - ${rc} = 0
20190402 10:59:54.434 - INFO - +--------- END KW: SSHLibrary.Execute Command (1663)
20190402 10:59:54.434 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 10:59:54.435 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:54.435 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 10:59:54.435 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 10:59:54.436 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 10:59:54.436 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 10:59:54.436 - INFO - +-------- END KW: OpenStack.Run OS Command (1666)
20190402 10:59:54.436 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 10:59:54.436 - INFO - ${value} = RESIZE
20190402 10:59:54.436 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 10:59:54.437 - INFO - ${current_value} = RESIZE
20190402 10:59:54.437 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1668)
20190402 10:59:54.437 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 10:59:54.437 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 10:59:54.437 - FAIL - RESIZE != VERIFY_RESIZE
20190402 10:59:54.437 - DEBUG - Traceback (most recent call last):
  None
20190402 10:59:54.437 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 10:59:54.438 - INFO - +------ END KW: OpenStack.Check Field Value (1669)
20190402 11:00:04.438 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:00:04.439 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:00:04.440 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:00:04.441 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:00:04.441 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:00:04.441 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:00:04.442 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:00:04.442 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:00:04.442 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:00:04.443 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:00:04.443 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:00:04.443 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:04.444 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:00:04.444 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:00:06.076 - INFO - Command exited with return code 0.
20190402 11:00:06.077 - INFO - ${stdout} = RESIZE
20190402 11:00:06.077 - INFO - ${stderr} =
20190402 11:00:06.077 - INFO - ${rc} = 0
20190402 11:00:06.077 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:00:06.078 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:00:06.079 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:06.080 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:00:06.080 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:00:06.081 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:00:06.081 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:06.081 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:00:06.081 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:00:06.082 - INFO - ${value} = RESIZE
20190402 11:00:06.082 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:00:06.083 - INFO - ${current_value} = RESIZE
20190402 11:00:06.083 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1644)
20190402 11:00:06.083 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:00:06.084 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:00:06.084 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:00:06.084 - DEBUG - Traceback (most recent call last):
  None
20190402 11:00:06.084 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:00:06.084 - INFO - +------ END KW: OpenStack.Check Field Value (1646)
20190402 11:00:16.089 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:00:16.091 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:00:16.091 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:00:16.092 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:00:16.092 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:00:16.092 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:00:16.092 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:00:16.092 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:00:16.093 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:00:16.094 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:00:16.094 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:00:16.094 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:16.094 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:00:16.095 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:00:17.728 - INFO - Command exited with return code 0.
20190402 11:00:17.728 - INFO - ${stdout} = RESIZE
20190402 11:00:17.728 - INFO - ${stderr} =
20190402 11:00:17.728 - INFO - ${rc} = 0
20190402 11:00:17.729 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:00:17.729 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:00:17.730 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:17.730 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:00:17.730 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:00:17.730 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:00:17.730 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:17.730 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:00:17.730 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:00:17.730 - INFO - ${value} = RESIZE
20190402 11:00:17.731 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:00:17.731 - INFO - ${current_value} = RESIZE
20190402 11:00:17.731 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:00:17.731 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:00:17.731 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:00:17.731 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:00:17.731 - DEBUG - Traceback (most recent call last):
  None
20190402 11:00:17.731 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:00:17.731 - INFO - +------ END KW: OpenStack.Check Field Value (1644)
20190402 11:00:27.732 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:00:27.732 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:00:27.733 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:00:27.733 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:00:27.733 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:27.733 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:00:27.734 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:00:27.734 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:00:27.734 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:00:27.734 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:00:27.734 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:00:27.734 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:27.735 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:00:27.735 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:00:29.318 - INFO - Command exited with return code 0.
20190402 11:00:29.318 - INFO - ${stdout} = RESIZE
20190402 11:00:29.318 - INFO - ${stderr} =
20190402 11:00:29.318 - INFO - ${rc} = 0
20190402 11:00:29.319 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:00:29.319 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:00:29.320 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:29.320 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:00:29.320 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:00:29.321 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:00:29.321 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:29.321 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:00:29.322 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:00:29.322 - INFO - ${value} = RESIZE
20190402 11:00:29.322 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:00:29.323 - INFO - ${current_value} = RESIZE
20190402 11:00:29.323 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:00:29.323 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:00:29.324 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:00:29.324 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:00:29.324 - DEBUG - Traceback (most recent call last):
  None
20190402 11:00:29.324 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:00:29.324 - INFO - +------ END KW: OpenStack.Check Field Value (1592)
20190402 11:00:39.325 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:00:39.326 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:00:39.326 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:00:39.326 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:00:39.326 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:39.327 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:00:39.327 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:00:39.327 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:00:39.327 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:00:39.327 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:00:39.328 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:00:39.328 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:00:39.328 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:00:39.328 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:00:40.910 - INFO - Command exited with return code 0.
20190402 11:00:40.910 - INFO - ${stdout} = RESIZE
20190402 11:00:40.910 - INFO - ${stderr} =
20190402 11:00:40.910 - INFO - ${rc} = 0
20190402 11:00:40.911 - INFO - +--------- END KW: SSHLibrary.Execute Command (1582)
20190402 11:00:40.911 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:00:40.912 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:40.912 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:00:40.913 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:00:40.913 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:00:40.914 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:40.914 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:00:40.914 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:00:40.915 - INFO - ${value} = RESIZE
20190402 11:00:40.915 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:00:40.915 - INFO - ${current_value} = RESIZE
20190402 11:00:40.916 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1590)
20190402 11:00:40.916 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:00:40.916 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:00:40.917 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:00:40.917 - DEBUG - Traceback (most recent call last):
  None
20190402 11:00:40.917 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:00:40.917 - INFO - +------ END KW: OpenStack.Check Field Value (1592)
20190402 11:00:50.918 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:00:50.919 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:00:50.920 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:00:50.920 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:00:50.921 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:50.921 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:00:50.921 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:00:50.922 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:00:50.922 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:00:50.923 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:00:50.923 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:00:50.923 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:00:50.924 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:00:50.924 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:00:52.556 - INFO - Command exited with return code 0.
20190402 11:00:52.556 - INFO - ${stdout} = RESIZE
20190402 11:00:52.557 - INFO - ${stderr} =
20190402 11:00:52.557 - INFO - ${rc} = 0
20190402 11:00:52.557 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:00:52.557 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:00:52.558 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:52.559 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:00:52.559 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:00:52.560 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:00:52.560 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:00:52.560 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:00:52.561 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:00:52.561 - INFO - ${value} = RESIZE
20190402 11:00:52.561 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:00:52.562 - INFO - ${current_value} = RESIZE
20190402 11:00:52.562 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 11:00:52.562 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:00:52.563 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:00:52.563 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:00:52.563 - DEBUG - Traceback (most recent call last):
  None
20190402 11:00:52.563 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:00:52.564 - INFO - +------ END KW: OpenStack.Check Field Value (1646)
20190402 11:01:02.564 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:01:02.565 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:01:02.565 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:01:02.566 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:01:02.566 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:02.566 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:01:02.566 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:01:02.566 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:01:02.566 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:02.567 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:02.567 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:02.567 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:02.567 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:02.568 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:01:04.150 - INFO - Command exited with return code 0.
20190402 11:01:04.151 - INFO - ${stdout} = VERIFY_RESIZE
20190402 11:01:04.151 - INFO - ${stderr} =
20190402 11:01:04.151 - INFO - ${rc} = 0
20190402 11:01:04.151 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:01:04.151 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:04.152 - INFO - ${res} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:01:04.153 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:01:04.153 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:04.154 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:04.154 - INFO - ${result} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:01:04.154 - INFO - +-------- END KW: OpenStack.Run OS Command (1588)
20190402 11:01:04.154 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:04.155 - INFO - ${value} = VERIFY_RESIZE
20190402 11:01:04.155 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:01:04.156 - INFO - ${current_value} = VERIFY_RESIZE
20190402 11:01:04.156 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:01:04.156 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:04.157 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:04.157 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:01:04.157 - INFO - +------ END KW: OpenStack.Check Field Value (1593)
20190402 11:01:04.158 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71389)
20190402 11:01:04.158 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --confirm ${vm_name} | True | 30 sec ]
20190402 11:01:04.159 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:04.159 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:04.159 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:01:04.160 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:04.160 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --confirm vm-cirros-1'.
20190402 11:01:05.849 - INFO - Command exited with return code 0.
20190402 11:01:05.849 - INFO - ${stdout} =
20190402 11:01:05.849 - INFO - ${stderr} =
20190402 11:01:05.849 - INFO - ${rc} = 0
20190402 11:01:05.849 - INFO - +------ END KW: SSHLibrary.Execute Command (1689)
20190402 11:01:05.850 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:05.850 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:01:05.850 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:01:05.851 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:05.851 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:05.851 - INFO - +----- END KW: OpenStack.Run OS Command (1693)
20190402 11:01:05.851 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:01:05.852 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:01:05.852 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:01:05.853 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:01:05.853 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:01:05.853 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:05.854 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:01:05.854 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:01:05.854 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:01:05.854 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:05.855 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:05.855 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:05.855 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:05.855 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:05.856 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:01:07.586 - INFO - Command exited with return code 0.
20190402 11:01:07.586 - INFO - ${stdout} = ACTIVE
20190402 11:01:07.586 - INFO - ${stderr} =
20190402 11:01:07.586 - INFO - ${rc} = 0
20190402 11:01:07.587 - INFO - +--------- END KW: SSHLibrary.Execute Command (1731)
20190402 11:01:07.587 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:07.587 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:01:07.587 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:01:07.587 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:07.588 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:07.588 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:01:07.588 - INFO - +-------- END KW: OpenStack.Run OS Command (1734)
20190402 11:01:07.588 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:07.588 - INFO - ${value} = ACTIVE
20190402 11:01:07.588 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:01:07.588 - INFO - ${current_value} = ACTIVE
20190402 11:01:07.588 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1736)
20190402 11:01:07.588 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:07.589 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:07.589 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:01:07.589 - INFO - +------ END KW: OpenStack.Check Field Value (1737)
20190402 11:01:07.589 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1738)
20190402 11:01:07.589 - INFO - +---- END KW: OpenStack.Resize Instance (79732)
------------------------------------------------------------------------------
20190402 11:01:07.589 - INFO - +--- END TEST: Resize Instances (161267)
------------------------------------------------------------------------------
20190402 11:01:07.589 - INFO - +--- START TEST: Set Unset Properties Instances [ ]
------------------------------------------------------------------------------
20190402 11:01:07.590 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1}='true' | ${instance_property_2}='500' | ${instance_property_3}='180' ]
20190402 11:01:07.590 - INFO - ${properties} = --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180'
20190402 11:01:07.590 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:01:07.590 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name} | ${properties} ]
20190402 11:01:07.591 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190402 11:01:07.591 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:07.591 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:07.592 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:01:07.592 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:07.592 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-1'.
20190402 11:01:09.322 - INFO - Command exited with return code 0.
20190402 11:01:09.323 - INFO - ${stdout} =
20190402 11:01:09.323 - INFO - ${stderr} =
20190402 11:01:09.323 - INFO - ${rc} = 0
20190402 11:01:09.323 - INFO - +------ END KW: SSHLibrary.Execute Command (1731)
20190402 11:01:09.324 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:09.325 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:01:09.325 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:09.325 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:09.326 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:01:09.326 - INFO - +----- END KW: OpenStack.Run OS Command (1735)
20190402 11:01:09.327 - INFO - +---- END KW: OpenStack.Set Instance Property (1736)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:01:09.327 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${centos_instance_name} | ${properties} ]
20190402 11:01:09.327 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190402 11:01:09.328 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:09.328 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:09.328 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:01:09.328 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:09.329 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-centos-1'.
20190402 11:01:11.011 - INFO - Command exited with return code 0.
20190402 11:01:11.011 - INFO - ${stdout} =
20190402 11:01:11.012 - INFO - ${stderr} =
20190402 11:01:11.012 - INFO - ${rc} = 0
20190402 11:01:11.012 - INFO - +------ END KW: SSHLibrary.Execute Command (1684)
20190402 11:01:11.012 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:11.013 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:01:11.013 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:11.014 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:11.014 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:11.015 - INFO - +----- END KW: OpenStack.Run OS Command (1688)
20190402 11:01:11.015 - INFO - +---- END KW: OpenStack.Set Instance Property (1688)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:01:11.016 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1} | ${instance_property_2} | ${instance_property_3} ]
20190402 11:01:11.017 - INFO - ${properties} = --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout
20190402 11:01:11.017 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:01:11.017 - INFO - +---- START KW: OpenStack.Unset Instance Property [ ${cirros_instance_name} | ${properties} ]
20190402 11:01:11.019 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unset ${key} ${vm_name} | True | 30 sec ]
20190402 11:01:11.020 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:11.021 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:11.021 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:01:11.021 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:11.022 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unset --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout vm-cirros-1'.
20190402 11:01:12.968 - INFO - Command exited with return code 0.
20190402 11:01:12.968 - INFO - ${stdout} =
20190402 11:01:12.969 - INFO - ${stderr} =
20190402 11:01:12.969 - INFO - ${rc} = 0
20190402 11:01:12.969 - INFO - +------ END KW: SSHLibrary.Execute Command (1948)
20190402 11:01:12.969 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:12.970 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:01:12.970 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:12.970 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:12.970 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:12.971 - INFO - +----- END KW: OpenStack.Run OS Command (1952)
20190402 11:01:12.971 - INFO - +---- END KW: OpenStack.Unset Instance Property (1954)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:01:12.971 - INFO - +---- START KW: OpenStack.Unset Instance Property [ ${centos_instance_name} | ${properties} ]
20190402 11:01:12.972 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unset ${key} ${vm_name} | True | 30 sec ]
20190402 11:01:12.972 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:12.972 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:12.972 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:01:12.972 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:12.973 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unset --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout vm-centos-1'.
20190402 11:01:15.054 - INFO - Command exited with return code 0.
20190402 11:01:15.054 - INFO - ${stdout} =
20190402 11:01:15.055 - INFO - ${stderr} =
20190402 11:01:15.055 - INFO - ${rc} = 0
20190402 11:01:15.055 - INFO - +------ END KW: SSHLibrary.Execute Command (2083)
20190402 11:01:15.055 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:15.055 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:01:15.055 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:01:15.055 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:15.056 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:01:15.056 - INFO - +----- END KW: OpenStack.Run OS Command (2085)
20190402 11:01:15.056 - INFO - +---- END KW: OpenStack.Unset Instance Property (2085)
------------------------------------------------------------------------------
20190402 11:01:15.056 - INFO - +--- END TEST: Set Unset Properties Instances (7467)
------------------------------------------------------------------------------
20190402 11:01:15.057 - INFO - +--- START TEST: Evacuate Instances From Hosts [ ]
------------------------------------------------------------------------------
20190402 11:01:15.057 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}' == 'Duplex' | Run Keywords | Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 | ELSE IF | '${CONFIGURATION_TYPE}' == 'MN-Local' or '${CONFIGURATION_TYPE}' == 'MN-External' | Run Keywords | Evacuate Instances | compute-0 | AND | Evacuate Instances | compute-1 ]
20190402 11:01:15.058 - INFO - +----- START KW: BuiltIn.Run Keywords [ Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 ]
20190402 11:01:15.058 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-0 ]
20190402 11:01:15.058 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190402 11:01:15.059 - INFO - ${openstack_cmd} = openstack compute service set
20190402 11:01:15.059 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:15.059 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190402 11:01:15.059 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute
20190402 11:01:15.059 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 11:01:15.059 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:01:15.060 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:15.060 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:15.060 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:15.060 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:15.060 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute'.
20190402 11:01:16.390 - INFO - Command exited with return code 0.
20190402 11:01:16.391 - INFO - ${stdout} =
20190402 11:01:16.391 - INFO - ${stderr} =
20190402 11:01:16.391 - INFO - ${rc} = 0
20190402 11:01:16.391 - INFO - +-------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:01:16.391 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:16.392 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:01:16.392 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:16.393 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:16.393 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:01:16.393 - INFO - +------- END KW: OpenStack.Run OS Command (1334)
20190402 11:01:16.394 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | disabled ]
20190402 11:01:16.394 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | disabled ]
20190402 11:01:16.395 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:01:16.395 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:01:16.395 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:01:16.396 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:16.396 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:01:16.396 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:01:16.396 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:01:16.397 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:16.397 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:16.398 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:16.398 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:16.398 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:16.398 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:01:17.810 - INFO - Command exited with return code 0.
20190402 11:01:17.810 - INFO - ${stdout} = disabled
20190402 11:01:17.810 - INFO - ${stderr} =
20190402 11:01:17.810 - INFO - ${rc} = 0
20190402 11:01:17.811 - INFO - +----------- END KW: SSHLibrary.Execute Command (1412)
20190402 11:01:17.811 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:17.811 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:17.811 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:01:17.811 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:17.812 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:01:17.812 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:17.812 - INFO - +---------- END KW: OpenStack.Run OS Command (1415)
20190402 11:01:17.812 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:17.812 - INFO - ${value} = disabled
20190402 11:01:17.812 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:01:17.813 - INFO - ${current_value} = disabled
20190402 11:01:17.813 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1418)
20190402 11:01:17.813 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:17.813 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:17.813 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:01:17.813 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1419)
20190402 11:01:17.813 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1419)
20190402 11:01:17.813 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | enabled ]
20190402 11:01:17.814 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:01:17.814 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:01:17.815 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:01:17.815 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:01:17.815 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:17.815 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:01:17.815 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:01:17.815 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:01:17.815 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:17.816 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:17.816 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:17.816 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:17.816 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:17.817 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:01:19.148 - INFO - Command exited with return code 0.
20190402 11:01:19.148 - INFO - ${stdout} = disabled
20190402 11:01:19.148 - INFO - ${stderr} =
20190402 11:01:19.148 - INFO - ${rc} = 0
20190402 11:01:19.148 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:01:19.148 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:19.149 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:19.149 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:19.149 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:19.149 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:19.149 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:19.149 - INFO - +---------- END KW: OpenStack.Run OS Command (1334)
20190402 11:01:19.150 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:19.150 - INFO - ${value} = disabled
20190402 11:01:19.150 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:01:19.150 - INFO - ${current_value} = disabled
20190402 11:01:19.150 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1336)
20190402 11:01:19.150 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:19.150 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:19.150 - FAIL - disabled != enabled
20190402 11:01:19.150 - DEBUG - Traceback (most recent call last):
  None
20190402 11:01:19.151 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:01:19.151 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1337)
20190402 11:01:29.151 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:01:29.152 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:01:29.152 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:01:29.152 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:01:29.152 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:29.153 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:01:29.153 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:01:29.153 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:01:29.153 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:29.154 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:29.154 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:29.154 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:01:29.154 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:29.155 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:01:30.537 - INFO - Command exited with return code 0.
20190402 11:01:30.538 - INFO - ${stdout} = disabled
20190402 11:01:30.538 - INFO - ${stderr} =
20190402 11:01:30.538 - INFO - ${rc} = 0
20190402 11:01:30.538 - INFO - +----------- END KW: SSHLibrary.Execute Command (1384)
20190402 11:01:30.538 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:30.539 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:30.539 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:30.539 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:30.539 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:30.539 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:30.539 - INFO - +---------- END KW: OpenStack.Run OS Command (1386)
20190402 11:01:30.539 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:30.540 - INFO - ${value} = disabled
20190402 11:01:30.540 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:01:30.540 - INFO - ${current_value} = disabled
20190402 11:01:30.540 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1388)
20190402 11:01:30.540 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:30.540 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:30.541 - FAIL - disabled != enabled
20190402 11:01:30.541 - DEBUG - Traceback (most recent call last):
  None
20190402 11:01:30.541 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:01:30.541 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1390)
20190402 11:01:40.542 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:01:40.543 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:01:40.543 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:01:40.544 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:01:40.544 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:40.544 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:01:40.545 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:01:40.545 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:01:40.546 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:40.546 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:40.546 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:40.547 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:40.547 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:40.547 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:01:41.929 - INFO - Command exited with return code 0.
20190402 11:01:41.929 - INFO - ${stdout} = disabled
20190402 11:01:41.929 - INFO - ${stderr} =
20190402 11:01:41.929 - INFO - ${rc} = 0
20190402 11:01:41.929 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:01:41.930 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:41.931 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:41.931 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:41.931 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:41.932 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:01:41.932 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:41.933 - INFO - +---------- END KW: OpenStack.Run OS Command (1387)
20190402 11:01:41.933 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:41.933 - INFO - ${value} = disabled
20190402 11:01:41.934 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:01:41.934 - INFO - ${current_value} = disabled
20190402 11:01:41.934 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1391)
20190402 11:01:41.934 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:41.935 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:41.935 - FAIL - disabled != enabled
20190402 11:01:41.935 - DEBUG - Traceback (most recent call last):
  None
20190402 11:01:41.935 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:01:41.936 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1395)
20190402 11:01:51.936 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:01:51.937 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:01:51.938 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:01:51.938 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:01:51.939 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:51.939 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:01:51.940 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:01:51.940 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:01:51.940 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:01:51.941 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:01:51.942 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:01:51.942 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:01:51.942 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:01:51.943 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:01:53.275 - INFO - Command exited with return code 0.
20190402 11:01:53.275 - INFO - ${stdout} = disabled
20190402 11:01:53.275 - INFO - ${stderr} =
20190402 11:01:53.275 - INFO - ${rc} = 0
20190402 11:01:53.275 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:01:53.275 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:01:53.276 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:53.276 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:01:53.276 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:01:53.276 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:01:53.276 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:01:53.276 - INFO - +---------- END KW: OpenStack.Run OS Command (1336)
20190402 11:01:53.276 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:01:53.277 - INFO - ${value} = disabled
20190402 11:01:53.277 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:01:53.277 - INFO - ${current_value} = disabled
20190402 11:01:53.277 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1340)
20190402 11:01:53.277 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:01:53.277 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:01:53.277 - FAIL - disabled != enabled
20190402 11:01:53.277 - DEBUG - Traceback (most recent call last):
  None
20190402 11:01:53.277 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:01:53.277 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1341)
20190402 11:02:03.278 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:02:03.279 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:02:03.280 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:02:03.280 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:02:03.280 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:02:03.280 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:02:03.281 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:02:03.281 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:02:03.281 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:02:03.282 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:02:03.283 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:02:03.283 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:02:03.283 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:02:03.284 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:02:04.616 - INFO - Command exited with return code 0.
20190402 11:02:04.616 - INFO - ${stdout} = disabled
20190402 11:02:04.616 - INFO - ${stderr} =
20190402 11:02:04.616 - INFO - ${rc} = 0
20190402 11:02:04.617 - INFO - +----------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:02:04.617 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:02:04.618 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:04.618 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:02:04.619 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:02:04.619 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:02:04.620 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:04.620 - INFO - +---------- END KW: OpenStack.Run OS Command (1339)
20190402 11:02:04.620 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:02:04.621 - INFO - ${value} = disabled
20190402 11:02:04.621 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:02:04.621 - INFO - ${current_value} = disabled
20190402 11:02:04.622 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1343)
20190402 11:02:04.622 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:02:04.623 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:02:04.623 - FAIL - disabled != enabled
20190402 11:02:04.623 - DEBUG - Traceback (most recent call last):
  None
20190402 11:02:04.623 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:02:04.623 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1345)
20190402 11:02:14.624 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:02:14.626 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:02:14.627 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:02:14.627 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:02:14.627 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:02:14.627 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:02:14.628 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:02:14.628 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:02:14.628 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:02:14.628 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:02:14.628 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:02:14.628 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:02:14.629 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:02:14.629 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:02:16.010 - INFO - Command exited with return code 0.
20190402 11:02:16.010 - INFO - ${stdout} = disabled
20190402 11:02:16.010 - INFO - ${stderr} =
20190402 11:02:16.010 - INFO - ${rc} = 0
20190402 11:02:16.010 - INFO - +----------- END KW: SSHLibrary.Execute Command (1381)
20190402 11:02:16.011 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:02:16.011 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:16.011 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:02:16.012 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:02:16.012 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:02:16.012 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:16.012 - INFO - +---------- END KW: OpenStack.Run OS Command (1384)
20190402 11:02:16.013 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:02:16.013 - INFO - ${value} = disabled
20190402 11:02:16.013 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:02:16.013 - INFO - ${current_value} = disabled
20190402 11:02:16.013 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1387)
20190402 11:02:16.014 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:02:16.014 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:02:16.014 - FAIL - disabled != enabled
20190402 11:02:16.014 - DEBUG - Traceback (most recent call last):
  None
20190402 11:02:16.014 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:02:16.014 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1390)
20190402 11:02:26.015 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:02:26.016 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:02:26.017 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:02:26.017 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:02:26.017 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:02:26.017 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:02:26.018 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:02:26.018 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:02:26.018 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:02:26.019 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:02:26.020 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:02:26.020 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:02:26.020 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:02:26.021 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:02:27.402 - INFO - Command exited with return code 0.
20190402 11:02:27.402 - INFO - ${stdout} = disabled
20190402 11:02:27.402 - INFO - ${stderr} =
20190402 11:02:27.402 - INFO - ${rc} = 0
20190402 11:02:27.402 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:02:27.403 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:02:27.403 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:27.403 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:02:27.403 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:02:27.404 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:02:27.404 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:27.404 - INFO - +---------- END KW: OpenStack.Run OS Command (1386)
20190402 11:02:27.404 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:02:27.404 - INFO - ${value} = disabled
20190402 11:02:27.404 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:02:27.405 - INFO - ${current_value} = disabled
20190402 11:02:27.405 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1389)
20190402 11:02:27.405 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:02:27.405 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:02:27.405 - FAIL - disabled != enabled
20190402 11:02:27.405 - DEBUG - Traceback (most recent call last):
  None
20190402 11:02:27.406 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:02:27.406 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1391)
20190402 11:02:37.406 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:02:37.407 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:02:37.408 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:02:37.408 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:02:37.408 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:02:37.408 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:02:37.409 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:02:37.409 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:02:37.409 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:02:37.410 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:02:37.410 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:02:37.410 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:02:37.410 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:02:37.411 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:02:38.942 - INFO - Command exited with return code 0.
20190402 11:02:38.943 - INFO - ${stdout} = disabled
20190402 11:02:38.943 - INFO - ${stderr} =
20190402 11:02:38.943 - INFO - ${rc} = 0
20190402 11:02:38.943 - INFO - +----------- END KW: SSHLibrary.Execute Command (1533)
20190402 11:02:38.944 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:02:38.945 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:38.945 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:02:38.945 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:02:38.946 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:02:38.946 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:38.946 - INFO - +---------- END KW: OpenStack.Run OS Command (1537)
20190402 11:02:38.946 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:02:38.947 - INFO - ${value} = disabled
20190402 11:02:38.947 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:02:38.948 - INFO - ${current_value} = disabled
20190402 11:02:38.948 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1541)
20190402 11:02:38.948 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:02:38.948 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:02:38.949 - FAIL - disabled != enabled
20190402 11:02:38.949 - DEBUG - Traceback (most recent call last):
  None
20190402 11:02:38.949 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:02:38.949 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1543)
20190402 11:02:48.950 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:02:48.951 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:02:48.952 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:02:48.952 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:02:48.953 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:02:48.953 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:02:48.954 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:02:48.954 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:02:48.954 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:02:48.955 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:02:48.956 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:02:48.956 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:02:48.956 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:02:48.957 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:02:50.289 - INFO - Command exited with return code 0.
20190402 11:02:50.289 - INFO - ${stdout} = disabled
20190402 11:02:50.289 - INFO - ${stderr} =
20190402 11:02:50.289 - INFO - ${rc} = 0
20190402 11:02:50.290 - INFO - +----------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:02:50.290 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:02:50.291 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:50.291 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:02:50.292 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:02:50.292 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:02:50.293 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:02:50.293 - INFO - +---------- END KW: OpenStack.Run OS Command (1339)
20190402 11:02:50.293 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:02:50.294 - INFO - ${value} = disabled
20190402 11:02:50.294 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:02:50.294 - INFO - ${current_value} = disabled
20190402 11:02:50.294 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1343)
20190402 11:02:50.295 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:02:50.295 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:02:50.295 - FAIL - disabled != enabled
20190402 11:02:50.295 - DEBUG - Traceback (most recent call last):
  None
20190402 11:02:50.296 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:02:50.296 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1346)
20190402 11:03:00.296 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:03:00.297 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:00.297 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:00.297 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:00.297 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:00.298 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:00.298 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:03:00.298 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:03:00.298 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:00.298 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:00.299 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:00.299 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:00.299 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:00.299 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:03:01.630 - INFO - Command exited with return code 0.
20190402 11:03:01.630 - INFO - ${stdout} = disabled
20190402 11:03:01.630 - INFO - ${stderr} =
20190402 11:03:01.631 - INFO - ${rc} = 0
20190402 11:03:01.631 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:03:01.631 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:01.631 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:01.631 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:03:01.631 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:01.632 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:03:01.632 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:01.632 - INFO - +---------- END KW: OpenStack.Run OS Command (1334)
20190402 11:03:01.632 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:01.632 - INFO - ${value} = disabled
20190402 11:03:01.632 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:03:01.633 - INFO - ${current_value} = disabled
20190402 11:03:01.633 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1336)
20190402 11:03:01.633 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:01.633 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:01.633 - FAIL - disabled != enabled
20190402 11:03:01.633 - DEBUG - Traceback (most recent call last):
  None
20190402 11:03:01.633 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:03:01.633 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1337)
20190402 11:03:11.634 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:03:11.634 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:11.634 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:11.635 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:11.635 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:11.635 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:11.635 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:03:11.635 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:03:11.635 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:11.636 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:11.636 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:11.636 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:11.636 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:11.636 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:03:12.966 - INFO - Command exited with return code 0.
20190402 11:03:12.967 - INFO - ${stdout} = disabled
20190402 11:03:12.967 - INFO - ${stderr} =
20190402 11:03:12.967 - INFO - ${rc} = 0
20190402 11:03:12.967 - INFO - +----------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:03:12.967 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:12.967 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:12.968 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:03:12.968 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:12.968 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:03:12.968 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:12.968 - INFO - +---------- END KW: OpenStack.Run OS Command (1333)
20190402 11:03:12.968 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:12.968 - INFO - ${value} = disabled
20190402 11:03:12.969 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:03:12.969 - INFO - ${current_value} = disabled
20190402 11:03:12.969 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1335)
20190402 11:03:12.969 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:12.969 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:12.969 - FAIL - disabled != enabled
20190402 11:03:12.969 - DEBUG - Traceback (most recent call last):
  None
20190402 11:03:12.969 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:03:12.969 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1335)
20190402 11:03:22.970 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:03:22.971 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:22.973 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:22.973 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:22.974 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:22.974 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:22.975 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:03:22.976 - INFO - +---------- END KW: BuiltIn.Catenate (2)
20190402 11:03:22.976 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:22.977 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:22.977 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:22.978 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:22.978 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:22.979 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:03:24.311 - INFO - Command exited with return code 0.
20190402 11:03:24.312 - INFO - ${stdout} = disabled
20190402 11:03:24.312 - INFO - ${stderr} =
20190402 11:03:24.312 - INFO - ${rc} = 0
20190402 11:03:24.312 - INFO - +----------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:03:24.312 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:24.313 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:24.313 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:03:24.313 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:24.313 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:03:24.313 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:24.314 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:03:24.314 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:24.314 - INFO - ${value} = disabled
20190402 11:03:24.314 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:03:24.314 - INFO - ${current_value} = disabled
20190402 11:03:24.314 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1343)
20190402 11:03:24.314 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:24.315 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:24.315 - FAIL - disabled != enabled
20190402 11:03:24.315 - DEBUG - Traceback (most recent call last):
  None
20190402 11:03:24.315 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:03:24.315 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1345)
20190402 11:03:34.315 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:03:34.316 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:34.316 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:34.316 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:34.317 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:34.317 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:34.317 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:03:34.317 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:03:34.317 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:34.317 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:34.318 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:34.318 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:34.318 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:34.318 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:03:35.699 - INFO - Command exited with return code 0.
20190402 11:03:35.699 - INFO - ${stdout} = enabled
20190402 11:03:35.700 - INFO - ${stderr} =
20190402 11:03:35.700 - INFO - ${rc} = 0
20190402 11:03:35.700 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:03:35.700 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:35.701 - INFO - ${res} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:03:35.701 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:03:35.702 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:35.702 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:03:35.703 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:03:35.703 - INFO - +---------- END KW: OpenStack.Run OS Command (1386)
20190402 11:03:35.703 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:35.704 - INFO - ${value} = enabled
20190402 11:03:35.704 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:03:35.704 - INFO - ${current_value} = enabled
20190402 11:03:35.705 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1388)
20190402 11:03:35.705 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:35.706 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:35.706 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:03:35.706 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1391)
20190402 11:03:35.706 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (137893)
20190402 11:03:35.707 - INFO - +------ END KW: OpenStack.Evacuate Instances (140649)
20190402 11:03:35.707 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-1 ]
20190402 11:03:35.708 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190402 11:03:35.708 - INFO - ${openstack_cmd} = openstack compute service set
20190402 11:03:35.708 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:35.708 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190402 11:03:35.709 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-1 nova-compute
20190402 11:03:35.709 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:03:35.709 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:03:35.710 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:35.710 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:35.711 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:35.711 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:35.712 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-1 nova-compute'.
20190402 11:03:37.108 - INFO - Command exited with return code 0.
20190402 11:03:37.108 - INFO - ${stdout} =
20190402 11:03:37.108 - INFO - ${stderr} =
20190402 11:03:37.108 - INFO - ${rc} = 0
20190402 11:03:37.108 - INFO - +-------- END KW: SSHLibrary.Execute Command (1397)
20190402 11:03:37.108 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:37.109 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:03:37.109 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:03:37.109 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:37.109 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:03:37.109 - INFO - +------- END KW: OpenStack.Run OS Command (1400)
20190402 11:03:37.109 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | disabled ]
20190402 11:03:37.110 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | disabled ]
20190402 11:03:37.110 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:37.110 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:37.110 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:37.111 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:37.111 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:37.111 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:03:37.111 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:03:37.111 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:37.111 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:37.112 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:37.112 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:37.112 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:37.112 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:03:38.443 - INFO - Command exited with return code 0.
20190402 11:03:38.444 - INFO - ${stdout} = disabled
20190402 11:03:38.444 - INFO - ${stderr} =
20190402 11:03:38.444 - INFO - ${rc} = 0
20190402 11:03:38.444 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:03:38.444 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:38.446 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:38.446 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:03:38.446 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:38.447 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:03:38.447 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:38.448 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:03:38.448 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:38.448 - INFO - ${value} = disabled
20190402 11:03:38.449 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:03:38.449 - INFO - ${current_value} = disabled
20190402 11:03:38.449 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1339)
20190402 11:03:38.449 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:38.450 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:38.450 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:03:38.450 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1340)
20190402 11:03:38.450 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1341)
20190402 11:03:38.451 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | enabled ]
20190402 11:03:38.452 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:03:38.452 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:38.453 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:38.453 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:38.453 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:38.453 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:38.454 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:03:38.454 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:03:38.454 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:38.455 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:38.455 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:38.455 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:03:38.456 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:38.456 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:03:39.794 - INFO - Command exited with return code 0.
20190402 11:03:39.795 - INFO - ${stdout} = disabled
20190402 11:03:39.795 - INFO - ${stderr} =
20190402 11:03:39.795 - INFO - ${rc} = 0
20190402 11:03:39.795 - INFO - +----------- END KW: SSHLibrary.Execute Command (1339)
20190402 11:03:39.795 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:39.797 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:39.797 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:03:39.797 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:39.798 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:03:39.798 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:39.798 - INFO - +---------- END KW: OpenStack.Run OS Command (1344)
20190402 11:03:39.799 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:39.799 - INFO - ${value} = disabled
20190402 11:03:39.799 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:03:39.800 - INFO - ${current_value} = disabled
20190402 11:03:39.800 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1348)
20190402 11:03:39.800 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:39.801 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:39.801 - FAIL - disabled != enabled
20190402 11:03:39.801 - DEBUG - Traceback (most recent call last):
  None
20190402 11:03:39.801 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:03:39.802 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1350)
20190402 11:03:49.802 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:03:49.803 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:03:49.804 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:03:49.804 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:03:49.805 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:49.805 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:03:49.806 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:03:49.806 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:03:49.806 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:03:49.807 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:03:49.808 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:03:49.808 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:03:49.808 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:03:49.809 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:03:51.140 - INFO - Command exited with return code 0.
20190402 11:03:51.141 - INFO - ${stdout} = disabled
20190402 11:03:51.141 - INFO - ${stderr} =
20190402 11:03:51.141 - INFO - ${rc} = 0
20190402 11:03:51.141 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:03:51.141 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:03:51.142 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:51.143 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:03:51.143 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:03:51.144 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:03:51.144 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:03:51.144 - INFO - +---------- END KW: OpenStack.Run OS Command (1338)
20190402 11:03:51.145 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:03:51.145 - INFO - ${value} = disabled
20190402 11:03:51.145 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:03:51.146 - INFO - ${current_value} = disabled
20190402 11:03:51.146 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1343)
20190402 11:03:51.146 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:03:51.147 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:03:51.147 - FAIL - disabled != enabled
20190402 11:03:51.148 - DEBUG - Traceback (most recent call last):
  None
20190402 11:03:51.148 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:03:51.148 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1346)
20190402 11:04:01.149 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:04:01.149 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:04:01.149 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:04:01.150 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:04:01.150 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:04:01.150 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:04:01.150 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:04:01.150 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:04:01.150 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:04:01.151 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:04:01.151 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:04:01.151 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:01.151 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:04:01.152 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:04:02.632 - INFO - Command exited with return code 0.
20190402 11:04:02.633 - INFO - ${stdout} = disabled
20190402 11:04:02.633 - INFO - ${stderr} =
20190402 11:04:02.633 - INFO - ${rc} = 0
20190402 11:04:02.633 - INFO - +----------- END KW: SSHLibrary.Execute Command (1482)
20190402 11:04:02.633 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:04:02.634 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:02.634 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:04:02.634 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:04:02.634 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:04:02.635 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:02.635 - INFO - +---------- END KW: OpenStack.Run OS Command (1485)
20190402 11:04:02.635 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:04:02.635 - INFO - ${value} = disabled
20190402 11:04:02.635 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:04:02.636 - INFO - ${current_value} = disabled
20190402 11:04:02.636 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1487)
20190402 11:04:02.636 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:04:02.636 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:04:02.636 - FAIL - disabled != enabled
20190402 11:04:02.636 - DEBUG - Traceback (most recent call last):
  None
20190402 11:04:02.636 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:04:02.637 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1489)
20190402 11:04:12.637 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:04:12.637 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:04:12.638 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:04:12.638 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:04:12.638 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:12.638 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:04:12.638 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:04:12.638 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:04:12.638 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:04:12.639 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:04:12.639 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:04:12.639 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:12.639 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:04:12.639 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:04:13.971 - INFO - Command exited with return code 0.
20190402 11:04:13.971 - INFO - ${stdout} = disabled
20190402 11:04:13.971 - INFO - ${stderr} =
20190402 11:04:13.971 - INFO - ${rc} = 0
20190402 11:04:13.972 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:04:13.972 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:04:13.973 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:13.973 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:04:13.974 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:04:13.974 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:04:13.975 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:13.975 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:04:13.975 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:04:13.976 - INFO - ${value} = disabled
20190402 11:04:13.976 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:04:13.976 - INFO - ${current_value} = disabled
20190402 11:04:13.976 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1339)
20190402 11:04:13.977 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:04:13.977 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:04:13.977 - FAIL - disabled != enabled
20190402 11:04:13.977 - DEBUG - Traceback (most recent call last):
  None
20190402 11:04:13.977 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:04:13.978 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1341)
20190402 11:04:23.978 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:04:23.979 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:04:23.980 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:04:23.981 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:04:23.981 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:04:23.981 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:04:23.982 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:04:23.982 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:04:23.982 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:04:23.983 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:04:23.984 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:04:23.984 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:04:23.984 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:04:23.985 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:04:25.316 - INFO - Command exited with return code 0.
20190402 11:04:25.317 - INFO - ${stdout} = disabled
20190402 11:04:25.317 - INFO - ${stderr} =
20190402 11:04:25.317 - INFO - ${rc} = 0
20190402 11:04:25.317 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:04:25.318 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:04:25.318 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:25.319 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:04:25.319 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:04:25.319 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:04:25.319 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:25.319 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:04:25.319 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:04:25.320 - INFO - ${value} = disabled
20190402 11:04:25.320 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:04:25.320 - INFO - ${current_value} = disabled
20190402 11:04:25.320 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1341)
20190402 11:04:25.320 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:04:25.320 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:04:25.320 - FAIL - disabled != enabled
20190402 11:04:25.320 - DEBUG - Traceback (most recent call last):
  None
20190402 11:04:25.320 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:04:25.321 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1343)
20190402 11:04:35.321 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:04:35.322 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:04:35.322 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:04:35.322 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:04:35.322 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:35.323 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:04:35.323 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:04:35.323 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:04:35.323 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:04:35.324 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:04:35.324 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:04:35.324 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:35.324 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:04:35.325 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:04:36.705 - INFO - Command exited with return code 0.
20190402 11:04:36.706 - INFO - ${stdout} = disabled
20190402 11:04:36.706 - INFO - ${stderr} =
20190402 11:04:36.706 - INFO - ${rc} = 0
20190402 11:04:36.706 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:04:36.706 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:04:36.706 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:36.707 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:04:36.707 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:04:36.707 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:04:36.707 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:36.707 - INFO - +---------- END KW: OpenStack.Run OS Command (1384)
20190402 11:04:36.707 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:04:36.707 - INFO - ${value} = disabled
20190402 11:04:36.707 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:04:36.708 - INFO - ${current_value} = disabled
20190402 11:04:36.708 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1386)
20190402 11:04:36.708 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:04:36.708 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:04:36.708 - FAIL - disabled != enabled
20190402 11:04:36.708 - DEBUG - Traceback (most recent call last):
  None
20190402 11:04:36.708 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:04:36.708 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1387)
20190402 11:04:46.709 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:04:46.710 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:04:46.711 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:04:46.711 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:04:46.711 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:46.712 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:04:46.712 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:04:46.713 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:04:46.713 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:04:46.714 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:04:46.714 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:04:46.715 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:04:46.715 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:04:46.716 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:04:51.158 - INFO - Command exited with return code 0.
20190402 11:04:51.159 - INFO - ${stdout} = disabled
20190402 11:04:51.159 - INFO - ${stderr} =
20190402 11:04:51.159 - INFO - ${rc} = 0
20190402 11:04:51.159 - INFO - +----------- END KW: SSHLibrary.Execute Command (4444)
20190402 11:04:51.159 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:04:51.159 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:51.159 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:04:51.159 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:04:51.160 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:04:51.160 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:04:51.160 - INFO - +---------- END KW: OpenStack.Run OS Command (4447)
20190402 11:04:51.160 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:04:51.160 - INFO - ${value} = disabled
20190402 11:04:51.160 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:04:51.160 - INFO - ${current_value} = disabled
20190402 11:04:51.161 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (4450)
20190402 11:04:51.161 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:04:51.161 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:04:51.161 - FAIL - disabled != enabled
20190402 11:04:51.161 - DEBUG - Traceback (most recent call last):
  None
20190402 11:04:51.161 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:04:51.161 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (4452)
20190402 11:05:01.162 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:05:01.162 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:05:01.162 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:05:01.163 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:05:01.163 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:01.163 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:05:01.163 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:05:01.163 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:05:01.163 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:01.164 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:01.164 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:01.164 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:01.164 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:01.164 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:05:03.297 - INFO - Command exited with return code 0.
20190402 11:05:03.298 - INFO - ${stdout} = disabled
20190402 11:05:03.298 - INFO - ${stderr} =
20190402 11:05:03.298 - INFO - ${rc} = 0
20190402 11:05:03.298 - INFO - +----------- END KW: SSHLibrary.Execute Command (2134)
20190402 11:05:03.299 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:03.300 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:05:03.300 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:03.301 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:03.302 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:05:03.302 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:05:03.302 - INFO - +---------- END KW: OpenStack.Run OS Command (2139)
20190402 11:05:03.302 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:03.303 - INFO - ${value} = disabled
20190402 11:05:03.303 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:05:03.303 - INFO - ${current_value} = disabled
20190402 11:05:03.303 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (2141)
20190402 11:05:03.303 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:05:03.303 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:05:03.303 - FAIL - disabled != enabled
20190402 11:05:03.303 - DEBUG - Traceback (most recent call last):
  None
20190402 11:05:03.303 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:05:03.304 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (2143)
20190402 11:05:13.304 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:05:13.304 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:05:13.305 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:05:13.305 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:05:13.305 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:13.305 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:05:13.305 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:05:13.305 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:05:13.305 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:13.306 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:13.306 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:13.306 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:13.306 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:13.306 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:05:15.139 - INFO - Command exited with return code 0.
20190402 11:05:15.139 - INFO - ${stdout} = disabled
20190402 11:05:15.140 - INFO - ${stderr} =
20190402 11:05:15.140 - INFO - ${rc} = 0
20190402 11:05:15.140 - INFO - +----------- END KW: SSHLibrary.Execute Command (1834)
20190402 11:05:15.140 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:15.140 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:05:15.141 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:15.141 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:15.141 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:15.141 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:05:15.141 - INFO - +---------- END KW: OpenStack.Run OS Command (1836)
20190402 11:05:15.141 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:15.142 - INFO - ${value} = disabled
20190402 11:05:15.142 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:05:15.142 - INFO - ${current_value} = disabled
20190402 11:05:15.142 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1838)
20190402 11:05:15.142 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:05:15.142 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:05:15.143 - FAIL - disabled != enabled
20190402 11:05:15.143 - DEBUG - Traceback (most recent call last):
  None
20190402 11:05:15.143 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:05:15.143 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1839)
20190402 11:05:25.143 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:05:25.144 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:05:25.145 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:05:25.145 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:05:25.145 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:25.145 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:05:25.145 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:05:25.145 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:05:25.145 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:25.146 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:25.146 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:25.146 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:25.146 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:25.147 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:05:26.928 - INFO - Command exited with return code 0.
20190402 11:05:26.929 - INFO - ${stdout} = disabled
20190402 11:05:26.929 - INFO - ${stderr} =
20190402 11:05:26.929 - INFO - ${rc} = 0
20190402 11:05:26.930 - INFO - +----------- END KW: SSHLibrary.Execute Command (1783)
20190402 11:05:26.930 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:26.931 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:05:26.931 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:26.932 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:26.932 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:26.933 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:05:26.933 - INFO - +---------- END KW: OpenStack.Run OS Command (1788)
20190402 11:05:26.933 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:26.934 - INFO - ${value} = disabled
20190402 11:05:26.934 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:05:26.935 - INFO - ${current_value} = disabled
20190402 11:05:26.935 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1791)
20190402 11:05:26.935 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:05:26.936 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:05:26.936 - FAIL - disabled != enabled
20190402 11:05:26.936 - DEBUG - Traceback (most recent call last):
  None
20190402 11:05:26.936 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:05:26.936 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1793)
20190402 11:05:36.937 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:05:36.937 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:05:36.938 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:05:36.938 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:05:36.938 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:36.938 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:05:36.939 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:05:36.939 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:05:36.939 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:36.939 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:36.940 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:36.940 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:36.940 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:36.940 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:05:38.724 - INFO - Command exited with return code 0.
20190402 11:05:38.725 - INFO - ${stdout} = enabled
20190402 11:05:38.725 - INFO - ${stderr} =
20190402 11:05:38.725 - INFO - ${rc} = 0
20190402 11:05:38.725 - INFO - +----------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:05:38.725 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:38.726 - INFO - ${res} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:05:38.726 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:38.726 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:38.726 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:38.726 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:05:38.726 - INFO - +---------- END KW: OpenStack.Run OS Command (1787)
20190402 11:05:38.727 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:38.727 - INFO - ${value} = enabled
20190402 11:05:38.727 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:05:38.727 - INFO - ${current_value} = enabled
20190402 11:05:38.727 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1790)
20190402 11:05:38.727 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:05:38.727 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:05:38.727 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:05:38.727 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1790)
20190402 11:05:38.728 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (120277)
20190402 11:05:38.728 - INFO - +------ END KW: OpenStack.Evacuate Instances (123021)
20190402 11:05:38.728 - INFO - +----- END KW: BuiltIn.Run Keywords (263670)
20190402 11:05:38.728 - INFO - +---- END KW: BuiltIn.Run Keyword If (263671)
------------------------------------------------------------------------------
20190402 11:05:38.728 - INFO - +--- END TEST: Evacuate Instances From Hosts (263672)
------------------------------------------------------------------------------
20190402 11:05:38.729 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190402 11:05:38.730 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190402 11:05:38.730 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190402 11:05:38.731 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:05:38.731 - INFO - ${openstack_cmd} = openstack server list
20190402 11:05:38.731 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:05:38.731 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:05:38.732 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:05:38.732 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:05:38.732 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:05:38.732 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:38.733 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:38.733 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:38.733 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:38.733 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:05:40.882 - INFO - Command exited with return code 0.
20190402 11:05:40.882 - INFO - ${stdout} = 

vm-centos-1
vm-cirros-1
20190402 11:05:40.883 - INFO - ${stderr} =
20190402 11:05:40.883 - INFO - ${rc} = 0
20190402 11:05:40.883 - INFO - +------- END KW: SSHLibrary.Execute Command (2150)
20190402 11:05:40.884 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:40.886 - INFO - ${res} = {u'stdout': u'\n\nvm-centos-1\nvm-cirros-1', u'stderr': u'', u'rc': 0}
20190402 11:05:40.886 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:05:40.886 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:40.887 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:05:40.887 - INFO - &{result} = { stdout=

vm-centos-1
vm-cirros-1 | stderr= | rc=0 }
20190402 11:05:40.888 - INFO - +------ END KW: OpenStack.Run OS Command (2156)
20190402 11:05:40.888 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:05:40.889 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:40.889 - INFO - ${response} = 

vm-centos-1
vm-cirros-1
20190402 11:05:40.889 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:05:40.890 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:05:40.890 - INFO - @{res_in_list} = [ vm-centos-1 | vm-cirros-1 ]
20190402 11:05:40.890 - INFO - +------- END KW: String.Split String (0)
20190402 11:05:40.891 - INFO - @{vm_list} = [ vm-centos-1 | vm-cirros-1 ]
20190402 11:05:40.891 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:05:40.891 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:05:40.891 - INFO - +------- START KW: ${vm} = vm-centos-1 [ ]
20190402 11:05:40.891 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:05:40.892 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:05:40.892 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:05:40.893 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:40.893 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:05:40.893 - INFO - ${cmd} = openstack server delete vm-centos-1
20190402 11:05:40.893 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:05:40.894 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:40.895 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:40.895 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:40.895 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:40.895 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:40.896 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete vm-centos-1'.
20190402 11:05:42.793 - INFO - Command exited with return code 0.
20190402 11:05:42.793 - INFO - ${stdout} =
20190402 11:05:42.794 - INFO - ${stderr} =
20190402 11:05:42.794 - INFO - ${rc} = 0
20190402 11:05:42.794 - INFO - +---------- END KW: SSHLibrary.Execute Command (1899)
20190402 11:05:42.794 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:42.795 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:42.795 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:42.795 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:42.795 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:42.795 - INFO - +--------- END KW: OpenStack.Run OS Command (1901)
20190402 11:05:42.796 - INFO - +-------- END KW: OpenStack.Delete Instance (1905)
20190402 11:05:42.796 - INFO - +------- END KW: ${vm} = vm-centos-1 (1905)
20190402 11:05:42.796 - INFO - +------- START KW: ${vm} = vm-cirros-1 [ ]
20190402 11:05:42.796 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:05:42.796 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:05:42.797 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:05:42.797 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:42.797 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:05:42.797 - INFO - ${cmd} = openstack server delete vm-cirros-1
20190402 11:05:42.797 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:05:42.797 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:42.798 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:42.798 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:42.799 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:42.799 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:42.799 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete vm-cirros-1'.
20190402 11:05:44.694 - INFO - Command exited with return code 0.
20190402 11:05:44.694 - INFO - ${stdout} =
20190402 11:05:44.694 - INFO - ${stderr} =
20190402 11:05:44.694 - INFO - ${rc} = 0
20190402 11:05:44.694 - INFO - +---------- END KW: SSHLibrary.Execute Command (1895)
20190402 11:05:44.694 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:44.695 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:44.695 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:44.695 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:44.695 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:44.695 - INFO - +--------- END KW: OpenStack.Run OS Command (1898)
20190402 11:05:44.695 - INFO - +-------- END KW: OpenStack.Delete Instance (1899)
20190402 11:05:44.695 - INFO - +------- END KW: ${vm} = vm-cirros-1 (1899)
20190402 11:05:44.696 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (3805)
20190402 11:05:44.696 - INFO - +----- END KW: OpenStack.Delete All Instances (5966)
20190402 11:05:44.696 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190402 11:05:44.696 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190402 11:05:44.696 - INFO - ${openstack_cmd} = openstack image list
20190402 11:05:44.696 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:05:44.696 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190402 11:05:44.697 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190402 11:05:44.697 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:05:44.697 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:05:44.698 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:44.698 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:44.698 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:44.698 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:44.698 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190402 11:05:46.161 - INFO - Command exited with return code 0.
20190402 11:05:46.162 - INFO - ${stdout} = 

centos
cirros
20190402 11:05:46.162 - INFO - ${stderr} =
20190402 11:05:46.162 - INFO - ${rc} = 0
20190402 11:05:46.162 - INFO - +------- END KW: SSHLibrary.Execute Command (1464)
20190402 11:05:46.162 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:46.163 - INFO - ${res} = {u'stdout': u'\n\ncentos\ncirros', u'stderr': u'', u'rc': 0}
20190402 11:05:46.163 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:46.163 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:46.163 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:46.163 - INFO - &{result} = { stdout=

centos
cirros | stderr= | rc=0 }
20190402 11:05:46.164 - INFO - +------ END KW: OpenStack.Run OS Command (1466)
20190402 11:05:46.164 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:05:46.164 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:46.164 - INFO - ${response} = 

centos
cirros
20190402 11:05:46.164 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:05:46.164 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:05:46.165 - INFO - @{res_in_list} = [ centos | cirros ]
20190402 11:05:46.165 - INFO - +------- END KW: String.Split String (1)
20190402 11:05:46.165 - INFO - @{image_list} = [ centos | cirros ]
20190402 11:05:46.165 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:05:46.165 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190402 11:05:46.165 - INFO - +------- START KW: ${image} = centos [ ]
20190402 11:05:46.165 - INFO - +-------- START KW: OpenStack.Delete Image [ ${image} ]
20190402 11:05:46.166 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack image delete ]
20190402 11:05:46.166 - INFO - ${openstack_cmd} = openstack image delete
20190402 11:05:46.166 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:46.166 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${image} ]
20190402 11:05:46.166 - INFO - ${cmd} = openstack image delete centos
20190402 11:05:46.166 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:05:46.166 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:46.167 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:46.167 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:46.167 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:05:46.167 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:46.167 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image delete centos'.
20190402 11:05:48.630 - INFO - Command exited with return code 0.
20190402 11:05:48.631 - INFO - ${stdout} =
20190402 11:05:48.631 - INFO - ${stderr} =
20190402 11:05:48.631 - INFO - ${rc} = 0
20190402 11:05:48.632 - INFO - +---------- END KW: SSHLibrary.Execute Command (2464)
20190402 11:05:48.632 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:48.633 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:48.633 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:48.634 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:48.635 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:48.635 - INFO - +--------- END KW: OpenStack.Run OS Command (2469)
20190402 11:05:48.635 - INFO - +-------- END KW: OpenStack.Delete Image (2470)
20190402 11:05:48.635 - INFO - +------- END KW: ${image} = centos (2470)
20190402 11:05:48.636 - INFO - +------- START KW: ${image} = cirros [ ]
20190402 11:05:48.636 - INFO - +-------- START KW: OpenStack.Delete Image [ ${image} ]
20190402 11:05:48.637 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack image delete ]
20190402 11:05:48.637 - INFO - ${openstack_cmd} = openstack image delete
20190402 11:05:48.637 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:48.638 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${image} ]
20190402 11:05:48.638 - INFO - ${cmd} = openstack image delete cirros
20190402 11:05:48.638 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:05:48.639 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:48.640 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:48.640 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:48.640 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:48.641 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:48.642 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image delete cirros'.
20190402 11:05:50.590 - INFO - Command exited with return code 0.
20190402 11:05:50.590 - INFO - ${stdout} =
20190402 11:05:50.590 - INFO - ${stderr} =
20190402 11:05:50.591 - INFO - ${rc} = 0
20190402 11:05:50.591 - INFO - +---------- END KW: SSHLibrary.Execute Command (1950)
20190402 11:05:50.591 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:50.591 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:50.592 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:50.592 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:50.592 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:50.593 - INFO - +--------- END KW: OpenStack.Run OS Command (1954)
20190402 11:05:50.593 - INFO - +-------- END KW: OpenStack.Delete Image (1957)
20190402 11:05:50.593 - INFO - +------- END KW: ${image} = cirros (1957)
20190402 11:05:50.593 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (4428)
20190402 11:05:50.593 - INFO - +----- END KW: OpenStack.Delete All Images (5897)
20190402 11:05:50.593 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190402 11:05:50.594 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190402 11:05:50.594 - INFO - ${openstack_cmd} = openstack flavor list
20190402 11:05:50.594 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:05:50.594 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190402 11:05:50.594 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190402 11:05:50.594 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:05:50.595 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:05:50.595 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:50.595 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:50.595 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:50.595 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:50.596 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190402 11:05:51.941 - INFO - Command exited with return code 0.
20190402 11:05:51.941 - INFO - ${stdout} = 

f2.small
f1.small
f1.medium
20190402 11:05:51.941 - INFO - ${stderr} =
20190402 11:05:51.941 - INFO - ${rc} = 0
20190402 11:05:51.941 - INFO - +------- END KW: SSHLibrary.Execute Command (1346)
20190402 11:05:51.941 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:51.942 - INFO - ${res} = {u'stdout': u'\n\nf2.small\nf1.small\nf1.medium', u'stderr': u'', u'rc': 0}
20190402 11:05:51.942 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:51.942 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:51.943 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:05:51.943 - INFO - &{result} = { stdout=

f2.small
f1.small
f1.medium | stderr= | rc=0 }
20190402 11:05:51.943 - INFO - +------ END KW: OpenStack.Run OS Command (1348)
20190402 11:05:51.943 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:05:51.944 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:51.944 - INFO - ${response} = 

f2.small
f1.small
f1.medium
20190402 11:05:51.944 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:05:51.944 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:05:51.944 - INFO - @{res_in_list} = [ f2.small | f1.small | f1.medium ]
20190402 11:05:51.945 - INFO - +------- END KW: String.Split String (0)
20190402 11:05:51.945 - INFO - @{flavor_list} = [ f2.small | f1.small | f1.medium ]
20190402 11:05:51.945 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:05:51.945 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190402 11:05:51.945 - INFO - +------- START KW: ${flavor} = f2.small [ ]
20190402 11:05:51.945 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:05:51.946 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:05:51.946 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:05:51.946 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:51.947 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:05:51.947 - INFO - ${cmd} = openstack flavor delete f2.small
20190402 11:05:51.947 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:05:51.947 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:51.948 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:51.948 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:51.948 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:51.948 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:51.949 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f2.small'.
20190402 11:05:53.378 - INFO - Command exited with return code 0.
20190402 11:05:53.379 - INFO - ${stdout} =
20190402 11:05:53.379 - INFO - ${stderr} =
20190402 11:05:53.379 - INFO - ${rc} = 0
20190402 11:05:53.379 - INFO - +---------- END KW: SSHLibrary.Execute Command (1431)
20190402 11:05:53.380 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:53.381 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:53.381 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:53.382 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:53.383 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:05:53.384 - INFO - +--------- END KW: OpenStack.Run OS Command (1436)
20190402 11:05:53.384 - INFO - +-------- END KW: OpenStack.Delete Flavor (1439)
20190402 11:05:53.384 - INFO - +------- END KW: ${flavor} = f2.small (1439)
20190402 11:05:53.385 - INFO - +------- START KW: ${flavor} = f1.small [ ]
20190402 11:05:53.385 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:05:53.386 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:05:53.386 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:05:53.386 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:53.386 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:05:53.387 - INFO - ${cmd} = openstack flavor delete f1.small
20190402 11:05:53.387 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:05:53.387 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:53.389 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:53.389 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:53.389 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:53.389 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:53.390 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f1.small'.
20190402 11:05:54.873 - INFO - Command exited with return code 0.
20190402 11:05:54.873 - INFO - ${stdout} =
20190402 11:05:54.873 - INFO - ${stderr} =
20190402 11:05:54.873 - INFO - ${rc} = 0
20190402 11:05:54.873 - INFO - +---------- END KW: SSHLibrary.Execute Command (1484)
20190402 11:05:54.873 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:54.874 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:54.874 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:54.874 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:54.874 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:05:54.874 - INFO - +--------- END KW: OpenStack.Run OS Command (1487)
20190402 11:05:54.875 - INFO - +-------- END KW: OpenStack.Delete Flavor (1489)
20190402 11:05:54.875 - INFO - +------- END KW: ${flavor} = f1.small (1491)
20190402 11:05:54.875 - INFO - +------- START KW: ${flavor} = f1.medium [ ]
20190402 11:05:54.875 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:05:54.875 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:05:54.875 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:05:54.875 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:54.875 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:05:54.876 - INFO - ${cmd} = openstack flavor delete f1.medium
20190402 11:05:54.876 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:05:54.876 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:54.876 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:54.876 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:54.876 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:54.876 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:54.877 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f1.medium'.
20190402 11:05:56.358 - INFO - Command exited with return code 0.
20190402 11:05:56.358 - INFO - ${stdout} =
20190402 11:05:56.358 - INFO - ${stderr} =
20190402 11:05:56.358 - INFO - ${rc} = 0
20190402 11:05:56.358 - INFO - +---------- END KW: SSHLibrary.Execute Command (1482)
20190402 11:05:56.359 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:56.359 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:05:56.359 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:56.359 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:56.360 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:05:56.360 - INFO - +--------- END KW: OpenStack.Run OS Command (1484)
20190402 11:05:56.360 - INFO - +-------- END KW: OpenStack.Delete Flavor (1485)
20190402 11:05:56.360 - INFO - +------- END KW: ${flavor} = f1.medium (1485)
20190402 11:05:56.360 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (4415)
20190402 11:05:56.360 - INFO - +----- END KW: OpenStack.Delete All Flavors (5767)
20190402 11:05:56.361 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190402 11:05:56.361 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:05:56.361 - INFO - ${openstack_cmd} = openstack network list
20190402 11:05:56.361 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:05:56.361 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190402 11:05:56.362 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190402 11:05:56.362 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:05:56.362 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:05:56.362 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:56.362 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:56.363 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:56.363 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:56.363 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190402 11:05:57.945 - INFO - Command exited with return code 0.
20190402 11:05:57.945 - INFO - ${stdout} = 

network-1
20190402 11:05:57.945 - INFO - ${stderr} =
20190402 11:05:57.945 - INFO - ${rc} = 0
20190402 11:05:57.946 - INFO - +------- END KW: SSHLibrary.Execute Command (1582)
20190402 11:05:57.946 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:05:57.947 - INFO - ${res} = {u'stdout': u'\n\nnetwork-1', u'stderr': u'', u'rc': 0}
20190402 11:05:57.947 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:05:57.948 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:05:57.949 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:05:57.949 - INFO - &{result} = { stdout=

network-1 | stderr= | rc=0 }
20190402 11:05:57.950 - INFO - +------ END KW: OpenStack.Run OS Command (1587)
20190402 11:05:57.950 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:05:57.951 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:05:57.951 - INFO - ${response} = 

network-1
20190402 11:05:57.951 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:05:57.952 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:05:57.952 - INFO - @{res_in_list} = [ network-1 ]
20190402 11:05:57.952 - INFO - +------- END KW: String.Split String (0)
20190402 11:05:57.953 - INFO - @{network_list} = [ network-1 ]
20190402 11:05:57.953 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:05:57.953 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190402 11:05:57.953 - INFO - +------- START KW: ${network} = network-1 [ ]
20190402 11:05:57.953 - INFO - +-------- START KW: OpenStack.Delete Network [ ${network} ]
20190402 11:05:57.954 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack network delete ]
20190402 11:05:57.954 - INFO - ${openstack_cmd} = openstack network delete
20190402 11:05:57.955 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:57.955 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network} ]
20190402 11:05:57.955 - INFO - ${cmd} = openstack network delete network-1
20190402 11:05:57.956 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:05:57.956 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:05:57.958 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:05:57.958 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:05:57.959 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:05:57.959 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:05:57.960 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network delete network-1'.
20190402 11:06:00.693 - INFO - Command exited with return code 0.
20190402 11:06:00.694 - INFO - ${stdout} =
20190402 11:06:00.694 - INFO - ${stderr} =
20190402 11:06:00.694 - INFO - ${rc} = 0
20190402 11:06:00.694 - INFO - +---------- END KW: SSHLibrary.Execute Command (2735)
20190402 11:06:00.694 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:00.694 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:06:00.694 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:06:00.695 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:00.695 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:00.695 - INFO - +--------- END KW: OpenStack.Run OS Command (2739)
20190402 11:06:00.695 - INFO - +-------- END KW: OpenStack.Delete Network (2742)
20190402 11:06:00.695 - INFO - +------- END KW: ${network} = network-1 (2742)
20190402 11:06:00.695 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (2742)
20190402 11:06:00.696 - INFO - +----- END KW: OpenStack.Delete All Networks (4335)
20190402 11:06:00.696 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190402 11:06:00.696 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190402 11:06:00.696 - INFO - ${openstack_cmd} = openstack keypair list
20190402 11:06:00.696 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:06:00.696 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190402 11:06:00.697 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190402 11:06:00.697 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:06:00.697 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:00.697 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:00.697 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:00.697 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:06:00.697 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:00.698 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190402 11:06:02.058 - INFO - Command exited with return code 0.
20190402 11:06:02.058 - INFO - ${stdout} =
20190402 11:06:02.058 - INFO - ${stderr} =
20190402 11:06:02.058 - INFO - ${rc} = 0
20190402 11:06:02.059 - INFO - +------- END KW: SSHLibrary.Execute Command (1361)
20190402 11:06:02.059 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:02.059 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:06:02.059 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:06:02.059 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:02.060 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:02.060 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:06:02.060 - INFO - +------ END KW: OpenStack.Run OS Command (1363)
20190402 11:06:02.060 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:06:02.060 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:02.060 - INFO - ${response} =
20190402 11:06:02.061 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:06:02.061 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:06:02.061 - INFO - @{res_in_list} = [ ]
20190402 11:06:02.061 - INFO - +------- END KW: String.Split String (0)
20190402 11:06:02.061 - INFO - @{key_list} = [ ]
20190402 11:06:02.061 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:06:02.061 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190402 11:06:02.061 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190402 11:06:02.061 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (1365)
20190402 11:06:02.061 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190402 11:06:02.062 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:06:02.062 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:06:02.062 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:06:02.062 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:06:02.062 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190402 11:06:02.062 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:06:02.062 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:02.063 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:02.063 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:02.063 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:06:02.063 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:02.063 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190402 11:06:03.393 - INFO - Command exited with return code 0.
20190402 11:06:03.394 - INFO - ${stdout} =
20190402 11:06:03.394 - INFO - ${stderr} =
20190402 11:06:03.394 - INFO - ${rc} = 0
20190402 11:06:03.394 - INFO - +------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:06:03.395 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:03.396 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:06:03.396 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:03.396 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:03.397 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:03.397 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:06:03.398 - INFO - +------ END KW: OpenStack.Run OS Command (1335)
20190402 11:06:03.398 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:06:03.399 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:03.399 - INFO - ${response} =
20190402 11:06:03.399 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:06:03.400 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:06:03.401 - INFO - @{res_in_list} = [ ]
20190402 11:06:03.401 - INFO - +------- END KW: String.Split String (1)
20190402 11:06:03.401 - INFO - @{snapshot_list} = [ ]
20190402 11:06:03.402 - INFO - +------ END KW: Utils.Convert Response To List (4)
20190402 11:06:03.402 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190402 11:06:03.402 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190402 11:06:03.402 - INFO - +----- END KW: OpenStack.Delete All Snapshots (1341)
20190402 11:06:03.403 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190402 11:06:03.403 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190402 11:06:03.404 - INFO - ${openstack_cmd} = openstack volume list
20190402 11:06:03.404 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:06:03.404 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190402 11:06:03.405 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190402 11:06:03.405 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:06:03.405 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:03.406 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:03.406 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:03.406 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:06:03.407 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:03.407 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190402 11:06:04.839 - INFO - Command exited with return code 0.
20190402 11:06:04.840 - INFO - ${stdout} =
20190402 11:06:04.840 - INFO - ${stderr} =
20190402 11:06:04.840 - INFO - ${rc} = 0
20190402 11:06:04.840 - INFO - +------- END KW: SSHLibrary.Execute Command (1433)
20190402 11:06:04.841 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:04.842 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:06:04.842 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:04.842 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:04.843 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:04.843 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:06:04.844 - INFO - +------ END KW: OpenStack.Run OS Command (1439)
20190402 11:06:04.844 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:06:04.845 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:04.845 - INFO - ${response} =
20190402 11:06:04.845 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:06:04.846 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:06:04.846 - INFO - @{res_in_list} = [ ]
20190402 11:06:04.846 - INFO - +------- END KW: String.Split String (0)
20190402 11:06:04.847 - INFO - @{volume_list} = [ ]
20190402 11:06:04.847 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:06:04.847 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190402 11:06:04.847 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (0)
20190402 11:06:04.848 - INFO - +----- END KW: OpenStack.Delete All Volumes (1445)
20190402 11:06:04.848 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190402 11:06:04.849 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190402 11:06:04.849 - INFO - ${openstack_cmd} = openstack stack list
20190402 11:06:04.849 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:06:04.849 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:06:04.850 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190402 11:06:04.850 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:06:04.850 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:04.851 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:04.851 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:04.851 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:06:04.851 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:04.851 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190402 11:06:06.283 - INFO - Command exited with return code 0.
20190402 11:06:06.284 - INFO - ${stdout} =
20190402 11:06:06.284 - INFO - ${stderr} =
20190402 11:06:06.284 - INFO - ${rc} = 0
20190402 11:06:06.284 - INFO - +------- END KW: SSHLibrary.Execute Command (1433)
20190402 11:06:06.284 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:06.285 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:06:06.286 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:06:06.286 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:06.287 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:06.287 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:06:06.287 - INFO - +------ END KW: OpenStack.Run OS Command (1437)
20190402 11:06:06.288 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:06:06.288 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:06.289 - INFO - ${response} =
20190402 11:06:06.289 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:06:06.289 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:06:06.290 - INFO - @{res_in_list} = [ ]
20190402 11:06:06.290 - INFO - +------- END KW: String.Split String (1)
20190402 11:06:06.290 - INFO - @{stack_list} = [ ]
20190402 11:06:06.290 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:06:06.290 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190402 11:06:06.291 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (1)
20190402 11:06:06.291 - INFO - +----- END KW: OpenStack.Delete All Stacks (1443)
20190402 11:06:06.291 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (27561)
20190402 11:06:06.292 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190402 11:06:06.292 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190402 11:06:06.296 - INFO - +----- END KW: SSHLibrary.Close All Connections (4)
20190402 11:06:06.297 - INFO - +---- END KW: Utils.Stx Suite TearDown (6)
20190402 11:06:06.297 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (27568)
==============================================================================
20190402 11:06:06.305 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.01-Instance-From-Image (966505)
==============================================================================
20190402 11:06:06.335 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.02-Instance-From-Volume [ ]
==============================================================================
20190402 11:06:06.335 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190402 11:06:06.336 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 11:06:06.336 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 11:06:06.337 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 11:06:06.337 - INFO - ${controller_connection} = 1
20190402 11:06:06.337 - INFO - +------ END KW: SSHLibrary.Open Connection (0)
20190402 11:06:06.337 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 11:06:06.338 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 11:06:06.338 - INFO - Length is 10
20190402 11:06:06.338 - INFO - ${pwd_length} = 10
20190402 11:06:06.338 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190402 11:06:06.338 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 11:06:06.339 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 11:06:06.339 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 11:06:07.457 - INFO - Read output: Last login: Tue Apr  2 16:38:42 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 11:06:07.458 - INFO - +-------- END KW: SSHLibrary.Login (1118)
20190402 11:06:07.458 - INFO - Returning from the enclosing user keyword.
20190402 11:06:07.458 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1120)
20190402 11:06:07.458 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1121)
20190402 11:06:07.458 - INFO - ${master_controller_connection} = 1
20190402 11:06:07.458 - INFO - +----- END KW: Utils.Connect to Controller Node (1122)
20190402 11:06:07.459 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 11:06:07.459 - INFO - ${master_controller_connection} = 1
20190402 11:06:07.459 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190402 11:06:07.459 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 11:06:07.459 - INFO - 1
20190402 11:06:07.460 - INFO - +----- END KW: BuiltIn.Log (1)
20190402 11:06:07.460 - INFO - +---- END KW: Utils.Open Master Controller Connection (1124)
20190402 11:06:07.460 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 11:06:07.460 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 11:06:07.461 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:06:07.461 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:06:07.461 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:06:07.462 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:06:07.462 - INFO - &{result_dict} = { stdout= }
20190402 11:06:07.463 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:06:07.463 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:06:07.463 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:06:07.463 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:06:07.464 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:06:07.464 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:06:07.464 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (3)
20190402 11:06:07.464 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:06:07.464 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:06:07.465 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:06:07.480 - INFO - source /etc/platform/openrc
20190402 11:06:07.480 - INFO - +------ END KW: SSHLibrary.Write (15)
20190402 11:06:07.481 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:06:07.872 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:06:07.872 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:06:07.872 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (391)
20190402 11:06:07.872 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:06:07.873 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:06:07.873 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:06:07.873 - INFO - +------- END KW: String.Get Line (0)
20190402 11:06:07.873 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:06:07.873 - INFO - ${clean_out} =
20190402 11:06:07.873 - INFO - +------- END KW: String.Remove String (0)
20190402 11:06:07.873 - INFO - ${output} =
20190402 11:06:07.874 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:06:07.874 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:06:07.874 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:06:07.876 - INFO - echo $?
20190402 11:06:07.876 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:06:07.876 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:06:07.876 - INFO - 0
20190402 11:06:07.876 - INFO - ${rc} = 0
20190402 11:06:07.876 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:06:07.876 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:06:07.876 - INFO - 0
20190402 11:06:07.877 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 11:06:07.877 - INFO - ${rc} = 0
20190402 11:06:07.877 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:06:07.877 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:06:07.877 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:06:07.877 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:06:07.878 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:07.878 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:06:07.878 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:06:07.878 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:06:07.878 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 11:06:07.878 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:06:07.878 - INFO - +----- END KW: Utils.Run Command (418)
20190402 11:06:07.878 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (418)
20190402 11:06:07.878 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1543)
------------------------------------------------------------------------------
20190402 11:06:07.879 - INFO - +--- START TEST: Create Flavors for Instances [ ]
------------------------------------------------------------------------------
20190402 11:06:07.879 - INFO - +---- START KW: BuiltIn.Catenate [ ${flavor_property_1} | ${flavor_property_2} ]
20190402 11:06:07.879 - INFO - ${properties} = --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190402 11:06:07.879 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:06:07.880 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190402 11:06:07.880 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 11:06:07.880 - INFO - ${openstack_cmd} = openstack flavor create
20190402 11:06:07.880 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:06:07.880 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 11:06:07.881 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190402 11:06:07.881 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:06:07.881 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:07.881 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:07.882 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:07.882 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:06:07.882 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:07.882 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190402 11:06:09.262 - INFO - Command exited with return code 0.
20190402 11:06:09.262 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 11:06:09.262 - INFO - ${stderr} =
20190402 11:06:09.262 - INFO - ${rc} = 0
20190402 11:06:09.263 - INFO - +------ END KW: SSHLibrary.Execute Command (1380)
20190402 11:06:09.263 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:09.263 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 11:06:09.263 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:06:09.263 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:09.264 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:09.264 - INFO - +----- END KW: OpenStack.Run OS Command (1383)
20190402 11:06:09.264 - INFO - +---- END KW: OpenStack.Create Flavor (1384)
------------------------------------------------------------------------------
20190402 11:06:09.264 - INFO - +--- END TEST: Create Flavors for Instances (1385)
------------------------------------------------------------------------------
20190402 11:06:09.265 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190402 11:06:09.265 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190402 11:06:09.272 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 11:06:09.280 - INFO - [chan 3] Opened sftp connection (server version 3)
20190402 11:06:09.742 - INFO - '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2' -> '/home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2'
20190402 11:06:09.742 - INFO - +---- END KW: SSHLibrary.Put File (477)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:06:09.742 - INFO - +---- START KW: OpenStack.Create Image [ ${host_image_path}/${cirros_image} | ${disk_format} | ${cirros_image_name} ]
20190402 11:06:09.743 - INFO - +----- START KW: SSHLibrary.File Should Exist [ ${file_path} ]
20190402 11:06:09.743 - INFO - +----- END KW: SSHLibrary.File Should Exist (0)
20190402 11:06:09.743 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack image create ]
20190402 11:06:09.743 - INFO - ${openstack_cmd} = openstack image create
20190402 11:06:09.744 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:06:09.744 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --file ${file_path} | --disk-format ${disk_format} | --public | ${name} ]
20190402 11:06:09.744 - INFO - ${cmd} = openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros
20190402 11:06:09.744 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:06:09.744 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 3 min ]
20190402 11:06:09.745 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:09.745 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:09.745 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:06:09.745 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:09.745 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros'.
20190402 11:06:11.578 - INFO - Command exited with return code 0.
20190402 11:06:11.579 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:06:11.579 - INFO - ${stderr} =
20190402 11:06:11.579 - INFO - ${rc} = 0
20190402 11:06:11.580 - INFO - +------ END KW: SSHLibrary.Execute Command (1834)
20190402 11:06:11.580 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:11.581 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:06:11.581 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:11.582 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:11.582 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:11.583 - INFO - +----- END KW: OpenStack.Run OS Command (1839)
20190402 11:06:11.583 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | image | ${name} | status | active ]
20190402 11:06:11.584 - INFO - +------ START KW: OpenStack.Check Field Value [ image | ${name} | status | active ]
20190402 11:06:11.585 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:06:11.585 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:06:11.586 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:06:11.586 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:11.586 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:06:11.587 - INFO - ${cmd} = openstack image show cirros|grep -w status|tail -1|awk '{print$4}'
20190402 11:06:11.587 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:06:11.587 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:06:11.588 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:11.589 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:11.589 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:11.589 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:11.590 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep -w status|tail -1|awk '{print$4}''.
20190402 11:06:12.922 - INFO - Command exited with return code 0.
20190402 11:06:12.923 - INFO - ${stdout} = active
20190402 11:06:12.923 - INFO - ${stderr} =
20190402 11:06:12.923 - INFO - ${rc} = 0
20190402 11:06:12.923 - INFO - +--------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:06:12.923 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:12.924 - INFO - ${res} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:06:12.924 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:12.924 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:12.924 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:12.925 - INFO - ${result} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:06:12.925 - INFO - +-------- END KW: OpenStack.Run OS Command (1338)
20190402 11:06:12.925 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:12.925 - INFO - ${value} = active
20190402 11:06:12.925 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:06:12.925 - INFO - ${current_value} = active
20190402 11:06:12.926 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1341)
20190402 11:06:12.926 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:06:12.926 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:06:12.926 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:06:12.926 - INFO - +------ END KW: OpenStack.Check Field Value (1342)
20190402 11:06:12.926 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1343)
20190402 11:06:12.927 - INFO - +---- END KW: OpenStack.Create Image (3184)
------------------------------------------------------------------------------
20190402 11:06:12.927 - INFO - +--- END TEST: Create Images for Instances (3662)
------------------------------------------------------------------------------
20190402 11:06:12.927 - INFO - +--- START TEST: Create Networks for Instance [ ]
------------------------------------------------------------------------------
20190402 11:06:12.928 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190402 11:06:12.928 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190402 11:06:12.929 - INFO - ${openstack_cmd} = openstack network create
20190402 11:06:12.929 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:06:12.929 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190402 11:06:12.929 - INFO - ${cmd} = openstack network create network-1
20190402 11:06:12.930 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:06:12.930 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:12.930 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:12.931 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:12.931 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:06:12.931 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:12.931 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190402 11:06:14.313 - INFO - Command exited with return code 0.
20190402 11:06:14.314 - INFO - ${stdout} = +---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:06:14.314 - INFO - ${stderr} =
20190402 11:06:14.314 - INFO - ${rc} = 0
20190402 11:06:14.314 - INFO - +------ END KW: SSHLibrary.Execute Command (1383)
20190402 11:06:14.314 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:14.316 - INFO - ${res} = {u'stdout': u"+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:06:14.316 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:06:14.316 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:14.317 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:14.318 - INFO - +----- END KW: OpenStack.Run OS Command (1387)
20190402 11:06:14.318 - INFO - +---- END KW: OpenStack.Create Network (1390)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:06:14.318 - INFO - +---- START KW: OpenStack.Create Subnet [ ${network_name} | ${subnet_range} | ${subnet_extras} ]
20190402 11:06:14.319 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack subnet create ]
20190402 11:06:14.319 - INFO - ${openstack_cmd} = openstack subnet create
20190402 11:06:14.319 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:06:14.319 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --network ${network_name} | --subnet-range ${range_ip} ${additional_args} ]
20190402 11:06:14.319 - INFO - ${cmd} = openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1
20190402 11:06:14.319 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:06:14.319 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:06:14.320 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:14.320 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:14.320 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:06:14.320 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:14.320 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1'.
20190402 11:06:16.083 - INFO - Command exited with return code 0.
20190402 11:06:16.083 - INFO - ${stdout} = +-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:06:16.083 - INFO - ${stderr} =
20190402 11:06:16.083 - INFO - ${rc} = 0
20190402 11:06:16.083 - INFO - +------ END KW: SSHLibrary.Execute Command (1763)
20190402 11:06:16.083 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:16.084 - INFO - ${res} = {u'stdout': u"+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:06:16.084 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:16.084 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:16.084 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:16.084 - INFO - +----- END KW: OpenStack.Run OS Command (1765)
20190402 11:06:16.085 - INFO - +---- END KW: OpenStack.Create Subnet (1766)
------------------------------------------------------------------------------
20190402 11:06:16.085 - INFO - +--- END TEST: Create Networks for Instance (3158)
------------------------------------------------------------------------------
20190402 11:06:16.085 - INFO - +--- START TEST: Create Volume for Instances [ ]
------------------------------------------------------------------------------
20190402 11:06:16.085 - INFO - +---- START KW: OpenStack.Create Volume [ ${cirros_volume_size} | ${cirros_image_name} | --bootable | ${cirros_volume_name} ]
20190402 11:06:16.086 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack volume create ]
20190402 11:06:16.086 - INFO - ${openstack_cmd} = openstack volume create
20190402 11:06:16.086 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:06:16.086 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --size ${size} | --image ${image} | ${bootable} | ${name} ]
20190402 11:06:16.086 - INFO - ${cmd} = openstack volume create --size 20 --image cirros --bootable vol-cirros-1
20190402 11:06:16.086 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:06:16.086 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:06:16.087 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:16.087 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:16.087 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:06:16.087 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:16.088 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume create --size 20 --image cirros --bootable vol-cirros-1'.
20190402 11:06:17.771 - INFO - Command exited with return code 0.
20190402 11:06:17.771 - INFO - ${stdout} = +---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| attachmen...
20190402 11:06:17.772 - INFO - ${stderr} =
20190402 11:06:17.772 - INFO - ${rc} = 0
20190402 11:06:17.772 - INFO - +------ END KW: SSHLibrary.Execute Command (1685)
20190402 11:06:17.772 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:17.773 - INFO - ${res} = {u'stdout': u'+---------------------+--------------------------------------+\n| Field               | Value                                |\n+---------------------+-----------------------------------...
20190402 11:06:17.773 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:17.774 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:17.774 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:17.775 - INFO - +----- END KW: OpenStack.Run OS Command (1689)
20190402 11:06:17.775 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 10 min | 10 sec | Check Field Value | volume | ${name} | status | available ]
20190402 11:06:17.776 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:06:17.777 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:06:17.777 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:06:17.778 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:06:17.778 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:17.778 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:06:17.779 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:06:17.779 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:06:17.779 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:06:17.781 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:17.781 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:17.782 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:17.782 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:17.783 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:06:19.165 - INFO - Command exited with return code 0.
20190402 11:06:19.165 - INFO - ${stdout} = creating
20190402 11:06:19.165 - INFO - ${stderr} =
20190402 11:06:19.166 - INFO - ${rc} = 0
20190402 11:06:19.166 - INFO - +--------- END KW: SSHLibrary.Execute Command (1384)
20190402 11:06:19.166 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:19.167 - INFO - ${res} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:06:19.167 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:19.168 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:19.168 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:19.169 - INFO - ${result} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:06:19.169 - INFO - +-------- END KW: OpenStack.Run OS Command (1390)
20190402 11:06:19.169 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:19.170 - INFO - ${value} = creating
20190402 11:06:19.170 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:06:19.170 - INFO - ${current_value} = creating
20190402 11:06:19.170 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1393)
20190402 11:06:19.171 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:06:19.171 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:06:19.171 - FAIL - creating != available
20190402 11:06:19.171 - DEBUG - Traceback (most recent call last):
  None
20190402 11:06:19.172 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:06:19.172 - INFO - +------ END KW: OpenStack.Check Field Value (1396)
20190402 11:06:29.173 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:06:29.174 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:06:29.175 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:06:29.175 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:06:29.175 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:06:29.176 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:06:29.176 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:06:29.177 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:06:29.177 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:06:29.178 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:29.178 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:29.179 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:29.179 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:29.180 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:06:30.713 - INFO - Command exited with return code 0.
20190402 11:06:30.714 - INFO - ${stdout} = creating
20190402 11:06:30.714 - INFO - ${stderr} =
20190402 11:06:30.714 - INFO - ${rc} = 0
20190402 11:06:30.714 - INFO - +--------- END KW: SSHLibrary.Execute Command (1535)
20190402 11:06:30.714 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:30.715 - INFO - ${res} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:06:30.715 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:30.715 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:30.715 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:06:30.715 - INFO - ${result} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:06:30.715 - INFO - +-------- END KW: OpenStack.Run OS Command (1538)
20190402 11:06:30.715 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:30.715 - INFO - ${value} = creating
20190402 11:06:30.715 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:06:30.716 - INFO - ${current_value} = creating
20190402 11:06:30.716 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1542)
20190402 11:06:30.716 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:06:30.716 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:06:30.716 - FAIL - creating != available
20190402 11:06:30.716 - DEBUG - Traceback (most recent call last):
  None
20190402 11:06:30.716 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:06:30.716 - INFO - +------ END KW: OpenStack.Check Field Value (1544)
20190402 11:06:40.717 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:06:40.718 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:06:40.720 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:06:40.721 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:06:40.721 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:40.722 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:06:40.723 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:06:40.723 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:06:40.723 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:06:40.725 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:40.726 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:40.726 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:40.726 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:40.728 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:06:42.109 - INFO - Command exited with return code 0.
20190402 11:06:42.110 - INFO - ${stdout} = creating
20190402 11:06:42.110 - INFO - ${stderr} =
20190402 11:06:42.110 - INFO - ${rc} = 0
20190402 11:06:42.110 - INFO - +--------- END KW: SSHLibrary.Execute Command (1384)
20190402 11:06:42.111 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:42.112 - INFO - ${res} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:06:42.112 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:06:42.112 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:42.113 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:42.114 - INFO - ${result} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:06:42.114 - INFO - +-------- END KW: OpenStack.Run OS Command (1391)
20190402 11:06:42.114 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:42.115 - INFO - ${value} = creating
20190402 11:06:42.115 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:06:42.116 - INFO - ${current_value} = creating
20190402 11:06:42.116 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1398)
20190402 11:06:42.116 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:06:42.117 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:06:42.117 - FAIL - creating != available
20190402 11:06:42.117 - DEBUG - Traceback (most recent call last):
  None
20190402 11:06:42.117 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:06:42.118 - INFO - +------ END KW: OpenStack.Check Field Value (1400)
20190402 11:06:52.118 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:06:52.119 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:06:52.120 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:06:52.121 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:06:52.121 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:06:52.121 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:06:52.122 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:06:52.122 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:06:52.123 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:06:52.124 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:06:52.124 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:06:52.124 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:06:52.125 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:06:52.125 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:06:53.456 - INFO - Command exited with return code 0.
20190402 11:06:53.456 - INFO - ${stdout} = downloading
20190402 11:06:53.456 - INFO - ${stderr} =
20190402 11:06:53.456 - INFO - ${rc} = 0
20190402 11:06:53.457 - INFO - +--------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:06:53.457 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:06:53.457 - INFO - ${res} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:06:53.457 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:06:53.457 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:06:53.458 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:06:53.458 - INFO - ${result} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:06:53.458 - INFO - +-------- END KW: OpenStack.Run OS Command (1335)
20190402 11:06:53.458 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:06:53.459 - INFO - ${value} = downloading
20190402 11:06:53.459 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:06:53.459 - INFO - ${current_value} = downloading
20190402 11:06:53.459 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1340)
20190402 11:06:53.459 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:06:53.459 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:06:53.460 - FAIL - downloading != available
20190402 11:06:53.460 - DEBUG - Traceback (most recent call last):
  None
20190402 11:06:53.460 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:06:53.460 - INFO - +------ END KW: OpenStack.Check Field Value (1342)
20190402 11:07:03.460 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:07:03.462 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:07:03.463 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:07:03.463 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:07:03.463 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:07:03.464 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:07:03.464 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:07:03.465 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:07:03.465 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:07:03.466 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:03.466 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:03.466 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:07:03.467 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:03.467 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:07:04.800 - INFO - Command exited with return code 0.
20190402 11:07:04.800 - INFO - ${stdout} = downloading
20190402 11:07:04.800 - INFO - ${stderr} =
20190402 11:07:04.800 - INFO - ${rc} = 0
20190402 11:07:04.801 - INFO - +--------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:07:04.801 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:04.802 - INFO - ${res} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:04.802 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:07:04.802 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:04.803 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:07:04.803 - INFO - ${result} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:04.804 - INFO - +-------- END KW: OpenStack.Run OS Command (1338)
20190402 11:07:04.804 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:07:04.804 - INFO - ${value} = downloading
20190402 11:07:04.804 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:07:04.805 - INFO - ${current_value} = downloading
20190402 11:07:04.805 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1344)
20190402 11:07:04.805 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:07:04.806 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:07:04.806 - FAIL - downloading != available
20190402 11:07:04.806 - DEBUG - Traceback (most recent call last):
  None
20190402 11:07:04.806 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:07:04.807 - INFO - +------ END KW: OpenStack.Check Field Value (1347)
20190402 11:07:14.807 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:07:14.808 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:07:14.809 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:07:14.810 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:07:14.810 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:07:14.810 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:07:14.811 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:07:14.811 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:07:14.812 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:07:14.813 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:14.813 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:14.813 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:07:14.814 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:14.814 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:07:16.247 - INFO - Command exited with return code 0.
20190402 11:07:16.247 - INFO - ${stdout} = available
20190402 11:07:16.247 - INFO - ${stderr} =
20190402 11:07:16.247 - INFO - ${rc} = 0
20190402 11:07:16.248 - INFO - +--------- END KW: SSHLibrary.Execute Command (1434)
20190402 11:07:16.248 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:16.249 - INFO - ${res} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:07:16.249 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:07:16.250 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:16.250 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:07:16.251 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:07:16.251 - INFO - +-------- END KW: OpenStack.Run OS Command (1439)
20190402 11:07:16.251 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:07:16.252 - INFO - ${value} = available
20190402 11:07:16.252 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:07:16.252 - INFO - ${current_value} = available
20190402 11:07:16.252 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1444)
20190402 11:07:16.253 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:07:16.253 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:07:16.253 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:07:16.254 - INFO - +------ END KW: OpenStack.Check Field Value (1447)
20190402 11:07:16.254 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (58479)
20190402 11:07:16.254 - INFO - +---- END KW: OpenStack.Create Volume (60169)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:07:16.254 - INFO - +---- START KW: OpenStack.Create Volume [ ${cirros_volume_size} | ${cirros_image_name} | --bootable | ${cirros_volume_name_2} ]
20190402 11:07:16.256 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack volume create ]
20190402 11:07:16.256 - INFO - ${openstack_cmd} = openstack volume create
20190402 11:07:16.256 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:07:16.256 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --size ${size} | --image ${image} | ${bootable} | ${name} ]
20190402 11:07:16.257 - INFO - ${cmd} = openstack volume create --size 20 --image cirros --bootable vol-cirros-2
20190402 11:07:16.257 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:07:16.258 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:07:16.259 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:16.259 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:16.260 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:07:16.260 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:16.261 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume create --size 20 --image cirros --bootable vol-cirros-2'.
20190402 11:07:17.792 - INFO - Command exited with return code 0.
20190402 11:07:17.793 - INFO - ${stdout} = +---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| attachmen...
20190402 11:07:17.793 - INFO - ${stderr} =
20190402 11:07:17.793 - INFO - ${rc} = 0
20190402 11:07:17.794 - INFO - +------ END KW: SSHLibrary.Execute Command (1534)
20190402 11:07:17.794 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:17.795 - INFO - ${res} = {u'stdout': u'+---------------------+--------------------------------------+\n| Field               | Value                                |\n+---------------------+-----------------------------------...
20190402 11:07:17.796 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:07:17.796 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:17.797 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:07:17.797 - INFO - +----- END KW: OpenStack.Run OS Command (1539)
20190402 11:07:17.797 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 10 min | 10 sec | Check Field Value | volume | ${name} | status | available ]
20190402 11:07:17.798 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:07:17.799 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:07:17.800 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:07:17.800 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-2
20190402 11:07:17.800 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:07:17.801 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:07:17.801 - INFO - ${cmd} = openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:07:17.801 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:07:17.802 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:07:17.803 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:17.803 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:17.803 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:07:17.804 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:17.804 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:07:19.244 - INFO - Command exited with return code 0.
20190402 11:07:19.244 - INFO - ${stdout} = creating
20190402 11:07:19.245 - INFO - ${stderr} =
20190402 11:07:19.245 - INFO - ${rc} = 0
20190402 11:07:19.245 - INFO - +--------- END KW: SSHLibrary.Execute Command (1442)
20190402 11:07:19.246 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:19.247 - INFO - ${res} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:07:19.247 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:07:19.247 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:19.247 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:07:19.247 - INFO - ${result} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:07:19.247 - INFO - +-------- END KW: OpenStack.Run OS Command (1445)
20190402 11:07:19.247 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:07:19.247 - INFO - ${value} = creating
20190402 11:07:19.248 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:07:19.248 - INFO - ${current_value} = creating
20190402 11:07:19.248 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1449)
20190402 11:07:19.248 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:07:19.248 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:07:19.248 - FAIL - creating != available
20190402 11:07:19.248 - DEBUG - Traceback (most recent call last):
  None
20190402 11:07:19.248 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:07:19.248 - INFO - +------ END KW: OpenStack.Check Field Value (1450)
20190402 11:07:29.249 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:07:29.250 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:07:29.251 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:07:29.252 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-2
20190402 11:07:29.252 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:07:29.252 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:07:29.253 - INFO - ${cmd} = openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:07:29.253 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:07:29.253 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:07:29.254 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:29.257 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:29.257 - INFO - +--------- END KW: BuiltIn.Set Variable (3)
20190402 11:07:29.257 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:29.258 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:07:30.740 - INFO - Command exited with return code 0.
20190402 11:07:30.740 - INFO - ${stdout} = downloading
20190402 11:07:30.740 - INFO - ${stderr} =
20190402 11:07:30.740 - INFO - ${rc} = 0
20190402 11:07:30.740 - INFO - +--------- END KW: SSHLibrary.Execute Command (1483)
20190402 11:07:30.741 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:30.741 - INFO - ${res} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:30.741 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:07:30.741 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:30.742 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:07:30.742 - INFO - ${result} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:30.742 - INFO - +-------- END KW: OpenStack.Run OS Command (1489)
20190402 11:07:30.742 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:07:30.742 - INFO - ${value} = downloading
20190402 11:07:30.742 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:07:30.743 - INFO - ${current_value} = downloading
20190402 11:07:30.743 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1493)
20190402 11:07:30.743 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:07:30.743 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:07:30.743 - FAIL - downloading != available
20190402 11:07:30.744 - DEBUG - Traceback (most recent call last):
  None
20190402 11:07:30.744 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:07:30.744 - INFO - +------ END KW: OpenStack.Check Field Value (1495)
20190402 11:07:40.744 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:07:40.745 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:07:40.745 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:07:40.746 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-2
20190402 11:07:40.746 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:07:40.746 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:07:40.747 - INFO - ${cmd} = openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:07:40.747 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:07:40.747 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:07:40.747 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:40.748 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:40.748 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:07:40.748 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:40.748 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:07:42.079 - INFO - Command exited with return code 0.
20190402 11:07:42.080 - INFO - ${stdout} = downloading
20190402 11:07:42.080 - INFO - ${stderr} =
20190402 11:07:42.080 - INFO - ${rc} = 0
20190402 11:07:42.080 - INFO - +--------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:07:42.080 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:42.080 - INFO - ${res} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:42.080 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:07:42.080 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:42.081 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:07:42.081 - INFO - ${result} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:42.081 - INFO - +-------- END KW: OpenStack.Run OS Command (1334)
20190402 11:07:42.081 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:07:42.081 - INFO - ${value} = downloading
20190402 11:07:42.081 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:07:42.081 - INFO - ${current_value} = downloading
20190402 11:07:42.081 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1336)
20190402 11:07:42.082 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:07:42.082 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:07:42.082 - FAIL - downloading != available
20190402 11:07:42.082 - DEBUG - Traceback (most recent call last):
  None
20190402 11:07:42.082 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:07:42.082 - INFO - +------ END KW: OpenStack.Check Field Value (1338)
20190402 11:07:52.083 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:07:52.084 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:07:52.085 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:07:52.085 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-2
20190402 11:07:52.086 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:07:52.086 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:07:52.087 - INFO - ${cmd} = openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:07:52.087 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:07:52.087 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:07:52.088 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:07:52.089 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:07:52.089 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:07:52.089 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:07:52.090 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:07:53.421 - INFO - Command exited with return code 0.
20190402 11:07:53.421 - INFO - ${stdout} = downloading
20190402 11:07:53.421 - INFO - ${stderr} =
20190402 11:07:53.421 - INFO - ${rc} = 0
20190402 11:07:53.421 - INFO - +--------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:07:53.421 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:07:53.422 - INFO - ${res} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:53.422 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:07:53.422 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:07:53.422 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:07:53.423 - INFO - ${result} = {u'stdout': u'downloading', u'stderr': u'', u'rc': 0}
20190402 11:07:53.423 - INFO - +-------- END KW: OpenStack.Run OS Command (1336)
20190402 11:07:53.423 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:07:53.423 - INFO - ${value} = downloading
20190402 11:07:53.423 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:07:53.423 - INFO - ${current_value} = downloading
20190402 11:07:53.423 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1339)
20190402 11:07:53.423 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:07:53.424 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:07:53.424 - FAIL - downloading != available
20190402 11:07:53.424 - DEBUG - Traceback (most recent call last):
  None
20190402 11:07:53.424 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:07:53.424 - INFO - +------ END KW: OpenStack.Check Field Value (1341)
20190402 11:08:03.424 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:08:03.425 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:03.425 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:03.426 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-2
20190402 11:08:03.426 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:03.426 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:03.426 - INFO - ${cmd} = openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:03.426 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:08:03.426 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:03.427 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:03.427 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:03.427 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:03.427 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:03.428 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:04.761 - INFO - Command exited with return code 0.
20190402 11:08:04.761 - INFO - ${stdout} = available
20190402 11:08:04.761 - INFO - ${stderr} =
20190402 11:08:04.762 - INFO - ${rc} = 0
20190402 11:08:04.762 - INFO - +--------- END KW: SSHLibrary.Execute Command (1335)
20190402 11:08:04.762 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:04.763 - INFO - ${res} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:08:04.763 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:04.764 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:04.765 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:04.765 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:08:04.765 - INFO - +-------- END KW: OpenStack.Run OS Command (1339)
20190402 11:08:04.765 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:04.766 - INFO - ${value} = available
20190402 11:08:04.766 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:08:04.767 - INFO - ${current_value} = available
20190402 11:08:04.767 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1342)
20190402 11:08:04.767 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:04.768 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:04.768 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:08:04.768 - INFO - +------ END KW: OpenStack.Check Field Value (1344)
20190402 11:08:04.768 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (46971)
20190402 11:08:04.769 - INFO - +---- END KW: OpenStack.Create Volume (48514)
------------------------------------------------------------------------------
20190402 11:08:04.769 - INFO - +--- END TEST: Create Volume for Instances (108684)
------------------------------------------------------------------------------
20190402 11:08:04.770 - INFO - +--- START TEST: Launch Instances [ ]
------------------------------------------------------------------------------
20190402 11:08:04.771 - INFO - +---- START KW: OpenStack.Create Instance From Volume [ ${network_name} | ${cirros_instance_name} | ${cirros_volume_name} | ${cirros_flavor_name} ]
20190402 11:08:04.772 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190402 11:08:04.772 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:08:04.773 - INFO - ${openstack_cmd} = openstack network list
20190402 11:08:04.773 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:08:04.773 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 11:08:04.774 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 11:08:04.775 - INFO - +------ END KW: BuiltIn.Catenate (2)
20190402 11:08:04.775 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:04.776 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:04.776 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:04.776 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:04.777 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:04.778 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 11:08:06.162 - INFO - Command exited with return code 0.
20190402 11:08:06.162 - INFO - ${stdout} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:06.163 - INFO - ${stderr} =
20190402 11:08:06.163 - INFO - ${rc} = 0
20190402 11:08:06.163 - INFO - +------- END KW: SSHLibrary.Execute Command (1386)
20190402 11:08:06.163 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:06.164 - INFO - ${res} = {u'stdout': u'3f715897-04ee-4349-9180-d281351788b3', u'stderr': u'', u'rc': 0}
20190402 11:08:06.165 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:08:06.165 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:06.166 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:06.166 - INFO - &{result} = { stdout=3f715897-04ee-4349-9180-d281351788b3 | stderr= | rc=0 }
20190402 11:08:06.167 - INFO - +------ END KW: OpenStack.Run OS Command (1391)
20190402 11:08:06.167 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:06.167 - INFO - ${output} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:06.167 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 11:08:06.168 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:08:06.168 - INFO - ${splitted_output} = [u'3f715897-04ee-4349-9180-d281351788b3']
20190402 11:08:06.168 - INFO - +------ END KW: String.Split String (0)
20190402 11:08:06.169 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:08:06.169 - INFO - ${net_id} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:06.169 - INFO - +------ END KW: Collections.Get From List (0)
20190402 11:08:06.170 - INFO - ${net_id} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:06.170 - INFO - +----- END KW: OpenStack.Get Net Id (1398)
20190402 11:08:06.170 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server create ]
20190402 11:08:06.170 - INFO - ${openstack_cmd} = openstack server create
20190402 11:08:06.171 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:08:06.171 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --volume ${volume} | --flavor ${flavor} | --nic net-id=${net_id} | ${vm_name} ]
20190402 11:08:06.172 - INFO - ${cmd} = openstack server create --volume vol-cirros-1 --flavor f1.small --nic net-id=3f715897-04ee-4349-9180-d281351788b3 vm-cirros-1
20190402 11:08:06.172 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:08:06.173 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:08:06.173 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:06.174 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:06.174 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:08:06.174 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:06.175 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server create --volume vol-cirros-1 --flavor f1.small --nic net-id=3f715897-04ee-4349-9180-d281351788b3 vm-cirros-1'.
20190402 11:08:08.709 - INFO - Command exited with return code 0.
20190402 11:08:08.710 - INFO - ${stdout} = +-------------------------------------+-------------------------------------------------+
| Field                               | Value                                           |
+-------------------...
20190402 11:08:08.710 - INFO - ${stderr} =
20190402 11:08:08.710 - INFO - ${rc} = 0
20190402 11:08:08.710 - INFO - +------ END KW: SSHLibrary.Execute Command (2536)
20190402 11:08:08.711 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:08.712 - INFO - ${res} = {u'stdout': u"+-------------------------------------+-------------------------------------------------+\n| Field                               | Value                                           |\n+---...
20190402 11:08:08.712 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:08.713 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:08.713 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:08.714 - INFO - +----- END KW: OpenStack.Run OS Command (2542)
20190402 11:08:08.714 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:08:08.715 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:08:08.716 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:08.717 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:08.717 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:08:08.718 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:08.718 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:08.719 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:08.719 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:08.719 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:08.720 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:08.720 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:08.721 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:08.721 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:08.722 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:10.418 - INFO - Command exited with return code 0.
20190402 11:08:10.418 - INFO - ${stdout} = BUILD
20190402 11:08:10.419 - INFO - ${stderr} =
20190402 11:08:10.419 - INFO - ${rc} = 0
20190402 11:08:10.419 - INFO - +--------- END KW: SSHLibrary.Execute Command (1698)
20190402 11:08:10.419 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:10.420 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:08:10.420 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:10.420 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:10.420 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:10.420 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:08:10.420 - INFO - +-------- END KW: OpenStack.Run OS Command (1701)
20190402 11:08:10.421 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:10.421 - INFO - ${value} = BUILD
20190402 11:08:10.421 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:10.421 - INFO - ${current_value} = BUILD
20190402 11:08:10.421 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1705)
20190402 11:08:10.422 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:10.422 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:10.422 - FAIL - BUILD != ACTIVE
20190402 11:08:10.422 - DEBUG - Traceback (most recent call last):
  None
20190402 11:08:10.422 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:08:10.422 - INFO - +------ END KW: OpenStack.Check Field Value (1707)
20190402 11:08:20.423 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:08:20.424 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:20.425 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:20.426 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:08:20.426 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:20.426 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:20.427 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:20.427 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:20.427 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:20.429 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:20.430 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:20.430 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:20.430 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:20.431 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:22.215 - INFO - Command exited with return code 0.
20190402 11:08:22.216 - INFO - ${stdout} = ACTIVE
20190402 11:08:22.216 - INFO - ${stderr} =
20190402 11:08:22.216 - INFO - ${rc} = 0
20190402 11:08:22.216 - INFO - +--------- END KW: SSHLibrary.Execute Command (1786)
20190402 11:08:22.216 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:22.217 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:22.218 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:08:22.218 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:22.219 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:22.219 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:22.219 - INFO - +-------- END KW: OpenStack.Run OS Command (1792)
20190402 11:08:22.219 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:22.220 - INFO - ${value} = ACTIVE
20190402 11:08:22.220 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:08:22.221 - INFO - ${current_value} = ACTIVE
20190402 11:08:22.221 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1797)
20190402 11:08:22.221 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:22.221 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:22.222 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:08:22.222 - INFO - +------ END KW: OpenStack.Check Field Value (1799)
20190402 11:08:22.222 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13508)
20190402 11:08:22.222 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | power_state | Running ]
20190402 11:08:22.223 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | power_state | Running ]
20190402 11:08:22.224 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:22.225 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:22.226 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:08:22.226 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:22.226 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:22.227 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:08:22.227 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:22.228 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:22.229 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:22.229 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:22.229 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:22.229 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:22.230 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:08:23.819 - INFO - Command exited with return code 0.
20190402 11:08:23.819 - INFO - ${stdout} = Running
20190402 11:08:23.820 - INFO - ${stderr} =
20190402 11:08:23.820 - INFO - ${rc} = 0
20190402 11:08:23.820 - INFO - +--------- END KW: SSHLibrary.Execute Command (1591)
20190402 11:08:23.820 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:23.821 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:08:23.821 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:23.822 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:23.823 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:23.823 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:08:23.823 - INFO - +-------- END KW: OpenStack.Run OS Command (1595)
20190402 11:08:23.824 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:23.825 - INFO - ${value} = Running
20190402 11:08:23.825 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:08:23.826 - INFO - ${current_value} = Running
20190402 11:08:23.826 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1602)
20190402 11:08:23.827 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:23.827 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:23.828 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:08:23.828 - INFO - +------ END KW: OpenStack.Check Field Value (1605)
20190402 11:08:23.828 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1606)
20190402 11:08:23.828 - INFO - +---- END KW: OpenStack.Create Instance From Volume (19057)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:08:23.828 - INFO - +---- START KW: OpenStack.Create Instance From Volume [ ${network_name} | ${cirros_instance_name_2} | ${cirros_volume_name_2} | ${cirros_flavor_name} ]
20190402 11:08:23.829 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190402 11:08:23.829 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:08:23.829 - INFO - ${openstack_cmd} = openstack network list
20190402 11:08:23.829 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:08:23.829 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 11:08:23.830 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 11:08:23.830 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:08:23.830 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:23.830 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:23.830 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:23.830 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:23.830 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:23.831 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 11:08:25.218 - INFO - Command exited with return code 0.
20190402 11:08:25.218 - INFO - ${stdout} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:25.218 - INFO - ${stderr} =
20190402 11:08:25.219 - INFO - ${rc} = 0
20190402 11:08:25.219 - INFO - +------- END KW: SSHLibrary.Execute Command (1389)
20190402 11:08:25.219 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:25.220 - INFO - ${res} = {u'stdout': u'3f715897-04ee-4349-9180-d281351788b3', u'stderr': u'', u'rc': 0}
20190402 11:08:25.221 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:25.221 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:25.222 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:25.223 - INFO - &{result} = { stdout=3f715897-04ee-4349-9180-d281351788b3 | stderr= | rc=0 }
20190402 11:08:25.223 - INFO - +------ END KW: OpenStack.Run OS Command (1393)
20190402 11:08:25.224 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:25.225 - INFO - ${output} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:25.225 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 11:08:25.225 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:08:25.226 - INFO - ${splitted_output} = [u'3f715897-04ee-4349-9180-d281351788b3']
20190402 11:08:25.226 - INFO - +------ END KW: String.Split String (1)
20190402 11:08:25.227 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:08:25.227 - INFO - ${net_id} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:25.227 - INFO - +------ END KW: Collections.Get From List (0)
20190402 11:08:25.228 - INFO - ${net_id} = 3f715897-04ee-4349-9180-d281351788b3
20190402 11:08:25.228 - INFO - +----- END KW: OpenStack.Get Net Id (1399)
20190402 11:08:25.228 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server create ]
20190402 11:08:25.229 - INFO - ${openstack_cmd} = openstack server create
20190402 11:08:25.229 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:08:25.229 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --volume ${volume} | --flavor ${flavor} | --nic net-id=${net_id} | ${vm_name} ]
20190402 11:08:25.230 - INFO - ${cmd} = openstack server create --volume vol-cirros-2 --flavor f1.small --nic net-id=3f715897-04ee-4349-9180-d281351788b3 vm-cirros-2
20190402 11:08:25.230 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:08:25.230 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:08:25.231 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:25.232 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:25.232 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:08:25.232 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:25.233 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server create --volume vol-cirros-2 --flavor f1.small --nic net-id=3f715897-04ee-4349-9180-d281351788b3 vm-cirros-2'.
20190402 11:08:28.124 - INFO - Command exited with return code 0.
20190402 11:08:28.124 - INFO - ${stdout} = +-------------------------------------+-------------------------------------------------+
| Field                               | Value                                           |
+-------------------...
20190402 11:08:28.124 - INFO - ${stderr} =
20190402 11:08:28.124 - INFO - ${rc} = 0
20190402 11:08:28.125 - INFO - +------ END KW: SSHLibrary.Execute Command (2892)
20190402 11:08:28.125 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:28.126 - INFO - ${res} = {u'stdout': u"+-------------------------------------+-------------------------------------------------+\n| Field                               | Value                                           |\n+---...
20190402 11:08:28.126 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:28.127 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:28.127 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:28.128 - INFO - +----- END KW: OpenStack.Run OS Command (2897)
20190402 11:08:28.128 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:08:28.129 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:08:28.129 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:28.130 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:28.131 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:08:28.131 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:28.131 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:28.132 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:28.132 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:28.132 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:28.133 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:28.133 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:28.134 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:28.134 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:28.135 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:29.818 - INFO - Command exited with return code 0.
20190402 11:08:29.818 - INFO - ${stdout} = BUILD
20190402 11:08:29.818 - INFO - ${stderr} =
20190402 11:08:29.819 - INFO - ${rc} = 0
20190402 11:08:29.819 - INFO - +--------- END KW: SSHLibrary.Execute Command (1685)
20190402 11:08:29.819 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:29.820 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:08:29.820 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:29.821 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:29.821 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:29.822 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:08:29.822 - INFO - +-------- END KW: OpenStack.Run OS Command (1690)
20190402 11:08:29.822 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:29.823 - INFO - ${value} = BUILD
20190402 11:08:29.823 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:08:29.823 - INFO - ${current_value} = BUILD
20190402 11:08:29.824 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1694)
20190402 11:08:29.824 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:29.824 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:29.825 - FAIL - BUILD != ACTIVE
20190402 11:08:29.825 - DEBUG - Traceback (most recent call last):
  None
20190402 11:08:29.825 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:08:29.825 - INFO - +------ END KW: OpenStack.Check Field Value (1697)
20190402 11:08:39.826 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:08:39.826 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:39.827 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:39.827 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:08:39.827 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:39.827 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:39.827 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:39.827 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:08:39.828 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:39.828 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:39.828 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:39.828 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:39.828 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:39.829 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:41.409 - INFO - Command exited with return code 0.
20190402 11:08:41.409 - INFO - ${stdout} = ACTIVE
20190402 11:08:41.409 - INFO - ${stderr} =
20190402 11:08:41.409 - INFO - ${rc} = 0
20190402 11:08:41.409 - INFO - +--------- END KW: SSHLibrary.Execute Command (1581)
20190402 11:08:41.410 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:41.410 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:41.410 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:41.410 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:41.410 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:41.411 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:41.411 - INFO - +-------- END KW: OpenStack.Run OS Command (1583)
20190402 11:08:41.411 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:41.411 - INFO - ${value} = ACTIVE
20190402 11:08:41.411 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:41.411 - INFO - ${current_value} = ACTIVE
20190402 11:08:41.411 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1585)
20190402 11:08:41.411 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:41.412 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:41.412 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:08:41.412 - INFO - +------ END KW: OpenStack.Check Field Value (1586)
20190402 11:08:41.412 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13284)
20190402 11:08:41.412 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | power_state | Running ]
20190402 11:08:41.412 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | power_state | Running ]
20190402 11:08:41.412 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:41.413 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:41.413 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:08:41.413 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:41.413 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:41.413 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:08:41.413 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:08:41.414 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:41.414 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:41.414 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:41.414 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:41.414 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:41.415 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:08:43.025 - INFO - Command exited with return code 0.
20190402 11:08:43.025 - INFO - ${stdout} = Running
20190402 11:08:43.025 - INFO - ${stderr} =
20190402 11:08:43.026 - INFO - ${rc} = 0
20190402 11:08:43.026 - INFO - +--------- END KW: SSHLibrary.Execute Command (1612)
20190402 11:08:43.026 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:43.026 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:08:43.027 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:43.027 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:43.027 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:43.027 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:08:43.027 - INFO - +-------- END KW: OpenStack.Run OS Command (1613)
20190402 11:08:43.028 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:43.028 - INFO - ${value} = Running
20190402 11:08:43.028 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:43.028 - INFO - ${current_value} = Running
20190402 11:08:43.028 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1616)
20190402 11:08:43.029 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:43.029 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:43.029 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:08:43.029 - INFO - +------ END KW: OpenStack.Check Field Value (1617)
20190402 11:08:43.029 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1617)
20190402 11:08:43.029 - INFO - +---- END KW: OpenStack.Create Instance From Volume (19201)
------------------------------------------------------------------------------
20190402 11:08:43.030 - INFO - +--- END TEST: Launch Instances (38260)
------------------------------------------------------------------------------
20190402 11:08:43.030 - INFO - +--- START TEST: Suspend Resume Instance [ ]
------------------------------------------------------------------------------
20190402 11:08:43.031 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name} ]
20190402 11:08:43.031 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190402 11:08:43.032 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:43.032 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:43.032 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:08:43.032 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:43.033 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-1'.
20190402 11:08:45.019 - INFO - Command exited with return code 0.
20190402 11:08:45.020 - INFO - ${stdout} =
20190402 11:08:45.020 - INFO - ${stderr} =
20190402 11:08:45.020 - INFO - ${rc} = 0
20190402 11:08:45.020 - INFO - +------ END KW: SSHLibrary.Execute Command (1988)
20190402 11:08:45.020 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:45.020 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:08:45.020 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:45.021 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:45.021 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:45.021 - INFO - +----- END KW: OpenStack.Run OS Command (1990)
20190402 11:08:45.021 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SUSPENDED ]
20190402 11:08:45.021 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 11:08:45.022 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:45.023 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:45.023 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:08:45.023 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:45.023 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:45.023 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:45.023 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:08:45.024 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:45.024 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:45.024 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:45.024 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:45.024 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:45.025 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:46.863 - INFO - Command exited with return code 0.
20190402 11:08:46.864 - INFO - ${stdout} = SUSPENDED
20190402 11:08:46.864 - INFO - ${stderr} =
20190402 11:08:46.864 - INFO - ${rc} = 0
20190402 11:08:46.864 - INFO - +--------- END KW: SSHLibrary.Execute Command (1840)
20190402 11:08:46.864 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:46.864 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:08:46.864 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:46.865 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:46.865 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:46.865 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:08:46.865 - INFO - +-------- END KW: OpenStack.Run OS Command (1841)
20190402 11:08:46.865 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:46.865 - INFO - ${value} = SUSPENDED
20190402 11:08:46.865 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:46.866 - INFO - ${current_value} = SUSPENDED
20190402 11:08:46.866 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1844)
20190402 11:08:46.866 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:46.866 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:46.866 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:08:46.866 - INFO - +------ END KW: OpenStack.Check Field Value (1845)
20190402 11:08:46.866 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1845)
20190402 11:08:46.866 - INFO - +---- END KW: OpenStack.Suspend Instance (3835)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:08:46.866 - INFO - +---- START KW: OpenStack.Resume Instance [ ${cirros_instance_name} ]
20190402 11:08:46.867 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resume ${vm_name} | True | 30 sec ]
20190402 11:08:46.867 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:46.867 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:46.867 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:08:46.867 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:46.868 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resume vm-cirros-1'.
20190402 11:08:48.650 - INFO - Command exited with return code 0.
20190402 11:08:48.651 - INFO - ${stdout} =
20190402 11:08:48.651 - INFO - ${stderr} =
20190402 11:08:48.651 - INFO - ${rc} = 0
20190402 11:08:48.651 - INFO - +------ END KW: SSHLibrary.Execute Command (1784)
20190402 11:08:48.651 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:48.652 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:08:48.653 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:08:48.653 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:48.653 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:48.654 - INFO - +----- END KW: OpenStack.Run OS Command (1787)
20190402 11:08:48.654 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:08:48.655 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:08:48.655 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:48.656 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:48.657 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:08:48.657 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:48.657 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:48.658 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:48.658 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:48.658 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:48.660 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:48.661 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:48.661 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:48.661 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:48.662 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:50.344 - INFO - Command exited with return code 0.
20190402 11:08:50.344 - INFO - ${stdout} = ACTIVE
20190402 11:08:50.344 - INFO - ${stderr} =
20190402 11:08:50.344 - INFO - ${rc} = 0
20190402 11:08:50.344 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:08:50.344 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:50.345 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:50.345 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:08:50.345 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:50.345 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:50.345 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:50.345 - INFO - +-------- END KW: OpenStack.Run OS Command (1687)
20190402 11:08:50.346 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:50.346 - INFO - ${value} = ACTIVE
20190402 11:08:50.346 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:50.346 - INFO - ${current_value} = ACTIVE
20190402 11:08:50.346 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1691)
20190402 11:08:50.346 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:50.346 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:50.346 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:08:50.346 - INFO - +------ END KW: OpenStack.Check Field Value (1691)
20190402 11:08:50.347 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1693)
20190402 11:08:50.347 - INFO - +---- END KW: OpenStack.Resume Instance (3481)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:08:50.347 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name_2} ]
20190402 11:08:50.347 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190402 11:08:50.347 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:50.348 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:50.348 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:08:50.348 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:50.348 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-2'.
20190402 11:08:52.031 - INFO - Command exited with return code 0.
20190402 11:08:52.031 - INFO - ${stdout} =
20190402 11:08:52.032 - INFO - ${stderr} =
20190402 11:08:52.032 - INFO - ${rc} = 0
20190402 11:08:52.032 - INFO - +------ END KW: SSHLibrary.Execute Command (1684)
20190402 11:08:52.032 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:52.032 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:08:52.032 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:52.033 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:52.033 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:52.033 - INFO - +----- END KW: OpenStack.Run OS Command (1686)
20190402 11:08:52.033 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SUSPENDED ]
20190402 11:08:52.033 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 11:08:52.034 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:52.034 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:52.034 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:08:52.034 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:52.034 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:52.035 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:52.035 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:52.035 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:52.035 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:52.035 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:52.036 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:52.036 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:52.036 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:53.669 - INFO - Command exited with return code 0.
20190402 11:08:53.669 - INFO - ${stdout} = SUSPENDED
20190402 11:08:53.669 - INFO - ${stderr} =
20190402 11:08:53.669 - INFO - ${rc} = 0
20190402 11:08:53.669 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:08:53.670 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:53.670 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:08:53.670 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:53.670 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:53.671 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:53.671 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:08:53.671 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:08:53.671 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:53.671 - INFO - ${value} = SUSPENDED
20190402 11:08:53.671 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:53.671 - INFO - ${current_value} = SUSPENDED
20190402 11:08:53.672 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 11:08:53.672 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:53.672 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:53.672 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:08:53.672 - INFO - +------ END KW: OpenStack.Check Field Value (1639)
20190402 11:08:53.672 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1639)
20190402 11:08:53.672 - INFO - +---- END KW: OpenStack.Suspend Instance (3325)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:08:53.672 - INFO - +---- START KW: OpenStack.Resume Instance [ ${cirros_instance_name_2} ]
20190402 11:08:53.673 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resume ${vm_name} | True | 30 sec ]
20190402 11:08:53.673 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:53.673 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:53.674 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:08:53.674 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:53.674 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resume vm-cirros-2'.
20190402 11:08:55.505 - INFO - Command exited with return code 0.
20190402 11:08:55.506 - INFO - ${stdout} =
20190402 11:08:55.506 - INFO - ${stderr} =
20190402 11:08:55.506 - INFO - ${rc} = 0
20190402 11:08:55.506 - INFO - +------ END KW: SSHLibrary.Execute Command (1832)
20190402 11:08:55.507 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:55.509 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:08:55.509 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:08:55.510 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:55.510 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:55.511 - INFO - +----- END KW: OpenStack.Run OS Command (1838)
20190402 11:08:55.511 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:08:55.512 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:08:55.513 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:55.513 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:55.514 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:08:55.514 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:55.514 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:55.515 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:55.515 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:55.515 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:55.516 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:55.517 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:55.517 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:08:55.517 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:55.518 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:08:57.250 - INFO - Command exited with return code 0.
20190402 11:08:57.251 - INFO - ${stdout} = ACTIVE
20190402 11:08:57.251 - INFO - ${stderr} =
20190402 11:08:57.251 - INFO - ${rc} = 0
20190402 11:08:57.251 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:08:57.251 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:57.251 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:57.251 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:57.252 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:57.252 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:08:57.252 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:08:57.252 - INFO - +-------- END KW: OpenStack.Run OS Command (1737)
20190402 11:08:57.252 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:08:57.252 - INFO - ${value} = ACTIVE
20190402 11:08:57.253 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:08:57.253 - INFO - ${current_value} = ACTIVE
20190402 11:08:57.253 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1740)
20190402 11:08:57.253 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:08:57.253 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:08:57.253 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:08:57.253 - INFO - +------ END KW: OpenStack.Check Field Value (1741)
20190402 11:08:57.253 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1742)
20190402 11:08:57.254 - INFO - +---- END KW: OpenStack.Resume Instance (3581)
------------------------------------------------------------------------------
20190402 11:08:57.254 - INFO - +--- END TEST: Suspend Resume Instance (14224)
------------------------------------------------------------------------------
20190402 11:08:57.254 - INFO - +--- START TEST: Set Error Active Flags Instance [ ]
------------------------------------------------------------------------------
20190402 11:08:57.254 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name} | error ]
20190402 11:08:57.255 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:08:57.255 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:57.256 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:57.256 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:08:57.256 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:57.256 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-1'.
20190402 11:08:59.169 - INFO - Command exited with return code 0.
20190402 11:08:59.169 - INFO - ${stdout} =
20190402 11:08:59.169 - INFO - ${stderr} =
20190402 11:08:59.169 - INFO - ${rc} = 0
20190402 11:08:59.169 - INFO - +------ END KW: SSHLibrary.Execute Command (1913)
20190402 11:08:59.170 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:08:59.170 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:08:59.170 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:08:59.170 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:08:59.171 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:08:59.171 - INFO - +----- END KW: OpenStack.Run OS Command (1916)
20190402 11:08:59.171 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ERROR ]
20190402 11:08:59.171 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ERROR ]
20190402 11:08:59.172 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:08:59.173 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:08:59.173 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:08:59.173 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:59.173 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:08:59.174 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:08:59.174 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:08:59.174 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:08:59.175 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:08:59.175 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:08:59.175 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:08:59.175 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:08:59.176 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:00.756 - INFO - Command exited with return code 0.
20190402 11:09:00.757 - INFO - ${stdout} = ERROR
20190402 11:09:00.757 - INFO - ${stderr} =
20190402 11:09:00.757 - INFO - ${rc} = 0
20190402 11:09:00.757 - INFO - +--------- END KW: SSHLibrary.Execute Command (1582)
20190402 11:09:00.757 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:00.758 - INFO - ${res} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:09:00.758 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:00.758 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:00.758 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:00.758 - INFO - ${result} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:09:00.759 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:09:00.759 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:00.759 - INFO - ${value} = ERROR
20190402 11:09:00.759 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:09:00.759 - INFO - ${current_value} = ERROR
20190402 11:09:00.759 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1587)
20190402 11:09:00.759 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:00.759 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:00.760 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:00.760 - INFO - +------ END KW: OpenStack.Check Field Value (1589)
20190402 11:09:00.760 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1589)
20190402 11:09:00.760 - INFO - +---- END KW: OpenStack.Set Error State Instance (3506)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:09:00.760 - INFO - +---- START KW: OpenStack.Set Active State Instance [ ${cirros_instance_name} | active ]
20190402 11:09:00.760 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:09:00.761 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:00.761 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:00.761 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:00.761 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:00.761 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state active vm-cirros-1'.
20190402 11:09:02.608 - INFO - Command exited with return code 0.
20190402 11:09:02.608 - INFO - ${stdout} =
20190402 11:09:02.608 - INFO - ${stderr} =
20190402 11:09:02.608 - INFO - ${rc} = 0
20190402 11:09:02.608 - INFO - +------ END KW: SSHLibrary.Execute Command (1847)
20190402 11:09:02.609 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:02.609 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:02.609 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:09:02.609 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:02.610 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:02.610 - INFO - +----- END KW: OpenStack.Run OS Command (1850)
20190402 11:09:02.610 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:09:02.610 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:09:02.611 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:02.611 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:02.611 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:09:02.611 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:02.612 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:02.612 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:02.612 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:09:02.612 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:02.613 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:02.613 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:02.613 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:02.613 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:02.613 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:04.245 - INFO - Command exited with return code 0.
20190402 11:09:04.245 - INFO - ${stdout} = ACTIVE
20190402 11:09:04.245 - INFO - ${stderr} =
20190402 11:09:04.245 - INFO - ${rc} = 0
20190402 11:09:04.245 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:09:04.245 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:04.246 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:04.246 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:04.246 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:04.246 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:04.246 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:04.246 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 11:09:04.246 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:04.247 - INFO - ${value} = ACTIVE
20190402 11:09:04.247 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:04.247 - INFO - ${current_value} = ACTIVE
20190402 11:09:04.247 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 11:09:04.247 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:04.247 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:04.247 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:04.247 - INFO - +------ END KW: OpenStack.Check Field Value (1637)
20190402 11:09:04.247 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1637)
20190402 11:09:04.248 - INFO - +---- END KW: OpenStack.Set Active State Instance (3488)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:09:04.248 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name_2} | error ]
20190402 11:09:04.248 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:09:04.249 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:04.249 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:04.249 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:04.249 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:04.249 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-2'.
20190402 11:09:05.931 - INFO - Command exited with return code 0.
20190402 11:09:05.931 - INFO - ${stdout} =
20190402 11:09:05.931 - INFO - ${stderr} =
20190402 11:09:05.931 - INFO - ${rc} = 0
20190402 11:09:05.932 - INFO - +------ END KW: SSHLibrary.Execute Command (1683)
20190402 11:09:05.932 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:05.933 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:05.933 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:05.934 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:05.934 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:05.935 - INFO - +----- END KW: OpenStack.Run OS Command (1687)
20190402 11:09:05.935 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ERROR ]
20190402 11:09:05.936 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ERROR ]
20190402 11:09:05.936 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:05.937 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:05.937 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:09:05.937 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:05.937 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:05.937 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:05.937 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:09:05.937 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:05.938 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:05.938 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:05.938 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:05.938 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:05.939 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:07.551 - INFO - Command exited with return code 0.
20190402 11:09:07.551 - INFO - ${stdout} = ERROR
20190402 11:09:07.551 - INFO - ${stderr} =
20190402 11:09:07.551 - INFO - ${rc} = 0
20190402 11:09:07.551 - INFO - +--------- END KW: SSHLibrary.Execute Command (1613)
20190402 11:09:07.551 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:07.552 - INFO - ${res} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:09:07.552 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:07.552 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:07.552 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:07.552 - INFO - ${result} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:09:07.552 - INFO - +-------- END KW: OpenStack.Run OS Command (1615)
20190402 11:09:07.552 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:07.553 - INFO - ${value} = ERROR
20190402 11:09:07.553 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:07.553 - INFO - ${current_value} = ERROR
20190402 11:09:07.553 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1617)
20190402 11:09:07.553 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:07.553 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:07.553 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:07.553 - INFO - +------ END KW: OpenStack.Check Field Value (1617)
20190402 11:09:07.553 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1618)
20190402 11:09:07.554 - INFO - +---- END KW: OpenStack.Set Error State Instance (3306)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:09:07.554 - INFO - +---- START KW: OpenStack.Set Active State Instance [ ${cirros_instance_name_2} | active ]
20190402 11:09:07.554 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:09:07.555 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:07.555 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:07.555 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:07.555 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:07.555 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state active vm-cirros-2'.
20190402 11:09:09.368 - INFO - Command exited with return code 0.
20190402 11:09:09.368 - INFO - ${stdout} =
20190402 11:09:09.370 - INFO - ${stderr} =
20190402 11:09:09.370 - INFO - ${rc} = 0
20190402 11:09:09.371 - INFO - +------ END KW: SSHLibrary.Execute Command (1816)
20190402 11:09:09.371 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:09.373 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:09.373 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:09:09.373 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:09.374 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:09.374 - INFO - +----- END KW: OpenStack.Run OS Command (1820)
20190402 11:09:09.375 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:09:09.376 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:09:09.377 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:09.378 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:09.379 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:09:09.379 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:09.379 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:09.380 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:09.380 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:09:09.380 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:09.381 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:09.382 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:09.382 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:09.382 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:09.383 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:10.994 - INFO - Command exited with return code 0.
20190402 11:09:10.995 - INFO - ${stdout} = ACTIVE
20190402 11:09:10.995 - INFO - ${stderr} =
20190402 11:09:10.995 - INFO - ${rc} = 0
20190402 11:09:10.995 - INFO - +--------- END KW: SSHLibrary.Execute Command (1613)
20190402 11:09:10.995 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:10.996 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:10.996 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:10.996 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:10.996 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:10.996 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:10.996 - INFO - +-------- END KW: OpenStack.Run OS Command (1616)
20190402 11:09:10.997 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:10.997 - INFO - ${value} = ACTIVE
20190402 11:09:10.997 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:09:10.997 - INFO - ${current_value} = ACTIVE
20190402 11:09:10.997 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1620)
20190402 11:09:10.997 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:10.998 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:10.998 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:09:10.998 - INFO - +------ END KW: OpenStack.Check Field Value (1622)
20190402 11:09:10.998 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1623)
20190402 11:09:10.998 - INFO - +---- END KW: OpenStack.Set Active State Instance (3444)
------------------------------------------------------------------------------
20190402 11:09:10.998 - INFO - +--- END TEST: Set Error Active Flags Instance (13744)
------------------------------------------------------------------------------
20190402 11:09:10.999 - INFO - +--- START TEST: Pause Unpause Instances [ ]
------------------------------------------------------------------------------
20190402 11:09:10.999 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name} ]
20190402 11:09:10.999 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190402 11:09:11.000 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:11.000 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:11.000 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:11.000 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:11.000 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-1'.
20190402 11:09:12.732 - INFO - Command exited with return code 0.
20190402 11:09:12.732 - INFO - ${stdout} =
20190402 11:09:12.732 - INFO - ${stderr} =
20190402 11:09:12.732 - INFO - ${rc} = 0
20190402 11:09:12.732 - INFO - +------ END KW: SSHLibrary.Execute Command (1732)
20190402 11:09:12.732 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:12.733 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:12.733 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:12.733 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:12.733 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:12.733 - INFO - +----- END KW: OpenStack.Run OS Command (1734)
20190402 11:09:12.733 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | PAUSED ]
20190402 11:09:12.734 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | PAUSED ]
20190402 11:09:12.734 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:12.734 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:12.735 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:09:12.735 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:12.735 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:12.735 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:12.735 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:09:12.735 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:12.735 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:12.736 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:12.736 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:12.736 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:12.736 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:14.419 - INFO - Command exited with return code 0.
20190402 11:09:14.420 - INFO - ${stdout} = PAUSED
20190402 11:09:14.420 - INFO - ${stderr} =
20190402 11:09:14.420 - INFO - ${rc} = 0
20190402 11:09:14.420 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 11:09:14.420 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:14.421 - INFO - ${res} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:09:14.421 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:14.421 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:14.422 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:14.422 - INFO - ${result} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:09:14.422 - INFO - +-------- END KW: OpenStack.Run OS Command (1687)
20190402 11:09:14.422 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:14.422 - INFO - ${value} = PAUSED
20190402 11:09:14.422 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:09:14.422 - INFO - ${current_value} = PAUSED
20190402 11:09:14.422 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1688)
20190402 11:09:14.423 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:14.423 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:14.423 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:14.423 - INFO - +------ END KW: OpenStack.Check Field Value (1689)
20190402 11:09:14.423 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1690)
20190402 11:09:14.423 - INFO - +---- END KW: OpenStack.Pause Instance (3424)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:09:14.423 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name_2} ]
20190402 11:09:14.424 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190402 11:09:14.424 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:14.424 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:14.424 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:14.425 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:14.425 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-2'.
20190402 11:09:16.236 - INFO - Command exited with return code 0.
20190402 11:09:16.236 - INFO - ${stdout} =
20190402 11:09:16.236 - INFO - ${stderr} =
20190402 11:09:16.236 - INFO - ${rc} = 0
20190402 11:09:16.236 - INFO - +------ END KW: SSHLibrary.Execute Command (1811)
20190402 11:09:16.237 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:16.237 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:16.237 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:09:16.237 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:16.238 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:16.238 - INFO - +----- END KW: OpenStack.Run OS Command (1814)
20190402 11:09:16.238 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | PAUSED ]
20190402 11:09:16.238 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | PAUSED ]
20190402 11:09:16.239 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:16.239 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:16.239 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:09:16.239 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:16.240 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:16.240 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:16.240 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:09:16.240 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:16.240 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:16.241 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:16.241 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:16.241 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:16.241 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:17.872 - INFO - Command exited with return code 0.
20190402 11:09:17.872 - INFO - ${stdout} = PAUSED
20190402 11:09:17.873 - INFO - ${stderr} =
20190402 11:09:17.873 - INFO - ${rc} = 0
20190402 11:09:17.873 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:09:17.873 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:17.876 - INFO - ${res} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:09:17.876 - INFO - +--------- END KW: BuiltIn.Create Dictionary (3)
20190402 11:09:17.877 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:17.877 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:17.878 - INFO - ${result} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:09:17.878 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:09:17.878 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:17.879 - INFO - ${value} = PAUSED
20190402 11:09:17.879 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:17.879 - INFO - ${current_value} = PAUSED
20190402 11:09:17.879 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:09:17.880 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:17.880 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:17.880 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:17.881 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 11:09:17.881 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1643)
20190402 11:09:17.881 - INFO - +---- END KW: OpenStack.Pause Instance (3458)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:09:17.881 - INFO - +---- START KW: OpenStack.Unpause Instance [ ${cirros_instance_name} ]
20190402 11:09:17.882 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unpause ${vm_name} | True | 30 sec ]
20190402 11:09:17.883 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:17.883 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:17.883 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:17.884 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:17.884 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unpause vm-cirros-1'.
20190402 11:09:19.566 - INFO - Command exited with return code 0.
20190402 11:09:19.567 - INFO - ${stdout} =
20190402 11:09:19.569 - INFO - ${stderr} =
20190402 11:09:19.569 - INFO - ${rc} = 0
20190402 11:09:19.569 - INFO - +------ END KW: SSHLibrary.Execute Command (1685)
20190402 11:09:19.570 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:19.571 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:19.571 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:19.571 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:19.597 - INFO - +------ END KW: BuiltIn.Run Keyword If (26)
20190402 11:09:19.597 - INFO - +----- END KW: OpenStack.Run OS Command (1715)
20190402 11:09:19.597 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:09:19.598 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:09:19.598 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:19.598 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:19.598 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:09:19.598 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:19.599 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:19.599 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:19.599 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:09:19.599 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:19.599 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:19.599 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:19.599 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:19.600 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:19.600 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:21.232 - INFO - Command exited with return code 0.
20190402 11:09:21.233 - INFO - ${stdout} = ACTIVE
20190402 11:09:21.233 - INFO - ${stderr} =
20190402 11:09:21.233 - INFO - ${rc} = 0
20190402 11:09:21.233 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:09:21.234 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:21.236 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:21.236 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:09:21.236 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:21.237 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:21.238 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:21.238 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:09:21.238 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:21.239 - INFO - ${value} = ACTIVE
20190402 11:09:21.239 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:21.240 - INFO - ${current_value} = ACTIVE
20190402 11:09:21.240 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1642)
20190402 11:09:21.240 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:21.241 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:21.241 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:09:21.241 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 11:09:21.241 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1644)
20190402 11:09:21.242 - INFO - +---- END KW: OpenStack.Unpause Instance (3361)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:09:21.242 - INFO - +---- START KW: OpenStack.Unpause Instance [ ${cirros_instance_name_2} ]
20190402 11:09:21.243 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unpause ${vm_name} | True | 30 sec ]
20190402 11:09:21.244 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:21.244 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:21.244 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:09:21.244 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:21.245 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unpause vm-cirros-2'.
20190402 11:09:22.928 - INFO - Command exited with return code 0.
20190402 11:09:22.928 - INFO - ${stdout} =
20190402 11:09:22.928 - INFO - ${stderr} =
20190402 11:09:22.928 - INFO - ${rc} = 0
20190402 11:09:22.929 - INFO - +------ END KW: SSHLibrary.Execute Command (1684)
20190402 11:09:22.929 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:22.930 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:22.930 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:22.931 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:22.931 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:22.932 - INFO - +----- END KW: OpenStack.Run OS Command (1689)
20190402 11:09:22.932 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:09:22.933 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:09:22.933 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:22.935 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:22.935 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:09:22.936 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:22.936 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:22.936 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:22.937 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:09:22.937 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:22.938 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:22.938 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:22.939 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:22.939 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:22.940 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:24.538 - INFO - Command exited with return code 0.
20190402 11:09:24.538 - INFO - ${stdout} = ACTIVE
20190402 11:09:24.539 - INFO - ${stderr} =
20190402 11:09:24.539 - INFO - ${rc} = 0
20190402 11:09:24.539 - INFO - +--------- END KW: SSHLibrary.Execute Command (1600)
20190402 11:09:24.539 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:24.540 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:24.540 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:24.541 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:24.541 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:24.542 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:24.542 - INFO - +-------- END KW: OpenStack.Run OS Command (1605)
20190402 11:09:24.542 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:24.543 - INFO - ${value} = ACTIVE
20190402 11:09:24.543 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:24.543 - INFO - ${current_value} = ACTIVE
20190402 11:09:24.543 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1610)
20190402 11:09:24.544 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:24.544 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:24.544 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:24.545 - INFO - +------ END KW: OpenStack.Check Field Value (1612)
20190402 11:09:24.545 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1613)
20190402 11:09:24.545 - INFO - +---- END KW: OpenStack.Unpause Instance (3303)
------------------------------------------------------------------------------
20190402 11:09:24.546 - INFO - +--- END TEST: Pause Unpause Instances (13548)
------------------------------------------------------------------------------
20190402 11:09:24.547 - INFO - +--- START TEST: Stop Start Instances [ ]
------------------------------------------------------------------------------
20190402 11:09:24.547 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name} ]
20190402 11:09:24.548 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190402 11:09:24.549 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:24.550 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:24.550 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:09:24.550 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:24.551 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-1'.
20190402 11:09:26.498 - INFO - Command exited with return code 0.
20190402 11:09:26.498 - INFO - ${stdout} =
20190402 11:09:26.498 - INFO - ${stderr} =
20190402 11:09:26.498 - INFO - ${rc} = 0
20190402 11:09:26.499 - INFO - +------ END KW: SSHLibrary.Execute Command (1949)
20190402 11:09:26.499 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:26.500 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:09:26.500 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:26.500 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:26.501 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:26.501 - INFO - +----- END KW: OpenStack.Run OS Command (1953)
20190402 11:09:26.502 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SHUTOFF ]
20190402 11:09:26.502 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:09:26.503 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:26.504 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:26.505 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:09:26.505 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:26.505 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:26.506 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:26.506 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:09:26.506 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:26.508 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:26.508 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:26.508 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:09:26.508 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:26.510 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:28.098 - INFO - Command exited with return code 0.
20190402 11:09:28.098 - INFO - ${stdout} = ACTIVE
20190402 11:09:28.098 - INFO - ${stderr} =
20190402 11:09:28.098 - INFO - ${rc} = 0
20190402 11:09:28.098 - INFO - +--------- END KW: SSHLibrary.Execute Command (1590)
20190402 11:09:28.099 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:28.099 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:28.099 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:09:28.099 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:28.100 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:09:28.100 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:28.100 - INFO - +-------- END KW: OpenStack.Run OS Command (1594)
20190402 11:09:28.100 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:28.101 - INFO - ${value} = ACTIVE
20190402 11:09:28.101 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:28.101 - INFO - ${current_value} = ACTIVE
20190402 11:09:28.101 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1598)
20190402 11:09:28.101 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:28.102 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:28.102 - FAIL - ACTIVE != SHUTOFF
20190402 11:09:28.102 - DEBUG - Traceback (most recent call last):
  None
20190402 11:09:28.102 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:09:28.102 - INFO - +------ END KW: OpenStack.Check Field Value (1600)
20190402 11:09:38.102 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:09:38.103 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:38.104 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:38.104 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:09:38.104 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:38.104 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:38.105 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:38.105 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:09:38.105 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:38.106 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:38.106 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:38.106 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:38.107 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:38.107 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:39.687 - INFO - Command exited with return code 0.
20190402 11:09:39.687 - INFO - ${stdout} = ACTIVE
20190402 11:09:39.687 - INFO - ${stderr} =
20190402 11:09:39.687 - INFO - ${rc} = 0
20190402 11:09:39.688 - INFO - +--------- END KW: SSHLibrary.Execute Command (1580)
20190402 11:09:39.688 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:39.688 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:39.689 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:09:39.689 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:39.689 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:39.689 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:39.690 - INFO - +-------- END KW: OpenStack.Run OS Command (1584)
20190402 11:09:39.690 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:39.690 - INFO - ${value} = ACTIVE
20190402 11:09:39.690 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:09:39.690 - INFO - ${current_value} = ACTIVE
20190402 11:09:39.690 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1587)
20190402 11:09:39.691 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:39.691 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:39.691 - FAIL - ACTIVE != SHUTOFF
20190402 11:09:39.691 - DEBUG - Traceback (most recent call last):
  None
20190402 11:09:39.691 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:39.692 - INFO - +------ END KW: OpenStack.Check Field Value (1589)
20190402 11:09:49.692 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:09:49.692 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:09:49.693 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:09:49.693 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:09:49.693 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:49.693 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:09:49.693 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:09:49.693 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:09:49.693 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:09:49.694 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:09:49.694 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:09:49.694 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:09:49.694 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:09:49.694 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:09:51.324 - INFO - Command exited with return code 0.
20190402 11:09:51.325 - INFO - ${stdout} = ACTIVE
20190402 11:09:51.325 - INFO - ${stderr} =
20190402 11:09:51.325 - INFO - ${rc} = 0
20190402 11:09:51.325 - INFO - +--------- END KW: SSHLibrary.Execute Command (1631)
20190402 11:09:51.325 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:09:51.325 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:51.326 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:09:51.326 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:09:51.326 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:09:51.326 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:09:51.326 - INFO - +-------- END KW: OpenStack.Run OS Command (1633)
20190402 11:09:51.326 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:09:51.326 - INFO - ${value} = ACTIVE
20190402 11:09:51.327 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:09:51.327 - INFO - ${current_value} = ACTIVE
20190402 11:09:51.327 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1635)
20190402 11:09:51.327 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:09:51.327 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:09:51.327 - FAIL - ACTIVE != SHUTOFF
20190402 11:09:51.327 - DEBUG - Traceback (most recent call last):
  None
20190402 11:09:51.327 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:09:51.327 - INFO - +------ END KW: OpenStack.Check Field Value (1635)
20190402 11:10:01.328 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:01.328 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:10:01.329 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:10:01.329 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:10:01.329 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:01.330 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:10:01.330 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:10:01.330 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:10:01.330 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:10:01.331 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:01.331 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:01.331 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:01.331 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:01.332 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:10:02.913 - INFO - Command exited with return code 0.
20190402 11:10:02.913 - INFO - ${stdout} = ACTIVE
20190402 11:10:02.913 - INFO - ${stderr} =
20190402 11:10:02.913 - INFO - ${rc} = 0
20190402 11:10:02.914 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:10:02.914 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:02.914 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:02.915 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:10:02.915 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:02.915 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:10:02.915 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:02.915 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:10:02.916 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:10:02.916 - INFO - ${value} = ACTIVE
20190402 11:10:02.916 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:10:02.916 - INFO - ${current_value} = ACTIVE
20190402 11:10:02.916 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1588)
20190402 11:10:02.916 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:10:02.917 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:10:02.917 - FAIL - ACTIVE != SHUTOFF
20190402 11:10:02.917 - DEBUG - Traceback (most recent call last):
  None
20190402 11:10:02.917 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:10:02.917 - INFO - +------ END KW: OpenStack.Check Field Value (1589)
20190402 11:10:12.918 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:12.918 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:10:12.919 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:10:12.919 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:10:12.919 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:12.920 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:10:12.920 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:10:12.920 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:10:12.920 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:10:12.921 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:12.921 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:12.921 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:12.921 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:12.922 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:10:14.553 - INFO - Command exited with return code 0.
20190402 11:10:14.553 - INFO - ${stdout} = ACTIVE
20190402 11:10:14.553 - INFO - ${stderr} =
20190402 11:10:14.554 - INFO - ${rc} = 0
20190402 11:10:14.554 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:10:14.554 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:14.556 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:14.556 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:10:14.556 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:14.557 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:10:14.557 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:14.557 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:10:14.558 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:10:14.558 - INFO - ${value} = ACTIVE
20190402 11:10:14.558 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:10:14.558 - INFO - ${current_value} = ACTIVE
20190402 11:10:14.559 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:10:14.559 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:10:14.559 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:10:14.559 - FAIL - ACTIVE != SHUTOFF
20190402 11:10:14.559 - DEBUG - Traceback (most recent call last):
  None
20190402 11:10:14.559 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:10:14.559 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 11:10:24.560 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:24.561 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:10:24.562 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:10:24.563 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:10:24.563 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:10:24.563 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:10:24.564 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:10:24.564 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:10:24.564 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:10:24.565 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:24.566 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:24.566 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:10:24.566 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:24.567 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:10:26.199 - INFO - Command exited with return code 0.
20190402 11:10:26.199 - INFO - ${stdout} = ACTIVE
20190402 11:10:26.199 - INFO - ${stderr} =
20190402 11:10:26.199 - INFO - ${rc} = 0
20190402 11:10:26.199 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:10:26.200 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:26.200 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:26.200 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:10:26.200 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:26.201 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:10:26.201 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:26.201 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:10:26.201 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:10:26.201 - INFO - ${value} = ACTIVE
20190402 11:10:26.201 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:10:26.201 - INFO - ${current_value} = ACTIVE
20190402 11:10:26.201 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:10:26.202 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:10:26.202 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:10:26.202 - FAIL - ACTIVE != SHUTOFF
20190402 11:10:26.202 - DEBUG - Traceback (most recent call last):
  None
20190402 11:10:26.202 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:10:26.202 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 11:10:36.203 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:36.203 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:10:36.204 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:10:36.204 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:10:36.204 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:36.204 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:10:36.204 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:10:36.205 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:10:36.205 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:10:36.205 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:36.205 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:36.205 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:36.206 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:36.206 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:10:37.787 - INFO - Command exited with return code 0.
20190402 11:10:37.788 - INFO - ${stdout} = SHUTOFF
20190402 11:10:37.788 - INFO - ${stderr} =
20190402 11:10:37.788 - INFO - ${rc} = 0
20190402 11:10:37.788 - INFO - +--------- END KW: SSHLibrary.Execute Command (1582)
20190402 11:10:37.789 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:37.790 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:10:37.790 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:10:37.790 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:37.791 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:10:37.791 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:10:37.791 - INFO - +-------- END KW: OpenStack.Run OS Command (1586)
20190402 11:10:37.791 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:10:37.791 - INFO - ${value} = SHUTOFF
20190402 11:10:37.791 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:10:37.791 - INFO - ${current_value} = SHUTOFF
20190402 11:10:37.791 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1588)
20190402 11:10:37.791 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:10:37.792 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:10:37.792 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:10:37.792 - INFO - +------ END KW: OpenStack.Check Field Value (1589)
20190402 11:10:37.792 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71290)
20190402 11:10:37.792 - INFO - +---- END KW: OpenStack.Stop Instance (73245)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:10:37.792 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name_2} ]
20190402 11:10:37.792 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190402 11:10:37.793 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:37.793 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:37.793 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:10:37.793 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:37.794 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-2'.
20190402 11:10:39.546 - INFO - Command exited with return code 0.
20190402 11:10:39.546 - INFO - ${stdout} =
20190402 11:10:39.547 - INFO - ${stderr} =
20190402 11:10:39.547 - INFO - ${rc} = 0
20190402 11:10:39.547 - INFO - +------ END KW: SSHLibrary.Execute Command (1754)
20190402 11:10:39.547 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:39.548 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:10:39.548 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:10:39.548 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:39.548 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:10:39.549 - INFO - +----- END KW: OpenStack.Run OS Command (1757)
20190402 11:10:39.549 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:39.549 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:39.550 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:10:39.550 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:10:39.551 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:10:39.551 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:10:39.551 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:10:39.552 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:10:39.552 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:10:39.552 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:10:39.553 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:39.553 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:39.553 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:39.553 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:39.554 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:10:41.166 - INFO - Command exited with return code 0.
20190402 11:10:41.166 - INFO - ${stdout} = ACTIVE
20190402 11:10:41.166 - INFO - ${stderr} =
20190402 11:10:41.166 - INFO - ${rc} = 0
20190402 11:10:41.167 - INFO - +--------- END KW: SSHLibrary.Execute Command (1613)
20190402 11:10:41.167 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:41.168 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:41.169 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:10:41.169 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:41.170 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:10:41.170 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:41.170 - INFO - +-------- END KW: OpenStack.Run OS Command (1618)
20190402 11:10:41.171 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:10:41.171 - INFO - ${value} = ACTIVE
20190402 11:10:41.171 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:10:41.172 - INFO - ${current_value} = ACTIVE
20190402 11:10:41.172 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1622)
20190402 11:10:41.173 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:10:41.173 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:10:41.173 - FAIL - ACTIVE != SHUTOFF
20190402 11:10:41.174 - DEBUG - Traceback (most recent call last):
  None
20190402 11:10:41.174 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:10:41.174 - INFO - +------ END KW: OpenStack.Check Field Value (1625)
20190402 11:10:51.175 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:10:51.176 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:10:51.177 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:10:51.177 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:10:51.177 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:51.178 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:10:51.178 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:10:51.178 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:10:51.179 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:10:51.180 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:10:51.180 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:10:51.180 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:10:51.180 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:10:51.181 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:10:52.814 - INFO - Command exited with return code 0.
20190402 11:10:52.814 - INFO - ${stdout} = ACTIVE
20190402 11:10:52.814 - INFO - ${stderr} =
20190402 11:10:52.815 - INFO - ${rc} = 0
20190402 11:10:52.815 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:10:52.815 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:10:52.817 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:52.817 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:10:52.817 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:10:52.818 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:10:52.818 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:10:52.819 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 11:10:52.819 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:10:52.820 - INFO - ${value} = ACTIVE
20190402 11:10:52.820 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:10:52.821 - INFO - ${current_value} = ACTIVE
20190402 11:10:52.821 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:10:52.821 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:10:52.822 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:10:52.822 - FAIL - ACTIVE != SHUTOFF
20190402 11:10:52.822 - DEBUG - Traceback (most recent call last):
  None
20190402 11:10:52.823 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:10:52.823 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 11:11:02.823 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:11:02.824 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:02.824 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:02.824 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:11:02.824 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:02.825 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:02.825 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:02.825 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:11:02.825 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:02.826 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:02.826 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:02.826 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:02.826 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:02.827 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:04.409 - INFO - Command exited with return code 0.
20190402 11:11:04.409 - INFO - ${stdout} = ACTIVE
20190402 11:11:04.409 - INFO - ${stderr} =
20190402 11:11:04.409 - INFO - ${rc} = 0
20190402 11:11:04.409 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:11:04.409 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:04.410 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:04.410 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:11:04.410 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:04.410 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:11:04.410 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:04.410 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:11:04.410 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:04.410 - INFO - ${value} = ACTIVE
20190402 11:11:04.411 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:11:04.411 - INFO - ${current_value} = ACTIVE
20190402 11:11:04.411 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1587)
20190402 11:11:04.411 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:04.411 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:04.411 - FAIL - ACTIVE != SHUTOFF
20190402 11:11:04.411 - DEBUG - Traceback (most recent call last):
  None
20190402 11:11:04.411 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:11:04.411 - INFO - +------ END KW: OpenStack.Check Field Value (1588)
20190402 11:11:14.412 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:11:14.413 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:14.414 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:14.415 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:11:14.415 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:11:14.415 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:14.416 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:14.416 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:11:14.416 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:14.418 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:14.418 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:14.418 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:14.419 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:14.420 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:16.152 - INFO - Command exited with return code 0.
20190402 11:11:16.153 - INFO - ${stdout} = ACTIVE
20190402 11:11:16.153 - INFO - ${stderr} =
20190402 11:11:16.153 - INFO - ${rc} = 0
20190402 11:11:16.153 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:11:16.153 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:16.154 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:16.154 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:11:16.154 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:16.154 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:11:16.154 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:16.155 - INFO - +-------- END KW: OpenStack.Run OS Command (1739)
20190402 11:11:16.155 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:16.155 - INFO - ${value} = ACTIVE
20190402 11:11:16.155 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:11:16.155 - INFO - ${current_value} = ACTIVE
20190402 11:11:16.155 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1742)
20190402 11:11:16.155 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:16.156 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:16.156 - FAIL - ACTIVE != SHUTOFF
20190402 11:11:16.156 - DEBUG - Traceback (most recent call last):
  None
20190402 11:11:16.156 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:11:16.156 - INFO - +------ END KW: OpenStack.Check Field Value (1744)
20190402 11:11:26.157 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:11:26.157 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:26.158 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:26.159 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:11:26.159 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:11:26.159 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:26.160 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:26.160 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:11:26.160 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:26.161 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:26.161 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:26.161 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:26.161 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:26.162 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:28.094 - INFO - Command exited with return code 0.
20190402 11:11:28.094 - INFO - ${stdout} = ACTIVE
20190402 11:11:28.094 - INFO - ${stderr} =
20190402 11:11:28.094 - INFO - ${rc} = 0
20190402 11:11:28.094 - INFO - +--------- END KW: SSHLibrary.Execute Command (1933)
20190402 11:11:28.094 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:28.095 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:28.095 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:11:28.095 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:28.096 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:11:28.096 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:28.096 - INFO - +-------- END KW: OpenStack.Run OS Command (1936)
20190402 11:11:28.096 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:28.096 - INFO - ${value} = ACTIVE
20190402 11:11:28.096 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:11:28.097 - INFO - ${current_value} = ACTIVE
20190402 11:11:28.097 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1940)
20190402 11:11:28.097 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:28.097 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:28.097 - FAIL - ACTIVE != SHUTOFF
20190402 11:11:28.097 - DEBUG - Traceback (most recent call last):
  None
20190402 11:11:28.097 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:11:28.098 - INFO - +------ END KW: OpenStack.Check Field Value (1941)
20190402 11:11:38.098 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:11:38.099 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:38.100 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:38.101 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:11:38.102 - INFO - +-------- END KW: BuiltIn.Set Variable (2)
20190402 11:11:38.102 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:38.104 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:38.104 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:11:38.105 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:38.106 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:38.106 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:38.106 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:38.107 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:38.107 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:40.142 - INFO - Command exited with return code 0.
20190402 11:11:40.142 - INFO - ${stdout} = ACTIVE
20190402 11:11:40.142 - INFO - ${stderr} =
20190402 11:11:40.142 - INFO - ${rc} = 0
20190402 11:11:40.142 - INFO - +--------- END KW: SSHLibrary.Execute Command (2035)
20190402 11:11:40.143 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:40.143 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:40.143 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:11:40.143 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:40.144 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:11:40.144 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:40.144 - INFO - +-------- END KW: OpenStack.Run OS Command (2040)
20190402 11:11:40.144 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:40.144 - INFO - ${value} = ACTIVE
20190402 11:11:40.145 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:11:40.145 - INFO - ${current_value} = ACTIVE
20190402 11:11:40.145 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2046)
20190402 11:11:40.145 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:40.145 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:40.145 - FAIL - ACTIVE != SHUTOFF
20190402 11:11:40.145 - DEBUG - Traceback (most recent call last):
  None
20190402 11:11:40.146 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:11:40.146 - INFO - +------ END KW: OpenStack.Check Field Value (2048)
20190402 11:11:50.146 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:11:50.148 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:50.149 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:50.150 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:11:50.151 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:11:50.151 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:50.152 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:50.152 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:11:50.153 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:50.154 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:50.154 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:50.155 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:11:50.155 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:50.156 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:52.042 - INFO - Command exited with return code 0.
20190402 11:11:52.042 - INFO - ${stdout} = SHUTOFF
20190402 11:11:52.043 - INFO - ${stderr} =
20190402 11:11:52.043 - INFO - ${rc} = 0
20190402 11:11:52.043 - INFO - +--------- END KW: SSHLibrary.Execute Command (1888)
20190402 11:11:52.043 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:52.045 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:11:52.045 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:11:52.045 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:52.047 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:11:52.047 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:11:52.048 - INFO - +-------- END KW: OpenStack.Run OS Command (1894)
20190402 11:11:52.048 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:52.049 - INFO - ${value} = SHUTOFF
20190402 11:11:52.049 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:11:52.050 - INFO - ${current_value} = SHUTOFF
20190402 11:11:52.050 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1903)
20190402 11:11:52.051 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:52.051 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:52.051 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:11:52.052 - INFO - +------ END KW: OpenStack.Check Field Value (1905)
20190402 11:11:52.052 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (72503)
20190402 11:11:52.052 - INFO - +---- END KW: OpenStack.Stop Instance (74260)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:11:52.052 - INFO - +---- START KW: OpenStack.Start Instance [ ${cirros_instance_name} ]
20190402 11:11:52.053 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server start ${vm_name} | True | 30 sec ]
20190402 11:11:52.054 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:52.055 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:52.055 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:11:52.055 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:52.056 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server start vm-cirros-1'.
20190402 11:11:53.791 - INFO - Command exited with return code 0.
20190402 11:11:53.791 - INFO - ${stdout} =
20190402 11:11:53.791 - INFO - ${stderr} =
20190402 11:11:53.791 - INFO - ${rc} = 0
20190402 11:11:53.791 - INFO - +------ END KW: SSHLibrary.Execute Command (1736)
20190402 11:11:53.792 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:53.793 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:11:53.793 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:11:53.793 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:53.794 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:11:53.794 - INFO - +----- END KW: OpenStack.Run OS Command (1741)
20190402 11:11:53.795 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:11:53.795 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:11:53.796 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:53.797 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:53.797 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:11:53.798 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:53.798 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:53.798 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:53.799 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:11:53.799 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:53.800 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:53.801 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:53.801 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:11:53.801 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:53.802 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:55.586 - INFO - Command exited with return code 0.
20190402 11:11:55.586 - INFO - ${stdout} = ACTIVE
20190402 11:11:55.586 - INFO - ${stderr} =
20190402 11:11:55.586 - INFO - ${rc} = 0
20190402 11:11:55.586 - INFO - +--------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:11:55.586 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:55.587 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:55.587 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:11:55.587 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:55.588 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:11:55.588 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:55.588 - INFO - +-------- END KW: OpenStack.Run OS Command (1789)
20190402 11:11:55.588 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:55.588 - INFO - ${value} = ACTIVE
20190402 11:11:55.588 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:11:55.588 - INFO - ${current_value} = ACTIVE
20190402 11:11:55.588 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1792)
20190402 11:11:55.588 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:55.589 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:55.589 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:11:55.589 - INFO - +------ END KW: OpenStack.Check Field Value (1794)
20190402 11:11:55.589 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1795)
20190402 11:11:55.589 - INFO - +---- END KW: OpenStack.Start Instance (3537)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:11:55.589 - INFO - +---- START KW: OpenStack.Start Instance [ ${cirros_instance_name_2} ]
20190402 11:11:55.589 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server start ${vm_name} | True | 30 sec ]
20190402 11:11:55.590 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:55.590 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:55.590 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:11:55.590 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:55.590 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server start vm-cirros-2'.
20190402 11:11:57.422 - INFO - Command exited with return code 0.
20190402 11:11:57.422 - INFO - ${stdout} =
20190402 11:11:57.422 - INFO - ${stderr} =
20190402 11:11:57.422 - INFO - ${rc} = 0
20190402 11:11:57.422 - INFO - +------ END KW: SSHLibrary.Execute Command (1832)
20190402 11:11:57.422 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:57.423 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:11:57.423 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:11:57.423 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:57.423 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:11:57.423 - INFO - +----- END KW: OpenStack.Run OS Command (1834)
20190402 11:11:57.424 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:11:57.424 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:11:57.424 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:11:57.424 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:11:57.425 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:11:57.425 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:11:57.425 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:11:57.425 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:11:57.425 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:11:57.425 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:11:57.426 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:57.426 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:57.426 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:11:57.426 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:57.426 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:11:59.210 - INFO - Command exited with return code 0.
20190402 11:11:59.210 - INFO - ${stdout} = ACTIVE
20190402 11:11:59.210 - INFO - ${stderr} =
20190402 11:11:59.210 - INFO - ${rc} = 0
20190402 11:11:59.210 - INFO - +--------- END KW: SSHLibrary.Execute Command (1784)
20190402 11:11:59.211 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:11:59.211 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:59.211 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:11:59.211 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:11:59.212 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:11:59.212 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:11:59.212 - INFO - +-------- END KW: OpenStack.Run OS Command (1787)
20190402 11:11:59.212 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:11:59.212 - INFO - ${value} = ACTIVE
20190402 11:11:59.212 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:11:59.212 - INFO - ${current_value} = ACTIVE
20190402 11:11:59.213 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1788)
20190402 11:11:59.213 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:11:59.213 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:11:59.213 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:11:59.213 - INFO - +------ END KW: OpenStack.Check Field Value (1789)
20190402 11:11:59.213 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1790)
20190402 11:11:59.213 - INFO - +---- END KW: OpenStack.Start Instance (3624)
------------------------------------------------------------------------------
20190402 11:11:59.214 - INFO - +--- END TEST: Stop Start Instances (154667)
------------------------------------------------------------------------------
20190402 11:11:59.214 - INFO - +--- START TEST: Lock Unlock Instances [ ]
------------------------------------------------------------------------------
20190402 11:11:59.214 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name} ]
20190402 11:11:59.214 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190402 11:11:59.215 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:11:59.215 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:11:59.215 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:11:59.215 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:11:59.216 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-1'.
20190402 11:12:00.897 - INFO - Command exited with return code 0.
20190402 11:12:00.897 - INFO - ${stdout} =
20190402 11:12:00.897 - INFO - ${stderr} =
20190402 11:12:00.897 - INFO - ${rc} = 0
20190402 11:12:00.898 - INFO - +------ END KW: SSHLibrary.Execute Command (1682)
20190402 11:12:00.898 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:00.900 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:12:00.900 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:12:00.900 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:00.901 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:12:00.901 - INFO - +----- END KW: OpenStack.Run OS Command (1687)
20190402 11:12:00.901 - INFO - +---- END KW: OpenStack.Lock Instance (1687)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:12:00.902 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name_2} ]
20190402 11:12:00.902 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190402 11:12:00.903 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:00.903 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:00.903 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:12:00.903 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:00.903 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-2'.
20190402 11:12:02.792 - INFO - Command exited with return code 0.
20190402 11:12:02.792 - INFO - ${stdout} =
20190402 11:12:02.793 - INFO - ${stderr} =
20190402 11:12:02.793 - INFO - ${rc} = 0
20190402 11:12:02.793 - INFO - +------ END KW: SSHLibrary.Execute Command (1890)
20190402 11:12:02.793 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:02.795 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:12:02.795 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:12:02.795 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:02.796 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:12:02.797 - INFO - +----- END KW: OpenStack.Run OS Command (1894)
20190402 11:12:02.797 - INFO - +---- END KW: OpenStack.Lock Instance (1895)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:12:02.797 - INFO - +---- START KW: OpenStack.Unlock Instance [ ${cirros_instance_name} ]
20190402 11:12:02.798 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unlock ${vm_name} | True | 30 sec ]
20190402 11:12:02.800 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:02.800 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:02.800 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:12:02.801 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:02.801 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unlock vm-cirros-1'.
20190402 11:12:04.698 - INFO - Command exited with return code 0.
20190402 11:12:04.698 - INFO - ${stdout} =
20190402 11:12:04.698 - INFO - ${stderr} =
20190402 11:12:04.698 - INFO - ${rc} = 0
20190402 11:12:04.698 - INFO - +------ END KW: SSHLibrary.Execute Command (1898)
20190402 11:12:04.698 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:04.699 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:12:04.699 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:12:04.699 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:04.700 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:12:04.700 - INFO - +----- END KW: OpenStack.Run OS Command (1902)
20190402 11:12:04.700 - INFO - +---- END KW: OpenStack.Unlock Instance (1903)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:12:04.700 - INFO - +---- START KW: OpenStack.Unlock Instance [ ${cirros_instance_name_2} ]
20190402 11:12:04.701 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unlock ${vm_name} | True | 30 sec ]
20190402 11:12:04.701 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:04.702 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:04.702 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:12:04.702 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:04.702 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unlock vm-cirros-2'.
20190402 11:12:06.485 - INFO - Command exited with return code 0.
20190402 11:12:06.486 - INFO - ${stdout} =
20190402 11:12:06.486 - INFO - ${stderr} =
20190402 11:12:06.486 - INFO - ${rc} = 0
20190402 11:12:06.486 - INFO - +------ END KW: SSHLibrary.Execute Command (1784)
20190402 11:12:06.486 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:06.486 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:12:06.486 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:12:06.487 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:06.487 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:12:06.487 - INFO - +----- END KW: OpenStack.Run OS Command (1786)
20190402 11:12:06.487 - INFO - +---- END KW: OpenStack.Unlock Instance (1787)
------------------------------------------------------------------------------
20190402 11:12:06.487 - INFO - +--- END TEST: Lock Unlock Instances (7273)
------------------------------------------------------------------------------
20190402 11:12:06.488 - INFO - +--- START TEST: Reboot Instances [ ]
------------------------------------------------------------------------------
20190402 11:12:06.488 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name} ]
20190402 11:12:06.488 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190402 11:12:06.489 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:06.489 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:06.489 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:12:06.489 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:06.489 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-1'.
20190402 11:12:08.272 - INFO - Command exited with return code 0.
20190402 11:12:08.272 - INFO - ${stdout} =
20190402 11:12:08.272 - INFO - ${stderr} =
20190402 11:12:08.272 - INFO - ${rc} = 0
20190402 11:12:08.273 - INFO - +------ END KW: SSHLibrary.Execute Command (1784)
20190402 11:12:08.273 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:08.274 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:12:08.274 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:12:08.274 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:08.274 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:12:08.275 - INFO - +----- END KW: OpenStack.Run OS Command (1787)
20190402 11:12:08.275 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBOOT ]
20190402 11:12:08.275 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBOOT ]
20190402 11:12:08.276 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:12:08.277 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:12:08.277 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:12:08.277 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:08.278 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:12:08.278 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:12:08.278 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:12:08.279 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:12:08.279 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:08.280 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:08.280 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:12:08.280 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:08.281 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:12:09.862 - INFO - Command exited with return code 0.
20190402 11:12:09.862 - INFO - ${stdout} = REBOOT
20190402 11:12:09.862 - INFO - ${stderr} =
20190402 11:12:09.862 - INFO - ${rc} = 0
20190402 11:12:09.862 - INFO - +--------- END KW: SSHLibrary.Execute Command (1582)
20190402 11:12:09.862 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:09.863 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:09.863 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:12:09.863 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:09.863 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:12:09.863 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:09.864 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:12:09.864 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:12:09.864 - INFO - ${value} = REBOOT
20190402 11:12:09.864 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:12:09.864 - INFO - ${current_value} = REBOOT
20190402 11:12:09.864 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1588)
20190402 11:12:09.865 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:12:09.865 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:12:09.865 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:12:09.865 - INFO - +------ END KW: OpenStack.Check Field Value (1590)
20190402 11:12:09.865 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1590)
20190402 11:12:09.865 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:12:09.866 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:12:09.866 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:12:09.866 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:12:09.867 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:12:09.867 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:12:09.867 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:12:09.867 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:12:09.867 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:12:09.867 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:12:09.868 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:09.868 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:09.868 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:09.868 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:09.868 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:12:11.479 - INFO - Command exited with return code 0.
20190402 11:12:11.479 - INFO - ${stdout} = REBOOT
20190402 11:12:11.480 - INFO - ${stderr} =
20190402 11:12:11.480 - INFO - ${rc} = 0
20190402 11:12:11.480 - INFO - +--------- END KW: SSHLibrary.Execute Command (1612)
20190402 11:12:11.480 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:11.482 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:11.482 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:12:11.482 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:11.483 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:12:11.483 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:11.483 - INFO - +-------- END KW: OpenStack.Run OS Command (1616)
20190402 11:12:11.483 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:12:11.483 - INFO - ${value} = REBOOT
20190402 11:12:11.483 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:12:11.484 - INFO - ${current_value} = REBOOT
20190402 11:12:11.484 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1618)
20190402 11:12:11.484 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:12:11.484 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:12:11.485 - FAIL - REBOOT != ACTIVE
20190402 11:12:11.485 - DEBUG - Traceback (most recent call last):
  None
20190402 11:12:11.485 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:12:11.485 - INFO - +------ END KW: OpenStack.Check Field Value (1619)
20190402 11:12:21.485 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:12:21.486 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:12:21.486 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:12:21.486 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:12:21.486 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:21.486 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:12:21.487 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:12:21.487 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:12:21.487 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:12:21.487 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:21.487 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:21.487 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:21.487 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:21.488 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:12:23.118 - INFO - Command exited with return code 0.
20190402 11:12:23.119 - INFO - ${stdout} = REBOOT
20190402 11:12:23.119 - INFO - ${stderr} =
20190402 11:12:23.119 - INFO - ${rc} = 0
20190402 11:12:23.119 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:12:23.120 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:23.121 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:23.121 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:12:23.121 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:23.122 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:12:23.122 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:23.122 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 11:12:23.123 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:12:23.123 - INFO - ${value} = REBOOT
20190402 11:12:23.123 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:12:23.124 - INFO - ${current_value} = REBOOT
20190402 11:12:23.124 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1638)
20190402 11:12:23.124 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:12:23.124 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:12:23.125 - FAIL - REBOOT != ACTIVE
20190402 11:12:23.125 - DEBUG - Traceback (most recent call last):
  None
20190402 11:12:23.125 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:12:23.125 - INFO - +------ END KW: OpenStack.Check Field Value (1640)
20190402 11:12:33.126 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:12:33.127 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:12:33.128 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:12:33.129 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:12:33.129 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:12:33.129 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:12:33.130 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:12:33.130 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:12:33.131 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:12:33.132 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:33.133 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:33.133 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:12:33.133 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:33.134 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:12:34.717 - INFO - Command exited with return code 0.
20190402 11:12:34.717 - INFO - ${stdout} = REBOOT
20190402 11:12:34.717 - INFO - ${stderr} =
20190402 11:12:34.717 - INFO - ${rc} = 0
20190402 11:12:34.717 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:12:34.718 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:34.719 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:34.719 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:12:34.719 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:34.719 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:12:34.720 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:34.720 - INFO - +-------- END KW: OpenStack.Run OS Command (1589)
20190402 11:12:34.720 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:12:34.720 - INFO - ${value} = REBOOT
20190402 11:12:34.720 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:12:34.721 - INFO - ${current_value} = REBOOT
20190402 11:12:34.721 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1594)
20190402 11:12:34.721 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:12:34.722 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:12:34.722 - FAIL - REBOOT != ACTIVE
20190402 11:12:34.722 - DEBUG - Traceback (most recent call last):
  None
20190402 11:12:34.723 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:12:34.723 - INFO - +------ END KW: OpenStack.Check Field Value (1597)
20190402 11:12:44.724 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:12:44.725 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:12:44.726 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:12:44.726 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:12:44.726 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:44.727 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:12:44.727 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:12:44.728 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:12:44.728 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:12:44.729 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:44.729 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:44.729 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:44.730 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:44.731 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:12:46.363 - INFO - Command exited with return code 0.
20190402 11:12:46.363 - INFO - ${stdout} = REBOOT
20190402 11:12:46.364 - INFO - ${stderr} =
20190402 11:12:46.364 - INFO - ${rc} = 0
20190402 11:12:46.364 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:12:46.364 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:46.366 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:46.366 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:12:46.366 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:46.368 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:12:46.368 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:46.368 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 11:12:46.369 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:12:46.370 - INFO - ${value} = REBOOT
20190402 11:12:46.370 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:12:46.370 - INFO - ${current_value} = REBOOT
20190402 11:12:46.371 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:12:46.371 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:12:46.371 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:12:46.372 - FAIL - REBOOT != ACTIVE
20190402 11:12:46.372 - DEBUG - Traceback (most recent call last):
  None
20190402 11:12:46.372 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:12:46.372 - INFO - +------ END KW: OpenStack.Check Field Value (1649)
20190402 11:12:56.373 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:12:56.373 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:12:56.374 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:12:56.374 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:12:56.374 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:12:56.374 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:12:56.374 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:12:56.374 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:12:56.374 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:12:56.375 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:12:56.375 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:12:56.375 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:12:56.375 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:12:56.375 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:12:58.006 - INFO - Command exited with return code 0.
20190402 11:12:58.007 - INFO - ${stdout} = REBOOT
20190402 11:12:58.007 - INFO - ${stderr} =
20190402 11:12:58.007 - INFO - ${rc} = 0
20190402 11:12:58.007 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:12:58.008 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:12:58.009 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:58.009 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:12:58.009 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:12:58.010 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:12:58.010 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:12:58.010 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:12:58.011 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:12:58.011 - INFO - ${value} = REBOOT
20190402 11:12:58.011 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:12:58.011 - INFO - ${current_value} = REBOOT
20190402 11:12:58.011 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1638)
20190402 11:12:58.011 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:12:58.012 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:12:58.012 - FAIL - REBOOT != ACTIVE
20190402 11:12:58.012 - DEBUG - Traceback (most recent call last):
  None
20190402 11:12:58.012 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:12:58.012 - INFO - +------ END KW: OpenStack.Check Field Value (1639)
20190402 11:13:08.012 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:13:08.013 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:13:08.014 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:13:08.014 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:13:08.015 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:13:08.015 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:13:08.015 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:13:08.015 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:13:08.015 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:13:08.016 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:13:08.016 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:13:08.016 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:13:08.016 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:13:08.016 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:13:09.598 - INFO - Command exited with return code 0.
20190402 11:13:09.599 - INFO - ${stdout} = REBOOT
20190402 11:13:09.599 - INFO - ${stderr} =
20190402 11:13:09.599 - INFO - ${rc} = 0
20190402 11:13:09.599 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:13:09.600 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:13:09.601 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:09.601 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:13:09.601 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:13:09.602 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:13:09.603 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:09.603 - INFO - +-------- END KW: OpenStack.Run OS Command (1588)
20190402 11:13:09.603 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:13:09.604 - INFO - ${value} = REBOOT
20190402 11:13:09.604 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:13:09.604 - INFO - ${current_value} = REBOOT
20190402 11:13:09.604 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:13:09.605 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:13:09.605 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:13:09.606 - FAIL - REBOOT != ACTIVE
20190402 11:13:09.606 - DEBUG - Traceback (most recent call last):
  None
20190402 11:13:09.606 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:13:09.606 - INFO - +------ END KW: OpenStack.Check Field Value (1594)
20190402 11:13:19.607 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:13:19.608 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:13:19.609 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:13:19.610 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:13:19.610 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:19.610 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:13:19.611 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:13:19.611 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:13:19.612 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:13:19.613 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:13:19.613 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:13:19.613 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:13:19.614 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:13:19.615 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:13:21.197 - INFO - Command exited with return code 0.
20190402 11:13:21.198 - INFO - ${stdout} = REBOOT
20190402 11:13:21.198 - INFO - ${stderr} =
20190402 11:13:21.198 - INFO - ${rc} = 0
20190402 11:13:21.199 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:13:21.199 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:13:21.201 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:21.201 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:13:21.201 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:13:21.202 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:13:21.203 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:21.203 - INFO - +-------- END KW: OpenStack.Run OS Command (1591)
20190402 11:13:21.203 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:13:21.204 - INFO - ${value} = REBOOT
20190402 11:13:21.204 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:13:21.204 - INFO - ${current_value} = REBOOT
20190402 11:13:21.205 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1596)
20190402 11:13:21.205 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:13:21.205 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:13:21.206 - FAIL - REBOOT != ACTIVE
20190402 11:13:21.206 - DEBUG - Traceback (most recent call last):
  None
20190402 11:13:21.206 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:13:21.206 - INFO - +------ END KW: OpenStack.Check Field Value (1599)
20190402 11:13:31.207 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:13:31.207 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:13:31.208 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:13:31.209 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:13:31.209 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:31.209 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:13:31.210 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:13:31.210 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:13:31.210 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:13:31.210 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:13:31.210 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:13:31.211 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:31.211 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:13:31.211 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:13:32.792 - INFO - Command exited with return code 0.
20190402 11:13:32.792 - INFO - ${stdout} = REBOOT
20190402 11:13:32.792 - INFO - ${stderr} =
20190402 11:13:32.792 - INFO - ${rc} = 0
20190402 11:13:32.793 - INFO - +--------- END KW: SSHLibrary.Execute Command (1581)
20190402 11:13:32.793 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:13:32.794 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:32.794 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:13:32.795 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:13:32.795 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:13:32.796 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:32.796 - INFO - +-------- END KW: OpenStack.Run OS Command (1586)
20190402 11:13:32.796 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:13:32.797 - INFO - ${value} = REBOOT
20190402 11:13:32.797 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:13:32.797 - INFO - ${current_value} = REBOOT
20190402 11:13:32.798 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:13:32.798 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:13:32.798 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:13:32.799 - FAIL - REBOOT != ACTIVE
20190402 11:13:32.799 - DEBUG - Traceback (most recent call last):
  None
20190402 11:13:32.799 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:13:32.799 - INFO - +------ END KW: OpenStack.Check Field Value (1592)
20190402 11:13:42.800 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:13:42.801 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:13:42.802 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:13:42.803 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:13:42.803 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:42.803 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:13:42.804 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:13:42.804 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:13:42.804 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:13:42.805 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:13:42.806 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:13:42.806 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:42.806 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:13:42.807 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:13:44.439 - INFO - Command exited with return code 0.
20190402 11:13:44.440 - INFO - ${stdout} = REBOOT
20190402 11:13:44.440 - INFO - ${stderr} =
20190402 11:13:44.440 - INFO - ${rc} = 0
20190402 11:13:44.440 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:13:44.441 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:13:44.442 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:44.442 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:13:44.442 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:13:44.443 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:13:44.443 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:44.443 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:13:44.443 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:13:44.444 - INFO - ${value} = REBOOT
20190402 11:13:44.444 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:13:44.444 - INFO - ${current_value} = REBOOT
20190402 11:13:44.444 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 11:13:44.445 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:13:44.445 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:13:44.445 - FAIL - REBOOT != ACTIVE
20190402 11:13:44.445 - DEBUG - Traceback (most recent call last):
  None
20190402 11:13:44.445 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:13:44.445 - INFO - +------ END KW: OpenStack.Check Field Value (1645)
20190402 11:13:54.446 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:13:54.447 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:13:54.447 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:13:54.448 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:13:54.448 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:54.448 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:13:54.448 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:13:54.448 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:13:54.448 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:13:54.449 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:13:54.450 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:13:54.450 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:13:54.450 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:13:54.451 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:13:56.082 - INFO - Command exited with return code 0.
20190402 11:13:56.083 - INFO - ${stdout} = REBOOT
20190402 11:13:56.083 - INFO - ${stderr} =
20190402 11:13:56.083 - INFO - ${rc} = 0
20190402 11:13:56.083 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:13:56.083 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:13:56.083 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:56.083 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:13:56.084 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:13:56.084 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:13:56.084 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:13:56.084 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:13:56.084 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:13:56.084 - INFO - ${value} = REBOOT
20190402 11:13:56.084 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:13:56.085 - INFO - ${current_value} = REBOOT
20190402 11:13:56.085 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 11:13:56.085 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:13:56.085 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:13:56.085 - FAIL - REBOOT != ACTIVE
20190402 11:13:56.085 - DEBUG - Traceback (most recent call last):
  None
20190402 11:13:56.085 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:13:56.085 - INFO - +------ END KW: OpenStack.Check Field Value (1639)
20190402 11:14:06.086 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:14:06.086 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:06.087 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:06.087 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:14:06.087 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:06.087 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:06.088 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:06.088 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:14:06.088 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:06.088 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:06.089 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:06.089 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:06.089 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:06.089 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:07.770 - INFO - Command exited with return code 0.
20190402 11:14:07.770 - INFO - ${stdout} = REBOOT
20190402 11:14:07.771 - INFO - ${stderr} =
20190402 11:14:07.771 - INFO - ${rc} = 0
20190402 11:14:07.771 - INFO - +--------- END KW: SSHLibrary.Execute Command (1682)
20190402 11:14:07.771 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:07.772 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:07.772 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:14:07.772 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:07.772 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:14:07.772 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:07.773 - INFO - +-------- END KW: OpenStack.Run OS Command (1684)
20190402 11:14:07.773 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:07.773 - INFO - ${value} = REBOOT
20190402 11:14:07.773 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:07.773 - INFO - ${current_value} = REBOOT
20190402 11:14:07.773 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1687)
20190402 11:14:07.774 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:07.774 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:07.774 - FAIL - REBOOT != ACTIVE
20190402 11:14:07.774 - DEBUG - Traceback (most recent call last):
  None
20190402 11:14:07.774 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:14:07.774 - INFO - +------ END KW: OpenStack.Check Field Value (1688)
20190402 11:14:17.775 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:14:17.777 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:17.778 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:17.779 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:14:17.779 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:17.780 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:17.781 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:17.781 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:14:17.781 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:17.782 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:17.783 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:17.783 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:17.783 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:17.784 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:19.467 - INFO - Command exited with return code 0.
20190402 11:14:19.467 - INFO - ${stdout} = ACTIVE
20190402 11:14:19.467 - INFO - ${stderr} =
20190402 11:14:19.467 - INFO - ${rc} = 0
20190402 11:14:19.467 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 11:14:19.467 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:19.468 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:14:19.468 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:14:19.468 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:19.469 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:14:19.469 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:14:19.469 - INFO - +-------- END KW: OpenStack.Run OS Command (1688)
20190402 11:14:19.469 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:19.469 - INFO - ${value} = ACTIVE
20190402 11:14:19.469 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:19.470 - INFO - ${current_value} = ACTIVE
20190402 11:14:19.470 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1693)
20190402 11:14:19.470 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:19.470 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:19.470 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:14:19.470 - INFO - +------ END KW: OpenStack.Check Field Value (1695)
20190402 11:14:19.470 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (129605)
20190402 11:14:19.471 - INFO - +---- END KW: OpenStack.Reboot Instance (132983)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:14:19.471 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name_2} ]
20190402 11:14:19.471 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190402 11:14:19.472 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:19.472 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:19.472 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:14:19.472 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:19.472 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-2'.
20190402 11:14:21.136 - INFO - Command exited with return code 0.
20190402 11:14:21.136 - INFO - ${stdout} =
20190402 11:14:21.136 - INFO - ${stderr} =
20190402 11:14:21.137 - INFO - ${rc} = 0
20190402 11:14:21.137 - INFO - +------ END KW: SSHLibrary.Execute Command (1665)
20190402 11:14:21.137 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:21.137 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:14:21.137 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:14:21.137 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:21.138 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:14:21.138 - INFO - +----- END KW: OpenStack.Run OS Command (1667)
20190402 11:14:21.138 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBOOT ]
20190402 11:14:21.138 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBOOT ]
20190402 11:14:21.139 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:21.139 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:21.139 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:14:21.139 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:21.139 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:21.140 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:21.140 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:14:21.140 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:21.140 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:21.140 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:21.140 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:21.140 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:21.141 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:22.853 - INFO - Command exited with return code 0.
20190402 11:14:22.853 - INFO - ${stdout} = REBOOT
20190402 11:14:22.853 - INFO - ${stderr} =
20190402 11:14:22.853 - INFO - ${rc} = 0
20190402 11:14:22.853 - INFO - +--------- END KW: SSHLibrary.Execute Command (1713)
20190402 11:14:22.853 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:22.854 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:22.854 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:14:22.854 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:22.854 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:14:22.854 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:22.855 - INFO - +-------- END KW: OpenStack.Run OS Command (1714)
20190402 11:14:22.855 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:22.855 - INFO - ${value} = REBOOT
20190402 11:14:22.855 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:22.855 - INFO - ${current_value} = REBOOT
20190402 11:14:22.855 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1716)
20190402 11:14:22.855 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:22.855 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:22.856 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:14:22.856 - INFO - +------ END KW: OpenStack.Check Field Value (1718)
20190402 11:14:22.856 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1718)
20190402 11:14:22.856 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:14:22.856 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:14:22.857 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:22.857 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:22.857 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:14:22.857 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:22.857 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:22.858 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:22.858 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:14:22.858 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:22.858 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:22.859 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:22.859 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:22.859 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:22.859 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:24.454 - INFO - Command exited with return code 0.
20190402 11:14:24.455 - INFO - ${stdout} = REBOOT
20190402 11:14:24.455 - INFO - ${stderr} =
20190402 11:14:24.455 - INFO - ${rc} = 0
20190402 11:14:24.455 - INFO - +--------- END KW: SSHLibrary.Execute Command (1596)
20190402 11:14:24.455 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:24.456 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:24.456 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:14:24.456 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:24.457 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:14:24.457 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:24.457 - INFO - +-------- END KW: OpenStack.Run OS Command (1599)
20190402 11:14:24.457 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:24.457 - INFO - ${value} = REBOOT
20190402 11:14:24.457 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:24.458 - INFO - ${current_value} = REBOOT
20190402 11:14:24.458 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1601)
20190402 11:14:24.458 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:24.458 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:24.458 - FAIL - REBOOT != ACTIVE
20190402 11:14:24.459 - DEBUG - Traceback (most recent call last):
  None
20190402 11:14:24.459 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:14:24.459 - INFO - +------ END KW: OpenStack.Check Field Value (1603)
20190402 11:14:34.459 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:14:34.460 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:34.460 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:34.460 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:14:34.460 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:34.461 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:34.461 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:34.461 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:14:34.461 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:34.461 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:34.462 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:34.462 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:34.462 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:34.462 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:36.094 - INFO - Command exited with return code 0.
20190402 11:14:36.094 - INFO - ${stdout} = REBOOT
20190402 11:14:36.094 - INFO - ${stderr} =
20190402 11:14:36.094 - INFO - ${rc} = 0
20190402 11:14:36.094 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:14:36.095 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:36.095 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:36.095 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:14:36.095 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:36.095 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:14:36.096 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:36.096 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 11:14:36.096 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:36.096 - INFO - ${value} = REBOOT
20190402 11:14:36.096 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:36.096 - INFO - ${current_value} = REBOOT
20190402 11:14:36.096 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 11:14:36.096 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:36.096 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:36.097 - FAIL - REBOOT != ACTIVE
20190402 11:14:36.097 - DEBUG - Traceback (most recent call last):
  None
20190402 11:14:36.097 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:14:36.097 - INFO - +------ END KW: OpenStack.Check Field Value (1638)
20190402 11:14:46.097 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:14:46.098 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:46.098 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:46.098 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:14:46.098 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:46.098 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:46.099 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:46.099 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:14:46.099 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:46.099 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:46.100 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:46.100 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:46.100 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:46.100 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:47.682 - INFO - Command exited with return code 0.
20190402 11:14:47.682 - INFO - ${stdout} = REBOOT
20190402 11:14:47.682 - INFO - ${stderr} =
20190402 11:14:47.683 - INFO - ${rc} = 0
20190402 11:14:47.683 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:14:47.683 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:47.683 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:47.683 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:14:47.683 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:47.684 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:14:47.684 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:47.684 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:14:47.684 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:47.684 - INFO - ${value} = REBOOT
20190402 11:14:47.684 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:47.684 - INFO - ${current_value} = REBOOT
20190402 11:14:47.685 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1586)
20190402 11:14:47.685 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:47.685 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:47.685 - FAIL - REBOOT != ACTIVE
20190402 11:14:47.685 - DEBUG - Traceback (most recent call last):
  None
20190402 11:14:47.685 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:14:47.685 - INFO - +------ END KW: OpenStack.Check Field Value (1588)
20190402 11:14:57.686 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:14:57.687 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:14:57.688 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:14:57.688 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:14:57.689 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:14:57.689 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:14:57.689 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:14:57.690 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:14:57.690 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:14:57.691 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:14:57.691 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:14:57.692 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:14:57.692 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:14:57.693 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:14:59.275 - INFO - Command exited with return code 0.
20190402 11:14:59.275 - INFO - ${stdout} = REBOOT
20190402 11:14:59.275 - INFO - ${stderr} =
20190402 11:14:59.275 - INFO - ${rc} = 0
20190402 11:14:59.275 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:14:59.276 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:14:59.276 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:59.276 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:14:59.276 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:14:59.277 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:14:59.277 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:14:59.277 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:14:59.277 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:14:59.277 - INFO - ${value} = REBOOT
20190402 11:14:59.277 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:14:59.277 - INFO - ${current_value} = REBOOT
20190402 11:14:59.278 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1590)
20190402 11:14:59.278 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:14:59.278 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:14:59.278 - FAIL - REBOOT != ACTIVE
20190402 11:14:59.278 - DEBUG - Traceback (most recent call last):
  None
20190402 11:14:59.278 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:14:59.278 - INFO - +------ END KW: OpenStack.Check Field Value (1592)
20190402 11:15:09.279 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:15:09.279 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:15:09.279 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:15:09.280 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:15:09.280 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:15:09.280 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:15:09.280 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:15:09.280 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:15:09.280 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:15:09.281 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:15:09.281 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:15:09.281 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:15:09.281 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:15:09.281 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:15:10.912 - INFO - Command exited with return code 0.
20190402 11:15:10.913 - INFO - ${stdout} = REBOOT
20190402 11:15:10.913 - INFO - ${stderr} =
20190402 11:15:10.913 - INFO - ${rc} = 0
20190402 11:15:10.913 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:15:10.913 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:15:10.915 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:10.915 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:15:10.915 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:15:10.916 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:15:10.916 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:10.917 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:15:10.917 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:15:10.917 - INFO - ${value} = REBOOT
20190402 11:15:10.917 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:15:10.918 - INFO - ${current_value} = REBOOT
20190402 11:15:10.918 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 11:15:10.918 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:15:10.919 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:15:10.919 - FAIL - REBOOT != ACTIVE
20190402 11:15:10.919 - DEBUG - Traceback (most recent call last):
  None
20190402 11:15:10.919 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:15:10.920 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 11:15:20.920 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:15:20.921 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:15:20.921 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:15:20.922 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:15:20.922 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:15:20.922 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:15:20.923 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:15:20.923 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:15:20.923 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:15:20.924 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:15:20.924 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:15:20.924 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:15:20.924 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:15:20.925 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:15:22.507 - INFO - Command exited with return code 0.
20190402 11:15:22.507 - INFO - ${stdout} = REBOOT
20190402 11:15:22.507 - INFO - ${stderr} =
20190402 11:15:22.507 - INFO - ${rc} = 0
20190402 11:15:22.507 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:15:22.507 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:15:22.508 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:22.508 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:15:22.508 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:15:22.508 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:15:22.508 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:22.508 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:15:22.509 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:15:22.509 - INFO - ${value} = REBOOT
20190402 11:15:22.509 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:15:22.509 - INFO - ${current_value} = REBOOT
20190402 11:15:22.509 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1588)
20190402 11:15:22.509 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:15:22.509 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:15:22.510 - FAIL - REBOOT != ACTIVE
20190402 11:15:22.510 - DEBUG - Traceback (most recent call last):
  None
20190402 11:15:22.510 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:15:22.510 - INFO - +------ END KW: OpenStack.Check Field Value (1590)
20190402 11:15:32.510 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:15:32.511 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:15:32.511 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:15:32.511 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:15:32.511 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:15:32.512 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:15:32.512 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:15:32.512 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:15:32.512 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:15:32.513 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:15:32.513 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:15:32.513 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:15:32.513 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:15:32.513 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:15:34.398 - INFO - Command exited with return code 0.
20190402 11:15:34.398 - INFO - ${stdout} = REBOOT
20190402 11:15:34.398 - INFO - ${stderr} =
20190402 11:15:34.398 - INFO - ${rc} = 0
20190402 11:15:34.398 - INFO - +--------- END KW: SSHLibrary.Execute Command (1885)
20190402 11:15:34.398 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:15:34.399 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:34.399 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:15:34.399 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:15:34.399 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:15:34.399 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:34.399 - INFO - +-------- END KW: OpenStack.Run OS Command (1887)
20190402 11:15:34.399 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:15:34.399 - INFO - ${value} = REBOOT
20190402 11:15:34.400 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:15:34.400 - INFO - ${current_value} = REBOOT
20190402 11:15:34.400 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1889)
20190402 11:15:34.400 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:15:34.400 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:15:34.400 - FAIL - REBOOT != ACTIVE
20190402 11:15:34.400 - DEBUG - Traceback (most recent call last):
  None
20190402 11:15:34.400 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:15:34.400 - INFO - +------ END KW: OpenStack.Check Field Value (1890)
20190402 11:15:44.401 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:15:44.402 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:15:44.403 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:15:44.404 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:15:44.404 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:15:44.404 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:15:44.405 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:15:44.405 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:15:44.405 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:15:44.406 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:15:44.407 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:15:44.407 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:15:44.407 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:15:44.408 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:15:46.040 - INFO - Command exited with return code 0.
20190402 11:15:46.040 - INFO - ${stdout} = REBOOT
20190402 11:15:46.040 - INFO - ${stderr} =
20190402 11:15:46.041 - INFO - ${rc} = 0
20190402 11:15:46.041 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:15:46.041 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:15:46.041 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:46.041 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:15:46.042 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:15:46.042 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:15:46.042 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:46.042 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:15:46.042 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:15:46.042 - INFO - ${value} = REBOOT
20190402 11:15:46.042 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:15:46.043 - INFO - ${current_value} = REBOOT
20190402 11:15:46.043 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1641)
20190402 11:15:46.043 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:15:46.043 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:15:46.043 - FAIL - REBOOT != ACTIVE
20190402 11:15:46.043 - DEBUG - Traceback (most recent call last):
  None
20190402 11:15:46.043 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:15:46.043 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 11:15:56.044 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:15:56.045 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:15:56.045 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:15:56.045 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:15:56.045 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:15:56.045 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:15:56.046 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:15:56.046 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:15:56.046 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:15:56.046 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:15:56.046 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:15:56.046 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:15:56.046 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:15:56.047 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:15:57.630 - INFO - Command exited with return code 0.
20190402 11:15:57.630 - INFO - ${stdout} = REBOOT
20190402 11:15:57.630 - INFO - ${stderr} =
20190402 11:15:57.630 - INFO - ${rc} = 0
20190402 11:15:57.631 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:15:57.631 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:15:57.632 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:57.632 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:15:57.632 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:15:57.633 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:15:57.633 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:15:57.634 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:15:57.634 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:15:57.634 - INFO - ${value} = REBOOT
20190402 11:15:57.634 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:15:57.635 - INFO - ${current_value} = REBOOT
20190402 11:15:57.635 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1590)
20190402 11:15:57.635 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:15:57.636 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:15:57.636 - FAIL - REBOOT != ACTIVE
20190402 11:15:57.636 - DEBUG - Traceback (most recent call last):
  None
20190402 11:15:57.636 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:15:57.637 - INFO - +------ END KW: OpenStack.Check Field Value (1593)
20190402 11:16:07.637 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:16:07.639 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:07.640 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:07.641 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:16:07.642 - INFO - +-------- END KW: BuiltIn.Set Variable (2)
20190402 11:16:07.642 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:07.643 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:07.643 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:16:07.644 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:07.645 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:07.645 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:07.645 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:07.646 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:07.646 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:16:09.228 - INFO - Command exited with return code 0.
20190402 11:16:09.228 - INFO - ${stdout} = REBOOT
20190402 11:16:09.229 - INFO - ${stderr} =
20190402 11:16:09.229 - INFO - ${rc} = 0
20190402 11:16:09.229 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:16:09.229 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:09.229 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:16:09.229 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:16:09.229 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:09.230 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:16:09.230 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:16:09.230 - INFO - +-------- END KW: OpenStack.Run OS Command (1586)
20190402 11:16:09.230 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:16:09.230 - INFO - ${value} = REBOOT
20190402 11:16:09.230 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:16:09.230 - INFO - ${current_value} = REBOOT
20190402 11:16:09.230 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:16:09.231 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:16:09.231 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:16:09.231 - FAIL - REBOOT != ACTIVE
20190402 11:16:09.231 - DEBUG - Traceback (most recent call last):
  None
20190402 11:16:09.231 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:16:09.231 - INFO - +------ END KW: OpenStack.Check Field Value (1594)
20190402 11:16:19.232 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:16:19.233 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:19.233 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:19.234 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:16:19.234 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:16:19.235 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:19.235 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:19.235 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:16:19.236 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:19.237 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:19.237 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:19.237 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:19.237 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:19.238 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:16:20.820 - INFO - Command exited with return code 0.
20190402 11:16:20.820 - INFO - ${stdout} = REBOOT
20190402 11:16:20.821 - INFO - ${stderr} =
20190402 11:16:20.821 - INFO - ${rc} = 0
20190402 11:16:20.821 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:16:20.821 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:20.822 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:16:20.822 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:16:20.822 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:20.823 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:16:20.823 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:16:20.823 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:16:20.823 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:16:20.823 - INFO - ${value} = REBOOT
20190402 11:16:20.823 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:16:20.824 - INFO - ${current_value} = REBOOT
20190402 11:16:20.824 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:16:20.824 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:16:20.824 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:16:20.824 - FAIL - REBOOT != ACTIVE
20190402 11:16:20.824 - DEBUG - Traceback (most recent call last):
  None
20190402 11:16:20.824 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:16:20.824 - INFO - +------ END KW: OpenStack.Check Field Value (1592)
20190402 11:16:30.825 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:16:30.825 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:30.826 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:30.826 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:16:30.826 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:30.826 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:30.826 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:30.826 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:16:30.826 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:30.827 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:30.827 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:30.827 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:30.827 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:30.828 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:16:32.561 - INFO - Command exited with return code 0.
20190402 11:16:32.561 - INFO - ${stdout} = ACTIVE
20190402 11:16:32.561 - INFO - ${stderr} =
20190402 11:16:32.561 - INFO - ${rc} = 0
20190402 11:16:32.561 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:16:32.561 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:32.562 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:16:32.562 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:16:32.562 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:32.562 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:16:32.562 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:16:32.563 - INFO - +-------- END KW: OpenStack.Run OS Command (1737)
20190402 11:16:32.563 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:16:32.563 - INFO - ${value} = ACTIVE
20190402 11:16:32.563 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:16:32.563 - INFO - ${current_value} = ACTIVE
20190402 11:16:32.563 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1738)
20190402 11:16:32.563 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:16:32.564 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:16:32.564 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:16:32.564 - INFO - +------ END KW: OpenStack.Check Field Value (1739)
20190402 11:16:32.564 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (129708)
20190402 11:16:32.564 - INFO - +---- END KW: OpenStack.Reboot Instance (133093)
------------------------------------------------------------------------------
20190402 11:16:32.564 - INFO - +--- END TEST: Reboot Instances (266077)
------------------------------------------------------------------------------
20190402 11:16:32.564 - INFO - +--- START TEST: Rebuild Instances [ ]
------------------------------------------------------------------------------
20190402 11:16:32.565 - INFO - +---- START KW: OpenStack.Rebuild Instance From Volume [ ${cirros_instance_name} | ${cirros_image_name} ]
20190402 11:16:32.565 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild --image ${image} ${vm_name} | True | 30 sec ]
20190402 11:16:32.565 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:32.565 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:32.566 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:16:32.566 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:32.566 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild --image cirros vm-cirros-1'.
20190402 11:16:34.750 - INFO - Command exited with return code 0.
20190402 11:16:34.750 - INFO - ${stdout} = +-------------------+----------------------------------------------------------+
| Field             | Value                                                    |
+-------------------+-----------------...
20190402 11:16:34.750 - INFO - ${stderr} =
20190402 11:16:34.750 - INFO - ${rc} = 0
20190402 11:16:34.750 - INFO - +------ END KW: SSHLibrary.Execute Command (2184)
20190402 11:16:34.750 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:34.751 - INFO - ${res} = {u'stdout': u'+-------------------+----------------------------------------------------------+\n| Field             | Value                                                    |\n+-------------------+-...
20190402 11:16:34.751 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:16:34.751 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:34.751 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:16:34.751 - INFO - +----- END KW: OpenStack.Run OS Command (2186)
20190402 11:16:34.751 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBUILD ]
20190402 11:16:34.752 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBUILD ]
20190402 11:16:34.752 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:34.752 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:34.753 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:16:34.753 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:16:34.753 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:34.753 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:34.753 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:16:34.753 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:34.754 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:34.754 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:34.754 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:34.754 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:34.754 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:16:36.536 - INFO - Command exited with return code 0.
20190402 11:16:36.537 - INFO - ${stdout} = REBUILD
20190402 11:16:36.537 - INFO - ${stderr} =
20190402 11:16:36.537 - INFO - ${rc} = 0
20190402 11:16:36.538 - INFO - +--------- END KW: SSHLibrary.Execute Command (1784)
20190402 11:16:36.538 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:36.540 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:16:36.540 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:16:36.540 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:36.541 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:16:36.541 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:16:36.542 - INFO - +-------- END KW: OpenStack.Run OS Command (1789)
20190402 11:16:36.542 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:16:36.543 - INFO - ${value} = REBUILD
20190402 11:16:36.543 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:16:36.543 - INFO - ${current_value} = REBUILD
20190402 11:16:36.544 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1792)
20190402 11:16:36.544 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:16:36.545 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:16:36.545 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:16:36.546 - INFO - +------ END KW: OpenStack.Check Field Value (1793)
20190402 11:16:36.546 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1795)
20190402 11:16:36.546 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:16:36.547 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:16:36.548 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:36.551 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:36.551 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:16:36.552 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:36.552 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:36.552 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:36.553 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:16:36.553 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:36.554 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:36.554 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:36.554 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:16:36.555 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:36.555 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:16:38.240 - INFO - Command exited with return code 0.
20190402 11:16:38.241 - INFO - ${stdout} = REBUILD
20190402 11:16:38.241 - INFO - ${stderr} =
20190402 11:16:38.241 - INFO - ${rc} = 0
20190402 11:16:38.241 - INFO - +--------- END KW: SSHLibrary.Execute Command (1686)
20190402 11:16:38.242 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:38.243 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:16:38.243 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:16:38.243 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:38.244 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:16:38.244 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:16:38.245 - INFO - +-------- END KW: OpenStack.Run OS Command (1691)
20190402 11:16:38.245 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:16:38.245 - INFO - ${value} = REBUILD
20190402 11:16:38.245 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:16:38.246 - INFO - ${current_value} = REBUILD
20190402 11:16:38.246 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1698)
20190402 11:16:38.246 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:16:38.247 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:16:38.247 - FAIL - REBUILD != ACTIVE
20190402 11:16:38.247 - DEBUG - Traceback (most recent call last):
  None
20190402 11:16:38.247 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:16:38.248 - INFO - +------ END KW: OpenStack.Check Field Value (1701)
20190402 11:16:48.250 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:16:48.251 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:48.252 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:48.253 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:16:48.253 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:16:48.254 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:48.255 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:48.255 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:16:48.255 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:48.256 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:48.257 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:48.257 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:16:48.257 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:48.258 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:16:49.943 - INFO - Command exited with return code 0.
20190402 11:16:49.944 - INFO - ${stdout} = REBUILD
20190402 11:16:49.944 - INFO - ${stderr} =
20190402 11:16:49.944 - INFO - ${rc} = 0
20190402 11:16:49.944 - INFO - +--------- END KW: SSHLibrary.Execute Command (1687)
20190402 11:16:49.945 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:16:49.946 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:16:49.946 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:16:49.947 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:16:49.947 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:16:49.948 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:16:49.948 - INFO - +-------- END KW: OpenStack.Run OS Command (1693)
20190402 11:16:49.948 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:16:49.949 - INFO - ${value} = REBUILD
20190402 11:16:49.949 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:16:49.949 - INFO - ${current_value} = REBUILD
20190402 11:16:49.950 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1698)
20190402 11:16:49.950 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:16:49.950 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:16:49.951 - FAIL - REBUILD != ACTIVE
20190402 11:16:49.951 - DEBUG - Traceback (most recent call last):
  None
20190402 11:16:49.951 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:16:49.951 - INFO - +------ END KW: OpenStack.Check Field Value (1701)
20190402 11:16:59.952 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:16:59.953 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:16:59.954 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:16:59.955 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:16:59.955 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:16:59.956 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:16:59.958 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:16:59.958 - INFO - +-------- END KW: BuiltIn.Catenate (3)
20190402 11:16:59.958 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:16:59.959 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:16:59.959 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:16:59.960 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:16:59.960 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:16:59.960 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:17:01.592 - INFO - Command exited with return code 0.
20190402 11:17:01.593 - INFO - ${stdout} = REBUILD
20190402 11:17:01.593 - INFO - ${stderr} =
20190402 11:17:01.593 - INFO - ${rc} = 0
20190402 11:17:01.593 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:17:01.593 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:17:01.593 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:01.593 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:17:01.594 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:17:01.594 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:17:01.594 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:01.594 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:17:01.594 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:17:01.594 - INFO - ${value} = REBUILD
20190402 11:17:01.594 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:17:01.595 - INFO - ${current_value} = REBUILD
20190402 11:17:01.595 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1642)
20190402 11:17:01.595 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:17:01.595 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:17:01.595 - FAIL - REBUILD != ACTIVE
20190402 11:17:01.595 - DEBUG - Traceback (most recent call last):
  None
20190402 11:17:01.595 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:17:01.595 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 11:17:11.596 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:17:11.597 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:17:11.598 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:17:11.598 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:17:11.599 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:17:11.599 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:17:11.599 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:17:11.600 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:17:11.600 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:17:11.601 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:17:11.601 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:17:11.601 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:17:11.602 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:17:11.603 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:17:13.184 - INFO - Command exited with return code 0.
20190402 11:17:13.185 - INFO - ${stdout} = REBUILD
20190402 11:17:13.185 - INFO - ${stderr} =
20190402 11:17:13.185 - INFO - ${rc} = 0
20190402 11:17:13.185 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:17:13.186 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:17:13.187 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:13.187 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:17:13.187 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:17:13.188 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:17:13.189 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:13.189 - INFO - +-------- END KW: OpenStack.Run OS Command (1589)
20190402 11:17:13.190 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:17:13.190 - INFO - ${value} = REBUILD
20190402 11:17:13.190 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:17:13.191 - INFO - ${current_value} = REBUILD
20190402 11:17:13.191 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1594)
20190402 11:17:13.191 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:17:13.192 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:17:13.192 - FAIL - REBUILD != ACTIVE
20190402 11:17:13.192 - DEBUG - Traceback (most recent call last):
  None
20190402 11:17:13.192 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:17:13.193 - INFO - +------ END KW: OpenStack.Check Field Value (1596)
20190402 11:17:23.193 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:17:23.194 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:17:23.194 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:17:23.195 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:17:23.195 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:17:23.195 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:17:23.195 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:17:23.195 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:17:23.195 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:17:23.196 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:17:23.196 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:17:23.196 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:17:23.197 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:17:23.197 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:17:24.877 - INFO - Command exited with return code 0.
20190402 11:17:24.878 - INFO - ${stdout} = REBUILD
20190402 11:17:24.878 - INFO - ${stderr} =
20190402 11:17:24.878 - INFO - ${rc} = 0
20190402 11:17:24.878 - INFO - +--------- END KW: SSHLibrary.Execute Command (1681)
20190402 11:17:24.878 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:17:24.878 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:24.878 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:17:24.879 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:17:24.879 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:17:24.879 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:24.879 - INFO - +-------- END KW: OpenStack.Run OS Command (1684)
20190402 11:17:24.879 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:17:24.879 - INFO - ${value} = REBUILD
20190402 11:17:24.879 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:17:24.880 - INFO - ${current_value} = REBUILD
20190402 11:17:24.880 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1686)
20190402 11:17:24.880 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:17:24.880 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:17:24.880 - FAIL - REBUILD != ACTIVE
20190402 11:17:24.880 - DEBUG - Traceback (most recent call last):
  None
20190402 11:17:24.880 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:17:24.880 - INFO - +------ END KW: OpenStack.Check Field Value (1687)
20190402 11:17:34.881 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:17:34.882 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:17:34.883 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:17:34.884 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:17:34.884 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:17:34.884 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:17:34.885 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:17:34.885 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:17:34.886 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:17:34.887 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:17:34.888 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:17:34.888 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:17:34.888 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:17:34.889 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:17:36.622 - INFO - Command exited with return code 0.
20190402 11:17:36.623 - INFO - ${stdout} = REBUILD
20190402 11:17:36.623 - INFO - ${stderr} =
20190402 11:17:36.623 - INFO - ${rc} = 0
20190402 11:17:36.623 - INFO - +--------- END KW: SSHLibrary.Execute Command (1735)
20190402 11:17:36.624 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:17:36.625 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:36.625 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:17:36.625 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:17:36.626 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:17:36.626 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:36.626 - INFO - +-------- END KW: OpenStack.Run OS Command (1740)
20190402 11:17:36.627 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:17:36.627 - INFO - ${value} = REBUILD
20190402 11:17:36.627 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:17:36.628 - INFO - ${current_value} = REBUILD
20190402 11:17:36.628 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1746)
20190402 11:17:36.628 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:17:36.629 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:17:36.629 - FAIL - REBUILD != ACTIVE
20190402 11:17:36.629 - DEBUG - Traceback (most recent call last):
  None
20190402 11:17:36.629 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:17:36.629 - INFO - +------ END KW: OpenStack.Check Field Value (1748)
20190402 11:17:46.630 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:17:46.631 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:17:46.632 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:17:46.632 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:17:46.632 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:17:46.633 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:17:46.633 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:17:46.633 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:17:46.634 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:17:46.635 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:17:46.635 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:17:46.635 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:17:46.635 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:17:46.636 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:17:48.417 - INFO - Command exited with return code 0.
20190402 11:17:48.418 - INFO - ${stdout} = REBUILD
20190402 11:17:48.418 - INFO - ${stderr} =
20190402 11:17:48.418 - INFO - ${rc} = 0
20190402 11:17:48.419 - INFO - +--------- END KW: SSHLibrary.Execute Command (1784)
20190402 11:17:48.419 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:17:48.422 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:48.422 - INFO - +--------- END KW: BuiltIn.Create Dictionary (3)
20190402 11:17:48.422 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:17:48.424 - INFO - +--------- END KW: BuiltIn.Run Keyword If (2)
20190402 11:17:48.424 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:17:48.424 - INFO - +-------- END KW: OpenStack.Run OS Command (1790)
20190402 11:17:48.425 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:17:48.425 - INFO - ${value} = REBUILD
20190402 11:17:48.426 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:17:48.426 - INFO - ${current_value} = REBUILD
20190402 11:17:48.426 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1795)
20190402 11:17:48.427 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:17:48.427 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:17:48.427 - FAIL - REBUILD != ACTIVE
20190402 11:17:48.428 - DEBUG - Traceback (most recent call last):
  None
20190402 11:17:48.428 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:17:48.428 - INFO - +------ END KW: OpenStack.Check Field Value (1798)
20190402 11:17:58.429 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:17:58.430 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:17:58.431 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:17:58.432 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:17:58.432 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:17:58.432 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:17:58.433 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:17:58.433 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:17:58.433 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:17:58.434 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:17:58.435 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:17:58.435 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:17:58.435 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:17:58.436 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:00.071 - INFO - Command exited with return code 0.
20190402 11:18:00.071 - INFO - ${stdout} = ACTIVE
20190402 11:18:00.071 - INFO - ${stderr} =
20190402 11:18:00.071 - INFO - ${rc} = 0
20190402 11:18:00.071 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:18:00.071 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:00.072 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:18:00.072 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:18:00.072 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:00.072 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:18:00.072 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:18:00.072 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:18:00.073 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:00.073 - INFO - ${value} = ACTIVE
20190402 11:18:00.073 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:18:00.073 - INFO - ${current_value} = ACTIVE
20190402 11:18:00.073 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1643)
20190402 11:18:00.073 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:00.073 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:00.073 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:18:00.074 - INFO - +------ END KW: OpenStack.Check Field Value (1645)
20190402 11:18:00.074 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (83528)
20190402 11:18:00.074 - INFO - +---- END KW: OpenStack.Rebuild Instance From Volume (87509)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:18:00.074 - INFO - +---- START KW: OpenStack.Rebuild Instance From Volume [ ${cirros_instance_name_2} | ${cirros_image_name} ]
20190402 11:18:00.074 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild --image ${image} ${vm_name} | True | 30 sec ]
20190402 11:18:00.075 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:00.075 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:00.075 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:18:00.075 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:00.075 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild --image cirros vm-cirros-2'.
20190402 11:18:02.109 - INFO - Command exited with return code 0.
20190402 11:18:02.109 - INFO - ${stdout} = +-------------------+----------------------------------------------------------+
| Field             | Value                                                    |
+-------------------+-----------------...
20190402 11:18:02.109 - INFO - ${stderr} =
20190402 11:18:02.110 - INFO - ${rc} = 0
20190402 11:18:02.110 - INFO - +------ END KW: SSHLibrary.Execute Command (2035)
20190402 11:18:02.110 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:02.110 - INFO - ${res} = {u'stdout': u'+-------------------+----------------------------------------------------------+\n| Field             | Value                                                    |\n+-------------------+-...
20190402 11:18:02.110 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:18:02.110 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:02.111 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:18:02.111 - INFO - +----- END KW: OpenStack.Run OS Command (2037)
20190402 11:18:02.111 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBUILD ]
20190402 11:18:02.111 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBUILD ]
20190402 11:18:02.112 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:18:02.112 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:18:02.112 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:18:02.112 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:02.112 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:18:02.113 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:18:02.113 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:18:02.113 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:18:02.113 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:02.114 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:02.114 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:18:02.114 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:02.114 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:03.698 - INFO - Command exited with return code 0.
20190402 11:18:03.698 - INFO - ${stdout} = REBUILD
20190402 11:18:03.698 - INFO - ${stderr} =
20190402 11:18:03.698 - INFO - ${rc} = 0
20190402 11:18:03.698 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:18:03.698 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:03.699 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:03.699 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:18:03.699 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:03.699 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:18:03.700 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:03.700 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:18:03.700 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:03.700 - INFO - ${value} = REBUILD
20190402 11:18:03.700 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:18:03.700 - INFO - ${current_value} = REBUILD
20190402 11:18:03.701 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1589)
20190402 11:18:03.701 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:03.701 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:03.701 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:18:03.701 - INFO - +------ END KW: OpenStack.Check Field Value (1590)
20190402 11:18:03.701 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1590)
20190402 11:18:03.702 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:18:03.702 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:18:03.702 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:18:03.703 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:18:03.703 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:18:03.703 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:03.703 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:18:03.704 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:18:03.704 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:18:03.704 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:18:03.704 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:03.704 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:03.704 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:03.705 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:03.705 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:05.337 - INFO - Command exited with return code 0.
20190402 11:18:05.337 - INFO - ${stdout} = REBUILD
20190402 11:18:05.337 - INFO - ${stderr} =
20190402 11:18:05.337 - INFO - ${rc} = 0
20190402 11:18:05.337 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:18:05.337 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:05.338 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:05.338 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:18:05.338 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:05.338 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:18:05.338 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:05.339 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 11:18:05.339 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:05.339 - INFO - ${value} = REBUILD
20190402 11:18:05.339 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:18:05.339 - INFO - ${current_value} = REBUILD
20190402 11:18:05.339 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 11:18:05.339 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:05.339 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:05.339 - FAIL - REBUILD != ACTIVE
20190402 11:18:05.340 - DEBUG - Traceback (most recent call last):
  None
20190402 11:18:05.340 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:18:05.340 - INFO - +------ END KW: OpenStack.Check Field Value (1638)
20190402 11:18:15.340 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:18:15.341 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:18:15.341 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:18:15.341 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:18:15.341 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:15.341 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:18:15.342 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:18:15.342 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:18:15.342 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:18:15.342 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:15.342 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:15.342 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:15.342 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:15.343 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:16.975 - INFO - Command exited with return code 0.
20190402 11:18:16.976 - INFO - ${stdout} = REBUILD
20190402 11:18:16.976 - INFO - ${stderr} =
20190402 11:18:16.976 - INFO - ${rc} = 0
20190402 11:18:16.976 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:18:16.977 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:16.978 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:16.978 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:18:16.979 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:16.979 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:18:16.980 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:16.980 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:18:16.980 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:16.981 - INFO - ${value} = REBUILD
20190402 11:18:16.981 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:18:16.981 - INFO - ${current_value} = REBUILD
20190402 11:18:16.982 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:18:16.982 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:16.983 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:16.983 - FAIL - REBUILD != ACTIVE
20190402 11:18:16.983 - DEBUG - Traceback (most recent call last):
  None
20190402 11:18:16.983 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:18:16.984 - INFO - +------ END KW: OpenStack.Check Field Value (1644)
20190402 11:18:26.984 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:18:26.985 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:18:26.985 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:18:26.985 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:18:26.985 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:26.985 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:18:26.986 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:18:26.986 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:18:26.986 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:18:26.986 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:26.986 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:26.986 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:26.986 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:26.987 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:28.569 - INFO - Command exited with return code 0.
20190402 11:18:28.569 - INFO - ${stdout} = REBUILD
20190402 11:18:28.569 - INFO - ${stderr} =
20190402 11:18:28.569 - INFO - ${rc} = 0
20190402 11:18:28.569 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:18:28.570 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:28.570 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:28.570 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:18:28.570 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:28.570 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:18:28.571 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:28.571 - INFO - +-------- END KW: OpenStack.Run OS Command (1585)
20190402 11:18:28.571 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:28.571 - INFO - ${value} = REBUILD
20190402 11:18:28.571 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:18:28.571 - INFO - ${current_value} = REBUILD
20190402 11:18:28.571 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1586)
20190402 11:18:28.571 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:28.572 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:28.572 - FAIL - REBUILD != ACTIVE
20190402 11:18:28.572 - DEBUG - Traceback (most recent call last):
  None
20190402 11:18:28.572 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:18:28.572 - INFO - +------ END KW: OpenStack.Check Field Value (1588)
20190402 11:18:38.572 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:18:38.573 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:18:38.573 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:18:38.573 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:18:38.573 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:38.573 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:18:38.574 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:18:38.574 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:18:38.574 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:18:38.574 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:38.574 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:38.574 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:38.575 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:38.575 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:40.212 - INFO - Command exited with return code 0.
20190402 11:18:40.212 - INFO - ${stdout} = REBUILD
20190402 11:18:40.212 - INFO - ${stderr} =
20190402 11:18:40.212 - INFO - ${rc} = 0
20190402 11:18:40.213 - INFO - +--------- END KW: SSHLibrary.Execute Command (1638)
20190402 11:18:40.213 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:40.214 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:40.214 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:18:40.214 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:40.215 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:18:40.216 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:40.216 - INFO - +-------- END KW: OpenStack.Run OS Command (1642)
20190402 11:18:40.216 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:40.217 - INFO - ${value} = REBUILD
20190402 11:18:40.218 - INFO - +-------- END KW: Collections.Get From Dictionary (2)
20190402 11:18:40.218 - INFO - ${current_value} = REBUILD
20190402 11:18:40.219 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:18:40.219 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:40.220 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:40.220 - FAIL - REBUILD != ACTIVE
20190402 11:18:40.220 - DEBUG - Traceback (most recent call last):
  None
20190402 11:18:40.221 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:18:40.221 - INFO - +------ END KW: OpenStack.Check Field Value (1649)
20190402 11:18:50.222 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:18:50.223 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:18:50.224 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:18:50.225 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:18:50.225 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:18:50.225 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:18:50.226 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:18:50.226 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:18:50.227 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:18:50.228 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:18:50.228 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:18:50.228 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:18:50.229 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:18:50.230 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:18:51.862 - INFO - Command exited with return code 0.
20190402 11:18:51.862 - INFO - ${stdout} = REBUILD
20190402 11:18:51.863 - INFO - ${stderr} =
20190402 11:18:51.863 - INFO - ${rc} = 0
20190402 11:18:51.863 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:18:51.863 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:18:51.864 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:51.865 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:18:51.865 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:18:51.866 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:18:51.866 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:18:51.866 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 11:18:51.867 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:18:51.867 - INFO - ${value} = REBUILD
20190402 11:18:51.867 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:18:51.868 - INFO - ${current_value} = REBUILD
20190402 11:18:51.868 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:18:51.868 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:18:51.869 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:18:51.869 - FAIL - REBUILD != ACTIVE
20190402 11:18:51.869 - DEBUG - Traceback (most recent call last):
  None
20190402 11:18:51.870 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:18:51.870 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 11:19:01.870 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:19:01.871 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:01.872 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:01.872 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:19:01.872 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:19:01.872 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:01.872 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:01.872 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:19:01.872 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:01.873 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:01.873 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:01.873 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:19:01.873 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:01.874 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:03.557 - INFO - Command exited with return code 0.
20190402 11:19:03.557 - INFO - ${stdout} = REBUILD
20190402 11:19:03.557 - INFO - ${stderr} =
20190402 11:19:03.557 - INFO - ${rc} = 0
20190402 11:19:03.558 - INFO - +--------- END KW: SSHLibrary.Execute Command (1685)
20190402 11:19:03.558 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:03.559 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:19:03.559 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:19:03.559 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:03.560 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:19:03.560 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:19:03.561 - INFO - +-------- END KW: OpenStack.Run OS Command (1688)
20190402 11:19:03.561 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:03.561 - INFO - ${value} = REBUILD
20190402 11:19:03.561 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:19:03.562 - INFO - ${current_value} = REBUILD
20190402 11:19:03.562 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1691)
20190402 11:19:03.562 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:03.563 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:03.563 - FAIL - REBUILD != ACTIVE
20190402 11:19:03.563 - DEBUG - Traceback (most recent call last):
  None
20190402 11:19:03.563 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:19:03.564 - INFO - +------ END KW: OpenStack.Check Field Value (1694)
20190402 11:19:13.564 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:19:13.565 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:13.567 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:13.568 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:19:13.568 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:13.569 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:13.570 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:13.570 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:19:13.570 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:13.572 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:13.572 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:13.572 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:19:13.573 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:13.573 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:15.257 - INFO - Command exited with return code 0.
20190402 11:19:15.257 - INFO - ${stdout} = ACTIVE
20190402 11:19:15.257 - INFO - ${stderr} =
20190402 11:19:15.257 - INFO - ${rc} = 0
20190402 11:19:15.258 - INFO - +--------- END KW: SSHLibrary.Execute Command (1685)
20190402 11:19:15.258 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:15.258 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:19:15.258 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:19:15.258 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:15.259 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:19:15.259 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:19:15.259 - INFO - +-------- END KW: OpenStack.Run OS Command (1689)
20190402 11:19:15.259 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:15.259 - INFO - ${value} = ACTIVE
20190402 11:19:15.259 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:19:15.259 - INFO - ${current_value} = ACTIVE
20190402 11:19:15.260 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1694)
20190402 11:19:15.260 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:15.260 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:15.260 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:19:15.260 - INFO - +------ END KW: OpenStack.Check Field Value (1696)
20190402 11:19:15.260 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71558)
20190402 11:19:15.260 - INFO - +---- END KW: OpenStack.Rebuild Instance From Volume (75186)
------------------------------------------------------------------------------
20190402 11:19:15.260 - INFO - +--- END TEST: Rebuild Instances (162696)
------------------------------------------------------------------------------
20190402 11:19:15.261 - INFO - +--- START TEST: Resize Instances [ ]
------------------------------------------------------------------------------
20190402 11:19:15.261 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name_2} ]
20190402 11:19:15.261 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 11:19:15.262 - INFO - ${openstack_cmd} = openstack flavor create
20190402 11:19:15.262 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:19:15.262 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 11:19:15.262 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small
20190402 11:19:15.262 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:19:15.262 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:19:15.263 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:15.263 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:15.263 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:19:15.263 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:15.263 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small'.
20190402 11:19:16.702 - INFO - Command exited with return code 0.
20190402 11:19:16.702 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 11:19:16.702 - INFO - ${stderr} =
20190402 11:19:16.703 - INFO - ${rc} = 0
20190402 11:19:16.703 - INFO - +------ END KW: SSHLibrary.Execute Command (1440)
20190402 11:19:16.703 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:16.705 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 11:19:16.705 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:19:16.705 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:16.706 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:19:16.706 - INFO - +----- END KW: OpenStack.Run OS Command (1444)
20190402 11:19:16.707 - INFO - +---- END KW: OpenStack.Create Flavor (1445)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:19:16.707 - INFO - +---- START KW: OpenStack.Resize Instance [ ${cirros_instance_name} | ${cirros_flavor_name_2} ]
20190402 11:19:16.708 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --flavor ${flavor} ${vm_name} | True | 30 sec ]
20190402 11:19:16.709 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:16.709 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:16.710 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:19:16.710 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:16.711 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --flavor f2.small vm-cirros-1'.
20190402 11:19:19.796 - INFO - Command exited with return code 0.
20190402 11:19:19.796 - INFO - ${stdout} =
20190402 11:19:19.796 - INFO - ${stderr} =
20190402 11:19:19.796 - INFO - ${rc} = 0
20190402 11:19:19.796 - INFO - +------ END KW: SSHLibrary.Execute Command (3086)
20190402 11:19:19.796 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:19.797 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:19:19.797 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:19:19.797 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:19.797 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:19:19.797 - INFO - +----- END KW: OpenStack.Run OS Command (3089)
20190402 11:19:19.797 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | RESIZE ]
20190402 11:19:19.798 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | RESIZE ]
20190402 11:19:19.799 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:19.799 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:19.799 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:19:19.799 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:19:19.799 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:19.800 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:19.800 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:19:19.800 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:19.800 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:19.800 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:19.800 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:19:19.801 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:19.801 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:21.563 - INFO - Command exited with return code 0.
20190402 11:19:21.564 - INFO - ${stdout} = RESIZE
20190402 11:19:21.564 - INFO - ${stderr} =
20190402 11:19:21.564 - INFO - ${rc} = 0
20190402 11:19:21.564 - INFO - +--------- END KW: SSHLibrary.Execute Command (1763)
20190402 11:19:21.564 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:21.565 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:21.565 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:19:21.565 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:21.566 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:19:21.566 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:21.566 - INFO - +-------- END KW: OpenStack.Run OS Command (1766)
20190402 11:19:21.566 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:21.566 - INFO - ${value} = RESIZE
20190402 11:19:21.567 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:19:21.567 - INFO - ${current_value} = RESIZE
20190402 11:19:21.567 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1768)
20190402 11:19:21.567 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:21.567 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:21.568 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:19:21.568 - INFO - +------ END KW: OpenStack.Check Field Value (1770)
20190402 11:19:21.568 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1771)
20190402 11:19:21.568 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:19:21.568 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:19:21.569 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:21.569 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:21.570 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:19:21.570 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:21.570 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:21.570 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:21.571 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:19:21.571 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:21.571 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:21.572 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:21.572 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:21.572 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:21.572 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:23.161 - INFO - Command exited with return code 0.
20190402 11:19:23.161 - INFO - ${stdout} = RESIZE
20190402 11:19:23.161 - INFO - ${stderr} =
20190402 11:19:23.161 - INFO - ${rc} = 0
20190402 11:19:23.161 - INFO - +--------- END KW: SSHLibrary.Execute Command (1589)
20190402 11:19:23.161 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:23.162 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:23.162 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:19:23.162 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:23.162 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:19:23.163 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:23.163 - INFO - +-------- END KW: OpenStack.Run OS Command (1592)
20190402 11:19:23.163 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:23.163 - INFO - ${value} = RESIZE
20190402 11:19:23.163 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:19:23.163 - INFO - ${current_value} = RESIZE
20190402 11:19:23.164 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1594)
20190402 11:19:23.164 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:23.164 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:23.164 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:19:23.164 - DEBUG - Traceback (most recent call last):
  None
20190402 11:19:23.164 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:19:23.164 - INFO - +------ END KW: OpenStack.Check Field Value (1596)
20190402 11:19:33.165 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:19:33.166 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:33.168 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:33.168 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:19:33.169 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:19:33.169 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:33.169 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:33.170 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:19:33.170 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:33.172 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:33.173 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:33.173 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:33.174 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:33.175 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:34.807 - INFO - Command exited with return code 0.
20190402 11:19:34.808 - INFO - ${stdout} = RESIZE
20190402 11:19:34.808 - INFO - ${stderr} =
20190402 11:19:34.808 - INFO - ${rc} = 0
20190402 11:19:34.808 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:19:34.808 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:34.809 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:34.809 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:19:34.809 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:34.809 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:19:34.809 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:34.809 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:19:34.809 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:34.810 - INFO - ${value} = RESIZE
20190402 11:19:34.810 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:19:34.810 - INFO - ${current_value} = RESIZE
20190402 11:19:34.810 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1644)
20190402 11:19:34.810 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:34.810 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:34.810 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:19:34.811 - DEBUG - Traceback (most recent call last):
  None
20190402 11:19:34.811 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:19:34.811 - INFO - +------ END KW: OpenStack.Check Field Value (1646)
20190402 11:19:44.812 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:19:44.813 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:44.814 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:44.815 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:19:44.815 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:44.815 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:44.816 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:44.817 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:19:44.817 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:44.819 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:44.819 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:44.819 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:44.820 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:44.820 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:46.455 - INFO - Command exited with return code 0.
20190402 11:19:46.455 - INFO - ${stdout} = RESIZE
20190402 11:19:46.455 - INFO - ${stderr} =
20190402 11:19:46.455 - INFO - ${rc} = 0
20190402 11:19:46.455 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:19:46.456 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:46.456 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:46.456 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:19:46.456 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:46.456 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:19:46.457 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:46.457 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 11:19:46.457 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:46.457 - INFO - ${value} = RESIZE
20190402 11:19:46.457 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:19:46.457 - INFO - ${current_value} = RESIZE
20190402 11:19:46.457 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1644)
20190402 11:19:46.457 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:46.458 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:46.458 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:19:46.458 - DEBUG - Traceback (most recent call last):
  None
20190402 11:19:46.458 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:19:46.458 - INFO - +------ END KW: OpenStack.Check Field Value (1647)
20190402 11:19:56.459 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:19:56.460 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:19:56.461 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:19:56.461 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:19:56.461 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:56.462 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:19:56.462 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:19:56.462 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:19:56.463 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:19:56.464 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:19:56.465 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:19:56.465 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:19:56.466 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:19:56.467 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:19:58.201 - INFO - Command exited with return code 0.
20190402 11:19:58.201 - INFO - ${stdout} = RESIZE
20190402 11:19:58.202 - INFO - ${stderr} =
20190402 11:19:58.202 - INFO - ${rc} = 0
20190402 11:19:58.202 - INFO - +--------- END KW: SSHLibrary.Execute Command (1736)
20190402 11:19:58.202 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:19:58.204 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:58.204 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:19:58.204 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:19:58.205 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:19:58.205 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:19:58.205 - INFO - +-------- END KW: OpenStack.Run OS Command (1742)
20190402 11:19:58.206 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:19:58.206 - INFO - ${value} = RESIZE
20190402 11:19:58.206 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:19:58.207 - INFO - ${current_value} = RESIZE
20190402 11:19:58.207 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1747)
20190402 11:19:58.207 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:19:58.208 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:19:58.208 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:19:58.208 - DEBUG - Traceback (most recent call last):
  None
20190402 11:19:58.208 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:19:58.209 - INFO - +------ END KW: OpenStack.Check Field Value (1750)
20190402 11:20:08.209 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:20:08.210 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:08.210 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:08.211 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:08.211 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:08.211 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:08.211 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:08.211 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:20:08.211 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:08.212 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:08.212 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:08.212 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:08.212 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:08.212 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:09.894 - INFO - Command exited with return code 0.
20190402 11:20:09.894 - INFO - ${stdout} = RESIZE
20190402 11:20:09.894 - INFO - ${stderr} =
20190402 11:20:09.894 - INFO - ${rc} = 0
20190402 11:20:09.895 - INFO - +--------- END KW: SSHLibrary.Execute Command (1682)
20190402 11:20:09.895 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:09.896 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:09.896 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:20:09.897 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:09.897 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:20:09.898 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:09.898 - INFO - +-------- END KW: OpenStack.Run OS Command (1687)
20190402 11:20:09.898 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:09.899 - INFO - ${value} = RESIZE
20190402 11:20:09.899 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:20:09.899 - INFO - ${current_value} = RESIZE
20190402 11:20:09.899 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1689)
20190402 11:20:09.900 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:09.900 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:09.901 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:20:09.901 - DEBUG - Traceback (most recent call last):
  None
20190402 11:20:09.901 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:20:09.901 - INFO - +------ END KW: OpenStack.Check Field Value (1692)
20190402 11:20:19.902 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:20:19.903 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:19.904 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:19.905 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:19.905 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:19.905 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:19.906 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:19.906 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:20:19.907 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:19.908 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:19.908 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:19.908 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:19.909 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:19.910 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:21.492 - INFO - Command exited with return code 0.
20190402 11:20:21.492 - INFO - ${stdout} = RESIZE
20190402 11:20:21.492 - INFO - ${stderr} =
20190402 11:20:21.492 - INFO - ${rc} = 0
20190402 11:20:21.492 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:20:21.492 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:21.493 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:21.493 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:20:21.493 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:21.494 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:20:21.494 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:21.494 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:20:21.494 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:21.494 - INFO - ${value} = RESIZE
20190402 11:20:21.494 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:20:21.495 - INFO - ${current_value} = RESIZE
20190402 11:20:21.495 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1592)
20190402 11:20:21.495 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:21.495 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:21.495 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:20:21.495 - DEBUG - Traceback (most recent call last):
  None
20190402 11:20:21.496 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:20:21.496 - INFO - +------ END KW: OpenStack.Check Field Value (1594)
20190402 11:20:31.497 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:20:31.498 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:31.500 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:31.501 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:31.501 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:31.502 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:31.503 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:31.504 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:20:31.504 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:31.506 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:31.506 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:31.506 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:31.507 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:31.508 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:33.090 - INFO - Command exited with return code 0.
20190402 11:20:33.090 - INFO - ${stdout} = VERIFY_RESIZE
20190402 11:20:33.090 - INFO - ${stderr} =
20190402 11:20:33.090 - INFO - ${rc} = 0
20190402 11:20:33.090 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:20:33.091 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:33.091 - INFO - ${res} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:33.091 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:20:33.091 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:33.092 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:20:33.092 - INFO - ${result} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:33.092 - INFO - +-------- END KW: OpenStack.Run OS Command (1588)
20190402 11:20:33.092 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:33.092 - INFO - ${value} = VERIFY_RESIZE
20190402 11:20:33.092 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:20:33.092 - INFO - ${current_value} = VERIFY_RESIZE
20190402 11:20:33.092 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1594)
20190402 11:20:33.092 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:33.093 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:33.093 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:20:33.093 - INFO - +------ END KW: OpenStack.Check Field Value (1597)
20190402 11:20:33.093 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71525)
20190402 11:20:33.093 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --confirm ${vm_name} | True | 30 sec ]
20190402 11:20:33.093 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:33.094 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:33.094 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:20:33.094 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:33.094 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --confirm vm-cirros-1'.
20190402 11:20:34.799 - INFO - Command exited with return code 0.
20190402 11:20:34.799 - INFO - ${stdout} =
20190402 11:20:34.799 - INFO - ${stderr} =
20190402 11:20:34.799 - INFO - ${rc} = 0
20190402 11:20:34.799 - INFO - +------ END KW: SSHLibrary.Execute Command (1705)
20190402 11:20:34.799 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:34.800 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:20:34.800 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:20:34.800 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:34.800 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:20:34.800 - INFO - +----- END KW: OpenStack.Run OS Command (1707)
20190402 11:20:34.800 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:20:34.801 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:20:34.801 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:34.801 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:34.801 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:34.801 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:34.802 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:34.802 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:34.802 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:20:34.802 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:34.803 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:34.803 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:34.803 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:34.803 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:34.803 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:36.585 - INFO - Command exited with return code 0.
20190402 11:20:36.585 - INFO - ${stdout} = ACTIVE
20190402 11:20:36.585 - INFO - ${stderr} =
20190402 11:20:36.585 - INFO - ${rc} = 0
20190402 11:20:36.585 - INFO - +--------- END KW: SSHLibrary.Execute Command (1782)
20190402 11:20:36.586 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:36.586 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:20:36.586 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:20:36.587 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:36.587 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:20:36.587 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:20:36.587 - INFO - +-------- END KW: OpenStack.Run OS Command (1785)
20190402 11:20:36.587 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:36.588 - INFO - ${value} = ACTIVE
20190402 11:20:36.588 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:20:36.588 - INFO - ${current_value} = ACTIVE
20190402 11:20:36.588 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1787)
20190402 11:20:36.588 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:36.589 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:36.589 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:20:36.589 - INFO - +------ END KW: OpenStack.Check Field Value (1788)
20190402 11:20:36.589 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1789)
20190402 11:20:36.589 - INFO - +---- END KW: OpenStack.Resize Instance (79882)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:20:36.589 - INFO - +---- START KW: OpenStack.Resize Instance [ ${cirros_instance_name} | ${cirros_flavor_name} ]
20190402 11:20:36.590 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --flavor ${flavor} ${vm_name} | True | 30 sec ]
20190402 11:20:36.591 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:36.591 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:36.591 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:20:36.591 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:36.592 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --flavor f1.small vm-cirros-1'.
20190402 11:20:39.875 - INFO - Command exited with return code 0.
20190402 11:20:39.876 - INFO - ${stdout} =
20190402 11:20:39.876 - INFO - ${stderr} =
20190402 11:20:39.876 - INFO - ${rc} = 0
20190402 11:20:39.876 - INFO - +------ END KW: SSHLibrary.Execute Command (3285)
20190402 11:20:39.877 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:39.878 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:20:39.878 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:20:39.878 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:39.879 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:20:39.880 - INFO - +----- END KW: OpenStack.Run OS Command (3289)
20190402 11:20:39.880 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | RESIZE ]
20190402 11:20:39.881 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | RESIZE ]
20190402 11:20:39.882 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:39.883 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:39.883 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:39.883 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:39.884 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:39.885 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:39.885 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:20:39.886 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:39.887 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:39.888 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:39.888 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:39.888 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:39.889 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:41.471 - INFO - Command exited with return code 0.
20190402 11:20:41.471 - INFO - ${stdout} = RESIZE
20190402 11:20:41.471 - INFO - ${stderr} =
20190402 11:20:41.471 - INFO - ${rc} = 0
20190402 11:20:41.471 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:20:41.472 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:41.472 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:41.472 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:20:41.472 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:41.473 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:20:41.473 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:41.473 - INFO - +-------- END KW: OpenStack.Run OS Command (1587)
20190402 11:20:41.473 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:41.473 - INFO - ${value} = RESIZE
20190402 11:20:41.473 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:20:41.473 - INFO - ${current_value} = RESIZE
20190402 11:20:41.473 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1591)
20190402 11:20:41.473 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:41.474 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:41.474 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:20:41.474 - INFO - +------ END KW: OpenStack.Check Field Value (1593)
20190402 11:20:41.474 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1594)
20190402 11:20:41.474 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:20:41.474 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:20:41.475 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:41.475 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:41.476 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:41.476 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:41.476 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:41.476 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:41.476 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:20:41.476 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:41.477 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:41.477 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:41.477 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:41.477 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:41.477 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:43.066 - INFO - Command exited with return code 0.
20190402 11:20:43.066 - INFO - ${stdout} = RESIZE
20190402 11:20:43.066 - INFO - ${stderr} =
20190402 11:20:43.066 - INFO - ${rc} = 0
20190402 11:20:43.067 - INFO - +--------- END KW: SSHLibrary.Execute Command (1590)
20190402 11:20:43.067 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:43.068 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:43.069 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:20:43.069 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:43.070 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:20:43.070 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:43.070 - INFO - +-------- END KW: OpenStack.Run OS Command (1594)
20190402 11:20:43.071 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:43.071 - INFO - ${value} = RESIZE
20190402 11:20:43.071 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:20:43.072 - INFO - ${current_value} = RESIZE
20190402 11:20:43.072 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1597)
20190402 11:20:43.072 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:43.073 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:43.073 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:20:43.073 - DEBUG - Traceback (most recent call last):
  None
20190402 11:20:43.074 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:20:43.074 - INFO - +------ END KW: OpenStack.Check Field Value (1600)
20190402 11:20:53.074 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:20:53.075 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:20:53.075 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:20:53.076 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:20:53.076 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:20:53.076 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:20:53.077 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:20:53.077 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:20:53.077 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:20:53.078 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:20:53.078 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:20:53.078 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:20:53.078 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:20:53.079 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:20:54.861 - INFO - Command exited with return code 0.
20190402 11:20:54.861 - INFO - ${stdout} = RESIZE
20190402 11:20:54.861 - INFO - ${stderr} =
20190402 11:20:54.861 - INFO - ${rc} = 0
20190402 11:20:54.861 - INFO - +--------- END KW: SSHLibrary.Execute Command (1783)
20190402 11:20:54.862 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:20:54.862 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:54.862 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:20:54.863 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:20:54.863 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:20:54.863 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:20:54.863 - INFO - +-------- END KW: OpenStack.Run OS Command (1786)
20190402 11:20:54.863 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:20:54.863 - INFO - ${value} = RESIZE
20190402 11:20:54.863 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:20:54.863 - INFO - ${current_value} = RESIZE
20190402 11:20:54.864 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1789)
20190402 11:20:54.864 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:20:54.864 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:20:54.864 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:20:54.864 - DEBUG - Traceback (most recent call last):
  None
20190402 11:20:54.864 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:20:54.864 - INFO - +------ END KW: OpenStack.Check Field Value (1790)
20190402 11:21:04.865 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:21:04.865 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:21:04.865 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:21:04.866 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:21:04.866 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:21:04.866 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:21:04.866 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:21:04.866 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:21:04.866 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:21:04.867 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:21:04.867 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:21:04.867 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:21:04.867 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:21:04.868 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:21:06.548 - INFO - Command exited with return code 0.
20190402 11:21:06.548 - INFO - ${stdout} = RESIZE
20190402 11:21:06.548 - INFO - ${stderr} =
20190402 11:21:06.548 - INFO - ${rc} = 0
20190402 11:21:06.548 - INFO - +--------- END KW: SSHLibrary.Execute Command (1681)
20190402 11:21:06.549 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:21:06.549 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:06.549 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:21:06.549 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:21:06.549 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:21:06.550 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:06.550 - INFO - +-------- END KW: OpenStack.Run OS Command (1684)
20190402 11:21:06.550 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:21:06.550 - INFO - ${value} = RESIZE
20190402 11:21:06.550 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:21:06.550 - INFO - ${current_value} = RESIZE
20190402 11:21:06.550 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1685)
20190402 11:21:06.550 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:21:06.551 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:21:06.551 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:21:06.551 - DEBUG - Traceback (most recent call last):
  None
20190402 11:21:06.551 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:21:06.551 - INFO - +------ END KW: OpenStack.Check Field Value (1687)
20190402 11:21:16.551 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:21:16.552 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:21:16.552 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:21:16.553 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:21:16.553 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:21:16.553 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:21:16.553 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:21:16.554 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:21:16.554 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:21:16.554 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:21:16.554 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:21:16.555 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:21:16.555 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:21:16.555 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:21:18.187 - INFO - Command exited with return code 0.
20190402 11:21:18.188 - INFO - ${stdout} = RESIZE
20190402 11:21:18.188 - INFO - ${stderr} =
20190402 11:21:18.188 - INFO - ${rc} = 0
20190402 11:21:18.188 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:21:18.189 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:21:18.190 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:18.190 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:21:18.190 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:21:18.191 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:21:18.191 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:18.192 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:21:18.192 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:21:18.192 - INFO - ${value} = RESIZE
20190402 11:21:18.193 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:21:18.193 - INFO - ${current_value} = RESIZE
20190402 11:21:18.193 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1641)
20190402 11:21:18.194 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:21:18.194 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:21:18.194 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:21:18.195 - DEBUG - Traceback (most recent call last):
  None
20190402 11:21:18.195 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:21:18.195 - INFO - +------ END KW: OpenStack.Check Field Value (1644)
20190402 11:21:28.196 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:21:28.196 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:21:28.196 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:21:28.197 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:21:28.197 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:21:28.197 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:21:28.197 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:21:28.197 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:21:28.197 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:21:28.198 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:21:28.198 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:21:28.198 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:21:28.198 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:21:28.198 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:21:29.881 - INFO - Command exited with return code 0.
20190402 11:21:29.881 - INFO - ${stdout} = RESIZE
20190402 11:21:29.881 - INFO - ${stderr} =
20190402 11:21:29.881 - INFO - ${rc} = 0
20190402 11:21:29.881 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:21:29.881 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:21:29.882 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:29.882 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:21:29.882 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:21:29.882 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:21:29.882 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:29.882 - INFO - +-------- END KW: OpenStack.Run OS Command (1685)
20190402 11:21:29.883 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:21:29.883 - INFO - ${value} = RESIZE
20190402 11:21:29.883 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:21:29.883 - INFO - ${current_value} = RESIZE
20190402 11:21:29.883 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1687)
20190402 11:21:29.883 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:21:29.883 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:21:29.884 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:21:29.884 - DEBUG - Traceback (most recent call last):
  None
20190402 11:21:29.884 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:21:29.884 - INFO - +------ END KW: OpenStack.Check Field Value (1689)
20190402 11:21:39.884 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:21:39.885 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:21:39.885 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:21:39.885 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:21:39.885 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:21:39.886 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:21:39.886 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:21:39.886 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:21:39.886 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:21:39.886 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:21:39.887 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:21:39.887 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:21:39.887 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:21:39.887 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:21:41.869 - INFO - Command exited with return code 0.
20190402 11:21:41.870 - INFO - ${stdout} = RESIZE
20190402 11:21:41.870 - INFO - ${stderr} =
20190402 11:21:41.870 - INFO - ${rc} = 0
20190402 11:21:41.870 - INFO - +--------- END KW: SSHLibrary.Execute Command (1983)
20190402 11:21:41.870 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:21:41.871 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:41.871 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:21:41.871 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:21:41.871 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:21:41.871 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:41.871 - INFO - +-------- END KW: OpenStack.Run OS Command (1985)
20190402 11:21:41.872 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:21:41.872 - INFO - ${value} = RESIZE
20190402 11:21:41.872 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:21:41.872 - INFO - ${current_value} = RESIZE
20190402 11:21:41.872 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1987)
20190402 11:21:41.872 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:21:41.872 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:21:41.873 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:21:41.873 - DEBUG - Traceback (most recent call last):
  None
20190402 11:21:41.873 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:21:41.873 - INFO - +------ END KW: OpenStack.Check Field Value (1989)
20190402 11:21:51.873 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:21:51.874 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:21:51.874 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:21:51.874 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:21:51.874 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:21:51.875 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:21:51.875 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:21:51.875 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:21:51.875 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:21:51.876 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:21:51.876 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:21:51.876 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:21:51.876 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:21:51.876 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:21:53.712 - INFO - Command exited with return code 0.
20190402 11:21:53.713 - INFO - ${stdout} = RESIZE
20190402 11:21:53.713 - INFO - ${stderr} =
20190402 11:21:53.713 - INFO - ${rc} = 0
20190402 11:21:53.713 - INFO - +--------- END KW: SSHLibrary.Execute Command (1837)
20190402 11:21:53.713 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:21:53.714 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:53.715 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:21:53.715 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:21:53.715 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:21:53.716 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:21:53.716 - INFO - +-------- END KW: OpenStack.Run OS Command (1841)
20190402 11:21:53.716 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:21:53.717 - INFO - ${value} = RESIZE
20190402 11:21:53.717 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:21:53.718 - INFO - ${current_value} = RESIZE
20190402 11:21:53.718 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1844)
20190402 11:21:53.718 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:21:53.719 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:21:53.719 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:21:53.719 - DEBUG - Traceback (most recent call last):
  None
20190402 11:21:53.719 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:21:53.720 - INFO - +------ END KW: OpenStack.Check Field Value (1847)
20190402 11:22:03.720 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:22:03.721 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:22:03.721 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:22:03.722 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:22:03.722 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:03.722 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:22:03.722 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:22:03.722 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:22:03.723 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:03.723 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:03.723 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:03.723 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:22:03.724 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:03.724 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:22:05.354 - INFO - Command exited with return code 0.
20190402 11:22:05.355 - INFO - ${stdout} = VERIFY_RESIZE
20190402 11:22:05.355 - INFO - ${stderr} =
20190402 11:22:05.355 - INFO - ${rc} = 0
20190402 11:22:05.355 - INFO - +--------- END KW: SSHLibrary.Execute Command (1631)
20190402 11:22:05.356 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:05.357 - INFO - ${res} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:22:05.357 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:22:05.357 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:05.358 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:22:05.358 - INFO - ${result} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:22:05.358 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 11:22:05.358 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:05.359 - INFO - ${value} = VERIFY_RESIZE
20190402 11:22:05.359 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:22:05.360 - INFO - ${current_value} = VERIFY_RESIZE
20190402 11:22:05.360 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 11:22:05.360 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:05.361 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:05.361 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:22:05.361 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 11:22:05.361 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (83887)
20190402 11:22:05.361 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --confirm ${vm_name} | True | 30 sec ]
20190402 11:22:05.362 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:05.362 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:05.362 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:22:05.362 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:05.362 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --confirm vm-cirros-1'.
20190402 11:22:07.225 - INFO - Command exited with return code 0.
20190402 11:22:07.225 - INFO - ${stdout} =
20190402 11:22:07.225 - INFO - ${stderr} =
20190402 11:22:07.225 - INFO - ${rc} = 0
20190402 11:22:07.225 - INFO - +------ END KW: SSHLibrary.Execute Command (1863)
20190402 11:22:07.225 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:07.226 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:22:07.226 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:07.226 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:07.226 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:07.226 - INFO - +----- END KW: OpenStack.Run OS Command (1865)
20190402 11:22:07.227 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:22:07.227 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:22:07.227 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:22:07.227 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:22:07.228 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:22:07.228 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:07.228 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:22:07.228 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:22:07.228 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:22:07.228 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:07.229 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:07.229 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:07.229 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:22:07.229 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:07.229 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:22:08.968 - INFO - Command exited with return code 0.
20190402 11:22:08.968 - INFO - ${stdout} = ACTIVE
20190402 11:22:08.968 - INFO - ${stderr} =
20190402 11:22:08.969 - INFO - ${rc} = 0
20190402 11:22:08.969 - INFO - +--------- END KW: SSHLibrary.Execute Command (1740)
20190402 11:22:08.969 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:08.970 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:22:08.970 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:08.971 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:08.972 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:08.972 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:22:08.972 - INFO - +-------- END KW: OpenStack.Run OS Command (1744)
20190402 11:22:08.972 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:08.973 - INFO - ${value} = ACTIVE
20190402 11:22:08.973 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:22:08.973 - INFO - ${current_value} = ACTIVE
20190402 11:22:08.974 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1747)
20190402 11:22:08.974 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:08.975 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:08.975 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:22:08.975 - INFO - +------ END KW: OpenStack.Check Field Value (1748)
20190402 11:22:08.976 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1748)
20190402 11:22:08.976 - INFO - +---- END KW: OpenStack.Resize Instance (92387)
------------------------------------------------------------------------------
20190402 11:22:08.977 - INFO - +--- END TEST: Resize Instances (173716)
------------------------------------------------------------------------------
20190402 11:22:08.978 - INFO - +--- START TEST: Set Unset Properties Instances [ ]
------------------------------------------------------------------------------
20190402 11:22:08.979 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1}='true' | ${instance_property_2}='500' | ${instance_property_3}='180' ]
20190402 11:22:08.980 - INFO - ${properties} = --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180'
20190402 11:22:08.980 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:22:08.981 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name} | ${properties} ]
20190402 11:22:08.982 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190402 11:22:08.982 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:08.983 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:08.983 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:22:08.983 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:08.984 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-1'.
20190402 11:22:10.918 - INFO - Command exited with return code 0.
20190402 11:22:10.918 - INFO - ${stdout} =
20190402 11:22:10.918 - INFO - ${stderr} =
20190402 11:22:10.918 - INFO - ${rc} = 0
20190402 11:22:10.919 - INFO - +------ END KW: SSHLibrary.Execute Command (1936)
20190402 11:22:10.919 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:10.920 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:22:10.920 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:10.921 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:10.922 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:10.922 - INFO - +----- END KW: OpenStack.Run OS Command (1940)
20190402 11:22:10.922 - INFO - +---- END KW: OpenStack.Set Instance Property (1941)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:22:10.923 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name_2} | ${properties} ]
20190402 11:22:10.924 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190402 11:22:10.925 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:10.925 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:10.925 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:22:10.926 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:10.927 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-2'.
20190402 11:22:12.709 - INFO - Command exited with return code 0.
20190402 11:22:12.710 - INFO - ${stdout} =
20190402 11:22:12.710 - INFO - ${stderr} =
20190402 11:22:12.710 - INFO - ${rc} = 0
20190402 11:22:12.710 - INFO - +------ END KW: SSHLibrary.Execute Command (1784)
20190402 11:22:12.711 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:12.712 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:22:12.712 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:12.713 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:12.714 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:12.714 - INFO - +----- END KW: OpenStack.Run OS Command (1790)
20190402 11:22:12.714 - INFO - +---- END KW: OpenStack.Set Instance Property (1791)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:22:12.715 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1} | ${instance_property_2} | ${instance_property_3} ]
20190402 11:22:12.716 - INFO - ${properties} = --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout
20190402 11:22:12.716 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:22:12.716 - INFO - +---- START KW: OpenStack.Unset Instance Property [ ${cirros_instance_name} | ${properties} ]
20190402 11:22:12.717 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unset ${key} ${vm_name} | True | 30 sec ]
20190402 11:22:12.718 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:12.718 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:12.719 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:22:12.719 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:12.720 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unset --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout vm-cirros-1'.
20190402 11:22:14.802 - INFO - Command exited with return code 0.
20190402 11:22:14.803 - INFO - ${stdout} =
20190402 11:22:14.803 - INFO - ${stderr} =
20190402 11:22:14.803 - INFO - ${rc} = 0
20190402 11:22:14.803 - INFO - +------ END KW: SSHLibrary.Execute Command (2084)
20190402 11:22:14.803 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:14.804 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:22:14.804 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:14.804 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:14.805 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:22:14.805 - INFO - +----- END KW: OpenStack.Run OS Command (2088)
20190402 11:22:14.805 - INFO - +---- END KW: OpenStack.Unset Instance Property (2089)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:22:14.805 - INFO - +---- START KW: OpenStack.Unset Instance Property [ ${cirros_instance_name_2} | ${properties} ]
20190402 11:22:14.806 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unset ${key} ${vm_name} | True | 30 sec ]
20190402 11:22:14.807 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:14.807 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:14.807 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:22:14.807 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:14.808 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unset --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout vm-cirros-2'.
20190402 11:22:16.990 - INFO - Command exited with return code 0.
20190402 11:22:16.990 - INFO - ${stdout} =
20190402 11:22:16.991 - INFO - ${stderr} =
20190402 11:22:16.991 - INFO - ${rc} = 0
20190402 11:22:16.991 - INFO - +------ END KW: SSHLibrary.Execute Command (2184)
20190402 11:22:16.992 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:16.993 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:22:16.993 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:22:16.994 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:16.995 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:22:16.995 - INFO - +----- END KW: OpenStack.Run OS Command (2189)
20190402 11:22:16.996 - INFO - +---- END KW: OpenStack.Unset Instance Property (2190)
------------------------------------------------------------------------------
20190402 11:22:16.996 - INFO - +--- END TEST: Set Unset Properties Instances (8018)
------------------------------------------------------------------------------
20190402 11:22:16.997 - INFO - +--- START TEST: Evacuate Instances From Hosts [ ]
------------------------------------------------------------------------------
20190402 11:22:16.998 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}' == 'Duplex' | Run Keywords | Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 | ELSE IF | '${CONFIGURATION_TYPE}' == 'MN-Local' or '${CONFIGURATION_TYPE}' == 'MN-External' | Run Keywords | Evacuate Instances | compute-0 | AND | Evacuate Instances | compute-1 ]
20190402 11:22:16.999 - INFO - +----- START KW: BuiltIn.Run Keywords [ Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 ]
20190402 11:22:17.000 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-0 ]
20190402 11:22:17.000 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190402 11:22:17.001 - INFO - ${openstack_cmd} = openstack compute service set
20190402 11:22:17.001 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:17.001 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190402 11:22:17.002 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute
20190402 11:22:17.002 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:22:17.002 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:22:17.003 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:17.004 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:17.004 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:17.004 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:17.005 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute'.
20190402 11:22:18.390 - INFO - Command exited with return code 0.
20190402 11:22:18.390 - INFO - ${stdout} =
20190402 11:22:18.391 - INFO - ${stderr} =
20190402 11:22:18.391 - INFO - ${rc} = 0
20190402 11:22:18.391 - INFO - +-------- END KW: SSHLibrary.Execute Command (1387)
20190402 11:22:18.391 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:18.392 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:22:18.392 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:18.392 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:18.393 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:22:18.393 - INFO - +------- END KW: OpenStack.Run OS Command (1391)
20190402 11:22:18.393 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | disabled ]
20190402 11:22:18.393 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | disabled ]
20190402 11:22:18.394 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:22:18.394 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:22:18.395 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:22:18.395 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:18.395 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:22:18.395 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:22:18.395 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:22:18.395 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:18.396 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:18.396 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:18.397 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:22:18.397 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:18.397 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:22:19.733 - INFO - Command exited with return code 0.
20190402 11:22:19.733 - INFO - ${stdout} = disabled
20190402 11:22:19.734 - INFO - ${stderr} =
20190402 11:22:19.734 - INFO - ${rc} = 0
20190402 11:22:19.734 - INFO - +----------- END KW: SSHLibrary.Execute Command (1337)
20190402 11:22:19.734 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:19.735 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:19.735 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:19.736 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:19.736 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:19.737 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:19.737 - INFO - +---------- END KW: OpenStack.Run OS Command (1342)
20190402 11:22:19.737 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:19.738 - INFO - ${value} = disabled
20190402 11:22:19.738 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:22:19.738 - INFO - ${current_value} = disabled
20190402 11:22:19.738 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1344)
20190402 11:22:19.739 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:19.739 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:19.739 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:22:19.740 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1346)
20190402 11:22:19.740 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1347)
20190402 11:22:19.740 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | enabled ]
20190402 11:22:19.741 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:22:19.741 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:22:19.743 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:22:19.743 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:22:19.743 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:19.743 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:22:19.744 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:22:19.744 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:22:19.744 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:19.745 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:19.746 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:19.746 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:19.746 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:19.747 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:22:21.093 - INFO - Command exited with return code 0.
20190402 11:22:21.093 - INFO - ${stdout} = disabled
20190402 11:22:21.094 - INFO - ${stderr} =
20190402 11:22:21.094 - INFO - ${rc} = 0
20190402 11:22:21.094 - INFO - +----------- END KW: SSHLibrary.Execute Command (1348)
20190402 11:22:21.094 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:21.095 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:21.095 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:21.096 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:21.096 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:21.097 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:21.097 - INFO - +---------- END KW: OpenStack.Run OS Command (1353)
20190402 11:22:21.097 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:21.098 - INFO - ${value} = disabled
20190402 11:22:21.098 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:22:21.098 - INFO - ${current_value} = disabled
20190402 11:22:21.098 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1357)
20190402 11:22:21.099 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:21.099 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:21.099 - FAIL - disabled != enabled
20190402 11:22:21.099 - DEBUG - Traceback (most recent call last):
  None
20190402 11:22:21.100 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:22:21.100 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1359)
20190402 11:22:31.101 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:22:31.102 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:22:31.102 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:22:31.103 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:22:31.103 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:31.103 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:22:31.104 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:22:31.104 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:22:31.105 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:31.106 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:31.106 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:31.107 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:22:31.107 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:31.108 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:22:32.490 - INFO - Command exited with return code 0.
20190402 11:22:32.490 - INFO - ${stdout} = disabled
20190402 11:22:32.490 - INFO - ${stderr} =
20190402 11:22:32.490 - INFO - ${rc} = 0
20190402 11:22:32.490 - INFO - +----------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:22:32.491 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:32.492 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:32.492 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:22:32.492 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:32.492 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:32.493 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:32.493 - INFO - +---------- END KW: OpenStack.Run OS Command (1388)
20190402 11:22:32.493 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:32.493 - INFO - ${value} = disabled
20190402 11:22:32.494 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:22:32.494 - INFO - ${current_value} = disabled
20190402 11:22:32.494 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1393)
20190402 11:22:32.494 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:32.495 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:32.495 - FAIL - disabled != enabled
20190402 11:22:32.495 - DEBUG - Traceback (most recent call last):
  None
20190402 11:22:32.495 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:22:32.495 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1395)
20190402 11:22:42.496 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:22:42.496 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:22:42.497 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:22:42.497 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:22:42.497 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:22:42.497 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:22:42.497 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:22:42.498 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:22:42.498 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:42.498 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:42.498 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:42.499 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:42.499 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:42.499 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:22:43.881 - INFO - Command exited with return code 0.
20190402 11:22:43.881 - INFO - ${stdout} = disabled
20190402 11:22:43.882 - INFO - ${stderr} =
20190402 11:22:43.882 - INFO - ${rc} = 0
20190402 11:22:43.882 - INFO - +----------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:22:43.882 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:43.882 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:43.882 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:22:43.882 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:43.883 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:22:43.883 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:43.883 - INFO - +---------- END KW: OpenStack.Run OS Command (1385)
20190402 11:22:43.883 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:43.883 - INFO - ${value} = disabled
20190402 11:22:43.883 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:22:43.884 - INFO - ${current_value} = disabled
20190402 11:22:43.884 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1388)
20190402 11:22:43.884 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:43.884 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:43.884 - FAIL - disabled != enabled
20190402 11:22:43.884 - DEBUG - Traceback (most recent call last):
  None
20190402 11:22:43.884 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:22:43.884 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1388)
20190402 11:22:53.885 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:22:53.885 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:22:53.885 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:22:53.886 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:22:53.886 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:53.886 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:22:53.886 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:22:53.886 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:22:53.886 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:22:53.886 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:22:53.887 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:22:53.887 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:22:53.887 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:22:53.887 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:22:55.267 - INFO - Command exited with return code 0.
20190402 11:22:55.267 - INFO - ${stdout} = disabled
20190402 11:22:55.267 - INFO - ${stderr} =
20190402 11:22:55.267 - INFO - ${rc} = 0
20190402 11:22:55.267 - INFO - +----------- END KW: SSHLibrary.Execute Command (1380)
20190402 11:22:55.267 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:22:55.268 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:55.268 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:22:55.268 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:22:55.268 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:22:55.268 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:22:55.268 - INFO - +---------- END KW: OpenStack.Run OS Command (1382)
20190402 11:22:55.268 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:22:55.269 - INFO - ${value} = disabled
20190402 11:22:55.269 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:22:55.269 - INFO - ${current_value} = disabled
20190402 11:22:55.269 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1384)
20190402 11:22:55.269 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:22:55.269 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:22:55.269 - FAIL - disabled != enabled
20190402 11:22:55.270 - DEBUG - Traceback (most recent call last):
  None
20190402 11:22:55.270 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:22:55.270 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1385)
20190402 11:23:05.270 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:23:05.271 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:23:05.272 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:23:05.272 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:23:05.272 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:23:05.272 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:23:05.272 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:23:05.272 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:23:05.273 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:23:05.273 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:23:05.273 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:23:05.274 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:23:05.274 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:23:05.274 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:23:06.655 - INFO - Command exited with return code 0.
20190402 11:23:06.655 - INFO - ${stdout} = disabled
20190402 11:23:06.656 - INFO - ${stderr} =
20190402 11:23:06.656 - INFO - ${rc} = 0
20190402 11:23:06.656 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:23:06.657 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:23:06.658 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:06.658 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:23:06.658 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:23:06.659 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:23:06.660 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:06.660 - INFO - +---------- END KW: OpenStack.Run OS Command (1387)
20190402 11:23:06.660 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:23:06.661 - INFO - ${value} = disabled
20190402 11:23:06.661 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:23:06.661 - INFO - ${current_value} = disabled
20190402 11:23:06.662 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1391)
20190402 11:23:06.662 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:23:06.662 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:23:06.663 - FAIL - disabled != enabled
20190402 11:23:06.663 - DEBUG - Traceback (most recent call last):
  None
20190402 11:23:06.663 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:23:06.663 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1393)
20190402 11:23:16.664 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:23:16.664 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:23:16.664 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:23:16.665 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:23:16.665 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:23:16.665 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:23:16.665 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:23:16.665 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:23:16.665 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:23:16.665 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:23:16.666 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:23:16.666 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:23:16.666 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:23:16.666 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:23:17.997 - INFO - Command exited with return code 0.
20190402 11:23:17.997 - INFO - ${stdout} = disabled
20190402 11:23:17.997 - INFO - ${stderr} =
20190402 11:23:17.997 - INFO - ${rc} = 0
20190402 11:23:17.998 - INFO - +----------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:23:17.998 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:23:17.999 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:17.999 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:23:17.999 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:23:18.000 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:23:18.000 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:18.001 - INFO - +---------- END KW: OpenStack.Run OS Command (1335)
20190402 11:23:18.001 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:23:18.001 - INFO - ${value} = disabled
20190402 11:23:18.001 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:23:18.002 - INFO - ${current_value} = disabled
20190402 11:23:18.002 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1338)
20190402 11:23:18.002 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:23:18.003 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:23:18.003 - FAIL - disabled != enabled
20190402 11:23:18.003 - DEBUG - Traceback (most recent call last):
  None
20190402 11:23:18.003 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:23:18.004 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1339)
20190402 11:23:28.004 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:23:28.005 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:23:28.005 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:23:28.005 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:23:28.005 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:23:28.006 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:23:28.006 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:23:28.006 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:23:28.006 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:23:28.007 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:23:28.007 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:23:28.007 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:23:28.007 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:23:28.007 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:23:29.388 - INFO - Command exited with return code 0.
20190402 11:23:29.389 - INFO - ${stdout} = disabled
20190402 11:23:29.389 - INFO - ${stderr} =
20190402 11:23:29.389 - INFO - ${rc} = 0
20190402 11:23:29.389 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:23:29.389 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:23:29.389 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:29.389 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:23:29.390 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:23:29.390 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:23:29.390 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:29.390 - INFO - +---------- END KW: OpenStack.Run OS Command (1384)
20190402 11:23:29.390 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:23:29.390 - INFO - ${value} = disabled
20190402 11:23:29.390 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:23:29.391 - INFO - ${current_value} = disabled
20190402 11:23:29.391 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1387)
20190402 11:23:29.391 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:23:29.391 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:23:29.391 - FAIL - disabled != enabled
20190402 11:23:29.391 - DEBUG - Traceback (most recent call last):
  None
20190402 11:23:29.391 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:23:29.391 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1387)
20190402 11:23:39.392 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:23:39.393 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:23:39.393 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:23:39.393 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:23:39.393 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:23:39.393 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:23:39.393 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:23:39.393 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:23:39.394 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:23:39.394 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:23:39.394 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:23:39.394 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:23:39.394 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:23:39.395 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:23:40.726 - INFO - Command exited with return code 0.
20190402 11:23:40.726 - INFO - ${stdout} = disabled
20190402 11:23:40.726 - INFO - ${stderr} =
20190402 11:23:40.726 - INFO - ${rc} = 0
20190402 11:23:40.727 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:23:40.727 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:23:40.727 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:40.727 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:23:40.728 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:23:40.728 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:23:40.728 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:40.728 - INFO - +---------- END KW: OpenStack.Run OS Command (1334)
20190402 11:23:40.728 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:23:40.729 - INFO - ${value} = disabled
20190402 11:23:40.729 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:23:40.729 - INFO - ${current_value} = disabled
20190402 11:23:40.729 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1336)
20190402 11:23:40.729 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:23:40.729 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:23:40.730 - FAIL - disabled != enabled
20190402 11:23:40.730 - DEBUG - Traceback (most recent call last):
  None
20190402 11:23:40.730 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:23:40.730 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1338)
20190402 11:23:50.730 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:23:50.731 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:23:50.732 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:23:50.733 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:23:50.733 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:23:50.733 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:23:50.734 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:23:50.734 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:23:50.734 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:23:50.735 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:23:50.736 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:23:50.736 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:23:50.736 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:23:50.737 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:23:52.067 - INFO - Command exited with return code 0.
20190402 11:23:52.068 - INFO - ${stdout} = disabled
20190402 11:23:52.068 - INFO - ${stderr} =
20190402 11:23:52.068 - INFO - ${rc} = 0
20190402 11:23:52.068 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:23:52.069 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:23:52.070 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:52.070 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:23:52.071 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:23:52.072 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:23:52.073 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:23:52.073 - INFO - +---------- END KW: OpenStack.Run OS Command (1339)
20190402 11:23:52.074 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:23:52.074 - INFO - ${value} = disabled
20190402 11:23:52.074 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:23:52.075 - INFO - ${current_value} = disabled
20190402 11:23:52.075 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1344)
20190402 11:23:52.075 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:23:52.076 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:23:52.076 - FAIL - disabled != enabled
20190402 11:23:52.076 - DEBUG - Traceback (most recent call last):
  None
20190402 11:23:52.076 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:23:52.077 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1347)
20190402 11:24:02.077 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:24:02.078 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:02.078 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:02.079 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:02.079 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:24:02.079 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:02.080 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:24:02.080 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:24:02.080 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:02.081 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:02.081 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:02.081 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:02.082 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:02.082 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:24:03.413 - INFO - Command exited with return code 0.
20190402 11:24:03.414 - INFO - ${stdout} = disabled
20190402 11:24:03.414 - INFO - ${stderr} =
20190402 11:24:03.414 - INFO - ${rc} = 0
20190402 11:24:03.414 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:24:03.414 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:03.415 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:03.415 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:03.415 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:03.415 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:24:03.416 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:03.416 - INFO - +---------- END KW: OpenStack.Run OS Command (1336)
20190402 11:24:03.416 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:03.416 - INFO - ${value} = disabled
20190402 11:24:03.416 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:24:03.416 - INFO - ${current_value} = disabled
20190402 11:24:03.417 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1338)
20190402 11:24:03.417 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:03.417 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:03.417 - FAIL - disabled != enabled
20190402 11:24:03.417 - DEBUG - Traceback (most recent call last):
  None
20190402 11:24:03.417 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:24:03.417 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1340)
20190402 11:24:13.418 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:24:13.418 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:13.419 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:13.419 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:13.419 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:13.419 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:13.419 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:24:13.419 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:24:13.420 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:13.420 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:13.420 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:13.420 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:13.421 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:13.421 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:24:14.802 - INFO - Command exited with return code 0.
20190402 11:24:14.802 - INFO - ${stdout} = disabled
20190402 11:24:14.802 - INFO - ${stderr} =
20190402 11:24:14.802 - INFO - ${rc} = 0
20190402 11:24:14.802 - INFO - +----------- END KW: SSHLibrary.Execute Command (1381)
20190402 11:24:14.802 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:14.803 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:14.803 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:14.803 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:14.804 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:24:14.804 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:14.804 - INFO - +---------- END KW: OpenStack.Run OS Command (1384)
20190402 11:24:14.804 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:14.805 - INFO - ${value} = disabled
20190402 11:24:14.805 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:24:14.805 - INFO - ${current_value} = disabled
20190402 11:24:14.805 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1387)
20190402 11:24:14.805 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:14.805 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:14.806 - FAIL - disabled != enabled
20190402 11:24:14.806 - DEBUG - Traceback (most recent call last):
  None
20190402 11:24:14.806 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:24:14.806 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1388)
20190402 11:24:24.806 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:24:24.807 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:24.808 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:24.808 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:24.808 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:24.808 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:24.808 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:24:24.808 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:24:24.809 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:24.809 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:24.809 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:24.809 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:24.809 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:24.810 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:24:26.242 - INFO - Command exited with return code 0.
20190402 11:24:26.242 - INFO - ${stdout} = enabled
20190402 11:24:26.242 - INFO - ${stderr} =
20190402 11:24:26.242 - INFO - ${rc} = 0
20190402 11:24:26.242 - INFO - +----------- END KW: SSHLibrary.Execute Command (1433)
20190402 11:24:26.242 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:26.243 - INFO - ${res} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:24:26.243 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:26.243 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:26.243 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:24:26.243 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:24:26.243 - INFO - +---------- END KW: OpenStack.Run OS Command (1435)
20190402 11:24:26.244 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:26.244 - INFO - ${value} = enabled
20190402 11:24:26.244 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:24:26.244 - INFO - ${current_value} = enabled
20190402 11:24:26.244 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1437)
20190402 11:24:26.244 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:26.244 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:26.245 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:24:26.245 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1439)
20190402 11:24:26.245 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (126505)
20190402 11:24:26.245 - INFO - +------ END KW: OpenStack.Evacuate Instances (129245)
20190402 11:24:26.245 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-1 ]
20190402 11:24:26.245 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190402 11:24:26.245 - INFO - ${openstack_cmd} = openstack compute service set
20190402 11:24:26.246 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:26.246 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190402 11:24:26.246 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-1 nova-compute
20190402 11:24:26.246 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 11:24:26.246 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:24:26.246 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:26.247 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:26.247 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:24:26.247 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:26.247 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-1 nova-compute'.
20190402 11:24:27.578 - INFO - Command exited with return code 0.
20190402 11:24:27.578 - INFO - ${stdout} =
20190402 11:24:27.578 - INFO - ${stderr} =
20190402 11:24:27.578 - INFO - ${rc} = 0
20190402 11:24:27.578 - INFO - +-------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:24:27.579 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:27.580 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:24:27.580 - INFO - +-------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:27.580 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:27.581 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:24:27.581 - INFO - +------- END KW: OpenStack.Run OS Command (1335)
20190402 11:24:27.582 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | disabled ]
20190402 11:24:27.582 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | disabled ]
20190402 11:24:27.583 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:27.584 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:27.584 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:27.584 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:27.585 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:27.585 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:24:27.585 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:24:27.586 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:27.587 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:27.587 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:27.587 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:24:27.588 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:27.589 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:24:28.920 - INFO - Command exited with return code 0.
20190402 11:24:28.920 - INFO - ${stdout} = disabled
20190402 11:24:28.921 - INFO - ${stderr} =
20190402 11:24:28.921 - INFO - ${rc} = 0
20190402 11:24:28.921 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:24:28.921 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:28.922 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:28.922 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:28.922 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:28.923 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:24:28.923 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:28.923 - INFO - +---------- END KW: OpenStack.Run OS Command (1338)
20190402 11:24:28.923 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:28.924 - INFO - ${value} = disabled
20190402 11:24:28.924 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:24:28.924 - INFO - ${current_value} = disabled
20190402 11:24:28.924 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1341)
20190402 11:24:28.924 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:28.924 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:28.925 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:24:28.925 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1343)
20190402 11:24:28.925 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1343)
20190402 11:24:28.925 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | enabled ]
20190402 11:24:28.925 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:24:28.926 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:28.926 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:28.927 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:28.927 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:24:28.927 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:28.927 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:24:28.927 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:24:28.927 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:28.928 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:28.928 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:28.928 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:28.928 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:28.929 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:24:30.415 - INFO - Command exited with return code 0.
20190402 11:24:30.415 - INFO - ${stdout} = disabled
20190402 11:24:30.415 - INFO - ${stderr} =
20190402 11:24:30.415 - INFO - ${rc} = 0
20190402 11:24:30.416 - INFO - +----------- END KW: SSHLibrary.Execute Command (1488)
20190402 11:24:30.416 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:30.417 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:30.417 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:30.417 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:30.418 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:24:30.418 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:30.419 - INFO - +---------- END KW: OpenStack.Run OS Command (1492)
20190402 11:24:30.419 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:30.419 - INFO - ${value} = disabled
20190402 11:24:30.420 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:24:30.420 - INFO - ${current_value} = disabled
20190402 11:24:30.420 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1494)
20190402 11:24:30.420 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:30.421 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:30.421 - FAIL - disabled != enabled
20190402 11:24:30.421 - DEBUG - Traceback (most recent call last):
  None
20190402 11:24:30.421 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:24:30.422 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1497)
20190402 11:24:40.422 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:24:40.422 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:40.423 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:40.423 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:40.423 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:40.423 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:40.423 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:24:40.423 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:24:40.423 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:40.424 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:40.424 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:40.424 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:40.424 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:40.424 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:24:41.756 - INFO - Command exited with return code 0.
20190402 11:24:41.756 - INFO - ${stdout} = disabled
20190402 11:24:41.756 - INFO - ${stderr} =
20190402 11:24:41.756 - INFO - ${rc} = 0
20190402 11:24:41.756 - INFO - +----------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:24:41.756 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:41.757 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:41.757 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:24:41.757 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:41.757 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:24:41.758 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:41.758 - INFO - +---------- END KW: OpenStack.Run OS Command (1335)
20190402 11:24:41.758 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:41.758 - INFO - ${value} = disabled
20190402 11:24:41.758 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:24:41.758 - INFO - ${current_value} = disabled
20190402 11:24:41.758 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1336)
20190402 11:24:41.759 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:41.759 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:41.759 - FAIL - disabled != enabled
20190402 11:24:41.759 - DEBUG - Traceback (most recent call last):
  None
20190402 11:24:41.759 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:24:41.759 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1337)
20190402 11:24:51.759 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:24:51.760 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:24:51.761 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:24:51.761 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:24:51.761 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:51.761 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:24:51.761 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:24:51.761 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:24:51.761 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:24:51.762 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:24:51.762 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:24:51.762 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:24:51.762 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:24:51.762 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:24:53.094 - INFO - Command exited with return code 0.
20190402 11:24:53.095 - INFO - ${stdout} = disabled
20190402 11:24:53.095 - INFO - ${stderr} =
20190402 11:24:53.095 - INFO - ${rc} = 0
20190402 11:24:53.095 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:24:53.096 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:24:53.098 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:53.098 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:24:53.099 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:24:53.100 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:24:53.100 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:24:53.101 - INFO - +---------- END KW: OpenStack.Run OS Command (1339)
20190402 11:24:53.101 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:24:53.102 - INFO - ${value} = disabled
20190402 11:24:53.102 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:24:53.102 - INFO - ${current_value} = disabled
20190402 11:24:53.103 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1342)
20190402 11:24:53.103 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:24:53.103 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:24:53.104 - FAIL - disabled != enabled
20190402 11:24:53.104 - DEBUG - Traceback (most recent call last):
  None
20190402 11:24:53.104 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:24:53.105 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1345)
20190402 11:25:03.105 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:25:03.106 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:25:03.106 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:25:03.107 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:25:03.107 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:25:03.107 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:25:03.107 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:25:03.107 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:25:03.108 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:25:03.108 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:25:03.109 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:25:03.109 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:25:03.109 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:25:03.109 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:25:04.441 - INFO - Command exited with return code 0.
20190402 11:25:04.442 - INFO - ${stdout} = disabled
20190402 11:25:04.442 - INFO - ${stderr} =
20190402 11:25:04.442 - INFO - ${rc} = 0
20190402 11:25:04.442 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:25:04.443 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:25:04.444 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:04.444 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:25:04.444 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:25:04.445 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:25:04.445 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:04.445 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:25:04.446 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:25:04.446 - INFO - ${value} = disabled
20190402 11:25:04.446 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:25:04.447 - INFO - ${current_value} = disabled
20190402 11:25:04.447 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1341)
20190402 11:25:04.447 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:25:04.447 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:25:04.448 - FAIL - disabled != enabled
20190402 11:25:04.448 - DEBUG - Traceback (most recent call last):
  None
20190402 11:25:04.448 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:25:04.448 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1343)
20190402 11:25:14.449 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:25:14.450 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:25:14.451 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:25:14.451 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:25:14.451 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:14.452 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:25:14.452 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:25:14.452 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:25:14.453 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:25:14.454 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:25:14.455 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:25:14.455 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:25:14.455 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:25:14.456 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:25:15.888 - INFO - Command exited with return code 0.
20190402 11:25:15.889 - INFO - ${stdout} = disabled
20190402 11:25:15.889 - INFO - ${stderr} =
20190402 11:25:15.889 - INFO - ${rc} = 0
20190402 11:25:15.889 - INFO - +----------- END KW: SSHLibrary.Execute Command (1434)
20190402 11:25:15.889 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:25:15.889 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:15.890 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:25:15.890 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:25:15.890 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:25:15.890 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:15.890 - INFO - +---------- END KW: OpenStack.Run OS Command (1437)
20190402 11:25:15.890 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:25:15.890 - INFO - ${value} = disabled
20190402 11:25:15.890 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:25:15.891 - INFO - ${current_value} = disabled
20190402 11:25:15.891 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1441)
20190402 11:25:15.891 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:25:15.891 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:25:15.891 - FAIL - disabled != enabled
20190402 11:25:15.891 - DEBUG - Traceback (most recent call last):
  None
20190402 11:25:15.891 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:25:15.891 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1442)
20190402 11:25:25.892 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:25:25.892 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:25:25.893 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:25:25.893 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:25:25.893 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:25.893 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:25:25.894 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:25:25.894 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:25:25.894 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:25:25.895 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:25:25.895 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:25:25.895 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:25.896 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:25:25.896 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:25:27.282 - INFO - Command exited with return code 0.
20190402 11:25:27.282 - INFO - ${stdout} = disabled
20190402 11:25:27.282 - INFO - ${stderr} =
20190402 11:25:27.282 - INFO - ${rc} = 0
20190402 11:25:27.282 - INFO - +----------- END KW: SSHLibrary.Execute Command (1386)
20190402 11:25:27.282 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:25:27.283 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:27.283 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:25:27.283 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:25:27.284 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:25:27.284 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:27.284 - INFO - +---------- END KW: OpenStack.Run OS Command (1390)
20190402 11:25:27.284 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:25:27.285 - INFO - ${value} = disabled
20190402 11:25:27.285 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:25:27.285 - INFO - ${current_value} = disabled
20190402 11:25:27.285 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1393)
20190402 11:25:27.285 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:25:27.285 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:25:27.286 - FAIL - disabled != enabled
20190402 11:25:27.286 - DEBUG - Traceback (most recent call last):
  None
20190402 11:25:27.286 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:25:27.286 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1394)
20190402 11:25:37.286 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:25:37.287 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:25:37.287 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:25:37.287 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:25:37.287 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:37.287 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:25:37.288 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:25:37.288 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:25:37.288 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:25:37.288 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:25:37.288 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:25:37.288 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:37.289 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:25:37.289 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:25:38.619 - INFO - Command exited with return code 0.
20190402 11:25:38.620 - INFO - ${stdout} = disabled
20190402 11:25:38.620 - INFO - ${stderr} =
20190402 11:25:38.620 - INFO - ${rc} = 0
20190402 11:25:38.620 - INFO - +----------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:25:38.620 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:25:38.621 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:38.621 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:25:38.621 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:25:38.622 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:25:38.622 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:38.622 - INFO - +---------- END KW: OpenStack.Run OS Command (1334)
20190402 11:25:38.622 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:25:38.622 - INFO - ${value} = disabled
20190402 11:25:38.622 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:25:38.623 - INFO - ${current_value} = disabled
20190402 11:25:38.623 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1336)
20190402 11:25:38.623 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:25:38.623 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:25:38.623 - FAIL - disabled != enabled
20190402 11:25:38.623 - DEBUG - Traceback (most recent call last):
  None
20190402 11:25:38.623 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:25:38.623 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1337)
20190402 11:25:48.624 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:25:48.624 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:25:48.625 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:25:48.625 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:25:48.625 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:48.625 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:25:48.625 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:25:48.625 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:25:48.625 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:25:48.626 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:25:48.626 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:25:48.626 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:48.626 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:25:48.627 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:25:49.958 - INFO - Command exited with return code 0.
20190402 11:25:49.959 - INFO - ${stdout} = disabled
20190402 11:25:49.959 - INFO - ${stderr} =
20190402 11:25:49.959 - INFO - ${rc} = 0
20190402 11:25:49.959 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:25:49.960 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:25:49.961 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:49.961 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:25:49.962 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:25:49.962 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:25:49.963 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:25:49.963 - INFO - +---------- END KW: OpenStack.Run OS Command (1338)
20190402 11:25:49.963 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:25:49.964 - INFO - ${value} = disabled
20190402 11:25:49.964 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:25:49.964 - INFO - ${current_value} = disabled
20190402 11:25:49.964 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1340)
20190402 11:25:49.965 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:25:49.965 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:25:49.966 - FAIL - disabled != enabled
20190402 11:25:49.966 - DEBUG - Traceback (most recent call last):
  None
20190402 11:25:49.966 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:25:49.966 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1342)
20190402 11:25:59.967 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:25:59.967 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:25:59.967 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:25:59.968 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:25:59.968 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:25:59.968 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:25:59.968 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:25:59.968 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:25:59.968 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:25:59.969 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:25:59.969 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:25:59.969 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:25:59.969 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:25:59.969 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:26:01.301 - INFO - Command exited with return code 0.
20190402 11:26:01.301 - INFO - ${stdout} = disabled
20190402 11:26:01.301 - INFO - ${stderr} =
20190402 11:26:01.302 - INFO - ${rc} = 0
20190402 11:26:01.302 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:26:01.302 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:26:01.303 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:01.303 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:26:01.304 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:26:01.304 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:26:01.304 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:01.304 - INFO - +---------- END KW: OpenStack.Run OS Command (1336)
20190402 11:26:01.304 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:26:01.304 - INFO - ${value} = disabled
20190402 11:26:01.304 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:26:01.304 - INFO - ${current_value} = disabled
20190402 11:26:01.305 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1338)
20190402 11:26:01.305 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:26:01.305 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:26:01.305 - FAIL - disabled != enabled
20190402 11:26:01.305 - DEBUG - Traceback (most recent call last):
  None
20190402 11:26:01.305 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:26:01.305 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1339)
20190402 11:26:11.305 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:26:11.306 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:26:11.306 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:26:11.307 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:26:11.307 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:26:11.307 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:26:11.307 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:26:11.307 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:26:11.307 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:26:11.308 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:26:11.308 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:26:11.308 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:26:11.308 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:26:11.308 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:26:12.690 - INFO - Command exited with return code 0.
20190402 11:26:12.690 - INFO - ${stdout} = disabled
20190402 11:26:12.690 - INFO - ${stderr} =
20190402 11:26:12.690 - INFO - ${rc} = 0
20190402 11:26:12.691 - INFO - +----------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:26:12.691 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:26:12.691 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:12.691 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:26:12.692 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:26:12.692 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:26:12.692 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:12.692 - INFO - +---------- END KW: OpenStack.Run OS Command (1385)
20190402 11:26:12.692 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:26:12.692 - INFO - ${value} = disabled
20190402 11:26:12.692 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:26:12.693 - INFO - ${current_value} = disabled
20190402 11:26:12.693 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1387)
20190402 11:26:12.693 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:26:12.693 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:26:12.693 - FAIL - disabled != enabled
20190402 11:26:12.693 - DEBUG - Traceback (most recent call last):
  None
20190402 11:26:12.693 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:26:12.693 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1388)
20190402 11:26:22.694 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:26:22.694 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:26:22.695 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:26:22.695 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:26:22.695 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:26:22.695 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:26:22.695 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:26:22.696 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:26:22.696 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:26:22.696 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:26:22.696 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:26:22.696 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:26:22.697 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:26:22.697 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:26:24.027 - INFO - Command exited with return code 0.
20190402 11:26:24.028 - INFO - ${stdout} = disabled
20190402 11:26:24.028 - INFO - ${stderr} =
20190402 11:26:24.028 - INFO - ${rc} = 0
20190402 11:26:24.028 - INFO - +----------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:26:24.028 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:26:24.028 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:24.029 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:26:24.029 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:26:24.029 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:26:24.029 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:24.029 - INFO - +---------- END KW: OpenStack.Run OS Command (1333)
20190402 11:26:24.029 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:26:24.030 - INFO - ${value} = disabled
20190402 11:26:24.030 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:26:24.030 - INFO - ${current_value} = disabled
20190402 11:26:24.030 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1336)
20190402 11:26:24.030 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:26:24.030 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:26:24.031 - FAIL - disabled != enabled
20190402 11:26:24.031 - DEBUG - Traceback (most recent call last):
  None
20190402 11:26:24.031 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:26:24.031 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1337)
20190402 11:26:34.032 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:26:34.033 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:26:34.034 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:26:34.034 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:26:34.034 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:26:34.035 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:26:34.035 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:26:34.036 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:26:34.036 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:26:34.037 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:26:34.038 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:26:34.038 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:26:34.039 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:26:34.039 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:26:36.075 - INFO - Command exited with return code 0.
20190402 11:26:36.076 - INFO - ${stdout} = disabled
20190402 11:26:36.076 - INFO - ${stderr} =
20190402 11:26:36.076 - INFO - ${rc} = 0
20190402 11:26:36.076 - INFO - +----------- END KW: SSHLibrary.Execute Command (2038)
20190402 11:26:36.077 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:26:36.078 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:36.078 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:26:36.079 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:26:36.079 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:26:36.080 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:36.080 - INFO - +---------- END KW: OpenStack.Run OS Command (2044)
20190402 11:26:36.080 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:26:36.081 - INFO - ${value} = disabled
20190402 11:26:36.081 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:26:36.082 - INFO - ${current_value} = disabled
20190402 11:26:36.082 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (2049)
20190402 11:26:36.082 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:26:36.083 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:26:36.083 - FAIL - disabled != enabled
20190402 11:26:36.084 - DEBUG - Traceback (most recent call last):
  None
20190402 11:26:36.084 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:26:36.084 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (2053)
20190402 11:26:46.085 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:26:46.085 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:26:46.085 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:26:46.085 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:26:46.085 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:26:46.086 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:26:46.086 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:26:46.086 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:26:46.086 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:26:46.086 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:26:46.086 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:26:46.087 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:26:46.087 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:26:46.087 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:26:48.019 - INFO - Command exited with return code 0.
20190402 11:26:48.020 - INFO - ${stdout} = disabled
20190402 11:26:48.020 - INFO - ${stderr} =
20190402 11:26:48.020 - INFO - ${rc} = 0
20190402 11:26:48.020 - INFO - +----------- END KW: SSHLibrary.Execute Command (1933)
20190402 11:26:48.020 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:26:48.021 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:48.021 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:26:48.021 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:26:48.021 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:26:48.021 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:48.021 - INFO - +---------- END KW: OpenStack.Run OS Command (1935)
20190402 11:26:48.022 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:26:48.022 - INFO - ${value} = disabled
20190402 11:26:48.022 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:26:48.022 - INFO - ${current_value} = disabled
20190402 11:26:48.022 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1937)
20190402 11:26:48.022 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:26:48.023 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:26:48.023 - FAIL - disabled != enabled
20190402 11:26:48.023 - DEBUG - Traceback (most recent call last):
  None
20190402 11:26:48.023 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:26:48.023 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1939)
20190402 11:26:58.024 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:26:58.025 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:26:58.026 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:26:58.026 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:26:58.026 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:26:58.027 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:26:58.027 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:26:58.028 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:26:58.028 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:26:58.029 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:26:58.029 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:26:58.030 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:26:58.030 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:26:58.031 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:26:59.613 - INFO - Command exited with return code 0.
20190402 11:26:59.614 - INFO - ${stdout} = disabled
20190402 11:26:59.614 - INFO - ${stderr} =
20190402 11:26:59.614 - INFO - ${rc} = 0
20190402 11:26:59.614 - INFO - +----------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:26:59.615 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:26:59.616 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:59.616 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:26:59.616 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:26:59.617 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:26:59.617 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:26:59.617 - INFO - +---------- END KW: OpenStack.Run OS Command (1589)
20190402 11:26:59.618 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:26:59.619 - INFO - ${value} = disabled
20190402 11:26:59.619 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:26:59.619 - INFO - ${current_value} = disabled
20190402 11:26:59.619 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1594)
20190402 11:26:59.619 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:26:59.619 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:26:59.619 - FAIL - disabled != enabled
20190402 11:26:59.620 - DEBUG - Traceback (most recent call last):
  None
20190402 11:26:59.620 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:26:59.620 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1596)
20190402 11:27:09.620 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:27:09.621 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:27:09.621 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:27:09.621 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:27:09.621 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:09.622 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:27:09.622 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:27:09.622 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:27:09.622 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:09.623 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:09.623 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:09.623 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:09.623 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:09.624 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:27:11.005 - INFO - Command exited with return code 0.
20190402 11:27:11.005 - INFO - ${stdout} = disabled
20190402 11:27:11.005 - INFO - ${stderr} =
20190402 11:27:11.005 - INFO - ${rc} = 0
20190402 11:27:11.006 - INFO - +----------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:27:11.006 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:11.007 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:27:11.007 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:11.008 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:11.008 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:11.009 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:27:11.009 - INFO - +---------- END KW: OpenStack.Run OS Command (1387)
20190402 11:27:11.009 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:11.010 - INFO - ${value} = disabled
20190402 11:27:11.010 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:27:11.010 - INFO - ${current_value} = disabled
20190402 11:27:11.010 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1389)
20190402 11:27:11.011 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:27:11.011 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:27:11.011 - FAIL - disabled != enabled
20190402 11:27:11.012 - DEBUG - Traceback (most recent call last):
  None
20190402 11:27:11.012 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:27:11.012 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1392)
20190402 11:27:21.013 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:27:21.014 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:27:21.015 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:27:21.015 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:27:21.015 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:21.016 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:27:21.016 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:27:21.016 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:27:21.017 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:21.018 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:21.018 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:21.018 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:21.019 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:21.020 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:27:22.352 - INFO - Command exited with return code 0.
20190402 11:27:22.352 - INFO - ${stdout} = disabled
20190402 11:27:22.352 - INFO - ${stderr} =
20190402 11:27:22.352 - INFO - ${rc} = 0
20190402 11:27:22.352 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:27:22.352 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:22.353 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:27:22.353 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:22.353 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:22.354 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:22.354 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:27:22.354 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:27:22.354 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:22.354 - INFO - ${value} = disabled
20190402 11:27:22.354 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:27:22.354 - INFO - ${current_value} = disabled
20190402 11:27:22.355 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1341)
20190402 11:27:22.355 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:27:22.355 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:27:22.355 - FAIL - disabled != enabled
20190402 11:27:22.355 - DEBUG - Traceback (most recent call last):
  None
20190402 11:27:22.355 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:27:22.355 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1342)
20190402 11:27:32.356 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:27:32.357 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:27:32.358 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:27:32.359 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:27:32.359 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:32.359 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:27:32.360 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:27:32.360 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:27:32.360 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:32.361 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:32.361 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:32.362 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:32.362 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:32.363 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:27:33.846 - INFO - Command exited with return code 0.
20190402 11:27:33.846 - INFO - ${stdout} = enabled
20190402 11:27:33.846 - INFO - ${stderr} =
20190402 11:27:33.846 - INFO - ${rc} = 0
20190402 11:27:33.846 - INFO - +----------- END KW: SSHLibrary.Execute Command (1484)
20190402 11:27:33.847 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:33.847 - INFO - ${res} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:27:33.847 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:27:33.847 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:33.848 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:33.848 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:27:33.848 - INFO - +---------- END KW: OpenStack.Run OS Command (1488)
20190402 11:27:33.848 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:33.848 - INFO - ${value} = enabled
20190402 11:27:33.848 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:27:33.848 - INFO - ${current_value} = enabled
20190402 11:27:33.848 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1491)
20190402 11:27:33.848 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:27:33.849 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:27:33.849 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:27:33.849 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1493)
20190402 11:27:33.849 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (184924)
20190402 11:27:33.849 - INFO - +------ END KW: OpenStack.Evacuate Instances (187604)
20190402 11:27:33.849 - INFO - +----- END KW: BuiltIn.Run Keywords (316850)
20190402 11:27:33.849 - INFO - +---- END KW: BuiltIn.Run Keyword If (316851)
------------------------------------------------------------------------------
20190402 11:27:33.849 - INFO - +--- END TEST: Evacuate Instances From Hosts (316852)
------------------------------------------------------------------------------
20190402 11:27:33.850 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190402 11:27:33.851 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190402 11:27:33.851 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190402 11:27:33.851 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:27:33.851 - INFO - ${openstack_cmd} = openstack server list
20190402 11:27:33.851 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:33.851 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:27:33.852 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:27:33.852 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:27:33.852 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:33.852 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:33.852 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:33.852 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:33.852 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:33.853 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:27:35.616 - INFO - Command exited with return code 0.
20190402 11:27:35.616 - INFO - ${stdout} = 

vm-cirros-2
vm-cirros-1
20190402 11:27:35.616 - INFO - ${stderr} =
20190402 11:27:35.616 - INFO - ${rc} = 0
20190402 11:27:35.616 - INFO - +------- END KW: SSHLibrary.Execute Command (1764)
20190402 11:27:35.616 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:35.617 - INFO - ${res} = {u'stdout': u'\n\nvm-cirros-2\nvm-cirros-1', u'stderr': u'', u'rc': 0}
20190402 11:27:35.617 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:35.617 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:35.617 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:35.617 - INFO - &{result} = { stdout=

vm-cirros-2
vm-cirros-1 | stderr= | rc=0 }
20190402 11:27:35.617 - INFO - +------ END KW: OpenStack.Run OS Command (1765)
20190402 11:27:35.617 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:35.618 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:35.618 - INFO - ${response} = 

vm-cirros-2
vm-cirros-1
20190402 11:27:35.618 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:27:35.618 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:35.618 - INFO - @{res_in_list} = [ vm-cirros-2 | vm-cirros-1 ]
20190402 11:27:35.618 - INFO - +------- END KW: String.Split String (0)
20190402 11:27:35.619 - INFO - @{vm_list} = [ vm-cirros-2 | vm-cirros-1 ]
20190402 11:27:35.619 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:27:35.619 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:27:35.619 - INFO - +------- START KW: ${vm} = vm-cirros-2 [ ]
20190402 11:27:35.619 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:27:35.619 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:27:35.619 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:27:35.619 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:35.619 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:27:35.620 - INFO - ${cmd} = openstack server delete vm-cirros-2
20190402 11:27:35.620 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:27:35.620 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:35.620 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:35.620 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:35.620 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:35.621 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:35.621 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete vm-cirros-2'.
20190402 11:27:37.454 - INFO - Command exited with return code 0.
20190402 11:27:37.454 - INFO - ${stdout} =
20190402 11:27:37.454 - INFO - ${stderr} =
20190402 11:27:37.454 - INFO - ${rc} = 0
20190402 11:27:37.455 - INFO - +---------- END KW: SSHLibrary.Execute Command (1833)
20190402 11:27:37.455 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:37.456 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:37.456 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:37.456 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:37.457 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:37.457 - INFO - +--------- END KW: OpenStack.Run OS Command (1837)
20190402 11:27:37.458 - INFO - +-------- END KW: OpenStack.Delete Instance (1839)
20190402 11:27:37.458 - INFO - +------- END KW: ${vm} = vm-cirros-2 (1839)
20190402 11:27:37.458 - INFO - +------- START KW: ${vm} = vm-cirros-1 [ ]
20190402 11:27:37.458 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:27:37.459 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:27:37.459 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:27:37.459 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:37.460 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:27:37.460 - INFO - ${cmd} = openstack server delete vm-cirros-1
20190402 11:27:37.460 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:27:37.460 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:37.461 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:37.462 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:37.462 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:37.462 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:37.463 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete vm-cirros-1'.
20190402 11:27:39.275 - INFO - Command exited with return code 0.
20190402 11:27:39.276 - INFO - ${stdout} =
20190402 11:27:39.276 - INFO - ${stderr} =
20190402 11:27:39.276 - INFO - ${rc} = 0
20190402 11:27:39.276 - INFO - +---------- END KW: SSHLibrary.Execute Command (1814)
20190402 11:27:39.277 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:39.277 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:39.277 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:27:39.277 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:39.278 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:39.278 - INFO - +--------- END KW: OpenStack.Run OS Command (1818)
20190402 11:27:39.278 - INFO - +-------- END KW: OpenStack.Delete Instance (1820)
20190402 11:27:39.278 - INFO - +------- END KW: ${vm} = vm-cirros-1 (1820)
20190402 11:27:39.278 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (3659)
20190402 11:27:39.278 - INFO - +----- END KW: OpenStack.Delete All Instances (5427)
20190402 11:27:39.279 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190402 11:27:39.279 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190402 11:27:39.279 - INFO - ${openstack_cmd} = openstack image list
20190402 11:27:39.279 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:39.279 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190402 11:27:39.279 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190402 11:27:39.279 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:27:39.280 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:39.280 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:39.280 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:39.280 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:39.280 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:39.281 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190402 11:27:40.662 - INFO - Command exited with return code 0.
20190402 11:27:40.662 - INFO - ${stdout} = 

cirros
20190402 11:27:40.662 - INFO - ${stderr} =
20190402 11:27:40.662 - INFO - ${rc} = 0
20190402 11:27:40.662 - INFO - +------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:27:40.663 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:40.663 - INFO - ${res} = {u'stdout': u'\n\ncirros', u'stderr': u'', u'rc': 0}
20190402 11:27:40.663 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:40.663 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:40.664 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:40.664 - INFO - &{result} = { stdout=

cirros | stderr= | rc=0 }
20190402 11:27:40.664 - INFO - +------ END KW: OpenStack.Run OS Command (1384)
20190402 11:27:40.664 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:40.665 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:40.665 - INFO - ${response} = 

cirros
20190402 11:27:40.665 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:27:40.665 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:40.665 - INFO - @{res_in_list} = [ cirros ]
20190402 11:27:40.665 - INFO - +------- END KW: String.Split String (0)
20190402 11:27:40.666 - INFO - @{image_list} = [ cirros ]
20190402 11:27:40.666 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:27:40.666 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190402 11:27:40.666 - INFO - +------- START KW: ${image} = cirros [ ]
20190402 11:27:40.666 - INFO - +-------- START KW: OpenStack.Delete Image [ ${image} ]
20190402 11:27:40.666 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack image delete ]
20190402 11:27:40.666 - INFO - ${openstack_cmd} = openstack image delete
20190402 11:27:40.666 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:40.666 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${image} ]
20190402 11:27:40.666 - INFO - ${cmd} = openstack image delete cirros
20190402 11:27:40.667 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:27:40.667 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:40.667 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:40.667 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:40.667 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:40.668 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:40.668 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image delete cirros'.
20190402 11:27:43.152 - INFO - Command exited with return code 0.
20190402 11:27:43.152 - INFO - ${stdout} =
20190402 11:27:43.152 - INFO - ${stderr} =
20190402 11:27:43.152 - INFO - ${rc} = 0
20190402 11:27:43.153 - INFO - +---------- END KW: SSHLibrary.Execute Command (2485)
20190402 11:27:43.153 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:43.153 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:43.153 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:27:43.154 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:43.154 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:43.154 - INFO - +--------- END KW: OpenStack.Run OS Command (2487)
20190402 11:27:43.154 - INFO - +-------- END KW: OpenStack.Delete Image (2488)
20190402 11:27:43.154 - INFO - +------- END KW: ${image} = cirros (2488)
20190402 11:27:43.154 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (2488)
20190402 11:27:43.155 - INFO - +----- END KW: OpenStack.Delete All Images (3877)
20190402 11:27:43.155 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190402 11:27:43.155 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190402 11:27:43.155 - INFO - ${openstack_cmd} = openstack flavor list
20190402 11:27:43.155 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:43.155 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190402 11:27:43.156 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190402 11:27:43.156 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:27:43.156 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:43.156 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:43.157 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:43.157 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:43.157 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:43.157 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190402 11:27:44.554 - INFO - Command exited with return code 0.
20190402 11:27:44.554 - INFO - ${stdout} = 

f2.small
f1.small
20190402 11:27:44.554 - INFO - ${stderr} =
20190402 11:27:44.554 - INFO - ${rc} = 0
20190402 11:27:44.554 - INFO - +------- END KW: SSHLibrary.Execute Command (1397)
20190402 11:27:44.554 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:44.555 - INFO - ${res} = {u'stdout': u'\n\nf2.small\nf1.small', u'stderr': u'', u'rc': 0}
20190402 11:27:44.555 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:44.555 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:44.556 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:44.556 - INFO - &{result} = { stdout=

f2.small
f1.small | stderr= | rc=0 }
20190402 11:27:44.556 - INFO - +------ END KW: OpenStack.Run OS Command (1400)
20190402 11:27:44.556 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:44.557 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:44.557 - INFO - ${response} = 

f2.small
f1.small
20190402 11:27:44.557 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:27:44.557 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:44.558 - INFO - @{res_in_list} = [ f2.small | f1.small ]
20190402 11:27:44.558 - INFO - +------- END KW: String.Split String (1)
20190402 11:27:44.558 - INFO - @{flavor_list} = [ f2.small | f1.small ]
20190402 11:27:44.558 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:27:44.558 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190402 11:27:44.558 - INFO - +------- START KW: ${flavor} = f2.small [ ]
20190402 11:27:44.558 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:27:44.559 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:27:44.559 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:27:44.559 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:44.559 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:27:44.560 - INFO - ${cmd} = openstack flavor delete f2.small
20190402 11:27:44.560 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:27:44.560 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:44.560 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:44.561 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:44.561 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:44.561 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:44.562 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f2.small'.
20190402 11:27:46.243 - INFO - Command exited with return code 0.
20190402 11:27:46.243 - INFO - ${stdout} =
20190402 11:27:46.244 - INFO - ${stderr} =
20190402 11:27:46.244 - INFO - ${rc} = 0
20190402 11:27:46.244 - INFO - +---------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:27:46.244 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:46.245 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:46.245 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:46.245 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:46.245 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:46.246 - INFO - +--------- END KW: OpenStack.Run OS Command (1686)
20190402 11:27:46.246 - INFO - +-------- END KW: OpenStack.Delete Flavor (1688)
20190402 11:27:46.246 - INFO - +------- END KW: ${flavor} = f2.small (1688)
20190402 11:27:46.246 - INFO - +------- START KW: ${flavor} = f1.small [ ]
20190402 11:27:46.246 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:27:46.247 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:27:46.247 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:27:46.247 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:46.247 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:27:46.248 - INFO - ${cmd} = openstack flavor delete f1.small
20190402 11:27:46.248 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:27:46.248 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:46.249 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:46.249 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:46.249 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:46.250 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:46.250 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f1.small'.
20190402 11:27:47.638 - INFO - Command exited with return code 0.
20190402 11:27:47.638 - INFO - ${stdout} =
20190402 11:27:47.638 - INFO - ${stderr} =
20190402 11:27:47.639 - INFO - ${rc} = 0
20190402 11:27:47.639 - INFO - +---------- END KW: SSHLibrary.Execute Command (1390)
20190402 11:27:47.639 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:47.640 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:47.640 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:47.640 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:47.641 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:47.641 - INFO - +--------- END KW: OpenStack.Run OS Command (1393)
20190402 11:27:47.642 - INFO - +-------- END KW: OpenStack.Delete Flavor (1395)
20190402 11:27:47.642 - INFO - +------- END KW: ${flavor} = f1.small (1396)
20190402 11:27:47.642 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (3084)
20190402 11:27:47.642 - INFO - +----- END KW: OpenStack.Delete All Flavors (4487)
20190402 11:27:47.642 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190402 11:27:47.643 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:27:47.643 - INFO - ${openstack_cmd} = openstack network list
20190402 11:27:47.644 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:27:47.644 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190402 11:27:47.645 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190402 11:27:47.645 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:27:47.645 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:47.646 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:47.647 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:47.647 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:47.647 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:47.648 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190402 11:27:49.060 - INFO - Command exited with return code 0.
20190402 11:27:49.060 - INFO - ${stdout} = 

network-1
20190402 11:27:49.060 - INFO - ${stderr} =
20190402 11:27:49.060 - INFO - ${rc} = 0
20190402 11:27:49.060 - INFO - +------- END KW: SSHLibrary.Execute Command (1413)
20190402 11:27:49.060 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:49.061 - INFO - ${res} = {u'stdout': u'\n\nnetwork-1', u'stderr': u'', u'rc': 0}
20190402 11:27:49.061 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:49.061 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:49.061 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:49.062 - INFO - &{result} = { stdout=

network-1 | stderr= | rc=0 }
20190402 11:27:49.062 - INFO - +------ END KW: OpenStack.Run OS Command (1417)
20190402 11:27:49.062 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:49.062 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:49.063 - INFO - ${response} = 

network-1
20190402 11:27:49.063 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:27:49.063 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:49.063 - INFO - @{res_in_list} = [ network-1 ]
20190402 11:27:49.063 - INFO - +------- END KW: String.Split String (0)
20190402 11:27:49.063 - INFO - @{network_list} = [ network-1 ]
20190402 11:27:49.063 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:27:49.063 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190402 11:27:49.063 - INFO - +------- START KW: ${network} = network-1 [ ]
20190402 11:27:49.063 - INFO - +-------- START KW: OpenStack.Delete Network [ ${network} ]
20190402 11:27:49.064 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack network delete ]
20190402 11:27:49.064 - INFO - ${openstack_cmd} = openstack network delete
20190402 11:27:49.064 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:49.064 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network} ]
20190402 11:27:49.064 - INFO - ${cmd} = openstack network delete network-1
20190402 11:27:49.064 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:27:49.064 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:49.065 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:49.065 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:49.065 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:49.065 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:49.065 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network delete network-1'.
20190402 11:27:52.000 - INFO - Command exited with return code 0.
20190402 11:27:52.000 - INFO - ${stdout} =
20190402 11:27:52.000 - INFO - ${stderr} =
20190402 11:27:52.000 - INFO - ${rc} = 0
20190402 11:27:52.000 - INFO - +---------- END KW: SSHLibrary.Execute Command (2935)
20190402 11:27:52.001 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:52.001 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:52.001 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:27:52.001 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:52.002 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:52.002 - INFO - +--------- END KW: OpenStack.Run OS Command (2938)
20190402 11:27:52.002 - INFO - +-------- END KW: OpenStack.Delete Network (2939)
20190402 11:27:52.002 - INFO - +------- END KW: ${network} = network-1 (2939)
20190402 11:27:52.002 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (2939)
20190402 11:27:52.002 - INFO - +----- END KW: OpenStack.Delete All Networks (4360)
20190402 11:27:52.002 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190402 11:27:52.003 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190402 11:27:52.003 - INFO - ${openstack_cmd} = openstack keypair list
20190402 11:27:52.003 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:52.003 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190402 11:27:52.003 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190402 11:27:52.003 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:27:52.004 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:52.005 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:52.005 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:52.005 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:52.005 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:52.006 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190402 11:27:53.342 - INFO - Command exited with return code 0.
20190402 11:27:53.342 - INFO - ${stdout} =
20190402 11:27:53.342 - INFO - ${stderr} =
20190402 11:27:53.342 - INFO - ${rc} = 0
20190402 11:27:53.342 - INFO - +------- END KW: SSHLibrary.Execute Command (1337)
20190402 11:27:53.342 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:53.343 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:53.343 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:53.343 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:53.343 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:53.344 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:27:53.344 - INFO - +------ END KW: OpenStack.Run OS Command (1340)
20190402 11:27:53.344 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:53.344 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:53.345 - INFO - ${response} =
20190402 11:27:53.345 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:27:53.345 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:53.345 - INFO - @{res_in_list} = [ ]
20190402 11:27:53.345 - INFO - +------- END KW: String.Split String (0)
20190402 11:27:53.345 - INFO - @{key_list} = [ ]
20190402 11:27:53.345 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:27:53.345 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190402 11:27:53.345 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190402 11:27:53.346 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (1343)
20190402 11:27:53.346 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190402 11:27:53.346 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:27:53.346 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:27:53.346 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:53.346 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:27:53.346 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190402 11:27:53.346 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:27:53.347 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:53.347 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:53.347 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:53.347 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:53.347 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:53.348 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190402 11:27:54.728 - INFO - Command exited with return code 0.
20190402 11:27:54.728 - INFO - ${stdout} =
20190402 11:27:54.728 - INFO - ${stderr} =
20190402 11:27:54.728 - INFO - ${rc} = 0
20190402 11:27:54.728 - INFO - +------- END KW: SSHLibrary.Execute Command (1381)
20190402 11:27:54.728 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:54.729 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:54.729 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:54.729 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:54.729 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:54.730 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:27:54.730 - INFO - +------ END KW: OpenStack.Run OS Command (1383)
20190402 11:27:54.730 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:54.730 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:54.730 - INFO - ${response} =
20190402 11:27:54.731 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:27:54.731 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:54.731 - INFO - @{res_in_list} = [ ]
20190402 11:27:54.731 - INFO - +------- END KW: String.Split String (0)
20190402 11:27:54.731 - INFO - @{snapshot_list} = [ ]
20190402 11:27:54.731 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:27:54.731 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190402 11:27:54.731 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190402 11:27:54.731 - INFO - +----- END KW: OpenStack.Delete All Snapshots (1385)
20190402 11:27:54.731 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190402 11:27:54.732 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190402 11:27:54.732 - INFO - ${openstack_cmd} = openstack volume list
20190402 11:27:54.732 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:54.732 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190402 11:27:54.732 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190402 11:27:54.732 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:27:54.732 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:54.733 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:54.733 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:54.733 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:54.733 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:54.733 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190402 11:27:56.315 - INFO - Command exited with return code 0.
20190402 11:27:56.316 - INFO - ${stdout} = 

2168d291-ffd6-4dcc-b727-3e686f86145a
3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2
20190402 11:27:56.316 - INFO - ${stderr} =
20190402 11:27:56.316 - INFO - ${rc} = 0
20190402 11:27:56.316 - INFO - +------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:27:56.316 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:56.317 - INFO - ${res} = {u'stdout': u'\n\n2168d291-ffd6-4dcc-b727-3e686f86145a\n3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2', u'stderr': u'', u'rc': 0}
20190402 11:27:56.317 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:56.317 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:56.317 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:27:56.317 - INFO - &{result} = { stdout=

2168d291-ffd6-4dcc-b727-3e686f86145a
3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2 | stderr= | rc=0 }
20190402 11:27:56.317 - INFO - +------ END KW: OpenStack.Run OS Command (1585)
20190402 11:27:56.317 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:27:56.318 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:27:56.318 - INFO - ${response} = 

2168d291-ffd6-4dcc-b727-3e686f86145a
3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2
20190402 11:27:56.318 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:27:56.318 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:27:56.318 - INFO - @{res_in_list} = [ 2168d291-ffd6-4dcc-b727-3e686f86145a | 3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2 ]
20190402 11:27:56.318 - INFO - +------- END KW: String.Split String (0)
20190402 11:27:56.318 - INFO - @{volume_list} = [ 2168d291-ffd6-4dcc-b727-3e686f86145a | 3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2 ]
20190402 11:27:56.318 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:27:56.319 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190402 11:27:56.319 - INFO - +------- START KW: ${volume} = 2168d291-ffd6-4dcc-b727-3e686f86145a [ ]
20190402 11:27:56.319 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:27:56.319 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:27:56.319 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:27:56.319 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:56.319 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:27:56.319 - INFO - ${cmd} = openstack volume delete 2168d291-ffd6-4dcc-b727-3e686f86145a
20190402 11:27:56.320 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:27:56.320 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:56.320 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:56.320 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:56.320 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:56.320 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:56.321 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 2168d291-ffd6-4dcc-b727-3e686f86145a'.
20190402 11:27:57.702 - INFO - Command exited with return code 0.
20190402 11:27:57.703 - INFO - ${stdout} =
20190402 11:27:57.703 - INFO - ${stderr} =
20190402 11:27:57.703 - INFO - ${rc} = 0
20190402 11:27:57.703 - INFO - +---------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:27:57.703 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:57.704 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:57.704 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:27:57.705 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:57.705 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:57.705 - INFO - +--------- END KW: OpenStack.Run OS Command (1385)
20190402 11:27:57.706 - INFO - +-------- END KW: OpenStack.Delete Volume (1387)
20190402 11:27:57.706 - INFO - +------- END KW: ${volume} = 2168d291-ffd6-4dcc-b727-3e686f86145a (1387)
20190402 11:27:57.706 - INFO - +------- START KW: ${volume} = 3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2 [ ]
20190402 11:27:57.706 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:27:57.707 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:27:57.707 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:27:57.707 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:27:57.707 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:27:57.708 - INFO - ${cmd} = openstack volume delete 3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2
20190402 11:27:57.708 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:27:57.708 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:27:57.709 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:57.709 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:57.710 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:57.710 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:57.711 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2'.
20190402 11:27:59.193 - INFO - Command exited with return code 0.
20190402 11:27:59.193 - INFO - ${stdout} =
20190402 11:27:59.194 - INFO - ${stderr} =
20190402 11:27:59.194 - INFO - ${rc} = 0
20190402 11:27:59.194 - INFO - +---------- END KW: SSHLibrary.Execute Command (1484)
20190402 11:27:59.194 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:27:59.196 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:27:59.196 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:27:59.196 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:27:59.197 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:27:59.198 - INFO - +--------- END KW: OpenStack.Run OS Command (1490)
20190402 11:27:59.198 - INFO - +-------- END KW: OpenStack.Delete Volume (1492)
20190402 11:27:59.198 - INFO - +------- END KW: ${volume} = 3ce6d85f-8f2e-4f6a-80be-148eb0a6d3b2 (1492)
20190402 11:27:59.198 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (2879)
20190402 11:27:59.199 - INFO - +----- END KW: OpenStack.Delete All Volumes (4468)
20190402 11:27:59.199 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190402 11:27:59.200 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190402 11:27:59.200 - INFO - ${openstack_cmd} = openstack stack list
20190402 11:27:59.200 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:27:59.201 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:27:59.201 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190402 11:27:59.201 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:27:59.202 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:27:59.203 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:27:59.204 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:27:59.204 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:27:59.204 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:27:59.205 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190402 11:28:00.540 - INFO - Command exited with return code 0.
20190402 11:28:00.540 - INFO - ${stdout} =
20190402 11:28:00.540 - INFO - ${stderr} =
20190402 11:28:00.540 - INFO - ${rc} = 0
20190402 11:28:00.540 - INFO - +------- END KW: SSHLibrary.Execute Command (1336)
20190402 11:28:00.541 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:00.541 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:28:00.541 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:00.541 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:00.542 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:00.542 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:28:00.542 - INFO - +------ END KW: OpenStack.Run OS Command (1340)
20190402 11:28:00.542 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:28:00.542 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:00.543 - INFO - ${response} =
20190402 11:28:00.543 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:28:00.543 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:28:00.543 - INFO - @{res_in_list} = [ ]
20190402 11:28:00.543 - INFO - +------- END KW: String.Split String (0)
20190402 11:28:00.543 - INFO - @{stack_list} = [ ]
20190402 11:28:00.543 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:28:00.543 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190402 11:28:00.544 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (1)
20190402 11:28:00.544 - INFO - +----- END KW: OpenStack.Delete All Stacks (1345)
20190402 11:28:00.544 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (26693)
20190402 11:28:00.544 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190402 11:28:00.544 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190402 11:28:00.576 - INFO - +----- END KW: SSHLibrary.Close All Connections (32)
20190402 11:28:00.577 - INFO - +---- END KW: Utils.Stx Suite TearDown (33)
20190402 11:28:00.577 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (26727)
==============================================================================
20190402 11:28:00.584 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.02-Instance-From-Volume (1314272)
==============================================================================
20190402 11:28:00.612 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.03-Instance-From-Snapshot [ ]
==============================================================================
20190402 11:28:00.613 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190402 11:28:00.613 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 11:28:00.614 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 11:28:00.614 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 11:28:00.615 - INFO - ${controller_connection} = 1
20190402 11:28:00.615 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190402 11:28:00.615 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 11:28:00.616 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 11:28:00.616 - INFO - Length is 10
20190402 11:28:00.616 - INFO - ${pwd_length} = 10
20190402 11:28:00.616 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190402 11:28:00.616 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 11:28:00.617 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 11:28:00.617 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 11:28:01.740 - INFO - Read output: Last login: Tue Apr  2 16:54:49 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 11:28:01.740 - INFO - +-------- END KW: SSHLibrary.Login (1123)
20190402 11:28:01.740 - INFO - Returning from the enclosing user keyword.
20190402 11:28:01.740 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1124)
20190402 11:28:01.741 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1126)
20190402 11:28:01.741 - INFO - ${master_controller_connection} = 1
20190402 11:28:01.741 - INFO - +----- END KW: Utils.Connect to Controller Node (1127)
20190402 11:28:01.741 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 11:28:01.741 - INFO - ${master_controller_connection} = 1
20190402 11:28:01.741 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190402 11:28:01.741 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 11:28:01.742 - INFO - 1
20190402 11:28:01.742 - INFO - +----- END KW: BuiltIn.Log (1)
20190402 11:28:01.742 - INFO - +---- END KW: Utils.Open Master Controller Connection (1129)
20190402 11:28:01.742 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 11:28:01.742 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 11:28:01.743 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:28:01.743 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:28:01.743 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:28:01.744 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:28:01.744 - INFO - &{result_dict} = { stdout= }
20190402 11:28:01.744 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:01.744 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:28:01.745 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:28:01.745 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:28:01.745 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:28:01.745 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:28:01.746 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (3)
20190402 11:28:01.746 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:28:01.746 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:28:01.746 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:28:01.752 - INFO - source /etc/platform/openrc
20190402 11:28:01.752 - INFO - +------ END KW: SSHLibrary.Write (6)
20190402 11:28:01.752 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:28:02.142 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:28:02.142 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:28:02.142 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (390)
20190402 11:28:02.143 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:28:02.143 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:28:02.143 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:28:02.143 - INFO - +------- END KW: String.Get Line (0)
20190402 11:28:02.144 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:28:02.144 - INFO - ${clean_out} =
20190402 11:28:02.144 - INFO - +------- END KW: String.Remove String (0)
20190402 11:28:02.144 - INFO - ${output} =
20190402 11:28:02.144 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:28:02.144 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:28:02.144 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:28:02.146 - INFO - echo $?
20190402 11:28:02.147 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:28:02.147 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:28:02.147 - INFO - 0
20190402 11:28:02.147 - INFO - ${rc} = 0
20190402 11:28:02.147 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:28:02.147 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:28:02.147 - INFO - 0
20190402 11:28:02.147 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:28:02.147 - INFO - ${rc} = 0
20190402 11:28:02.148 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:28:02.148 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:28:02.148 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:28:02.148 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:28:02.148 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:02.148 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:28:02.149 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 11:28:02.149 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:28:02.149 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 11:28:02.149 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:28:02.149 - INFO - +----- END KW: Utils.Run Command (407)
20190402 11:28:02.149 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (407)
20190402 11:28:02.149 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1536)
------------------------------------------------------------------------------
20190402 11:28:02.149 - INFO - +--- START TEST: Create Flavors for Instances [ ]
------------------------------------------------------------------------------
20190402 11:28:02.150 - INFO - +---- START KW: BuiltIn.Catenate [ ${flavor_property_1} | ${flavor_property_2} ]
20190402 11:28:02.150 - INFO - ${properties} = --property sw:wrs:guest:heartbeat='false' --property hw:cpu_policy='shared'
20190402 11:28:02.150 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:28:02.150 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190402 11:28:02.151 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 11:28:02.151 - INFO - ${openstack_cmd} = openstack flavor create
20190402 11:28:02.151 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:28:02.151 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 11:28:02.151 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190402 11:28:02.151 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:28:02.152 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:28:02.152 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:02.152 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:02.152 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:28:02.152 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:02.153 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190402 11:28:03.534 - INFO - Command exited with return code 0.
20190402 11:28:03.535 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 11:28:03.535 - INFO - ${stderr} =
20190402 11:28:03.535 - INFO - ${rc} = 0
20190402 11:28:03.535 - INFO - +------ END KW: SSHLibrary.Execute Command (1383)
20190402 11:28:03.535 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:03.536 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 11:28:03.536 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:03.536 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:03.536 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:03.536 - INFO - +----- END KW: OpenStack.Run OS Command (1384)
20190402 11:28:03.536 - INFO - +---- END KW: OpenStack.Create Flavor (1386)
------------------------------------------------------------------------------
20190402 11:28:03.537 - INFO - +--- END TEST: Create Flavors for Instances (1387)
------------------------------------------------------------------------------
20190402 11:28:03.537 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190402 11:28:03.537 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190402 11:28:03.545 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 11:28:03.551 - INFO - [chan 3] Opened sftp connection (server version 3)
20190402 11:28:04.016 - INFO - '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2' -> '/home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2'
20190402 11:28:04.017 - INFO - +---- END KW: SSHLibrary.Put File (480)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:28:04.017 - INFO - +---- START KW: OpenStack.Create Image [ ${host_image_path}/${cirros_image} | ${disk_format} | ${cirros_image_name} ]
20190402 11:28:04.017 - INFO - +----- START KW: SSHLibrary.File Should Exist [ ${file_path} ]
20190402 11:28:04.018 - INFO - +----- END KW: SSHLibrary.File Should Exist (1)
20190402 11:28:04.018 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack image create ]
20190402 11:28:04.018 - INFO - ${openstack_cmd} = openstack image create
20190402 11:28:04.018 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:28:04.018 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --file ${file_path} | --disk-format ${disk_format} | --public | ${name} ]
20190402 11:28:04.019 - INFO - ${cmd} = openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros
20190402 11:28:04.019 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:28:04.019 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 3 min ]
20190402 11:28:04.019 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:04.019 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:04.019 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:28:04.019 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:04.020 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros'.
20190402 11:28:21.840 - INFO - Command exited with return code 0.
20190402 11:28:21.840 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:28:21.840 - INFO - ${stderr} =
20190402 11:28:21.840 - INFO - ${rc} = 0
20190402 11:28:21.841 - INFO - +------ END KW: SSHLibrary.Execute Command (17822)
20190402 11:28:21.841 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:21.841 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:28:21.841 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:21.842 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:21.842 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:21.842 - INFO - +----- END KW: OpenStack.Run OS Command (17823)
20190402 11:28:21.842 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | image | ${name} | status | active ]
20190402 11:28:21.843 - INFO - +------ START KW: OpenStack.Check Field Value [ image | ${name} | status | active ]
20190402 11:28:21.843 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:28:21.843 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:28:21.844 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:28:21.844 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:21.844 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:28:21.844 - INFO - ${cmd} = openstack image show cirros|grep -w status|tail -1|awk '{print$4}'
20190402 11:28:21.844 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:28:21.844 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:21.844 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:21.845 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:21.845 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:21.845 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:21.845 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep -w status|tail -1|awk '{print$4}''.
20190402 11:28:23.125 - INFO - Command exited with return code 0.
20190402 11:28:23.125 - INFO - ${stdout} = active
20190402 11:28:23.125 - INFO - ${stderr} =
20190402 11:28:23.125 - INFO - ${rc} = 0
20190402 11:28:23.125 - INFO - +--------- END KW: SSHLibrary.Execute Command (1280)
20190402 11:28:23.125 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:23.126 - INFO - ${res} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:28:23.126 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:23.126 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:23.127 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:23.127 - INFO - ${result} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:28:23.127 - INFO - +-------- END KW: OpenStack.Run OS Command (1283)
20190402 11:28:23.127 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:23.127 - INFO - ${value} = active
20190402 11:28:23.127 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:28:23.128 - INFO - ${current_value} = active
20190402 11:28:23.128 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1285)
20190402 11:28:23.128 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:28:23.128 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:28:23.128 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:28:23.128 - INFO - +------ END KW: OpenStack.Check Field Value (1285)
20190402 11:28:23.128 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1286)
20190402 11:28:23.128 - INFO - +---- END KW: OpenStack.Create Image (19111)
------------------------------------------------------------------------------
20190402 11:28:23.129 - INFO - +--- END TEST: Create Images for Instances (19592)
------------------------------------------------------------------------------
20190402 11:28:23.129 - INFO - +--- START TEST: Create Networks for Instance [ ]
------------------------------------------------------------------------------
20190402 11:28:23.129 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190402 11:28:23.130 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190402 11:28:23.130 - INFO - ${openstack_cmd} = openstack network create
20190402 11:28:23.130 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:28:23.130 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190402 11:28:23.130 - INFO - ${cmd} = openstack network create network-1
20190402 11:28:23.130 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:28:23.130 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:28:23.131 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:23.131 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:23.131 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:28:23.131 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:23.131 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190402 11:28:24.680 - INFO - Command exited with return code 0.
20190402 11:28:24.680 - INFO - ${stdout} = +---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:28:24.680 - INFO - ${stderr} =
20190402 11:28:24.681 - INFO - ${rc} = 0
20190402 11:28:24.681 - INFO - +------ END KW: SSHLibrary.Execute Command (1550)
20190402 11:28:24.681 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:24.681 - INFO - ${res} = {u'stdout': u"+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:28:24.681 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:24.681 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:24.682 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:24.682 - INFO - +----- END KW: OpenStack.Run OS Command (1552)
20190402 11:28:24.682 - INFO - +---- END KW: OpenStack.Create Network (1553)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:28:24.682 - INFO - +---- START KW: OpenStack.Create Subnet [ ${network_name} | ${subnet_range} | ${subnet_extras} ]
20190402 11:28:24.683 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack subnet create ]
20190402 11:28:24.683 - INFO - ${openstack_cmd} = openstack subnet create
20190402 11:28:24.683 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:28:24.683 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --network ${network_name} | --subnet-range ${range_ip} ${additional_args} ]
20190402 11:28:24.683 - INFO - ${cmd} = openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1
20190402 11:28:24.683 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:28:24.683 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:28:24.684 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:24.684 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:24.684 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:28:24.684 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:24.684 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1'.
20190402 11:28:26.430 - INFO - Command exited with return code 0.
20190402 11:28:26.430 - INFO - ${stdout} = +-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:28:26.430 - INFO - ${stderr} =
20190402 11:28:26.430 - INFO - ${rc} = 0
20190402 11:28:26.430 - INFO - +------ END KW: SSHLibrary.Execute Command (1746)
20190402 11:28:26.431 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:26.431 - INFO - ${res} = {u'stdout': u"+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:28:26.431 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:26.431 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:26.432 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:26.432 - INFO - +----- END KW: OpenStack.Run OS Command (1749)
20190402 11:28:26.432 - INFO - +---- END KW: OpenStack.Create Subnet (1750)
------------------------------------------------------------------------------
20190402 11:28:26.432 - INFO - +--- END TEST: Create Networks for Instance (3303)
------------------------------------------------------------------------------
20190402 11:28:26.433 - INFO - +--- START TEST: Create Volume for Instances [ ]
------------------------------------------------------------------------------
20190402 11:28:26.433 - INFO - +---- START KW: OpenStack.Create Volume [ ${cirros_volume_size} | ${cirros_image_name} | --bootable | ${cirros_volume_name} ]
20190402 11:28:26.434 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack volume create ]
20190402 11:28:26.434 - INFO - ${openstack_cmd} = openstack volume create
20190402 11:28:26.434 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:28:26.434 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --size ${size} | --image ${image} | ${bootable} | ${name} ]
20190402 11:28:26.434 - INFO - ${cmd} = openstack volume create --size 20 --image cirros --bootable vol-cirros-1
20190402 11:28:26.434 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:28:26.435 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:28:26.435 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:26.435 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:26.436 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:28:26.436 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:26.436 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume create --size 20 --image cirros --bootable vol-cirros-1'.
20190402 11:28:27.968 - INFO - Command exited with return code 0.
20190402 11:28:27.969 - INFO - ${stdout} = +---------------------+--------------------------------------+
| Field               | Value                                |
+---------------------+--------------------------------------+
| attachmen...
20190402 11:28:27.969 - INFO - ${stderr} =
20190402 11:28:27.969 - INFO - ${rc} = 0
20190402 11:28:27.969 - INFO - +------ END KW: SSHLibrary.Execute Command (1533)
20190402 11:28:27.969 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:27.969 - INFO - ${res} = {u'stdout': u'+---------------------+--------------------------------------+\n| Field               | Value                                |\n+---------------------+-----------------------------------...
20190402 11:28:27.969 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:27.970 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:27.970 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:27.970 - INFO - +----- END KW: OpenStack.Run OS Command (1535)
20190402 11:28:27.970 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 10 min | 10 sec | Check Field Value | volume | ${name} | status | available ]
20190402 11:28:27.970 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:28:27.971 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:28:27.971 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:28:27.971 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:28:27.971 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:27.971 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:28:27.972 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:28:27.972 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:28:27.972 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:27.972 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:27.972 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:27.973 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:27.973 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:27.973 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:28:29.435 - INFO - Command exited with return code 0.
20190402 11:28:29.435 - INFO - ${stdout} = creating
20190402 11:28:29.436 - INFO - ${stderr} =
20190402 11:28:29.436 - INFO - ${rc} = 0
20190402 11:28:29.436 - INFO - +--------- END KW: SSHLibrary.Execute Command (1463)
20190402 11:28:29.436 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:29.437 - INFO - ${res} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:28:29.437 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:29.438 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:29.438 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:29.439 - INFO - ${result} = {u'stdout': u'creating', u'stderr': u'', u'rc': 0}
20190402 11:28:29.439 - INFO - +-------- END KW: OpenStack.Run OS Command (1467)
20190402 11:28:29.439 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:29.440 - INFO - ${value} = creating
20190402 11:28:29.440 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:28:29.440 - INFO - ${current_value} = creating
20190402 11:28:29.440 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1469)
20190402 11:28:29.441 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:28:29.441 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:28:29.441 - FAIL - creating != available
20190402 11:28:29.442 - DEBUG - Traceback (most recent call last):
  None
20190402 11:28:29.442 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:28:29.442 - INFO - +------ END KW: OpenStack.Check Field Value (1472)
20190402 11:28:39.442 - INFO - +------ START KW: OpenStack.Check Field Value [ volume | ${name} | status | available ]
20190402 11:28:39.443 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:28:39.443 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:28:39.444 - INFO - ${openstack_cmd} = openstack volume show vol-cirros-1
20190402 11:28:39.444 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:39.444 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:28:39.444 - INFO - ${cmd} = openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:28:39.444 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:28:39.444 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:39.445 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:39.445 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:39.445 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:39.445 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:39.446 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume show vol-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:28:40.827 - INFO - Command exited with return code 0.
20190402 11:28:40.827 - INFO - ${stdout} = available
20190402 11:28:40.827 - INFO - ${stderr} =
20190402 11:28:40.827 - INFO - ${rc} = 0
20190402 11:28:40.828 - INFO - +--------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:28:40.828 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:40.828 - INFO - ${res} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:28:40.828 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:40.828 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:40.829 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:40.829 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:28:40.829 - INFO - +-------- END KW: OpenStack.Run OS Command (1385)
20190402 11:28:40.829 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:40.829 - INFO - ${value} = available
20190402 11:28:40.829 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:28:40.829 - INFO - ${current_value} = available
20190402 11:28:40.829 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1386)
20190402 11:28:40.830 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:28:40.830 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:28:40.830 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:28:40.830 - INFO - +------ END KW: OpenStack.Check Field Value (1388)
20190402 11:28:40.830 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (12860)
20190402 11:28:40.830 - INFO - +---- END KW: OpenStack.Create Volume (14397)
------------------------------------------------------------------------------
20190402 11:28:40.830 - INFO - +--- END TEST: Create Volume for Instances (14397)
------------------------------------------------------------------------------
20190402 11:28:40.831 - INFO - +--- START TEST: Create Snapshot for Instance [ ]
------------------------------------------------------------------------------
20190402 11:28:40.831 - INFO - +---- START KW: OpenStack.Create Snapshot [ ${cirros_volume_name} | ${cirros_snapshot_name} ]
20190402 11:28:40.831 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack volume snapshot create --volume ${volume} ${name} | True | 30 sec ]
20190402 11:28:40.832 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:40.832 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:40.832 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:28:40.832 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:40.832 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot create --volume vol-cirros-1 snap-cirros-1'.
20190402 11:28:42.264 - INFO - Command exited with return code 0.
20190402 11:28:42.264 - INFO - ${stdout} = +-------------+--------------------------------------+
| Field       | Value                                |
+-------------+--------------------------------------+
| created_at  | 2019-04-02T17:17:24...
20190402 11:28:42.264 - INFO - ${stderr} =
20190402 11:28:42.264 - INFO - ${rc} = 0
20190402 11:28:42.264 - INFO - +------ END KW: SSHLibrary.Execute Command (1432)
20190402 11:28:42.264 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:42.265 - INFO - ${res} = {u'stdout': u'+-------------+--------------------------------------+\n| Field       | Value                                |\n+-------------+--------------------------------------+\n| created_at  | 20...
20190402 11:28:42.265 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:42.265 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:42.266 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:42.266 - INFO - +----- END KW: OpenStack.Run OS Command (1435)
20190402 11:28:42.266 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | volume snapshot | ${name} | status | available ]
20190402 11:28:42.266 - INFO - +------ START KW: OpenStack.Check Field Value [ volume snapshot | ${name} | status | available ]
20190402 11:28:42.267 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:28:42.267 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:28:42.268 - INFO - ${openstack_cmd} = openstack volume snapshot show snap-cirros-1
20190402 11:28:42.268 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:42.268 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:28:42.268 - INFO - ${cmd} = openstack volume snapshot show snap-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:28:42.268 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:28:42.268 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:42.269 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:42.269 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:42.269 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:42.269 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:42.270 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot show snap-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:28:43.601 - INFO - Command exited with return code 0.
20190402 11:28:43.602 - INFO - ${stdout} = available
20190402 11:28:43.602 - INFO - ${stderr} =
20190402 11:28:43.602 - INFO - ${rc} = 0
20190402 11:28:43.602 - INFO - +--------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:28:43.602 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:43.603 - INFO - ${res} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:28:43.603 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:43.603 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:43.603 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:43.603 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:28:43.603 - INFO - +-------- END KW: OpenStack.Run OS Command (1335)
20190402 11:28:43.603 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:43.604 - INFO - ${value} = available
20190402 11:28:43.604 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:28:43.604 - INFO - ${current_value} = available
20190402 11:28:43.604 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1337)
20190402 11:28:43.604 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:28:43.604 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:28:43.604 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:28:43.604 - INFO - +------ END KW: OpenStack.Check Field Value (1338)
20190402 11:28:43.605 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1338)
20190402 11:28:43.605 - INFO - +---- END KW: OpenStack.Create Snapshot (2774)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:28:43.605 - INFO - +---- START KW: OpenStack.Create Snapshot [ ${cirros_volume_name} | ${cirros_snapshot_name_2} ]
20190402 11:28:43.605 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack volume snapshot create --volume ${volume} ${name} | True | 30 sec ]
20190402 11:28:43.605 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:43.606 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:43.606 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:28:43.606 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:43.606 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot create --volume vol-cirros-1 snap-cirros-2'.
20190402 11:28:45.037 - INFO - Command exited with return code 0.
20190402 11:28:45.037 - INFO - ${stdout} = +-------------+--------------------------------------+
| Field       | Value                                |
+-------------+--------------------------------------+
| created_at  | 2019-04-02T17:17:27...
20190402 11:28:45.037 - INFO - ${stderr} =
20190402 11:28:45.037 - INFO - ${rc} = 0
20190402 11:28:45.038 - INFO - +------ END KW: SSHLibrary.Execute Command (1431)
20190402 11:28:45.038 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:45.039 - INFO - ${res} = {u'stdout': u'+-------------+--------------------------------------+\n| Field       | Value                                |\n+-------------+--------------------------------------+\n| created_at  | 20...
20190402 11:28:45.039 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:45.039 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:45.040 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:45.040 - INFO - +----- END KW: OpenStack.Run OS Command (1435)
20190402 11:28:45.040 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | volume snapshot | ${name} | status | available ]
20190402 11:28:45.041 - INFO - +------ START KW: OpenStack.Check Field Value [ volume snapshot | ${name} | status | available ]
20190402 11:28:45.042 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:28:45.043 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:28:45.044 - INFO - ${openstack_cmd} = openstack volume snapshot show snap-cirros-2
20190402 11:28:45.044 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:45.044 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:28:45.045 - INFO - ${cmd} = openstack volume snapshot show snap-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:28:45.045 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:28:45.045 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:45.046 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:45.046 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:45.046 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:45.046 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:45.046 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot show snap-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:28:46.478 - INFO - Command exited with return code 0.
20190402 11:28:46.478 - INFO - ${stdout} = available
20190402 11:28:46.479 - INFO - ${stderr} =
20190402 11:28:46.479 - INFO - ${rc} = 0
20190402 11:28:46.479 - INFO - +--------- END KW: SSHLibrary.Execute Command (1433)
20190402 11:28:46.480 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:46.481 - INFO - ${res} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:28:46.481 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:46.482 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:46.482 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:46.483 - INFO - ${result} = {u'stdout': u'available', u'stderr': u'', u'rc': 0}
20190402 11:28:46.483 - INFO - +-------- END KW: OpenStack.Run OS Command (1438)
20190402 11:28:46.483 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:46.484 - INFO - ${value} = available
20190402 11:28:46.484 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:28:46.484 - INFO - ${current_value} = available
20190402 11:28:46.485 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1443)
20190402 11:28:46.485 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:28:46.485 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:28:46.486 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:28:46.486 - INFO - +------ END KW: OpenStack.Check Field Value (1445)
20190402 11:28:46.486 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1446)
20190402 11:28:46.486 - INFO - +---- END KW: OpenStack.Create Snapshot (2881)
------------------------------------------------------------------------------
20190402 11:28:46.487 - INFO - +--- END TEST: Create Snapshot for Instance (5657)
------------------------------------------------------------------------------
20190402 11:28:46.488 - INFO - +--- START TEST: Launch Instances [ ]
------------------------------------------------------------------------------
20190402 11:28:46.488 - INFO - +---- START KW: OpenStack.Create Instance From Snapshot [ ${network_name} | ${cirros_image_name} | ${cirros_instance_name} | ${cirros_snapshot_name} | ${cirros_snapshot_size} | ${cirros_flavor_name} ]
20190402 11:28:46.490 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190402 11:28:46.490 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:28:46.491 - INFO - ${openstack_cmd} = openstack network list
20190402 11:28:46.491 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:28:46.492 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 11:28:46.492 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 11:28:46.492 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:28:46.493 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:46.494 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:46.494 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:46.494 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:46.495 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:46.495 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 11:28:47.827 - INFO - Command exited with return code 0.
20190402 11:28:47.827 - INFO - ${stdout} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:28:47.827 - INFO - ${stderr} =
20190402 11:28:47.828 - INFO - ${rc} = 0
20190402 11:28:47.828 - INFO - +------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:28:47.828 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:47.829 - INFO - ${res} = {u'stdout': u'ee85ac71-8e0c-42ee-b680-c3409d6d710b', u'stderr': u'', u'rc': 0}
20190402 11:28:47.829 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:47.830 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:47.830 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:47.830 - INFO - &{result} = { stdout=ee85ac71-8e0c-42ee-b680-c3409d6d710b | stderr= | rc=0 }
20190402 11:28:47.830 - INFO - +------ END KW: OpenStack.Run OS Command (1337)
20190402 11:28:47.830 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:47.831 - INFO - ${output} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:28:47.831 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 11:28:47.832 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:28:47.832 - INFO - ${splitted_output} = [u'ee85ac71-8e0c-42ee-b680-c3409d6d710b']
20190402 11:28:47.832 - INFO - +------ END KW: String.Split String (0)
20190402 11:28:47.832 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:28:47.832 - INFO - ${net_id} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:28:47.832 - INFO - +------ END KW: Collections.Get From List (0)
20190402 11:28:47.832 - INFO - ${net_id} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:28:47.832 - INFO - +----- END KW: OpenStack.Get Net Id (1342)
20190402 11:28:47.832 - INFO - +----- START KW: OpenStack.Get Snapshot ID [ ${snapshot} ]
20190402 11:28:47.833 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:28:47.833 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:28:47.833 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:28:47.833 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${snapshot}" | awk '{print$2}' ]
20190402 11:28:47.833 - INFO - ${cmd} = openstack volume snapshot list|grep "snap-cirros-1"|awk '{print$2}'
20190402 11:28:47.833 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:28:47.833 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:47.834 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:47.834 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:47.834 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:47.834 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:47.834 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|grep "snap-cirros-1"|awk '{print$2}''.
20190402 11:28:49.200 - INFO - Command exited with return code 0.
20190402 11:28:49.200 - INFO - ${stdout} = e750512f-e0a7-4a6d-84df-ce5b84649f99
20190402 11:28:49.200 - INFO - ${stderr} =
20190402 11:28:49.200 - INFO - ${rc} = 0
20190402 11:28:49.201 - INFO - +------- END KW: SSHLibrary.Execute Command (1367)
20190402 11:28:49.201 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:49.201 - INFO - ${res} = {u'stdout': u'e750512f-e0a7-4a6d-84df-ce5b84649f99', u'stderr': u'', u'rc': 0}
20190402 11:28:49.201 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:28:49.201 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:49.202 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:28:49.202 - INFO - &{result} = { stdout=e750512f-e0a7-4a6d-84df-ce5b84649f99 | stderr= | rc=0 }
20190402 11:28:49.202 - INFO - +------ END KW: OpenStack.Run OS Command (1369)
20190402 11:28:49.202 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:49.202 - INFO - ${output} = e750512f-e0a7-4a6d-84df-ce5b84649f99
20190402 11:28:49.202 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 11:28:49.202 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:28:49.203 - INFO - ${splitted_output} = [u'e750512f-e0a7-4a6d-84df-ce5b84649f99']
20190402 11:28:49.203 - INFO - +------ END KW: String.Split String (1)
20190402 11:28:49.203 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:28:49.203 - INFO - ${snapshot_id} = e750512f-e0a7-4a6d-84df-ce5b84649f99
20190402 11:28:49.203 - INFO - +------ END KW: Collections.Get From List (0)
20190402 11:28:49.203 - INFO - ${snapshot_id} = e750512f-e0a7-4a6d-84df-ce5b84649f99
20190402 11:28:49.203 - INFO - +----- END KW: OpenStack.Get Snapshot ID (1371)
20190402 11:28:49.203 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server create ]
20190402 11:28:49.203 - INFO - ${openstack_cmd} = openstack server create
20190402 11:28:49.204 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:28:49.204 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=: | ${snapshot_id} | snapshot | ${size} ]
20190402 11:28:49.204 - INFO - ${mapping} = e750512f-e0a7-4a6d-84df-ce5b84649f99:snapshot:20
20190402 11:28:49.204 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:28:49.204 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --flavor ${flavor} | --image ${image} | --nic net-id=${net_id} | --block-device-mapping | vdb=${mapping} | ${vm_name} ]
20190402 11:28:49.204 - INFO - ${cmd} = openstack server create --flavor f1.small --image cirros --nic net-id=ee85ac71-8e0c-42ee-b680-c3409d6d710b --block-device-mapping vdb=e750512f-e0a7-4a6d-84df-ce5b84649f99:snapshot:20 vm-cirros-1
20190402 11:28:49.204 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:28:49.205 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:28:49.205 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:49.205 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:49.205 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:28:49.205 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:49.206 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server create --flavor f1.small --image cirros --nic net-id=ee85ac71-8e0c-42ee-b680-c3409d6d710b --block-device-mapping vdb=e750512f-e0a7-4a6d-84df-ce5b84649f99:snapshot:20 vm-cirros-1'.
20190402 11:28:51.640 - INFO - Command exited with return code 0.
20190402 11:28:51.640 - INFO - ${stdout} = +-------------------------------------+-------------------------------------------------+
| Field                               | Value                                           |
+-------------------...
20190402 11:28:51.640 - INFO - ${stderr} =
20190402 11:28:51.640 - INFO - ${rc} = 0
20190402 11:28:51.641 - INFO - +------ END KW: SSHLibrary.Execute Command (2436)
20190402 11:28:51.641 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:51.642 - INFO - ${res} = {u'stdout': u"+-------------------------------------+-------------------------------------------------+\n| Field                               | Value                                           |\n+---...
20190402 11:28:51.642 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:51.642 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:51.642 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:51.643 - INFO - +----- END KW: OpenStack.Run OS Command (2437)
20190402 11:28:51.643 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:28:51.643 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:28:51.644 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:28:51.644 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:28:51.645 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:28:51.645 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:28:51.645 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:28:51.646 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:28:51.646 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:28:51.646 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:28:51.647 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:28:51.647 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:28:51.647 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:28:51.647 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:28:51.648 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:28:53.229 - INFO - Command exited with return code 0.
20190402 11:28:53.229 - INFO - ${stdout} = BUILD
20190402 11:28:53.229 - INFO - ${stderr} =
20190402 11:28:53.229 - INFO - ${rc} = 0
20190402 11:28:53.229 - INFO - +--------- END KW: SSHLibrary.Execute Command (1582)
20190402 11:28:53.229 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:28:53.230 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:28:53.230 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:28:53.230 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:28:53.230 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:28:53.230 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:28:53.230 - INFO - +-------- END KW: OpenStack.Run OS Command (1584)
20190402 11:28:53.230 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:28:53.231 - INFO - ${value} = BUILD
20190402 11:28:53.231 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:28:53.231 - INFO - ${current_value} = BUILD
20190402 11:28:53.231 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1587)
20190402 11:28:53.231 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:28:53.231 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:28:53.231 - FAIL - BUILD != ACTIVE
20190402 11:28:53.231 - DEBUG - Traceback (most recent call last):
  None
20190402 11:28:53.232 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:28:53.232 - INFO - +------ END KW: OpenStack.Check Field Value (1589)
20190402 11:29:03.232 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:29:03.233 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:03.233 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:03.233 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:29:03.233 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:03.233 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:03.234 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:29:03.234 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:29:03.234 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:03.234 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:03.234 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:03.234 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:03.235 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:03.235 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:29:04.867 - INFO - Command exited with return code 0.
20190402 11:29:04.867 - INFO - ${stdout} = BUILD
20190402 11:29:04.867 - INFO - ${stderr} =
20190402 11:29:04.867 - INFO - ${rc} = 0
20190402 11:29:04.867 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:29:04.868 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:04.868 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:04.868 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:29:04.869 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:04.869 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:29:04.869 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:04.869 - INFO - +-------- END KW: OpenStack.Run OS Command (1635)
20190402 11:29:04.870 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:04.870 - INFO - ${value} = BUILD
20190402 11:29:04.870 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:29:04.870 - INFO - ${current_value} = BUILD
20190402 11:29:04.870 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 11:29:04.871 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:29:04.871 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:29:04.871 - FAIL - BUILD != ACTIVE
20190402 11:29:04.871 - DEBUG - Traceback (most recent call last):
  None
20190402 11:29:04.871 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:29:04.871 - INFO - +------ END KW: OpenStack.Check Field Value (1639)
20190402 11:29:14.872 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:29:14.873 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:14.874 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:14.875 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:29:14.875 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:14.875 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:14.875 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:29:14.876 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:29:14.876 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:14.877 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:14.877 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:14.877 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:14.878 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:14.878 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:29:16.560 - INFO - Command exited with return code 0.
20190402 11:29:16.561 - INFO - ${stdout} = BUILD
20190402 11:29:16.561 - INFO - ${stderr} =
20190402 11:29:16.561 - INFO - ${rc} = 0
20190402 11:29:16.561 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:29:16.561 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:16.561 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:16.561 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:29:16.562 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:16.562 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:29:16.562 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:16.562 - INFO - +-------- END KW: OpenStack.Run OS Command (1686)
20190402 11:29:16.562 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:16.562 - INFO - ${value} = BUILD
20190402 11:29:16.562 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:29:16.562 - INFO - ${current_value} = BUILD
20190402 11:29:16.563 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1690)
20190402 11:29:16.563 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:29:16.563 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:29:16.563 - FAIL - BUILD != ACTIVE
20190402 11:29:16.563 - DEBUG - Traceback (most recent call last):
  None
20190402 11:29:16.563 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:29:16.563 - INFO - +------ END KW: OpenStack.Check Field Value (1691)
20190402 11:29:26.564 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:29:26.565 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:26.566 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:26.567 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:29:26.567 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:26.567 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:26.568 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:29:26.568 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:29:26.568 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:26.569 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:26.570 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:26.570 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:26.570 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:26.571 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:29:28.203 - INFO - Command exited with return code 0.
20190402 11:29:28.203 - INFO - ${stdout} = BUILD
20190402 11:29:28.203 - INFO - ${stderr} =
20190402 11:29:28.203 - INFO - ${rc} = 0
20190402 11:29:28.204 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:29:28.204 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:28.205 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:28.205 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:29:28.205 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:28.206 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:29:28.207 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:28.207 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:29:28.207 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:28.208 - INFO - ${value} = BUILD
20190402 11:29:28.208 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:29:28.209 - INFO - ${current_value} = BUILD
20190402 11:29:28.209 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1644)
20190402 11:29:28.209 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:29:28.210 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:29:28.211 - FAIL - BUILD != ACTIVE
20190402 11:29:28.211 - DEBUG - Traceback (most recent call last):
  None
20190402 11:29:28.211 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:29:28.211 - INFO - +------ END KW: OpenStack.Check Field Value (1647)
20190402 11:29:38.212 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:29:38.212 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:38.213 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:38.213 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:29:38.213 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:38.213 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:38.214 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:29:38.214 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:29:38.214 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:38.214 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:38.215 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:38.215 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:38.215 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:38.215 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:29:39.948 - INFO - Command exited with return code 0.
20190402 11:29:39.948 - INFO - ${stdout} = BUILD
20190402 11:29:39.948 - INFO - ${stderr} =
20190402 11:29:39.949 - INFO - ${rc} = 0
20190402 11:29:39.949 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:29:39.949 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:39.949 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:39.949 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:29:39.949 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:39.950 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:29:39.950 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:29:39.950 - INFO - +-------- END KW: OpenStack.Run OS Command (1736)
20190402 11:29:39.950 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:39.950 - INFO - ${value} = BUILD
20190402 11:29:39.950 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:29:39.950 - INFO - ${current_value} = BUILD
20190402 11:29:39.951 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1739)
20190402 11:29:39.951 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:29:39.951 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:29:39.951 - FAIL - BUILD != ACTIVE
20190402 11:29:39.951 - DEBUG - Traceback (most recent call last):
  None
20190402 11:29:39.951 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:29:39.951 - INFO - +------ END KW: OpenStack.Check Field Value (1739)
20190402 11:29:49.952 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:29:49.952 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:49.953 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:49.953 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:29:49.953 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:49.953 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:49.954 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:29:49.954 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:29:49.954 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:49.954 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:49.955 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:49.955 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:49.955 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:49.955 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:29:51.787 - INFO - Command exited with return code 0.
20190402 11:29:51.788 - INFO - ${stdout} = ACTIVE
20190402 11:29:51.788 - INFO - ${stderr} =
20190402 11:29:51.788 - INFO - ${rc} = 0
20190402 11:29:51.788 - INFO - +--------- END KW: SSHLibrary.Execute Command (1833)
20190402 11:29:51.788 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:51.789 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:29:51.789 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:29:51.789 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:51.789 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:29:51.789 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:29:51.789 - INFO - +-------- END KW: OpenStack.Run OS Command (1835)
20190402 11:29:51.789 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:51.790 - INFO - ${value} = ACTIVE
20190402 11:29:51.790 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:29:51.790 - INFO - ${current_value} = ACTIVE
20190402 11:29:51.790 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1838)
20190402 11:29:51.790 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:29:51.790 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:29:51.791 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:29:51.791 - INFO - +------ END KW: OpenStack.Check Field Value (1839)
20190402 11:29:51.791 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (60148)
20190402 11:29:51.791 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | power_state | Running ]
20190402 11:29:51.791 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | power_state | Running ]
20190402 11:29:51.792 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:51.792 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:51.792 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:29:51.792 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:51.792 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:51.793 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:29:51.793 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:29:51.793 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:51.793 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:51.794 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:51.794 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:51.794 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:51.794 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:29:53.426 - INFO - Command exited with return code 0.
20190402 11:29:53.426 - INFO - ${stdout} = Running
20190402 11:29:53.426 - INFO - ${stderr} =
20190402 11:29:53.426 - INFO - ${rc} = 0
20190402 11:29:53.426 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:29:53.427 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:53.427 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:29:53.428 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:29:53.428 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:53.428 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:29:53.429 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:29:53.429 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:29:53.429 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:53.429 - INFO - ${value} = Running
20190402 11:29:53.429 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:29:53.429 - INFO - ${current_value} = Running
20190402 11:29:53.430 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 11:29:53.430 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:29:53.430 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:29:53.430 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:29:53.430 - INFO - +------ END KW: OpenStack.Check Field Value (1639)
20190402 11:29:53.430 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1639)
20190402 11:29:53.430 - INFO - +---- END KW: OpenStack.Create Instance From Snapshot (66942)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:29:53.431 - INFO - +---- START KW: OpenStack.Create Instance From Snapshot [ ${network_name} | ${cirros_image_name} | ${cirros_instance_name_2} | ${cirros_snapshot_name_2} | ${cirros_snapshot_size} | ${cirros_flavor_name} ]
20190402 11:29:53.432 - INFO - +----- START KW: OpenStack.Get Net Id [ ${net_name} ]
20190402 11:29:53.432 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:29:53.432 - INFO - ${openstack_cmd} = openstack network list
20190402 11:29:53.432 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:29:53.432 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 11:29:53.433 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 11:29:53.433 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:29:53.433 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:53.433 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:53.434 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:53.434 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:53.434 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:53.434 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 11:29:54.816 - INFO - Command exited with return code 0.
20190402 11:29:54.816 - INFO - ${stdout} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:29:54.816 - INFO - ${stderr} =
20190402 11:29:54.816 - INFO - ${rc} = 0
20190402 11:29:54.816 - INFO - +------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:29:54.816 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:54.817 - INFO - ${res} = {u'stdout': u'ee85ac71-8e0c-42ee-b680-c3409d6d710b', u'stderr': u'', u'rc': 0}
20190402 11:29:54.817 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:29:54.817 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:54.817 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:29:54.817 - INFO - &{result} = { stdout=ee85ac71-8e0c-42ee-b680-c3409d6d710b | stderr= | rc=0 }
20190402 11:29:54.818 - INFO - +------ END KW: OpenStack.Run OS Command (1384)
20190402 11:29:54.818 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:54.818 - INFO - ${output} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:29:54.818 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 11:29:54.818 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:29:54.818 - INFO - ${splitted_output} = [u'ee85ac71-8e0c-42ee-b680-c3409d6d710b']
20190402 11:29:54.818 - INFO - +------ END KW: String.Split String (0)
20190402 11:29:54.818 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:29:54.819 - INFO - ${net_id} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:29:54.819 - INFO - +------ END KW: Collections.Get From List (1)
20190402 11:29:54.819 - INFO - ${net_id} = ee85ac71-8e0c-42ee-b680-c3409d6d710b
20190402 11:29:54.819 - INFO - +----- END KW: OpenStack.Get Net Id (1388)
20190402 11:29:54.819 - INFO - +----- START KW: OpenStack.Get Snapshot ID [ ${snapshot} ]
20190402 11:29:54.819 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:29:54.819 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:29:54.820 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:29:54.820 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${snapshot}" | awk '{print$2}' ]
20190402 11:29:54.820 - INFO - ${cmd} = openstack volume snapshot list|grep "snap-cirros-2"|awk '{print$2}'
20190402 11:29:54.820 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:29:54.820 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:54.820 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:54.821 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:54.821 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:29:54.821 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:54.821 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|grep "snap-cirros-2"|awk '{print$2}''.
20190402 11:29:56.255 - INFO - Command exited with return code 0.
20190402 11:29:56.256 - INFO - ${stdout} = 657cdc14-4ba9-49c8-86ff-fe2092114844
20190402 11:29:56.256 - INFO - ${stderr} =
20190402 11:29:56.256 - INFO - ${rc} = 0
20190402 11:29:56.256 - INFO - +------- END KW: SSHLibrary.Execute Command (1435)
20190402 11:29:56.256 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:56.257 - INFO - ${res} = {u'stdout': u'657cdc14-4ba9-49c8-86ff-fe2092114844', u'stderr': u'', u'rc': 0}
20190402 11:29:56.257 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:29:56.257 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:56.257 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:29:56.258 - INFO - &{result} = { stdout=657cdc14-4ba9-49c8-86ff-fe2092114844 | stderr= | rc=0 }
20190402 11:29:56.258 - INFO - +------ END KW: OpenStack.Run OS Command (1438)
20190402 11:29:56.258 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:29:56.258 - INFO - ${output} = 657cdc14-4ba9-49c8-86ff-fe2092114844
20190402 11:29:56.258 - INFO - +------ END KW: Collections.Get From Dictionary (0)
20190402 11:29:56.258 - INFO - +------ START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:29:56.259 - INFO - ${splitted_output} = [u'657cdc14-4ba9-49c8-86ff-fe2092114844']
20190402 11:29:56.259 - INFO - +------ END KW: String.Split String (1)
20190402 11:29:56.259 - INFO - +------ START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:29:56.259 - INFO - ${snapshot_id} = 657cdc14-4ba9-49c8-86ff-fe2092114844
20190402 11:29:56.259 - INFO - +------ END KW: Collections.Get From List (0)
20190402 11:29:56.259 - INFO - ${snapshot_id} = 657cdc14-4ba9-49c8-86ff-fe2092114844
20190402 11:29:56.259 - INFO - +----- END KW: OpenStack.Get Snapshot ID (1440)
20190402 11:29:56.259 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server create ]
20190402 11:29:56.259 - INFO - ${openstack_cmd} = openstack server create
20190402 11:29:56.259 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:29:56.260 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=: | ${snapshot_id} | snapshot | ${size} ]
20190402 11:29:56.260 - INFO - ${mapping} = 657cdc14-4ba9-49c8-86ff-fe2092114844:snapshot:20
20190402 11:29:56.260 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:29:56.260 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --flavor ${flavor} | --image ${image} | --nic net-id=${net_id} | --block-device-mapping | vdb=${mapping} | ${vm_name} ]
20190402 11:29:56.260 - INFO - ${cmd} = openstack server create --flavor f1.small --image cirros --nic net-id=ee85ac71-8e0c-42ee-b680-c3409d6d710b --block-device-mapping vdb=657cdc14-4ba9-49c8-86ff-fe2092114844:snapshot:20 vm-cirros-2
20190402 11:29:56.260 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:29:56.260 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:29:56.261 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:56.261 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:56.261 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:29:56.261 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:56.261 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server create --flavor f1.small --image cirros --nic net-id=ee85ac71-8e0c-42ee-b680-c3409d6d710b --block-device-mapping vdb=657cdc14-4ba9-49c8-86ff-fe2092114844:snapshot:20 vm-cirros-2'.
20190402 11:29:58.459 - INFO - Command exited with return code 0.
20190402 11:29:58.460 - INFO - ${stdout} = +-------------------------------------+-------------------------------------------------+
| Field                               | Value                                           |
+-------------------...
20190402 11:29:58.460 - INFO - ${stderr} =
20190402 11:29:58.460 - INFO - ${rc} = 0
20190402 11:29:58.460 - INFO - +------ END KW: SSHLibrary.Execute Command (2199)
20190402 11:29:58.460 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:29:58.460 - INFO - ${res} = {u'stdout': u"+-------------------------------------+-------------------------------------------------+\n| Field                               | Value                                           |\n+---...
20190402 11:29:58.461 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:29:58.461 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:29:58.461 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:29:58.461 - INFO - +----- END KW: OpenStack.Run OS Command (2201)
20190402 11:29:58.461 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:29:58.462 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:29:58.462 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:29:58.463 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:29:58.463 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:29:58.463 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:58.463 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:29:58.463 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:29:58.463 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:29:58.463 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:29:58.464 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:29:58.464 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:29:58.464 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:29:58.464 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:29:58.465 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:00.161 - INFO - Command exited with return code 0.
20190402 11:30:00.161 - INFO - ${stdout} = BUILD
20190402 11:30:00.161 - INFO - ${stderr} =
20190402 11:30:00.162 - INFO - ${rc} = 0
20190402 11:30:00.162 - INFO - +--------- END KW: SSHLibrary.Execute Command (1698)
20190402 11:30:00.162 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:00.162 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:30:00.162 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:30:00.163 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:00.163 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:00.163 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:30:00.163 - INFO - +-------- END KW: OpenStack.Run OS Command (1700)
20190402 11:30:00.163 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:00.163 - INFO - ${value} = BUILD
20190402 11:30:00.164 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:00.164 - INFO - ${current_value} = BUILD
20190402 11:30:00.164 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1702)
20190402 11:30:00.164 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:00.164 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:00.164 - FAIL - BUILD != ACTIVE
20190402 11:30:00.164 - DEBUG - Traceback (most recent call last):
  None
20190402 11:30:00.165 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:00.165 - INFO - +------ END KW: OpenStack.Check Field Value (1703)
20190402 11:30:10.165 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:30:10.167 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:10.168 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:10.168 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:10.168 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:10.169 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:10.169 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:10.170 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:10.170 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:10.171 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:10.172 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:10.172 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:10.173 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:10.174 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:13.912 - INFO - Command exited with return code 0.
20190402 11:30:13.912 - INFO - ${stdout} = BUILD
20190402 11:30:13.912 - INFO - ${stderr} =
20190402 11:30:13.912 - INFO - ${rc} = 0
20190402 11:30:13.912 - INFO - +--------- END KW: SSHLibrary.Execute Command (3740)
20190402 11:30:13.913 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:13.913 - INFO - ${res} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:30:13.913 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:30:13.913 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:13.913 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:13.914 - INFO - ${result} = {u'stdout': u'BUILD', u'stderr': u'', u'rc': 0}
20190402 11:30:13.914 - INFO - +-------- END KW: OpenStack.Run OS Command (3744)
20190402 11:30:13.914 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:13.914 - INFO - ${value} = BUILD
20190402 11:30:13.914 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:30:13.914 - INFO - ${current_value} = BUILD
20190402 11:30:13.914 - INFO - +------- END KW: OpenStack.Retrieve Field Property (3748)
20190402 11:30:13.914 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:13.915 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:13.915 - FAIL - BUILD != ACTIVE
20190402 11:30:13.915 - DEBUG - Traceback (most recent call last):
  None
20190402 11:30:13.915 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:30:13.915 - INFO - +------ END KW: OpenStack.Check Field Value (3750)
20190402 11:30:23.915 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:30:23.916 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:23.916 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:23.917 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:23.917 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:23.917 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:23.917 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:23.917 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:23.917 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:23.918 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:23.918 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:23.918 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:23.918 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:23.918 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:25.549 - INFO - Command exited with return code 0.
20190402 11:30:25.550 - INFO - ${stdout} = ACTIVE
20190402 11:30:25.550 - INFO - ${stderr} =
20190402 11:30:25.550 - INFO - ${rc} = 0
20190402 11:30:25.550 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:30:25.551 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:25.552 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:25.552 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:25.552 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:25.553 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:25.553 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:25.554 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:30:25.554 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:25.555 - INFO - ${value} = ACTIVE
20190402 11:30:25.555 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:25.555 - INFO - ${current_value} = ACTIVE
20190402 11:30:25.556 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 11:30:25.556 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:25.557 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:25.557 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:30:25.557 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 11:30:25.557 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (27096)
20190402 11:30:25.558 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | power_state | Running ]
20190402 11:30:25.559 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | power_state | Running ]
20190402 11:30:25.559 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:25.560 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:25.561 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:25.561 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:25.561 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:25.562 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:30:25.562 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:30:25.562 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:25.563 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:25.564 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:25.564 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:25.564 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:25.565 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:30:27.403 - INFO - Command exited with return code 0.
20190402 11:30:27.403 - INFO - ${stdout} = Running
20190402 11:30:27.403 - INFO - ${stderr} =
20190402 11:30:27.404 - INFO - ${rc} = 0
20190402 11:30:27.404 - INFO - +--------- END KW: SSHLibrary.Execute Command (1840)
20190402 11:30:27.404 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:27.405 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:30:27.405 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:27.406 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:27.406 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:27.406 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:30:27.406 - INFO - +-------- END KW: OpenStack.Run OS Command (1844)
20190402 11:30:27.407 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:27.407 - INFO - ${value} = Running
20190402 11:30:27.407 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:27.407 - INFO - ${current_value} = Running
20190402 11:30:27.407 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1848)
20190402 11:30:27.408 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:27.408 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:27.408 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:30:27.408 - INFO - +------ END KW: OpenStack.Check Field Value (1849)
20190402 11:30:27.408 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1850)
20190402 11:30:27.408 - INFO - +---- END KW: OpenStack.Create Instance From Snapshot (33977)
------------------------------------------------------------------------------
20190402 11:30:27.409 - INFO - +--- END TEST: Launch Instances (100922)
------------------------------------------------------------------------------
20190402 11:30:27.409 - INFO - +--- START TEST: Suspend Resume Instances [ ]
------------------------------------------------------------------------------
20190402 11:30:27.410 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name} ]
20190402 11:30:27.410 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190402 11:30:27.411 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:27.411 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:27.411 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:30:27.411 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:27.412 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-1'.
20190402 11:30:29.145 - INFO - Command exited with return code 0.
20190402 11:30:29.145 - INFO - ${stdout} =
20190402 11:30:29.145 - INFO - ${stderr} =
20190402 11:30:29.145 - INFO - ${rc} = 0
20190402 11:30:29.145 - INFO - +------ END KW: SSHLibrary.Execute Command (1734)
20190402 11:30:29.146 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:29.146 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:29.146 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:30:29.146 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:29.146 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:29.147 - INFO - +----- END KW: OpenStack.Run OS Command (1737)
20190402 11:30:29.147 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SUSPENDED ]
20190402 11:30:29.147 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 11:30:29.147 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:29.148 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:29.148 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:30:29.148 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:29.148 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:29.148 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:29.148 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:29.148 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:29.149 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:29.149 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:29.149 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:29.149 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:29.149 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:30.981 - INFO - Command exited with return code 0.
20190402 11:30:30.981 - INFO - ${stdout} = SUSPENDED
20190402 11:30:30.981 - INFO - ${stderr} =
20190402 11:30:30.981 - INFO - ${rc} = 0
20190402 11:30:30.982 - INFO - +--------- END KW: SSHLibrary.Execute Command (1833)
20190402 11:30:30.982 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:30.982 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:30:30.983 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:30.983 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:30.983 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:30.983 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:30:30.983 - INFO - +-------- END KW: OpenStack.Run OS Command (1835)
20190402 11:30:30.984 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:30.984 - INFO - ${value} = SUSPENDED
20190402 11:30:30.984 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:30:30.984 - INFO - ${current_value} = SUSPENDED
20190402 11:30:30.984 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1837)
20190402 11:30:30.985 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:30.985 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:30.985 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:30.985 - INFO - +------ END KW: OpenStack.Check Field Value (1838)
20190402 11:30:30.985 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1838)
20190402 11:30:30.986 - INFO - +---- END KW: OpenStack.Suspend Instance (3575)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:30.986 - INFO - +---- START KW: OpenStack.Resume Instance [ ${cirros_instance_name} ]
20190402 11:30:30.987 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resume ${vm_name} | True | 30 sec ]
20190402 11:30:30.987 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:30.988 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:30.988 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:30:30.988 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:30.989 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resume vm-cirros-1'.
20190402 11:30:32.871 - INFO - Command exited with return code 0.
20190402 11:30:32.871 - INFO - ${stdout} =
20190402 11:30:32.871 - INFO - ${stderr} =
20190402 11:30:32.871 - INFO - ${rc} = 0
20190402 11:30:32.872 - INFO - +------ END KW: SSHLibrary.Execute Command (1884)
20190402 11:30:32.872 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:32.873 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:32.873 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:32.873 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:32.874 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:32.874 - INFO - +----- END KW: OpenStack.Run OS Command (1887)
20190402 11:30:32.874 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:30:32.875 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:30:32.875 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:32.876 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:32.876 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:30:32.876 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:32.876 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:32.877 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:32.877 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:30:32.877 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:32.877 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:32.877 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:32.877 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:32.877 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:32.878 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:34.559 - INFO - Command exited with return code 0.
20190402 11:30:34.559 - INFO - ${stdout} = ACTIVE
20190402 11:30:34.559 - INFO - ${stderr} =
20190402 11:30:34.560 - INFO - ${rc} = 0
20190402 11:30:34.560 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:30:34.560 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:34.561 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:34.561 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:34.561 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:34.562 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:34.562 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:34.563 - INFO - +-------- END KW: OpenStack.Run OS Command (1686)
20190402 11:30:34.563 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:34.563 - INFO - ${value} = ACTIVE
20190402 11:30:34.564 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:30:34.564 - INFO - ${current_value} = ACTIVE
20190402 11:30:34.564 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1689)
20190402 11:30:34.564 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:34.565 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:34.565 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:30:34.565 - INFO - +------ END KW: OpenStack.Check Field Value (1690)
20190402 11:30:34.565 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1691)
20190402 11:30:34.566 - INFO - +---- END KW: OpenStack.Resume Instance (3580)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:34.566 - INFO - +---- START KW: OpenStack.Suspend Instance [ ${cirros_instance_name_2} ]
20190402 11:30:34.567 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server suspend ${vm_name} | True | 30 sec ]
20190402 11:30:34.568 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:34.568 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:34.568 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:30:34.568 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:34.569 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server suspend vm-cirros-2'.
20190402 11:30:36.451 - INFO - Command exited with return code 0.
20190402 11:30:36.452 - INFO - ${stdout} =
20190402 11:30:36.452 - INFO - ${stderr} =
20190402 11:30:36.452 - INFO - ${rc} = 0
20190402 11:30:36.452 - INFO - +------ END KW: SSHLibrary.Execute Command (1884)
20190402 11:30:36.452 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:36.452 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:36.452 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:30:36.453 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:36.453 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:36.453 - INFO - +----- END KW: OpenStack.Run OS Command (1886)
20190402 11:30:36.453 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SUSPENDED ]
20190402 11:30:36.454 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SUSPENDED ]
20190402 11:30:36.454 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:36.454 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:36.455 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:36.455 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:36.455 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:36.455 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:36.455 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:36.455 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:36.456 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:36.456 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:36.456 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:36.456 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:36.457 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:38.088 - INFO - Command exited with return code 0.
20190402 11:30:38.088 - INFO - ${stdout} = SUSPENDED
20190402 11:30:38.088 - INFO - ${stderr} =
20190402 11:30:38.088 - INFO - ${rc} = 0
20190402 11:30:38.089 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:30:38.089 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:38.090 - INFO - ${res} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:30:38.090 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:38.091 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:38.091 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:38.092 - INFO - ${result} = {u'stdout': u'SUSPENDED', u'stderr': u'', u'rc': 0}
20190402 11:30:38.092 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:30:38.092 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:38.093 - INFO - ${value} = SUSPENDED
20190402 11:30:38.093 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:38.094 - INFO - ${current_value} = SUSPENDED
20190402 11:30:38.094 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:30:38.094 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:38.095 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:38.095 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:30:38.095 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 11:30:38.095 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1642)
20190402 11:30:38.096 - INFO - +---- END KW: OpenStack.Suspend Instance (3530)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:38.096 - INFO - +---- START KW: OpenStack.Resume Instance [ ${cirros_instance_name_2} ]
20190402 11:30:38.097 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resume ${vm_name} | True | 30 sec ]
20190402 11:30:38.098 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:38.098 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:38.098 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:30:38.099 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:38.100 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resume vm-cirros-2'.
20190402 11:30:40.000 - INFO - Command exited with return code 0.
20190402 11:30:40.000 - INFO - ${stdout} =
20190402 11:30:40.000 - INFO - ${stderr} =
20190402 11:30:40.000 - INFO - ${rc} = 0
20190402 11:30:40.000 - INFO - +------ END KW: SSHLibrary.Execute Command (1901)
20190402 11:30:40.000 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:40.001 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:40.001 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:40.001 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:40.001 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:40.001 - INFO - +----- END KW: OpenStack.Run OS Command (1904)
20190402 11:30:40.001 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:30:40.002 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:30:40.002 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:40.003 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:40.003 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:40.003 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:40.003 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:40.003 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:40.003 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:40.003 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:40.004 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:40.004 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:40.004 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:40.004 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:40.005 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:41.744 - INFO - Command exited with return code 0.
20190402 11:30:41.744 - INFO - ${stdout} = ACTIVE
20190402 11:30:41.744 - INFO - ${stderr} =
20190402 11:30:41.744 - INFO - ${rc} = 0
20190402 11:30:41.744 - INFO - +--------- END KW: SSHLibrary.Execute Command (1740)
20190402 11:30:41.745 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:41.746 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:41.746 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:41.746 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:41.747 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:41.747 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:41.747 - INFO - +-------- END KW: OpenStack.Run OS Command (1744)
20190402 11:30:41.748 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:41.748 - INFO - ${value} = ACTIVE
20190402 11:30:41.748 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:30:41.749 - INFO - ${current_value} = ACTIVE
20190402 11:30:41.749 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1747)
20190402 11:30:41.749 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:41.750 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:41.750 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:30:41.750 - INFO - +------ END KW: OpenStack.Check Field Value (1748)
20190402 11:30:41.750 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1749)
20190402 11:30:41.751 - INFO - +---- END KW: OpenStack.Resume Instance (3654)
------------------------------------------------------------------------------
20190402 11:30:41.751 - INFO - +--- END TEST: Suspend Resume Instances (14342)
------------------------------------------------------------------------------
20190402 11:30:41.752 - INFO - +--- START TEST: Set Error Active Flags Instances [ ]
------------------------------------------------------------------------------
20190402 11:30:41.752 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name} | error ]
20190402 11:30:41.753 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:30:41.754 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:41.755 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:41.755 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:30:41.756 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:41.756 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-1'.
20190402 11:30:43.438 - INFO - Command exited with return code 0.
20190402 11:30:43.438 - INFO - ${stdout} =
20190402 11:30:43.439 - INFO - ${stderr} =
20190402 11:30:43.439 - INFO - ${rc} = 0
20190402 11:30:43.439 - INFO - +------ END KW: SSHLibrary.Execute Command (1683)
20190402 11:30:43.439 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:43.440 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:43.440 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:43.440 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:43.441 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:43.441 - INFO - +----- END KW: OpenStack.Run OS Command (1688)
20190402 11:30:43.441 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ERROR ]
20190402 11:30:43.442 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ERROR ]
20190402 11:30:43.442 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:43.443 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:43.443 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:30:43.443 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:43.443 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:43.444 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:43.444 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:30:43.444 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:43.445 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:43.445 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:43.445 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:43.445 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:43.446 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:45.077 - INFO - Command exited with return code 0.
20190402 11:30:45.077 - INFO - ${stdout} = ERROR
20190402 11:30:45.077 - INFO - ${stderr} =
20190402 11:30:45.077 - INFO - ${rc} = 0
20190402 11:30:45.077 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:30:45.077 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:45.078 - INFO - ${res} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:30:45.078 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:45.078 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:45.078 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:45.078 - INFO - ${result} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:30:45.078 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 11:30:45.079 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:45.079 - INFO - ${value} = ERROR
20190402 11:30:45.079 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:30:45.079 - INFO - ${current_value} = ERROR
20190402 11:30:45.079 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 11:30:45.079 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:45.079 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:45.079 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:45.080 - INFO - +------ END KW: OpenStack.Check Field Value (1638)
20190402 11:30:45.080 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1639)
20190402 11:30:45.080 - INFO - +---- END KW: OpenStack.Set Error State Instance (3328)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:45.080 - INFO - +---- START KW: OpenStack.Set Active State Instance [ ${cirros_instance_name} | active ]
20190402 11:30:45.080 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:30:45.081 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:45.081 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:45.081 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:30:45.081 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:45.081 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state active vm-cirros-1'.
20190402 11:30:46.994 - INFO - Command exited with return code 0.
20190402 11:30:46.994 - INFO - ${stdout} =
20190402 11:30:46.994 - INFO - ${stderr} =
20190402 11:30:46.994 - INFO - ${rc} = 0
20190402 11:30:46.994 - INFO - +------ END KW: SSHLibrary.Execute Command (1913)
20190402 11:30:46.994 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:46.995 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:46.995 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:46.995 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:46.995 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:46.995 - INFO - +----- END KW: OpenStack.Run OS Command (1915)
20190402 11:30:46.995 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:30:46.996 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:30:46.996 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:46.996 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:46.997 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:30:46.997 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:46.997 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:46.997 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:46.997 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:46.997 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:46.998 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:46.998 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:46.998 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:46.998 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:46.998 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:48.630 - INFO - Command exited with return code 0.
20190402 11:30:48.630 - INFO - ${stdout} = ACTIVE
20190402 11:30:48.630 - INFO - ${stderr} =
20190402 11:30:48.630 - INFO - ${rc} = 0
20190402 11:30:48.630 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:30:48.630 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:48.631 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:48.631 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:48.631 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:48.631 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:48.631 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:48.631 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 11:30:48.631 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:48.632 - INFO - ${value} = ACTIVE
20190402 11:30:48.632 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:48.632 - INFO - ${current_value} = ACTIVE
20190402 11:30:48.632 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1636)
20190402 11:30:48.632 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:48.632 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:48.632 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:48.632 - INFO - +------ END KW: OpenStack.Check Field Value (1636)
20190402 11:30:48.633 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1638)
20190402 11:30:48.633 - INFO - +---- END KW: OpenStack.Set Active State Instance (3553)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:48.633 - INFO - +---- START KW: OpenStack.Set Error State Instance [ ${cirros_instance_name_2} | error ]
20190402 11:30:48.633 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:30:48.633 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:48.634 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:48.634 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:30:48.634 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:48.634 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state error vm-cirros-2'.
20190402 11:30:50.378 - INFO - Command exited with return code 0.
20190402 11:30:50.378 - INFO - ${stdout} =
20190402 11:30:50.379 - INFO - ${stderr} =
20190402 11:30:50.379 - INFO - ${rc} = 0
20190402 11:30:50.379 - INFO - +------ END KW: SSHLibrary.Execute Command (1745)
20190402 11:30:50.379 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:50.380 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:50.381 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:30:50.381 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:50.382 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:50.382 - INFO - +----- END KW: OpenStack.Run OS Command (1749)
20190402 11:30:50.382 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ERROR ]
20190402 11:30:50.383 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ERROR ]
20190402 11:30:50.384 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:50.385 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:50.386 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:50.386 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:50.386 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:50.387 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:50.387 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:30:50.387 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:50.388 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:50.389 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:50.389 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:50.389 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:50.390 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:52.022 - INFO - Command exited with return code 0.
20190402 11:30:52.022 - INFO - ${stdout} = ERROR
20190402 11:30:52.023 - INFO - ${stderr} =
20190402 11:30:52.023 - INFO - ${rc} = 0
20190402 11:30:52.023 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:30:52.023 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:52.023 - INFO - ${res} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:30:52.023 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:30:52.024 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:52.024 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:52.024 - INFO - ${result} = {u'stdout': u'ERROR', u'stderr': u'', u'rc': 0}
20190402 11:30:52.024 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:30:52.024 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:52.025 - INFO - ${value} = ERROR
20190402 11:30:52.025 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:52.026 - INFO - ${current_value} = ERROR
20190402 11:30:52.026 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1642)
20190402 11:30:52.026 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:52.026 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:52.026 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:52.026 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 11:30:52.026 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1644)
20190402 11:30:52.027 - INFO - +---- END KW: OpenStack.Set Error State Instance (3393)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:52.027 - INFO - +---- START KW: OpenStack.Set Active State Instance [ ${cirros_instance_name_2} | active ]
20190402 11:30:52.027 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set --state ${value} ${vm_name} | True | 30 sec ]
20190402 11:30:52.027 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:52.028 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:52.028 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:30:52.028 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:52.028 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --state active vm-cirros-2'.
20190402 11:30:53.741 - INFO - Command exited with return code 0.
20190402 11:30:53.741 - INFO - ${stdout} =
20190402 11:30:53.741 - INFO - ${stderr} =
20190402 11:30:53.741 - INFO - ${rc} = 0
20190402 11:30:53.741 - INFO - +------ END KW: SSHLibrary.Execute Command (1713)
20190402 11:30:53.742 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:53.742 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:53.742 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:30:53.743 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:53.743 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:53.743 - INFO - +----- END KW: OpenStack.Run OS Command (1716)
20190402 11:30:53.744 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:30:53.744 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:30:53.745 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:53.746 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:53.746 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:30:53.746 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:53.746 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:53.747 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:53.747 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:30:53.747 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:53.748 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:53.748 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:53.748 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:30:53.748 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:53.749 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:55.412 - INFO - Command exited with return code 0.
20190402 11:30:55.412 - INFO - ${stdout} = ACTIVE
20190402 11:30:55.412 - INFO - ${stderr} =
20190402 11:30:55.412 - INFO - ${rc} = 0
20190402 11:30:55.412 - INFO - +--------- END KW: SSHLibrary.Execute Command (1664)
20190402 11:30:55.412 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:55.413 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:55.413 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:55.413 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:55.413 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:55.413 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:30:55.413 - INFO - +-------- END KW: OpenStack.Run OS Command (1666)
20190402 11:30:55.413 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:55.414 - INFO - ${value} = ACTIVE
20190402 11:30:55.414 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:55.414 - INFO - ${current_value} = ACTIVE
20190402 11:30:55.414 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1669)
20190402 11:30:55.414 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:55.414 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:55.414 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:55.414 - INFO - +------ END KW: OpenStack.Check Field Value (1670)
20190402 11:30:55.414 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1670)
20190402 11:30:55.415 - INFO - +---- END KW: OpenStack.Set Active State Instance (3388)
------------------------------------------------------------------------------
20190402 11:30:55.415 - INFO - +--- END TEST: Set Error Active Flags Instances (13664)
------------------------------------------------------------------------------
20190402 11:30:55.415 - INFO - +--- START TEST: Pause Unpause Instances [ ]
------------------------------------------------------------------------------
20190402 11:30:55.415 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name} ]
20190402 11:30:55.416 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190402 11:30:55.416 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:55.416 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:55.416 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:30:55.416 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:55.417 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-1'.
20190402 11:30:57.198 - INFO - Command exited with return code 0.
20190402 11:30:57.199 - INFO - ${stdout} =
20190402 11:30:57.199 - INFO - ${stderr} =
20190402 11:30:57.199 - INFO - ${rc} = 0
20190402 11:30:57.199 - INFO - +------ END KW: SSHLibrary.Execute Command (1783)
20190402 11:30:57.200 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:57.202 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:30:57.202 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:30:57.202 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:57.203 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:30:57.204 - INFO - +----- END KW: OpenStack.Run OS Command (1787)
20190402 11:30:57.204 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | PAUSED ]
20190402 11:30:57.205 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | PAUSED ]
20190402 11:30:57.206 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:30:57.207 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:30:57.208 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:30:57.208 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:57.208 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:30:57.208 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:30:57.208 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:30:57.208 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:30:57.208 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:57.209 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:57.209 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:30:57.209 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:57.209 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:30:58.861 - INFO - Command exited with return code 0.
20190402 11:30:58.861 - INFO - ${stdout} = PAUSED
20190402 11:30:58.861 - INFO - ${stderr} =
20190402 11:30:58.861 - INFO - ${rc} = 0
20190402 11:30:58.861 - INFO - +--------- END KW: SSHLibrary.Execute Command (1652)
20190402 11:30:58.861 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:30:58.862 - INFO - ${res} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:30:58.862 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:30:58.862 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:30:58.862 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:30:58.862 - INFO - ${result} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:30:58.862 - INFO - +-------- END KW: OpenStack.Run OS Command (1654)
20190402 11:30:58.863 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:30:58.863 - INFO - ${value} = PAUSED
20190402 11:30:58.863 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:30:58.863 - INFO - ${current_value} = PAUSED
20190402 11:30:58.863 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1657)
20190402 11:30:58.863 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:30:58.863 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:30:58.863 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:30:58.863 - INFO - +------ END KW: OpenStack.Check Field Value (1658)
20190402 11:30:58.864 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1659)
20190402 11:30:58.864 - INFO - +---- END KW: OpenStack.Pause Instance (3449)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:30:58.864 - INFO - +---- START KW: OpenStack.Pause Instance [ ${cirros_instance_name_2} ]
20190402 11:30:58.864 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server pause ${vm_name} | True | 30 sec ]
20190402 11:30:58.864 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:30:58.864 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:30:58.865 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:30:58.865 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:30:58.865 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server pause vm-cirros-2'.
20190402 11:31:00.946 - INFO - Command exited with return code 0.
20190402 11:31:00.947 - INFO - ${stdout} =
20190402 11:31:00.947 - INFO - ${stderr} =
20190402 11:31:00.947 - INFO - ${rc} = 0
20190402 11:31:00.947 - INFO - +------ END KW: SSHLibrary.Execute Command (2082)
20190402 11:31:00.947 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:00.948 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:31:00.949 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:00.949 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:00.949 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:31:00.950 - INFO - +----- END KW: OpenStack.Run OS Command (2086)
20190402 11:31:00.950 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | PAUSED ]
20190402 11:31:00.951 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | PAUSED ]
20190402 11:31:00.952 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:00.952 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:00.953 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:31:00.953 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:00.953 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:00.954 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:00.954 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:31:00.954 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:00.956 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:00.956 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:00.957 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:00.957 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:00.958 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:02.590 - INFO - Command exited with return code 0.
20190402 11:31:02.590 - INFO - ${stdout} = PAUSED
20190402 11:31:02.590 - INFO - ${stderr} =
20190402 11:31:02.590 - INFO - ${rc} = 0
20190402 11:31:02.590 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:31:02.591 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:02.591 - INFO - ${res} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:31:02.591 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:31:02.592 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:02.592 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:31:02.592 - INFO - ${result} = {u'stdout': u'PAUSED', u'stderr': u'', u'rc': 0}
20190402 11:31:02.592 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:31:02.592 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:02.593 - INFO - ${value} = PAUSED
20190402 11:31:02.593 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:31:02.593 - INFO - ${current_value} = PAUSED
20190402 11:31:02.593 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1641)
20190402 11:31:02.593 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:02.594 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:02.594 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:02.594 - INFO - +------ END KW: OpenStack.Check Field Value (1643)
20190402 11:31:02.594 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1644)
20190402 11:31:02.594 - INFO - +---- END KW: OpenStack.Pause Instance (3730)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:31:02.594 - INFO - +---- START KW: OpenStack.Unpause Instance [ ${cirros_instance_name} ]
20190402 11:31:02.595 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unpause ${vm_name} | True | 30 sec ]
20190402 11:31:02.595 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:02.595 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:02.595 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:31:02.596 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:02.596 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unpause vm-cirros-1'.
20190402 11:31:04.327 - INFO - Command exited with return code 0.
20190402 11:31:04.327 - INFO - ${stdout} =
20190402 11:31:04.328 - INFO - ${stderr} =
20190402 11:31:04.328 - INFO - ${rc} = 0
20190402 11:31:04.328 - INFO - +------ END KW: SSHLibrary.Execute Command (1732)
20190402 11:31:04.328 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:04.329 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:31:04.329 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:04.330 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:04.330 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:04.330 - INFO - +----- END KW: OpenStack.Run OS Command (1735)
20190402 11:31:04.331 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:31:04.331 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:31:04.332 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:04.333 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:04.333 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:31:04.333 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:04.333 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:04.333 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:04.333 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:31:04.333 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:04.334 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:04.334 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:04.334 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:04.334 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:04.334 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:06.115 - INFO - Command exited with return code 0.
20190402 11:31:06.116 - INFO - ${stdout} = ACTIVE
20190402 11:31:06.116 - INFO - ${stderr} =
20190402 11:31:06.116 - INFO - ${rc} = 0
20190402 11:31:06.116 - INFO - +--------- END KW: SSHLibrary.Execute Command (1782)
20190402 11:31:06.117 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:06.118 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:06.118 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:06.118 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:06.119 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:06.120 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:06.120 - INFO - +-------- END KW: OpenStack.Run OS Command (1787)
20190402 11:31:06.120 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:06.121 - INFO - ${value} = ACTIVE
20190402 11:31:06.121 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:31:06.122 - INFO - ${current_value} = ACTIVE
20190402 11:31:06.122 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1790)
20190402 11:31:06.122 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:06.123 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:06.123 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:06.123 - INFO - +------ END KW: OpenStack.Check Field Value (1792)
20190402 11:31:06.124 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1793)
20190402 11:31:06.124 - INFO - +---- END KW: OpenStack.Unpause Instance (3530)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:31:06.124 - INFO - +---- START KW: OpenStack.Unpause Instance [ ${cirros_instance_name_2} ]
20190402 11:31:06.125 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unpause ${vm_name} | True | 30 sec ]
20190402 11:31:06.126 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:06.126 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:06.126 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:31:06.127 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:06.127 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unpause vm-cirros-2'.
20190402 11:31:07.810 - INFO - Command exited with return code 0.
20190402 11:31:07.811 - INFO - ${stdout} =
20190402 11:31:07.811 - INFO - ${stderr} =
20190402 11:31:07.811 - INFO - ${rc} = 0
20190402 11:31:07.811 - INFO - +------ END KW: SSHLibrary.Execute Command (1684)
20190402 11:31:07.811 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:07.811 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:31:07.811 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:31:07.811 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:07.812 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:07.812 - INFO - +----- END KW: OpenStack.Run OS Command (1687)
20190402 11:31:07.812 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:31:07.812 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:31:07.813 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:07.813 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:07.813 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:31:07.813 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:07.813 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:07.814 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:07.814 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:31:07.814 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:07.814 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:07.814 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:07.814 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:07.814 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:07.815 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:09.612 - INFO - Command exited with return code 0.
20190402 11:31:09.612 - INFO - ${stdout} = ACTIVE
20190402 11:31:09.612 - INFO - ${stderr} =
20190402 11:31:09.612 - INFO - ${rc} = 0
20190402 11:31:09.612 - INFO - +--------- END KW: SSHLibrary.Execute Command (1798)
20190402 11:31:09.612 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:09.613 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:09.613 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:09.613 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:09.613 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:31:09.613 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:09.614 - INFO - +-------- END KW: OpenStack.Run OS Command (1800)
20190402 11:31:09.614 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:09.614 - INFO - ${value} = ACTIVE
20190402 11:31:09.614 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:31:09.614 - INFO - ${current_value} = ACTIVE
20190402 11:31:09.614 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1801)
20190402 11:31:09.614 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:09.614 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:09.615 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:09.615 - INFO - +------ END KW: OpenStack.Check Field Value (1803)
20190402 11:31:09.615 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1803)
20190402 11:31:09.615 - INFO - +---- END KW: OpenStack.Unpause Instance (3491)
------------------------------------------------------------------------------
20190402 11:31:09.615 - INFO - +--- END TEST: Pause Unpause Instances (14200)
------------------------------------------------------------------------------
20190402 11:31:09.615 - INFO - +--- START TEST: Stop Start Instances [ ]
------------------------------------------------------------------------------
20190402 11:31:09.616 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name} ]
20190402 11:31:09.616 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190402 11:31:09.616 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:09.616 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:09.616 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:31:09.617 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:09.617 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-1'.
20190402 11:31:11.348 - INFO - Command exited with return code 0.
20190402 11:31:11.349 - INFO - ${stdout} =
20190402 11:31:11.349 - INFO - ${stderr} =
20190402 11:31:11.349 - INFO - ${rc} = 0
20190402 11:31:11.350 - INFO - +------ END KW: SSHLibrary.Execute Command (1732)
20190402 11:31:11.350 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:11.351 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:31:11.351 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:11.352 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:11.352 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:31:11.353 - INFO - +----- END KW: OpenStack.Run OS Command (1737)
20190402 11:31:11.353 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SHUTOFF ]
20190402 11:31:11.354 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:31:11.355 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:11.356 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:11.357 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:31:11.357 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:11.357 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:11.358 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:11.358 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:31:11.358 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:11.359 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:11.360 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:11.360 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:11.360 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:11.361 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:12.943 - INFO - Command exited with return code 0.
20190402 11:31:12.944 - INFO - ${stdout} = ACTIVE
20190402 11:31:12.944 - INFO - ${stderr} =
20190402 11:31:12.944 - INFO - ${rc} = 0
20190402 11:31:12.944 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:31:12.945 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:12.946 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:12.946 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:12.946 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:12.947 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:12.947 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:12.948 - INFO - +-------- END KW: OpenStack.Run OS Command (1590)
20190402 11:31:12.948 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:12.949 - INFO - ${value} = ACTIVE
20190402 11:31:12.949 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:31:12.949 - INFO - ${current_value} = ACTIVE
20190402 11:31:12.949 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1594)
20190402 11:31:12.950 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:12.950 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:12.951 - FAIL - ACTIVE != SHUTOFF
20190402 11:31:12.951 - DEBUG - Traceback (most recent call last):
  None
20190402 11:31:12.951 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:12.952 - INFO - +------ END KW: OpenStack.Check Field Value (1597)
20190402 11:31:22.952 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:31:22.954 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:22.955 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:22.956 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:31:22.956 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:22.956 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:22.957 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:22.957 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:31:22.957 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:22.958 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:22.959 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:22.959 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:22.959 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:22.960 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:24.594 - INFO - Command exited with return code 0.
20190402 11:31:24.594 - INFO - ${stdout} = ACTIVE
20190402 11:31:24.594 - INFO - ${stderr} =
20190402 11:31:24.594 - INFO - ${rc} = 0
20190402 11:31:24.595 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:31:24.595 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:24.596 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:24.596 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:24.596 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:24.597 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:24.597 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:24.597 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 11:31:24.598 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:24.598 - INFO - ${value} = ACTIVE
20190402 11:31:24.598 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:31:24.599 - INFO - ${current_value} = ACTIVE
20190402 11:31:24.599 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:31:24.599 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:24.600 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:24.600 - FAIL - ACTIVE != SHUTOFF
20190402 11:31:24.600 - DEBUG - Traceback (most recent call last):
  None
20190402 11:31:24.600 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:24.601 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 11:31:34.601 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:31:34.602 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:34.602 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:34.602 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:31:34.602 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:34.602 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:34.603 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:34.603 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:31:34.603 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:34.604 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:34.604 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:34.604 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:34.604 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:34.604 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:37.093 - INFO - Command exited with return code 0.
20190402 11:31:37.093 - INFO - ${stdout} = ACTIVE
20190402 11:31:37.093 - INFO - ${stderr} =
20190402 11:31:37.093 - INFO - ${rc} = 0
20190402 11:31:37.093 - INFO - +--------- END KW: SSHLibrary.Execute Command (2489)
20190402 11:31:37.094 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:37.095 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:37.095 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:31:37.095 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:37.096 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:37.096 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:37.096 - INFO - +-------- END KW: OpenStack.Run OS Command (2493)
20190402 11:31:37.097 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:37.097 - INFO - ${value} = ACTIVE
20190402 11:31:37.097 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:31:37.098 - INFO - ${current_value} = ACTIVE
20190402 11:31:37.098 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2497)
20190402 11:31:37.098 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:37.099 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:37.099 - FAIL - ACTIVE != SHUTOFF
20190402 11:31:37.099 - DEBUG - Traceback (most recent call last):
  None
20190402 11:31:37.099 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:37.100 - INFO - +------ END KW: OpenStack.Check Field Value (2498)
20190402 11:31:47.100 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:31:47.101 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:47.101 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:47.101 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:31:47.102 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:47.102 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:47.102 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:47.102 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:31:47.102 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:47.103 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:47.103 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:47.103 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:31:47.103 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:47.104 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:31:49.236 - INFO - Command exited with return code 0.
20190402 11:31:49.236 - INFO - ${stdout} = ACTIVE
20190402 11:31:49.237 - INFO - ${stderr} =
20190402 11:31:49.237 - INFO - ${rc} = 0
20190402 11:31:49.237 - INFO - +--------- END KW: SSHLibrary.Execute Command (2134)
20190402 11:31:49.237 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:31:49.238 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:49.239 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:31:49.239 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:31:49.240 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:31:49.240 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:31:49.240 - INFO - +-------- END KW: OpenStack.Run OS Command (2138)
20190402 11:31:49.241 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:31:49.241 - INFO - ${value} = ACTIVE
20190402 11:31:49.241 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:31:49.242 - INFO - ${current_value} = ACTIVE
20190402 11:31:49.242 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2141)
20190402 11:31:49.242 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:31:49.243 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:31:49.243 - FAIL - ACTIVE != SHUTOFF
20190402 11:31:49.243 - DEBUG - Traceback (most recent call last):
  None
20190402 11:31:49.243 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:31:49.244 - INFO - +------ END KW: OpenStack.Check Field Value (2144)
20190402 11:31:59.244 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:31:59.245 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:31:59.246 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:31:59.247 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:31:59.247 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:59.247 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:31:59.248 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:31:59.248 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:31:59.248 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:31:59.249 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:31:59.250 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:31:59.250 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:31:59.250 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:31:59.251 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:32:01.283 - INFO - Command exited with return code 0.
20190402 11:32:01.284 - INFO - ${stdout} = ACTIVE
20190402 11:32:01.284 - INFO - ${stderr} =
20190402 11:32:01.284 - INFO - ${rc} = 0
20190402 11:32:01.284 - INFO - +--------- END KW: SSHLibrary.Execute Command (2034)
20190402 11:32:01.284 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:01.285 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:01.285 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:32:01.285 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:01.286 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:32:01.286 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:01.286 - INFO - +-------- END KW: OpenStack.Run OS Command (2038)
20190402 11:32:01.286 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:32:01.286 - INFO - ${value} = ACTIVE
20190402 11:32:01.286 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:32:01.287 - INFO - ${current_value} = ACTIVE
20190402 11:32:01.287 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2042)
20190402 11:32:01.287 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:32:01.287 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:32:01.287 - FAIL - ACTIVE != SHUTOFF
20190402 11:32:01.288 - DEBUG - Traceback (most recent call last):
  None
20190402 11:32:01.288 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:32:01.288 - INFO - +------ END KW: OpenStack.Check Field Value (2044)
20190402 11:32:11.289 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:32:11.290 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:32:11.291 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:32:11.291 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:32:11.292 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:32:11.292 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:32:11.293 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:32:11.293 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:32:11.293 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:32:11.294 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:32:11.295 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:32:11.295 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:32:11.295 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:32:11.296 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:32:13.079 - INFO - Command exited with return code 0.
20190402 11:32:13.080 - INFO - ${stdout} = SHUTOFF
20190402 11:32:13.080 - INFO - ${stderr} =
20190402 11:32:13.080 - INFO - ${rc} = 0
20190402 11:32:13.080 - INFO - +--------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:32:13.081 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:13.082 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:32:13.082 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:32:13.083 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:13.084 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:32:13.084 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:32:13.084 - INFO - +-------- END KW: OpenStack.Run OS Command (1791)
20190402 11:32:13.085 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:32:13.086 - INFO - ${value} = SHUTOFF
20190402 11:32:13.086 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:32:13.086 - INFO - ${current_value} = SHUTOFF
20190402 11:32:13.087 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1796)
20190402 11:32:13.087 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:32:13.088 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:32:13.088 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:32:13.088 - INFO - +------ END KW: OpenStack.Check Field Value (1800)
20190402 11:32:13.088 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (61735)
20190402 11:32:13.089 - INFO - +---- END KW: OpenStack.Stop Instance (63473)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:32:13.089 - INFO - +---- START KW: OpenStack.Stop Instance [ ${cirros_instance_name_2} ]
20190402 11:32:13.090 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server stop ${vm_name} | True | 30 sec ]
20190402 11:32:13.091 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:32:13.092 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:32:13.092 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:32:13.092 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:32:13.093 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server stop vm-cirros-2'.
20190402 11:32:15.127 - INFO - Command exited with return code 0.
20190402 11:32:15.127 - INFO - ${stdout} =
20190402 11:32:15.127 - INFO - ${stderr} =
20190402 11:32:15.127 - INFO - ${rc} = 0
20190402 11:32:15.128 - INFO - +------ END KW: SSHLibrary.Execute Command (2035)
20190402 11:32:15.128 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:15.128 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:32:15.129 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:32:15.129 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:15.129 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:32:15.129 - INFO - +----- END KW: OpenStack.Run OS Command (2039)
20190402 11:32:15.130 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | SHUTOFF ]
20190402 11:32:15.130 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:32:15.130 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:32:15.131 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:32:15.131 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:32:15.131 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:32:15.132 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:32:15.132 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:32:15.132 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:32:15.132 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:32:15.133 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:32:15.133 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:32:15.133 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:32:15.133 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:32:15.134 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:32:16.764 - INFO - Command exited with return code 0.
20190402 11:32:16.765 - INFO - ${stdout} = ACTIVE
20190402 11:32:16.765 - INFO - ${stderr} =
20190402 11:32:16.765 - INFO - ${rc} = 0
20190402 11:32:16.766 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:32:16.766 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:16.767 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:16.768 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:32:16.768 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:16.769 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:32:16.769 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:16.769 - INFO - +-------- END KW: OpenStack.Run OS Command (1637)
20190402 11:32:16.769 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:32:16.770 - INFO - ${value} = ACTIVE
20190402 11:32:16.770 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:32:16.771 - INFO - ${current_value} = ACTIVE
20190402 11:32:16.771 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1641)
20190402 11:32:16.771 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:32:16.772 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:32:16.772 - FAIL - ACTIVE != SHUTOFF
20190402 11:32:16.772 - DEBUG - Traceback (most recent call last):
  None
20190402 11:32:16.772 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:32:16.772 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 11:32:26.773 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:32:26.775 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:32:26.777 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:32:26.777 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:32:26.778 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:32:26.778 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:32:26.779 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:32:26.779 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:32:26.780 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:32:26.781 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:32:26.781 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:32:26.782 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:32:26.782 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:32:26.783 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:32:28.415 - INFO - Command exited with return code 0.
20190402 11:32:28.416 - INFO - ${stdout} = ACTIVE
20190402 11:32:28.416 - INFO - ${stderr} =
20190402 11:32:28.416 - INFO - ${rc} = 0
20190402 11:32:28.417 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:32:28.417 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:28.419 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:28.419 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:32:28.420 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:28.420 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:32:28.421 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:28.421 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:32:28.422 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:32:28.422 - INFO - ${value} = ACTIVE
20190402 11:32:28.422 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:32:28.423 - INFO - ${current_value} = ACTIVE
20190402 11:32:28.423 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1648)
20190402 11:32:28.424 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:32:28.424 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:32:28.425 - FAIL - ACTIVE != SHUTOFF
20190402 11:32:28.425 - DEBUG - Traceback (most recent call last):
  None
20190402 11:32:28.425 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:32:28.425 - INFO - +------ END KW: OpenStack.Check Field Value (1652)
20190402 11:32:38.426 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:32:38.427 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:32:38.428 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:32:38.429 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:32:38.429 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:32:38.429 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:32:38.430 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:32:38.430 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:32:38.431 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:32:38.432 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:32:38.432 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:32:38.432 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:32:38.433 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:32:38.434 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:32:40.117 - INFO - Command exited with return code 0.
20190402 11:32:40.117 - INFO - ${stdout} = ACTIVE
20190402 11:32:40.118 - INFO - ${stderr} =
20190402 11:32:40.118 - INFO - ${rc} = 0
20190402 11:32:40.119 - INFO - +--------- END KW: SSHLibrary.Execute Command (1685)
20190402 11:32:40.120 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:40.122 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:40.123 - INFO - +--------- END KW: BuiltIn.Create Dictionary (4)
20190402 11:32:40.123 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:40.124 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:32:40.124 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:40.125 - INFO - +-------- END KW: OpenStack.Run OS Command (1694)
20190402 11:32:40.125 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:32:40.126 - INFO - ${value} = ACTIVE
20190402 11:32:40.126 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:32:40.126 - INFO - ${current_value} = ACTIVE
20190402 11:32:40.127 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1699)
20190402 11:32:40.127 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:32:40.127 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:32:40.128 - FAIL - ACTIVE != SHUTOFF
20190402 11:32:40.128 - DEBUG - Traceback (most recent call last):
  None
20190402 11:32:40.128 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:32:40.128 - INFO - +------ END KW: OpenStack.Check Field Value (1702)
20190402 11:32:50.129 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:32:50.130 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:32:50.132 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:32:50.132 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:32:50.133 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:32:50.133 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:32:50.134 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:32:50.134 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:32:50.134 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:32:50.136 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:32:50.136 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:32:50.137 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:32:50.137 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:32:50.138 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:32:51.771 - INFO - Command exited with return code 0.
20190402 11:32:51.772 - INFO - ${stdout} = ACTIVE
20190402 11:32:51.772 - INFO - ${stderr} =
20190402 11:32:51.772 - INFO - ${rc} = 0
20190402 11:32:51.772 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:32:51.773 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:32:51.774 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:51.774 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:32:51.775 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:32:51.775 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:32:51.776 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:32:51.776 - INFO - +-------- END KW: OpenStack.Run OS Command (1642)
20190402 11:32:51.776 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:32:51.777 - INFO - ${value} = ACTIVE
20190402 11:32:51.777 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:32:51.778 - INFO - ${current_value} = ACTIVE
20190402 11:32:51.778 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1648)
20190402 11:32:51.778 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:32:51.779 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:32:51.779 - FAIL - ACTIVE != SHUTOFF
20190402 11:32:51.779 - DEBUG - Traceback (most recent call last):
  None
20190402 11:32:51.780 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:32:51.780 - INFO - +------ END KW: OpenStack.Check Field Value (1651)
20190402 11:33:01.781 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:33:01.782 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:01.783 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:01.784 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:33:01.785 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:01.785 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:01.787 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:01.787 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:33:01.787 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:01.788 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:01.789 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:01.789 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:01.789 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:01.790 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:03.474 - INFO - Command exited with return code 0.
20190402 11:33:03.474 - INFO - ${stdout} = ACTIVE
20190402 11:33:03.474 - INFO - ${stderr} =
20190402 11:33:03.474 - INFO - ${rc} = 0
20190402 11:33:03.475 - INFO - +--------- END KW: SSHLibrary.Execute Command (1686)
20190402 11:33:03.475 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:03.476 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:03.476 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:03.477 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:03.478 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:03.478 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:03.478 - INFO - +-------- END KW: OpenStack.Run OS Command (1691)
20190402 11:33:03.479 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:03.479 - INFO - ${value} = ACTIVE
20190402 11:33:03.479 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:33:03.480 - INFO - ${current_value} = ACTIVE
20190402 11:33:03.480 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1698)
20190402 11:33:03.480 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:03.481 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:03.481 - FAIL - ACTIVE != SHUTOFF
20190402 11:33:03.482 - DEBUG - Traceback (most recent call last):
  None
20190402 11:33:03.482 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:33:03.482 - INFO - +------ END KW: OpenStack.Check Field Value (1701)
20190402 11:33:13.483 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:33:13.483 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:13.483 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:13.484 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:33:13.484 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:13.484 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:13.484 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:13.484 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:33:13.484 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:13.485 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:13.485 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:13.485 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:13.485 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:13.485 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:15.217 - INFO - Command exited with return code 0.
20190402 11:33:15.218 - INFO - ${stdout} = ACTIVE
20190402 11:33:15.218 - INFO - ${stderr} =
20190402 11:33:15.218 - INFO - ${rc} = 0
20190402 11:33:15.218 - INFO - +--------- END KW: SSHLibrary.Execute Command (1733)
20190402 11:33:15.218 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:15.220 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:15.220 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:33:15.220 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:15.221 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:15.221 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:15.221 - INFO - +-------- END KW: OpenStack.Run OS Command (1737)
20190402 11:33:15.222 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:15.222 - INFO - ${value} = ACTIVE
20190402 11:33:15.222 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:33:15.223 - INFO - ${current_value} = ACTIVE
20190402 11:33:15.223 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1740)
20190402 11:33:15.223 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:15.224 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:15.224 - FAIL - ACTIVE != SHUTOFF
20190402 11:33:15.224 - DEBUG - Traceback (most recent call last):
  None
20190402 11:33:15.224 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:33:15.225 - INFO - +------ END KW: OpenStack.Check Field Value (1743)
20190402 11:33:25.226 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | SHUTOFF ]
20190402 11:33:25.227 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:25.228 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:25.229 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:33:25.229 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:25.229 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:25.230 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:25.230 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:33:25.230 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:25.232 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:25.232 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:25.232 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:25.233 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:25.234 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:26.867 - INFO - Command exited with return code 0.
20190402 11:33:26.867 - INFO - ${stdout} = SHUTOFF
20190402 11:33:26.868 - INFO - ${stderr} =
20190402 11:33:26.868 - INFO - ${rc} = 0
20190402 11:33:26.868 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:33:26.868 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:26.869 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:33:26.870 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:26.870 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:26.870 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:33:26.871 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:33:26.871 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:33:26.871 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:26.872 - INFO - ${value} = SHUTOFF
20190402 11:33:26.872 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:33:26.872 - INFO - ${current_value} = SHUTOFF
20190402 11:33:26.872 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:33:26.873 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:26.873 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:26.873 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:33:26.874 - INFO - +------ END KW: OpenStack.Check Field Value (1649)
20190402 11:33:26.874 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (71744)
20190402 11:33:26.874 - INFO - +---- END KW: OpenStack.Stop Instance (73785)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:33:26.874 - INFO - +---- START KW: OpenStack.Start Instance [ ${cirros_instance_name} ]
20190402 11:33:26.875 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server start ${vm_name} | True | 30 sec ]
20190402 11:33:26.876 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:26.877 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:26.877 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:33:26.877 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:26.878 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server start vm-cirros-1'.
20190402 11:33:28.610 - INFO - Command exited with return code 0.
20190402 11:33:28.611 - INFO - ${stdout} =
20190402 11:33:28.611 - INFO - ${stderr} =
20190402 11:33:28.611 - INFO - ${rc} = 0
20190402 11:33:28.611 - INFO - +------ END KW: SSHLibrary.Execute Command (1734)
20190402 11:33:28.611 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:28.611 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:28.611 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:33:28.612 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:28.612 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:28.612 - INFO - +----- END KW: OpenStack.Run OS Command (1737)
20190402 11:33:28.612 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:33:28.613 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:33:28.613 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:28.614 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:28.614 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:33:28.614 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:28.614 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:28.614 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:28.614 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:33:28.614 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:28.615 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:28.615 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:28.615 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:28.615 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:28.615 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:30.397 - INFO - Command exited with return code 0.
20190402 11:33:30.397 - INFO - ${stdout} = SHUTOFF
20190402 11:33:30.397 - INFO - ${stderr} =
20190402 11:33:30.397 - INFO - ${rc} = 0
20190402 11:33:30.397 - INFO - +--------- END KW: SSHLibrary.Execute Command (1782)
20190402 11:33:30.398 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:30.398 - INFO - ${res} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:33:30.398 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:33:30.398 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:30.399 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:30.399 - INFO - ${result} = {u'stdout': u'SHUTOFF', u'stderr': u'', u'rc': 0}
20190402 11:33:30.399 - INFO - +-------- END KW: OpenStack.Run OS Command (1785)
20190402 11:33:30.399 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:30.399 - INFO - ${value} = SHUTOFF
20190402 11:33:30.399 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:33:30.399 - INFO - ${current_value} = SHUTOFF
20190402 11:33:30.400 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1786)
20190402 11:33:30.400 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:30.400 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:30.400 - FAIL - SHUTOFF != ACTIVE
20190402 11:33:30.400 - DEBUG - Traceback (most recent call last):
  None
20190402 11:33:30.400 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:33:30.400 - INFO - +------ END KW: OpenStack.Check Field Value (1787)
20190402 11:33:40.401 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:33:40.402 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:40.403 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:40.404 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:33:40.404 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:40.404 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:40.405 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:40.405 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:33:40.405 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:40.406 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:40.407 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:40.407 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:40.407 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:40.408 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:42.601 - INFO - Command exited with return code 0.
20190402 11:33:42.601 - INFO - ${stdout} = ACTIVE
20190402 11:33:42.601 - INFO - ${stderr} =
20190402 11:33:42.602 - INFO - ${rc} = 0
20190402 11:33:42.602 - INFO - +--------- END KW: SSHLibrary.Execute Command (2195)
20190402 11:33:42.602 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:42.603 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:42.603 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:42.603 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:42.604 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:42.604 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:42.604 - INFO - +-------- END KW: OpenStack.Run OS Command (2199)
20190402 11:33:42.604 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:42.604 - INFO - ${value} = ACTIVE
20190402 11:33:42.604 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:33:42.605 - INFO - ${current_value} = ACTIVE
20190402 11:33:42.605 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2203)
20190402 11:33:42.605 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:42.605 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:42.605 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:33:42.605 - INFO - +------ END KW: OpenStack.Check Field Value (2204)
20190402 11:33:42.605 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13993)
20190402 11:33:42.606 - INFO - +---- END KW: OpenStack.Start Instance (15732)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:33:42.606 - INFO - +---- START KW: OpenStack.Start Instance [ ${cirros_instance_name_2} ]
20190402 11:33:42.606 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server start ${vm_name} | True | 30 sec ]
20190402 11:33:42.606 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:42.607 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:42.607 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:33:42.607 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:42.607 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server start vm-cirros-2'.
20190402 11:33:44.352 - INFO - Command exited with return code 0.
20190402 11:33:44.353 - INFO - ${stdout} =
20190402 11:33:44.353 - INFO - ${stderr} =
20190402 11:33:44.353 - INFO - ${rc} = 0
20190402 11:33:44.353 - INFO - +------ END KW: SSHLibrary.Execute Command (1746)
20190402 11:33:44.354 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:44.355 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:44.355 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:44.355 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:44.356 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:44.356 - INFO - +----- END KW: OpenStack.Run OS Command (1750)
20190402 11:33:44.357 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:33:44.357 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:33:44.358 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:44.359 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:44.359 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:33:44.360 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:44.360 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:44.360 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:44.361 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:33:44.361 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:44.362 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:44.362 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:44.362 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:44.363 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:44.364 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:46.297 - INFO - Command exited with return code 0.
20190402 11:33:46.297 - INFO - ${stdout} = ACTIVE
20190402 11:33:46.298 - INFO - ${stderr} =
20190402 11:33:46.298 - INFO - ${rc} = 0
20190402 11:33:46.298 - INFO - +--------- END KW: SSHLibrary.Execute Command (1935)
20190402 11:33:46.298 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:46.299 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:46.300 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:33:46.300 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:46.301 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:46.301 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:33:46.301 - INFO - +-------- END KW: OpenStack.Run OS Command (1940)
20190402 11:33:46.301 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:46.302 - INFO - ${value} = ACTIVE
20190402 11:33:46.302 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:33:46.303 - INFO - ${current_value} = ACTIVE
20190402 11:33:46.303 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1945)
20190402 11:33:46.303 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:46.304 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:46.304 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:33:46.304 - INFO - +------ END KW: OpenStack.Check Field Value (1947)
20190402 11:33:46.304 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1947)
20190402 11:33:46.305 - INFO - +---- END KW: OpenStack.Start Instance (3698)
------------------------------------------------------------------------------
20190402 11:33:46.305 - INFO - +--- END TEST: Stop Start Instances (156690)
------------------------------------------------------------------------------
20190402 11:33:46.306 - INFO - +--- START TEST: Lock Unlock Instances [ ]
------------------------------------------------------------------------------
20190402 11:33:46.307 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name} ]
20190402 11:33:46.307 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190402 11:33:46.308 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:46.308 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:46.309 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:33:46.309 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:46.310 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-1'.
20190402 11:33:48.058 - INFO - Command exited with return code 0.
20190402 11:33:48.058 - INFO - ${stdout} =
20190402 11:33:48.058 - INFO - ${stderr} =
20190402 11:33:48.058 - INFO - ${rc} = 0
20190402 11:33:48.059 - INFO - +------ END KW: SSHLibrary.Execute Command (1750)
20190402 11:33:48.059 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:48.062 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:48.062 - INFO - +------ END KW: BuiltIn.Create Dictionary (3)
20190402 11:33:48.063 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:48.064 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:48.064 - INFO - +----- END KW: OpenStack.Run OS Command (1757)
20190402 11:33:48.065 - INFO - +---- END KW: OpenStack.Lock Instance (1758)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:33:48.065 - INFO - +---- START KW: OpenStack.Lock Instance [ ${cirros_instance_name_2} ]
20190402 11:33:48.066 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server lock ${vm_name} | True | 30 sec ]
20190402 11:33:48.067 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:48.068 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:48.068 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:33:48.068 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:48.069 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server lock vm-cirros-2'.
20190402 11:33:49.752 - INFO - Command exited with return code 0.
20190402 11:33:49.752 - INFO - ${stdout} =
20190402 11:33:49.752 - INFO - ${stderr} =
20190402 11:33:49.752 - INFO - ${rc} = 0
20190402 11:33:49.752 - INFO - +------ END KW: SSHLibrary.Execute Command (1684)
20190402 11:33:49.752 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:49.752 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:49.753 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:49.753 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:49.753 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:33:49.753 - INFO - +----- END KW: OpenStack.Run OS Command (1687)
20190402 11:33:49.753 - INFO - +---- END KW: OpenStack.Lock Instance (1688)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:33:49.753 - INFO - +---- START KW: OpenStack.Unlock Instance [ ${cirros_instance_name} ]
20190402 11:33:49.754 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unlock ${vm_name} | True | 30 sec ]
20190402 11:33:49.754 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:49.754 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:49.754 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:33:49.754 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:49.755 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unlock vm-cirros-1'.
20190402 11:33:51.702 - INFO - Command exited with return code 0.
20190402 11:33:51.703 - INFO - ${stdout} =
20190402 11:33:51.703 - INFO - ${stderr} =
20190402 11:33:51.703 - INFO - ${rc} = 0
20190402 11:33:51.703 - INFO - +------ END KW: SSHLibrary.Execute Command (1949)
20190402 11:33:51.704 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:51.705 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:51.705 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:51.705 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:51.706 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:51.706 - INFO - +----- END KW: OpenStack.Run OS Command (1952)
20190402 11:33:51.707 - INFO - +---- END KW: OpenStack.Unlock Instance (1953)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:33:51.707 - INFO - +---- START KW: OpenStack.Unlock Instance [ ${cirros_instance_name_2} ]
20190402 11:33:51.708 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unlock ${vm_name} | True | 30 sec ]
20190402 11:33:51.709 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:51.709 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:51.709 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:33:51.709 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:51.710 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unlock vm-cirros-2'.
20190402 11:33:53.743 - INFO - Command exited with return code 0.
20190402 11:33:53.743 - INFO - ${stdout} =
20190402 11:33:53.743 - INFO - ${stderr} =
20190402 11:33:53.743 - INFO - ${rc} = 0
20190402 11:33:53.744 - INFO - +------ END KW: SSHLibrary.Execute Command (2034)
20190402 11:33:53.744 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:53.745 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:53.745 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:53.745 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:53.746 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:33:53.747 - INFO - +----- END KW: OpenStack.Run OS Command (2038)
20190402 11:33:53.747 - INFO - +---- END KW: OpenStack.Unlock Instance (2040)
------------------------------------------------------------------------------
20190402 11:33:53.748 - INFO - +--- END TEST: Lock Unlock Instances (7441)
------------------------------------------------------------------------------
20190402 11:33:53.748 - INFO - +--- START TEST: Reboot Instances [ ]
------------------------------------------------------------------------------
20190402 11:33:53.749 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name} ]
20190402 11:33:53.749 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190402 11:33:53.750 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:53.751 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:53.751 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:33:53.751 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:53.752 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-1'.
20190402 11:33:55.485 - INFO - Command exited with return code 0.
20190402 11:33:55.486 - INFO - ${stdout} =
20190402 11:33:55.486 - INFO - ${stderr} =
20190402 11:33:55.486 - INFO - ${rc} = 0
20190402 11:33:55.486 - INFO - +------ END KW: SSHLibrary.Execute Command (1735)
20190402 11:33:55.486 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:55.486 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:33:55.487 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:55.487 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:55.487 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:33:55.487 - INFO - +----- END KW: OpenStack.Run OS Command (1738)
20190402 11:33:55.487 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBOOT ]
20190402 11:33:55.488 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBOOT ]
20190402 11:33:55.488 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:55.489 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:55.489 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:33:55.489 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:55.489 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:55.489 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:55.489 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:33:55.490 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:55.490 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:55.490 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:55.490 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:55.491 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:55.491 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:57.172 - INFO - Command exited with return code 0.
20190402 11:33:57.173 - INFO - ${stdout} = REBOOT
20190402 11:33:57.173 - INFO - ${stderr} =
20190402 11:33:57.173 - INFO - ${rc} = 0
20190402 11:33:57.173 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:33:57.173 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:57.174 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:33:57.174 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:33:57.174 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:57.174 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:33:57.175 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:33:57.175 - INFO - +-------- END KW: OpenStack.Run OS Command (1685)
20190402 11:33:57.175 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:57.175 - INFO - ${value} = REBOOT
20190402 11:33:57.175 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:33:57.176 - INFO - ${current_value} = REBOOT
20190402 11:33:57.176 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1688)
20190402 11:33:57.176 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:57.176 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:57.176 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:33:57.176 - INFO - +------ END KW: OpenStack.Check Field Value (1688)
20190402 11:33:57.176 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1689)
20190402 11:33:57.177 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:33:57.177 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:33:57.178 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:33:57.178 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:33:57.178 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:33:57.179 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:33:57.179 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:33:57.179 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:33:57.179 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:33:57.179 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:33:57.180 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:33:57.180 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:33:57.180 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:33:57.181 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:33:57.181 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:33:58.919 - INFO - Command exited with return code 0.
20190402 11:33:58.920 - INFO - ${stdout} = REBOOT
20190402 11:33:58.920 - INFO - ${stderr} =
20190402 11:33:58.920 - INFO - ${rc} = 0
20190402 11:33:58.920 - INFO - +--------- END KW: SSHLibrary.Execute Command (1739)
20190402 11:33:58.921 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:33:58.922 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:33:58.922 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:33:58.923 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:33:58.923 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:33:58.924 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:33:58.924 - INFO - +-------- END KW: OpenStack.Run OS Command (1745)
20190402 11:33:58.924 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:33:58.924 - INFO - ${value} = REBOOT
20190402 11:33:58.925 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:33:58.925 - INFO - ${current_value} = REBOOT
20190402 11:33:58.925 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1748)
20190402 11:33:58.925 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:33:58.926 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:33:58.926 - FAIL - REBOOT != ACTIVE
20190402 11:33:58.926 - DEBUG - Traceback (most recent call last):
  None
20190402 11:33:58.926 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:33:58.927 - INFO - +------ END KW: OpenStack.Check Field Value (1750)
20190402 11:34:08.927 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:34:08.929 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:34:08.930 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:34:08.931 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:34:08.931 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:08.931 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:34:08.932 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:34:08.932 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:34:08.933 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:34:08.934 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:34:08.934 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:34:08.934 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:34:08.935 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:34:08.936 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:34:10.568 - INFO - Command exited with return code 0.
20190402 11:34:10.569 - INFO - ${stdout} = REBOOT
20190402 11:34:10.569 - INFO - ${stderr} =
20190402 11:34:10.569 - INFO - ${rc} = 0
20190402 11:34:10.569 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:34:10.569 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:34:10.571 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:10.571 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:34:10.571 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:34:10.572 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:34:10.572 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:10.572 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:34:10.573 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:34:10.573 - INFO - ${value} = REBOOT
20190402 11:34:10.573 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:34:10.574 - INFO - ${current_value} = REBOOT
20190402 11:34:10.574 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:34:10.574 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:34:10.575 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:34:10.575 - FAIL - REBOOT != ACTIVE
20190402 11:34:10.575 - DEBUG - Traceback (most recent call last):
  None
20190402 11:34:10.575 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:34:10.576 - INFO - +------ END KW: OpenStack.Check Field Value (1649)
20190402 11:34:20.577 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:34:20.578 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:34:20.580 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:34:20.581 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:34:20.581 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:20.581 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:34:20.582 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:34:20.582 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:34:20.583 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:34:20.584 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:34:20.584 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:34:20.585 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:20.585 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:34:20.586 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:34:22.220 - INFO - Command exited with return code 0.
20190402 11:34:22.220 - INFO - ${stdout} = REBOOT
20190402 11:34:22.220 - INFO - ${stderr} =
20190402 11:34:22.221 - INFO - ${rc} = 0
20190402 11:34:22.221 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:34:22.221 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:34:22.222 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:22.222 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:34:22.223 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:34:22.223 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:34:22.224 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:22.224 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:34:22.224 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:34:22.225 - INFO - ${value} = REBOOT
20190402 11:34:22.225 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:34:22.225 - INFO - ${current_value} = REBOOT
20190402 11:34:22.226 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1647)
20190402 11:34:22.226 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:34:22.226 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:34:22.227 - FAIL - REBOOT != ACTIVE
20190402 11:34:22.227 - DEBUG - Traceback (most recent call last):
  None
20190402 11:34:22.227 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:34:22.228 - INFO - +------ END KW: OpenStack.Check Field Value (1652)
20190402 11:34:32.229 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:34:32.230 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:34:32.231 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:34:32.232 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:34:32.232 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:32.233 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:34:32.233 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:34:32.234 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:34:32.234 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:34:32.235 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:34:32.236 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:34:32.236 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:32.236 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:34:32.237 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:34:33.870 - INFO - Command exited with return code 0.
20190402 11:34:33.871 - INFO - ${stdout} = REBOOT
20190402 11:34:33.871 - INFO - ${stderr} =
20190402 11:34:33.871 - INFO - ${rc} = 0
20190402 11:34:33.871 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:34:33.872 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:34:33.873 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:33.873 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:34:33.873 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:34:33.874 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:34:33.874 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:33.874 - INFO - +-------- END KW: OpenStack.Run OS Command (1640)
20190402 11:34:33.875 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:34:33.875 - INFO - ${value} = REBOOT
20190402 11:34:33.875 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:34:33.876 - INFO - ${current_value} = REBOOT
20190402 11:34:33.876 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1646)
20190402 11:34:33.876 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:34:33.877 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:34:33.877 - FAIL - REBOOT != ACTIVE
20190402 11:34:33.877 - DEBUG - Traceback (most recent call last):
  None
20190402 11:34:33.877 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:34:33.877 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 11:34:43.878 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:34:43.878 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:34:43.879 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:34:43.879 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:34:43.879 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:34:43.880 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:34:43.880 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:34:43.880 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:34:43.880 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:34:43.881 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:34:43.881 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:34:43.881 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:34:43.881 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:34:43.882 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:34:45.614 - INFO - Command exited with return code 0.
20190402 11:34:45.614 - INFO - ${stdout} = REBOOT
20190402 11:34:45.615 - INFO - ${stderr} =
20190402 11:34:45.615 - INFO - ${rc} = 0
20190402 11:34:45.615 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:34:45.615 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:34:45.616 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:45.616 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:34:45.617 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:34:45.617 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:34:45.618 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:45.618 - INFO - +-------- END KW: OpenStack.Run OS Command (1738)
20190402 11:34:45.618 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:34:45.619 - INFO - ${value} = REBOOT
20190402 11:34:45.619 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:34:45.619 - INFO - ${current_value} = REBOOT
20190402 11:34:45.620 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1741)
20190402 11:34:45.620 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:34:45.620 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:34:45.621 - FAIL - REBOOT != ACTIVE
20190402 11:34:45.621 - DEBUG - Traceback (most recent call last):
  None
20190402 11:34:45.621 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:34:45.621 - INFO - +------ END KW: OpenStack.Check Field Value (1743)
20190402 11:34:55.622 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:34:55.623 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:34:55.625 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:34:55.626 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:34:55.626 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:55.626 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:34:55.627 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:34:55.627 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:34:55.627 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:34:55.629 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:34:55.630 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:34:55.630 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:34:55.631 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:34:55.632 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:34:57.316 - INFO - Command exited with return code 0.
20190402 11:34:57.316 - INFO - ${stdout} = REBOOT
20190402 11:34:57.317 - INFO - ${stderr} =
20190402 11:34:57.317 - INFO - ${rc} = 0
20190402 11:34:57.317 - INFO - +--------- END KW: SSHLibrary.Execute Command (1686)
20190402 11:34:57.317 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:34:57.318 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:57.318 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:34:57.319 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:34:57.319 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:34:57.320 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:34:57.320 - INFO - +-------- END KW: OpenStack.Run OS Command (1693)
20190402 11:34:57.320 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:34:57.321 - INFO - ${value} = REBOOT
20190402 11:34:57.321 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:34:57.321 - INFO - ${current_value} = REBOOT
20190402 11:34:57.322 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1698)
20190402 11:34:57.322 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:34:57.322 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:34:57.322 - FAIL - REBOOT != ACTIVE
20190402 11:34:57.323 - DEBUG - Traceback (most recent call last):
  None
20190402 11:34:57.323 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:34:57.323 - INFO - +------ END KW: OpenStack.Check Field Value (1701)
20190402 11:35:07.324 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:35:07.325 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:35:07.327 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:35:07.328 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:35:07.328 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:07.328 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:35:07.329 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:35:07.329 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:35:07.329 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:35:07.331 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:35:07.331 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:35:07.331 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:35:07.332 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:35:07.333 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:35:08.919 - INFO - Command exited with return code 0.
20190402 11:35:08.919 - INFO - ${stdout} = REBOOT
20190402 11:35:08.919 - INFO - ${stderr} =
20190402 11:35:08.919 - INFO - ${rc} = 0
20190402 11:35:08.919 - INFO - +--------- END KW: SSHLibrary.Execute Command (1587)
20190402 11:35:08.919 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:35:08.920 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:08.920 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:35:08.920 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:35:08.920 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:35:08.920 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:08.920 - INFO - +-------- END KW: OpenStack.Run OS Command (1591)
20190402 11:35:08.920 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:35:08.921 - INFO - ${value} = REBOOT
20190402 11:35:08.921 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:35:08.921 - INFO - ${current_value} = REBOOT
20190402 11:35:08.921 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1596)
20190402 11:35:08.921 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:35:08.921 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:35:08.921 - FAIL - REBOOT != ACTIVE
20190402 11:35:08.921 - DEBUG - Traceback (most recent call last):
  None
20190402 11:35:08.921 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:35:08.921 - INFO - +------ END KW: OpenStack.Check Field Value (1597)
20190402 11:35:18.922 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:35:18.923 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:35:18.925 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:35:18.925 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:35:18.925 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:18.926 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:35:18.927 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:35:18.927 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:35:18.928 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:35:18.929 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:35:18.929 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:35:18.930 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:18.930 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:35:18.931 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:35:20.565 - INFO - Command exited with return code 0.
20190402 11:35:20.566 - INFO - ${stdout} = REBOOT
20190402 11:35:20.566 - INFO - ${stderr} =
20190402 11:35:20.566 - INFO - ${rc} = 0
20190402 11:35:20.566 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:35:20.567 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:35:20.568 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:20.568 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:35:20.569 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:35:20.569 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:35:20.570 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:20.570 - INFO - +-------- END KW: OpenStack.Run OS Command (1642)
20190402 11:35:20.570 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:35:20.571 - INFO - ${value} = REBOOT
20190402 11:35:20.571 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:35:20.572 - INFO - ${current_value} = REBOOT
20190402 11:35:20.572 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1649)
20190402 11:35:20.572 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:35:20.573 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:35:20.573 - FAIL - REBOOT != ACTIVE
20190402 11:35:20.573 - DEBUG - Traceback (most recent call last):
  None
20190402 11:35:20.574 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:35:20.574 - INFO - +------ END KW: OpenStack.Check Field Value (1652)
20190402 11:35:30.575 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:35:30.577 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:35:30.578 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:35:30.579 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:35:30.579 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:30.580 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:35:30.580 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:35:30.581 - INFO - +-------- END KW: BuiltIn.Catenate (2)
20190402 11:35:30.581 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:35:30.582 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:35:30.583 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:35:30.583 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:30.583 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:35:30.584 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:35:32.218 - INFO - Command exited with return code 0.
20190402 11:35:32.219 - INFO - ${stdout} = REBOOT
20190402 11:35:32.219 - INFO - ${stderr} =
20190402 11:35:32.219 - INFO - ${rc} = 0
20190402 11:35:32.219 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:35:32.219 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:35:32.220 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:32.221 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:35:32.221 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:35:32.222 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:35:32.222 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:32.222 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:35:32.222 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:35:32.223 - INFO - ${value} = REBOOT
20190402 11:35:32.223 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:35:32.224 - INFO - ${current_value} = REBOOT
20190402 11:35:32.224 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1647)
20190402 11:35:32.224 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:35:32.225 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:35:32.225 - FAIL - REBOOT != ACTIVE
20190402 11:35:32.225 - DEBUG - Traceback (most recent call last):
  None
20190402 11:35:32.225 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:35:32.225 - INFO - +------ END KW: OpenStack.Check Field Value (1650)
20190402 11:35:42.226 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:35:42.227 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:35:42.228 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:35:42.229 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:35:42.229 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:42.229 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:35:42.230 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:35:42.230 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:35:42.230 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:35:42.231 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:35:42.231 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:35:42.231 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:35:42.231 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:35:42.232 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:35:43.814 - INFO - Command exited with return code 0.
20190402 11:35:43.814 - INFO - ${stdout} = REBOOT
20190402 11:35:43.814 - INFO - ${stderr} =
20190402 11:35:43.815 - INFO - ${rc} = 0
20190402 11:35:43.815 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:35:43.815 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:35:43.817 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:43.817 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:35:43.817 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:35:43.818 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:35:43.819 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:43.819 - INFO - +-------- END KW: OpenStack.Run OS Command (1589)
20190402 11:35:43.819 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:35:43.820 - INFO - ${value} = REBOOT
20190402 11:35:43.820 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:35:43.821 - INFO - ${current_value} = REBOOT
20190402 11:35:43.821 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1594)
20190402 11:35:43.821 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:35:43.822 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:35:43.822 - FAIL - REBOOT != ACTIVE
20190402 11:35:43.822 - DEBUG - Traceback (most recent call last):
  None
20190402 11:35:43.822 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:35:43.823 - INFO - +------ END KW: OpenStack.Check Field Value (1597)
20190402 11:35:53.824 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:35:53.825 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:35:53.826 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:35:53.827 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:35:53.827 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:35:53.828 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:35:53.829 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:35:53.829 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:35:53.829 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:35:53.831 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:35:53.831 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:35:53.831 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:35:53.832 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:35:53.832 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:35:55.465 - INFO - Command exited with return code 0.
20190402 11:35:55.465 - INFO - ${stdout} = REBOOT
20190402 11:35:55.465 - INFO - ${stderr} =
20190402 11:35:55.465 - INFO - ${rc} = 0
20190402 11:35:55.466 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:35:55.466 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:35:55.467 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:55.467 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:35:55.467 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:35:55.468 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:35:55.468 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:35:55.469 - INFO - +-------- END KW: OpenStack.Run OS Command (1639)
20190402 11:35:55.469 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:35:55.469 - INFO - ${value} = REBOOT
20190402 11:35:55.469 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:35:55.470 - INFO - ${current_value} = REBOOT
20190402 11:35:55.470 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:35:55.470 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:35:55.471 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:35:55.471 - FAIL - REBOOT != ACTIVE
20190402 11:35:55.471 - DEBUG - Traceback (most recent call last):
  None
20190402 11:35:55.471 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:35:55.472 - INFO - +------ END KW: OpenStack.Check Field Value (1647)
20190402 11:36:05.472 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:36:05.473 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:05.473 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:05.474 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:36:05.474 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:36:05.474 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:05.474 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:05.474 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:36:05.475 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:05.475 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:05.475 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:05.476 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:05.476 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:05.476 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:07.509 - INFO - Command exited with return code 0.
20190402 11:36:07.509 - INFO - ${stdout} = ACTIVE
20190402 11:36:07.509 - INFO - ${stderr} =
20190402 11:36:07.510 - INFO - ${rc} = 0
20190402 11:36:07.510 - INFO - +--------- END KW: SSHLibrary.Execute Command (2034)
20190402 11:36:07.510 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:07.512 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:36:07.512 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:36:07.512 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:07.513 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:36:07.513 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:36:07.513 - INFO - +-------- END KW: OpenStack.Run OS Command (2038)
20190402 11:36:07.514 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:07.514 - INFO - ${value} = ACTIVE
20190402 11:36:07.514 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:36:07.515 - INFO - ${current_value} = ACTIVE
20190402 11:36:07.515 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2042)
20190402 11:36:07.515 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:07.516 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:07.516 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:36:07.516 - INFO - +------ END KW: OpenStack.Check Field Value (2044)
20190402 11:36:07.516 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (130339)
20190402 11:36:07.517 - INFO - +---- END KW: OpenStack.Reboot Instance (133767)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:36:07.517 - INFO - +---- START KW: OpenStack.Reboot Instance [ ${cirros_instance_name_2} ]
20190402 11:36:07.518 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server reboot ${vm_name} | True | 30 sec ]
20190402 11:36:07.518 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:07.519 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:07.519 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:36:07.519 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:07.520 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server reboot vm-cirros-2'.
20190402 11:36:09.204 - INFO - Command exited with return code 0.
20190402 11:36:09.204 - INFO - ${stdout} =
20190402 11:36:09.204 - INFO - ${stderr} =
20190402 11:36:09.205 - INFO - ${rc} = 0
20190402 11:36:09.205 - INFO - +------ END KW: SSHLibrary.Execute Command (1686)
20190402 11:36:09.205 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:09.206 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:36:09.207 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:36:09.207 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:09.208 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:36:09.208 - INFO - +----- END KW: OpenStack.Run OS Command (1690)
20190402 11:36:09.209 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBOOT ]
20190402 11:36:09.209 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBOOT ]
20190402 11:36:09.210 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:09.211 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:09.212 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:36:09.212 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:36:09.212 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:09.213 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:09.213 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:36:09.214 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:09.215 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:09.215 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:09.215 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:09.215 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:09.216 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:10.966 - INFO - Command exited with return code 0.
20190402 11:36:10.966 - INFO - ${stdout} = REBOOT
20190402 11:36:10.967 - INFO - ${stderr} =
20190402 11:36:10.967 - INFO - ${rc} = 0
20190402 11:36:10.967 - INFO - +--------- END KW: SSHLibrary.Execute Command (1752)
20190402 11:36:10.968 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:10.969 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:10.969 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:36:10.970 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:10.971 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:36:10.971 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:10.972 - INFO - +-------- END KW: OpenStack.Run OS Command (1758)
20190402 11:36:10.972 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:10.973 - INFO - ${value} = REBOOT
20190402 11:36:10.973 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:36:10.974 - INFO - ${current_value} = REBOOT
20190402 11:36:10.974 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1764)
20190402 11:36:10.974 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:10.975 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:10.975 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:36:10.976 - INFO - +------ END KW: OpenStack.Check Field Value (1767)
20190402 11:36:10.976 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1767)
20190402 11:36:10.976 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:36:10.977 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:36:10.979 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:10.980 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:10.980 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:36:10.981 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:10.981 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:10.982 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:10.982 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:36:10.982 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:10.984 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:10.985 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:10.985 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:36:10.985 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:10.986 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:12.569 - INFO - Command exited with return code 0.
20190402 11:36:12.569 - INFO - ${stdout} = REBOOT
20190402 11:36:12.570 - INFO - ${stderr} =
20190402 11:36:12.570 - INFO - ${rc} = 0
20190402 11:36:12.570 - INFO - +--------- END KW: SSHLibrary.Execute Command (1585)
20190402 11:36:12.571 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:12.572 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:12.572 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:36:12.573 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:12.574 - INFO - +--------- END KW: BuiltIn.Run Keyword If (2)
20190402 11:36:12.574 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:12.575 - INFO - +-------- END KW: OpenStack.Run OS Command (1593)
20190402 11:36:12.575 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:12.576 - INFO - ${value} = REBOOT
20190402 11:36:12.576 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:36:12.577 - INFO - ${current_value} = REBOOT
20190402 11:36:12.577 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1599)
20190402 11:36:12.578 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:12.579 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:12.579 - FAIL - REBOOT != ACTIVE
20190402 11:36:12.580 - DEBUG - Traceback (most recent call last):
  None
20190402 11:36:12.580 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:36:12.580 - INFO - +------ END KW: OpenStack.Check Field Value (1603)
20190402 11:36:22.581 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:36:22.581 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:22.582 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:22.582 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:36:22.582 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:22.582 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:22.583 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:22.583 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:36:22.583 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:22.584 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:22.584 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:22.584 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:22.584 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:22.585 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:24.418 - INFO - Command exited with return code 0.
20190402 11:36:24.418 - INFO - ${stdout} = REBOOT
20190402 11:36:24.418 - INFO - ${stderr} =
20190402 11:36:24.419 - INFO - ${rc} = 0
20190402 11:36:24.419 - INFO - +--------- END KW: SSHLibrary.Execute Command (1835)
20190402 11:36:24.419 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:24.420 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:24.421 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:36:24.421 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:24.422 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:36:24.422 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:24.422 - INFO - +-------- END KW: OpenStack.Run OS Command (1839)
20190402 11:36:24.423 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:24.423 - INFO - ${value} = REBOOT
20190402 11:36:24.424 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:36:24.424 - INFO - ${current_value} = REBOOT
20190402 11:36:24.425 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1843)
20190402 11:36:24.425 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:24.426 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:24.426 - FAIL - REBOOT != ACTIVE
20190402 11:36:24.426 - DEBUG - Traceback (most recent call last):
  None
20190402 11:36:24.426 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:36:24.427 - INFO - +------ END KW: OpenStack.Check Field Value (1846)
20190402 11:36:34.428 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:36:34.429 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:34.430 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:34.430 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:36:34.430 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:34.431 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:34.431 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:34.431 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:36:34.432 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:34.433 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:34.433 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:34.434 - INFO - +--------- END KW: BuiltIn.Set Variable (2)
20190402 11:36:34.434 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:34.435 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:36.117 - INFO - Command exited with return code 0.
20190402 11:36:36.117 - INFO - ${stdout} = REBOOT
20190402 11:36:36.118 - INFO - ${stderr} =
20190402 11:36:36.118 - INFO - ${rc} = 0
20190402 11:36:36.118 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 11:36:36.118 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:36.119 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:36.120 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:36:36.120 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:36.120 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:36:36.121 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:36.121 - INFO - +-------- END KW: OpenStack.Run OS Command (1689)
20190402 11:36:36.121 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:36.122 - INFO - ${value} = REBOOT
20190402 11:36:36.122 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:36:36.122 - INFO - ${current_value} = REBOOT
20190402 11:36:36.122 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1693)
20190402 11:36:36.123 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:36.123 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:36.123 - FAIL - REBOOT != ACTIVE
20190402 11:36:36.124 - DEBUG - Traceback (most recent call last):
  None
20190402 11:36:36.124 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:36:36.124 - INFO - +------ END KW: OpenStack.Check Field Value (1696)
20190402 11:36:46.125 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:36:46.126 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:46.127 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:46.128 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:36:46.128 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:36:46.128 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:46.129 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:46.129 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:36:46.129 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:46.131 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:46.131 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:46.131 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:46.132 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:46.133 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:47.869 - INFO - Command exited with return code 0.
20190402 11:36:47.869 - INFO - ${stdout} = REBOOT
20190402 11:36:47.869 - INFO - ${stderr} =
20190402 11:36:47.869 - INFO - ${rc} = 0
20190402 11:36:47.869 - INFO - +--------- END KW: SSHLibrary.Execute Command (1737)
20190402 11:36:47.869 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:47.870 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:47.870 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:36:47.870 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:47.870 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:36:47.870 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:47.871 - INFO - +-------- END KW: OpenStack.Run OS Command (1741)
20190402 11:36:47.871 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:47.871 - INFO - ${value} = REBOOT
20190402 11:36:47.871 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:36:47.871 - INFO - ${current_value} = REBOOT
20190402 11:36:47.871 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1745)
20190402 11:36:47.871 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:47.871 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:47.872 - FAIL - REBOOT != ACTIVE
20190402 11:36:47.872 - DEBUG - Traceback (most recent call last):
  None
20190402 11:36:47.872 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:36:47.872 - INFO - +------ END KW: OpenStack.Check Field Value (1747)
20190402 11:36:57.873 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:36:57.874 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:36:57.876 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:36:57.877 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:36:57.878 - INFO - +-------- END KW: BuiltIn.Set Variable (2)
20190402 11:36:57.878 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:36:57.879 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:36:57.879 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:36:57.880 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:36:57.881 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:36:57.881 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:36:57.881 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:36:57.882 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:36:57.883 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:36:59.718 - INFO - Command exited with return code 0.
20190402 11:36:59.719 - INFO - ${stdout} = REBOOT
20190402 11:36:59.719 - INFO - ${stderr} =
20190402 11:36:59.719 - INFO - ${rc} = 0
20190402 11:36:59.719 - INFO - +--------- END KW: SSHLibrary.Execute Command (1837)
20190402 11:36:59.720 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:36:59.722 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:59.722 - INFO - +--------- END KW: BuiltIn.Create Dictionary (3)
20190402 11:36:59.722 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:36:59.723 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:36:59.723 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:36:59.724 - INFO - +-------- END KW: OpenStack.Run OS Command (1843)
20190402 11:36:59.724 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:36:59.725 - INFO - ${value} = REBOOT
20190402 11:36:59.725 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:36:59.726 - INFO - ${current_value} = REBOOT
20190402 11:36:59.727 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1852)
20190402 11:36:59.727 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:36:59.728 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:36:59.728 - FAIL - REBOOT != ACTIVE
20190402 11:36:59.728 - DEBUG - Traceback (most recent call last):
  None
20190402 11:36:59.728 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:36:59.729 - INFO - +------ END KW: OpenStack.Check Field Value (1857)
20190402 11:37:09.729 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:37:09.731 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:37:09.732 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:37:09.732 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:37:09.733 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:09.733 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:37:09.734 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:37:09.734 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:37:09.734 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:37:09.735 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:37:09.736 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:37:09.736 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:09.736 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:37:09.737 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:37:11.521 - INFO - Command exited with return code 0.
20190402 11:37:11.521 - INFO - ${stdout} = REBOOT
20190402 11:37:11.522 - INFO - ${stderr} =
20190402 11:37:11.522 - INFO - ${rc} = 0
20190402 11:37:11.522 - INFO - +--------- END KW: SSHLibrary.Execute Command (1786)
20190402 11:37:11.523 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:37:11.524 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:11.524 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:37:11.525 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:37:11.525 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:37:11.526 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:11.526 - INFO - +-------- END KW: OpenStack.Run OS Command (1792)
20190402 11:37:11.526 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:37:11.527 - INFO - ${value} = REBOOT
20190402 11:37:11.527 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:37:11.528 - INFO - ${current_value} = REBOOT
20190402 11:37:11.528 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1797)
20190402 11:37:11.528 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:37:11.529 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:37:11.529 - FAIL - REBOOT != ACTIVE
20190402 11:37:11.529 - DEBUG - Traceback (most recent call last):
  None
20190402 11:37:11.529 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:37:11.530 - INFO - +------ END KW: OpenStack.Check Field Value (1801)
20190402 11:37:21.531 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:37:21.532 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:37:21.533 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:37:21.533 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:37:21.533 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:21.534 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:37:21.534 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:37:21.534 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:37:21.535 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:37:21.536 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:37:21.536 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:37:21.536 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:37:21.537 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:37:21.537 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:37:23.120 - INFO - Command exited with return code 0.
20190402 11:37:23.121 - INFO - ${stdout} = REBOOT
20190402 11:37:23.121 - INFO - ${stderr} =
20190402 11:37:23.121 - INFO - ${rc} = 0
20190402 11:37:23.122 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:37:23.122 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:37:23.124 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:23.124 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:37:23.124 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:37:23.125 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:37:23.126 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:23.126 - INFO - +-------- END KW: OpenStack.Run OS Command (1591)
20190402 11:37:23.126 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:37:23.127 - INFO - ${value} = REBOOT
20190402 11:37:23.127 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:37:23.128 - INFO - ${current_value} = REBOOT
20190402 11:37:23.128 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1596)
20190402 11:37:23.128 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:37:23.129 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:37:23.129 - FAIL - REBOOT != ACTIVE
20190402 11:37:23.129 - DEBUG - Traceback (most recent call last):
  None
20190402 11:37:23.129 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:37:23.130 - INFO - +------ END KW: OpenStack.Check Field Value (1600)
20190402 11:37:33.130 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:37:33.132 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:37:33.133 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:37:33.134 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:37:33.134 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:33.134 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:37:33.135 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:37:33.135 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:37:33.135 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:37:33.136 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:37:33.137 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:37:33.137 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:33.137 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:37:33.138 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:37:35.121 - INFO - Command exited with return code 0.
20190402 11:37:35.122 - INFO - ${stdout} = REBOOT
20190402 11:37:35.122 - INFO - ${stderr} =
20190402 11:37:35.122 - INFO - ${rc} = 0
20190402 11:37:35.122 - INFO - +--------- END KW: SSHLibrary.Execute Command (1985)
20190402 11:37:35.123 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:37:35.124 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:35.124 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:37:35.125 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:37:35.125 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:37:35.126 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:35.126 - INFO - +-------- END KW: OpenStack.Run OS Command (1991)
20190402 11:37:35.126 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:37:35.127 - INFO - ${value} = REBOOT
20190402 11:37:35.127 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:37:35.128 - INFO - ${current_value} = REBOOT
20190402 11:37:35.128 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1996)
20190402 11:37:35.128 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:37:35.129 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:37:35.129 - FAIL - REBOOT != ACTIVE
20190402 11:37:35.129 - DEBUG - Traceback (most recent call last):
  None
20190402 11:37:35.129 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:37:35.130 - INFO - +------ END KW: OpenStack.Check Field Value (1999)
20190402 11:37:45.130 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:37:45.131 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:37:45.131 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:37:45.132 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:37:45.132 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:45.132 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:37:45.132 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:37:45.132 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:37:45.133 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:37:45.133 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:37:45.133 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:37:45.133 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:37:45.134 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:37:45.134 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:37:47.067 - INFO - Command exited with return code 0.
20190402 11:37:47.068 - INFO - ${stdout} = REBOOT
20190402 11:37:47.068 - INFO - ${stderr} =
20190402 11:37:47.068 - INFO - ${rc} = 0
20190402 11:37:47.068 - INFO - +--------- END KW: SSHLibrary.Execute Command (1934)
20190402 11:37:47.069 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:37:47.070 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:47.070 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:37:47.070 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:37:47.071 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:37:47.071 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:47.072 - INFO - +-------- END KW: OpenStack.Run OS Command (1939)
20190402 11:37:47.072 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:37:47.073 - INFO - ${value} = REBOOT
20190402 11:37:47.073 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:37:47.074 - INFO - ${current_value} = REBOOT
20190402 11:37:47.074 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1943)
20190402 11:37:47.074 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:37:47.075 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:37:47.075 - FAIL - REBOOT != ACTIVE
20190402 11:37:47.075 - DEBUG - Traceback (most recent call last):
  None
20190402 11:37:47.075 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:37:47.076 - INFO - +------ END KW: OpenStack.Check Field Value (1946)
20190402 11:37:57.076 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:37:57.077 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:37:57.077 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:37:57.078 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:37:57.078 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:37:57.078 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:37:57.078 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:37:57.078 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:37:57.078 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:37:57.079 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:37:57.079 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:37:57.079 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:37:57.079 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:37:57.080 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:37:58.711 - INFO - Command exited with return code 0.
20190402 11:37:58.712 - INFO - ${stdout} = REBOOT
20190402 11:37:58.712 - INFO - ${stderr} =
20190402 11:37:58.712 - INFO - ${rc} = 0
20190402 11:37:58.712 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:37:58.712 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:37:58.713 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:58.713 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:37:58.713 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:37:58.714 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:37:58.714 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:37:58.714 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:37:58.714 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:37:58.714 - INFO - ${value} = REBOOT
20190402 11:37:58.714 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:37:58.715 - INFO - ${current_value} = REBOOT
20190402 11:37:58.715 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1638)
20190402 11:37:58.715 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:37:58.715 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:37:58.715 - FAIL - REBOOT != ACTIVE
20190402 11:37:58.716 - DEBUG - Traceback (most recent call last):
  None
20190402 11:37:58.716 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:37:58.716 - INFO - +------ END KW: OpenStack.Check Field Value (1640)
20190402 11:38:08.717 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:38:08.718 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:38:08.719 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:38:08.720 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:38:08.720 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:08.721 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:38:08.722 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:38:08.722 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:38:08.722 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:38:08.723 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:08.724 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:08.724 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:08.724 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:08.725 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:38:10.760 - INFO - Command exited with return code 0.
20190402 11:38:10.760 - INFO - ${stdout} = REBOOT
20190402 11:38:10.761 - INFO - ${stderr} =
20190402 11:38:10.761 - INFO - ${rc} = 0
20190402 11:38:10.761 - INFO - +--------- END KW: SSHLibrary.Execute Command (2037)
20190402 11:38:10.761 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:10.763 - INFO - ${res} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:38:10.763 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:38:10.763 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:10.764 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:38:10.764 - INFO - ${result} = {u'stdout': u'REBOOT', u'stderr': u'', u'rc': 0}
20190402 11:38:10.765 - INFO - +-------- END KW: OpenStack.Run OS Command (2042)
20190402 11:38:10.765 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:38:10.766 - INFO - ${value} = REBOOT
20190402 11:38:10.766 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:38:10.766 - INFO - ${current_value} = REBOOT
20190402 11:38:10.767 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2048)
20190402 11:38:10.767 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:38:10.768 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:38:10.768 - FAIL - REBOOT != ACTIVE
20190402 11:38:10.768 - DEBUG - Traceback (most recent call last):
  None
20190402 11:38:10.768 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:38:10.768 - INFO - +------ END KW: OpenStack.Check Field Value (2052)
20190402 11:38:20.769 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:38:20.770 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:38:20.771 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:38:20.772 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:38:20.772 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:20.772 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:38:20.773 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:38:20.773 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:38:20.773 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:38:20.775 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:20.775 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:20.776 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:20.776 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:20.777 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:38:22.468 - INFO - Command exited with return code 0.
20190402 11:38:22.469 - INFO - ${stdout} = ACTIVE
20190402 11:38:22.469 - INFO - ${stderr} =
20190402 11:38:22.469 - INFO - ${rc} = 0
20190402 11:38:22.470 - INFO - +--------- END KW: SSHLibrary.Execute Command (1693)
20190402 11:38:22.470 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:22.472 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:38:22.472 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:38:22.472 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:22.473 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:38:22.474 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:38:22.474 - INFO - +-------- END KW: OpenStack.Run OS Command (1701)
20190402 11:38:22.474 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:38:22.475 - INFO - ${value} = ACTIVE
20190402 11:38:22.475 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:38:22.475 - INFO - ${current_value} = ACTIVE
20190402 11:38:22.476 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1705)
20190402 11:38:22.476 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:38:22.477 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:38:22.477 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:38:22.477 - INFO - +------ END KW: OpenStack.Check Field Value (1708)
20190402 11:38:22.477 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (131501)
20190402 11:38:22.478 - INFO - +---- END KW: OpenStack.Reboot Instance (134960)
------------------------------------------------------------------------------
20190402 11:38:22.478 - INFO - +--- END TEST: Reboot Instances (268730)
------------------------------------------------------------------------------
20190402 11:38:22.479 - INFO - +--- START TEST: Rebuild Instances [ ]
------------------------------------------------------------------------------
20190402 11:38:22.480 - INFO - +---- START KW: OpenStack.Rebuild Instance From Volume [ ${cirros_instance_name} | ${cirros_image_name} ]
20190402 11:38:22.481 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild --image ${image} ${vm_name} | True | 30 sec ]
20190402 11:38:22.481 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:22.482 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:22.482 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:38:22.482 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:22.483 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild --image cirros vm-cirros-1'.
20190402 11:38:24.517 - INFO - Command exited with return code 0.
20190402 11:38:24.517 - INFO - ${stdout} = +-------------------+----------------------------------------------------------+
| Field             | Value                                                    |
+-------------------+-----------------...
20190402 11:38:24.517 - INFO - ${stderr} =
20190402 11:38:24.518 - INFO - ${rc} = 0
20190402 11:38:24.518 - INFO - +------ END KW: SSHLibrary.Execute Command (2036)
20190402 11:38:24.518 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:24.520 - INFO - ${res} = {u'stdout': u'+-------------------+----------------------------------------------------------+\n| Field             | Value                                                    |\n+-------------------+-...
20190402 11:38:24.520 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:38:24.520 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:24.521 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:38:24.522 - INFO - +----- END KW: OpenStack.Run OS Command (2041)
20190402 11:38:24.522 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBUILD ]
20190402 11:38:24.523 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBUILD ]
20190402 11:38:24.524 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:38:24.525 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:38:24.525 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:38:24.526 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:24.526 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:38:24.527 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:38:24.527 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:38:24.527 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:38:24.528 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:24.528 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:24.529 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:24.529 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:24.530 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:38:26.164 - INFO - Command exited with return code 0.
20190402 11:38:26.165 - INFO - ${stdout} = REBUILD
20190402 11:38:26.165 - INFO - ${stderr} =
20190402 11:38:26.165 - INFO - ${rc} = 0
20190402 11:38:26.165 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:38:26.166 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:26.167 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:26.167 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:38:26.167 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:26.168 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:38:26.168 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:26.169 - INFO - +-------- END KW: OpenStack.Run OS Command (1642)
20190402 11:38:26.169 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:38:26.170 - INFO - ${value} = REBUILD
20190402 11:38:26.170 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:38:26.170 - INFO - ${current_value} = REBUILD
20190402 11:38:26.171 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1646)
20190402 11:38:26.171 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:38:26.171 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:38:26.172 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:38:26.172 - INFO - +------ END KW: OpenStack.Check Field Value (1649)
20190402 11:38:26.172 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1650)
20190402 11:38:26.172 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:38:26.173 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:38:26.174 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:38:26.175 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:38:26.176 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:38:26.176 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:26.176 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:38:26.177 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:38:26.177 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:38:26.178 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:38:26.179 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:26.179 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:26.179 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:26.179 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:26.180 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:38:27.762 - INFO - Command exited with return code 0.
20190402 11:38:27.762 - INFO - ${stdout} = REBUILD
20190402 11:38:27.763 - INFO - ${stderr} =
20190402 11:38:27.763 - INFO - ${rc} = 0
20190402 11:38:27.763 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:38:27.763 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:27.764 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:27.764 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:38:27.764 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:27.764 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:38:27.765 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:27.765 - INFO - +-------- END KW: OpenStack.Run OS Command (1588)
20190402 11:38:27.765 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:38:27.765 - INFO - ${value} = REBUILD
20190402 11:38:27.765 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:38:27.765 - INFO - ${current_value} = REBUILD
20190402 11:38:27.766 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1592)
20190402 11:38:27.766 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:38:27.766 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:38:27.766 - FAIL - REBUILD != ACTIVE
20190402 11:38:27.766 - DEBUG - Traceback (most recent call last):
  None
20190402 11:38:27.766 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:38:27.767 - INFO - +------ END KW: OpenStack.Check Field Value (1594)
20190402 11:38:37.767 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:38:37.769 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:38:37.770 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:38:37.771 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:38:37.771 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:37.772 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:38:37.773 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:38:37.773 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:38:37.773 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:38:37.774 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:37.775 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:37.775 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:37.775 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:37.776 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:38:39.410 - INFO - Command exited with return code 0.
20190402 11:38:39.411 - INFO - ${stdout} = REBUILD
20190402 11:38:39.411 - INFO - ${stderr} =
20190402 11:38:39.411 - INFO - ${rc} = 0
20190402 11:38:39.411 - INFO - +--------- END KW: SSHLibrary.Execute Command (1636)
20190402 11:38:39.412 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:39.413 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:39.413 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:38:39.413 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:39.414 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:38:39.415 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:39.415 - INFO - +-------- END KW: OpenStack.Run OS Command (1642)
20190402 11:38:39.415 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:38:39.416 - INFO - ${value} = REBUILD
20190402 11:38:39.416 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:38:39.416 - INFO - ${current_value} = REBUILD
20190402 11:38:39.417 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1648)
20190402 11:38:39.417 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:38:39.418 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:38:39.418 - FAIL - REBUILD != ACTIVE
20190402 11:38:39.418 - DEBUG - Traceback (most recent call last):
  None
20190402 11:38:39.418 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:38:39.419 - INFO - +------ END KW: OpenStack.Check Field Value (1651)
20190402 11:38:49.419 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:38:49.421 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:38:49.422 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:38:49.423 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:38:49.423 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:38:49.424 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:38:49.425 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:38:49.425 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:38:49.426 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:38:49.427 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:38:49.427 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:38:49.427 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:38:49.427 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:38:49.428 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:38:51.061 - INFO - Command exited with return code 0.
20190402 11:38:51.062 - INFO - ${stdout} = REBUILD
20190402 11:38:51.062 - INFO - ${stderr} =
20190402 11:38:51.062 - INFO - ${rc} = 0
20190402 11:38:51.063 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:38:51.063 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:38:51.064 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:51.065 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:38:51.065 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:38:51.066 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:38:51.066 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:38:51.067 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:38:51.067 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:38:51.067 - INFO - ${value} = REBUILD
20190402 11:38:51.068 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:38:51.068 - INFO - ${current_value} = REBUILD
20190402 11:38:51.068 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1647)
20190402 11:38:51.069 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:38:51.069 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:38:51.070 - FAIL - REBUILD != ACTIVE
20190402 11:38:51.070 - DEBUG - Traceback (most recent call last):
  None
20190402 11:38:51.070 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:38:51.070 - INFO - +------ END KW: OpenStack.Check Field Value (1651)
20190402 11:39:01.071 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:39:01.072 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:01.073 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:01.074 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:39:01.074 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:01.074 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:01.075 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:01.075 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:39:01.075 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:01.076 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:01.077 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:01.077 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:01.077 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:01.078 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:02.911 - INFO - Command exited with return code 0.
20190402 11:39:02.912 - INFO - ${stdout} = REBUILD
20190402 11:39:02.912 - INFO - ${stderr} =
20190402 11:39:02.912 - INFO - ${rc} = 0
20190402 11:39:02.912 - INFO - +--------- END KW: SSHLibrary.Execute Command (1835)
20190402 11:39:02.912 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:02.912 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:02.912 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:39:02.913 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:02.913 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:39:02.913 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:02.913 - INFO - +-------- END KW: OpenStack.Run OS Command (1838)
20190402 11:39:02.913 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:02.913 - INFO - ${value} = REBUILD
20190402 11:39:02.913 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:39:02.914 - INFO - ${current_value} = REBUILD
20190402 11:39:02.914 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1842)
20190402 11:39:02.914 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:02.914 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:02.914 - FAIL - REBUILD != ACTIVE
20190402 11:39:02.914 - DEBUG - Traceback (most recent call last):
  None
20190402 11:39:02.914 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:39:02.914 - INFO - +------ END KW: OpenStack.Check Field Value (1843)
20190402 11:39:12.915 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:39:12.916 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:12.917 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:12.918 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:39:12.918 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:12.918 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:12.919 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:12.919 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:39:12.920 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:12.921 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:12.922 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:12.922 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:12.922 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:12.923 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:14.756 - INFO - Command exited with return code 0.
20190402 11:39:14.757 - INFO - ${stdout} = REBUILD
20190402 11:39:14.757 - INFO - ${stderr} =
20190402 11:39:14.757 - INFO - ${rc} = 0
20190402 11:39:14.758 - INFO - +--------- END KW: SSHLibrary.Execute Command (1835)
20190402 11:39:14.758 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:14.759 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:14.759 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:39:14.759 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:14.760 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:39:14.760 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:14.761 - INFO - +-------- END KW: OpenStack.Run OS Command (1840)
20190402 11:39:14.761 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:14.761 - INFO - ${value} = REBUILD
20190402 11:39:14.761 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:39:14.762 - INFO - ${current_value} = REBUILD
20190402 11:39:14.762 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1846)
20190402 11:39:14.762 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:14.763 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:14.763 - FAIL - REBUILD != ACTIVE
20190402 11:39:14.763 - DEBUG - Traceback (most recent call last):
  None
20190402 11:39:14.763 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:39:14.764 - INFO - +------ END KW: OpenStack.Check Field Value (1849)
20190402 11:39:24.764 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:39:24.765 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:24.765 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:24.766 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:39:24.766 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:24.766 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:24.766 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:24.766 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:39:24.767 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:24.767 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:24.767 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:24.768 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:39:24.768 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:24.768 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:26.449 - INFO - Command exited with return code 0.
20190402 11:39:26.450 - INFO - ${stdout} = REBUILD
20190402 11:39:26.450 - INFO - ${stderr} =
20190402 11:39:26.450 - INFO - ${rc} = 0
20190402 11:39:26.450 - INFO - +--------- END KW: SSHLibrary.Execute Command (1682)
20190402 11:39:26.450 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:26.452 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:26.452 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:39:26.452 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:26.453 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:39:26.453 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:26.453 - INFO - +-------- END KW: OpenStack.Run OS Command (1686)
20190402 11:39:26.454 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:26.454 - INFO - ${value} = REBUILD
20190402 11:39:26.454 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:39:26.455 - INFO - ${current_value} = REBUILD
20190402 11:39:26.455 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1690)
20190402 11:39:26.455 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:26.456 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:26.456 - FAIL - REBUILD != ACTIVE
20190402 11:39:26.456 - DEBUG - Traceback (most recent call last):
  None
20190402 11:39:26.456 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:39:26.457 - INFO - +------ END KW: OpenStack.Check Field Value (1693)
20190402 11:39:36.457 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:39:36.459 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:36.460 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:36.461 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:39:36.461 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:36.461 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:36.462 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:36.462 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:39:36.462 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:36.464 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:36.464 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:36.464 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:39:36.465 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:36.466 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:38.198 - INFO - Command exited with return code 0.
20190402 11:39:38.198 - INFO - ${stdout} = ACTIVE
20190402 11:39:38.198 - INFO - ${stderr} =
20190402 11:39:38.198 - INFO - ${rc} = 0
20190402 11:39:38.199 - INFO - +--------- END KW: SSHLibrary.Execute Command (1733)
20190402 11:39:38.199 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:38.200 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:39:38.200 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:39:38.200 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:38.201 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:39:38.201 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:39:38.201 - INFO - +-------- END KW: OpenStack.Run OS Command (1739)
20190402 11:39:38.201 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:38.201 - INFO - ${value} = ACTIVE
20190402 11:39:38.201 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:39:38.202 - INFO - ${current_value} = ACTIVE
20190402 11:39:38.202 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1743)
20190402 11:39:38.202 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:38.202 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:38.202 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:39:38.203 - INFO - +------ END KW: OpenStack.Check Field Value (1746)
20190402 11:39:38.203 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (72031)
20190402 11:39:38.203 - INFO - +---- END KW: OpenStack.Rebuild Instance From Volume (75723)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:39:38.203 - INFO - +---- START KW: OpenStack.Rebuild Instance From Volume [ ${cirros_instance_name_2} | ${cirros_image_name} ]
20190402 11:39:38.205 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server rebuild --image ${image} ${vm_name} | True | 30 sec ]
20190402 11:39:38.206 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:38.206 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:38.206 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:39:38.206 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:38.207 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server rebuild --image cirros vm-cirros-2'.
20190402 11:39:40.540 - INFO - Command exited with return code 0.
20190402 11:39:40.540 - INFO - ${stdout} = +-------------------+----------------------------------------------------------+
| Field             | Value                                                    |
+-------------------+-----------------...
20190402 11:39:40.540 - INFO - ${stderr} =
20190402 11:39:40.540 - INFO - ${rc} = 0
20190402 11:39:40.541 - INFO - +------ END KW: SSHLibrary.Execute Command (2335)
20190402 11:39:40.541 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:40.542 - INFO - ${res} = {u'stdout': u'+-------------------+----------------------------------------------------------+\n| Field             | Value                                                    |\n+-------------------+-...
20190402 11:39:40.542 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:39:40.543 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:40.543 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:39:40.544 - INFO - +----- END KW: OpenStack.Run OS Command (2338)
20190402 11:39:40.544 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | REBUILD ]
20190402 11:39:40.545 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | REBUILD ]
20190402 11:39:40.545 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:40.546 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:40.547 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:39:40.547 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:40.547 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:40.548 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:40.548 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:39:40.548 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:40.550 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:40.550 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:40.550 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:39:40.551 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:40.551 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:42.184 - INFO - Command exited with return code 0.
20190402 11:39:42.185 - INFO - ${stdout} = REBUILD
20190402 11:39:42.185 - INFO - ${stderr} =
20190402 11:39:42.185 - INFO - ${rc} = 0
20190402 11:39:42.185 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:39:42.186 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:42.187 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:42.187 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:39:42.187 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:42.188 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:39:42.188 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:42.189 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:39:42.189 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:42.189 - INFO - ${value} = REBUILD
20190402 11:39:42.190 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:39:42.190 - INFO - ${current_value} = REBUILD
20190402 11:39:42.190 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:39:42.191 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:42.191 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:42.191 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:39:42.192 - INFO - +------ END KW: OpenStack.Check Field Value (1647)
20190402 11:39:42.192 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1648)
20190402 11:39:42.192 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:39:42.193 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:39:42.194 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:42.195 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:42.195 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:39:42.195 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:39:42.195 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:42.196 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:42.196 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:39:42.196 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:42.198 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:42.198 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:42.199 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:39:42.199 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:42.200 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:43.782 - INFO - Command exited with return code 0.
20190402 11:39:43.782 - INFO - ${stdout} = REBUILD
20190402 11:39:43.783 - INFO - ${stderr} =
20190402 11:39:43.783 - INFO - ${rc} = 0
20190402 11:39:43.783 - INFO - +--------- END KW: SSHLibrary.Execute Command (1584)
20190402 11:39:43.784 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:43.785 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:43.786 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:39:43.786 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:43.787 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:39:43.787 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:43.788 - INFO - +-------- END KW: OpenStack.Run OS Command (1591)
20190402 11:39:43.788 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:43.789 - INFO - ${value} = REBUILD
20190402 11:39:43.789 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:39:43.790 - INFO - ${current_value} = REBUILD
20190402 11:39:43.790 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1597)
20190402 11:39:43.790 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:43.791 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:43.791 - FAIL - REBUILD != ACTIVE
20190402 11:39:43.791 - DEBUG - Traceback (most recent call last):
  None
20190402 11:39:43.791 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:39:43.792 - INFO - +------ END KW: OpenStack.Check Field Value (1599)
20190402 11:39:53.792 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:39:53.793 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:39:53.794 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:39:53.794 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:39:53.794 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:39:53.794 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:39:53.794 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:39:53.795 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:39:53.795 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:39:53.795 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:39:53.795 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:39:53.796 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:39:53.796 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:39:53.796 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:39:55.577 - INFO - Command exited with return code 0.
20190402 11:39:55.577 - INFO - ${stdout} = REBUILD
20190402 11:39:55.578 - INFO - ${stderr} =
20190402 11:39:55.578 - INFO - ${rc} = 0
20190402 11:39:55.578 - INFO - +--------- END KW: SSHLibrary.Execute Command (1782)
20190402 11:39:55.578 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:39:55.578 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:55.578 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:39:55.579 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:39:55.579 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:39:55.579 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:39:55.579 - INFO - +-------- END KW: OpenStack.Run OS Command (1784)
20190402 11:39:55.579 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:39:55.580 - INFO - ${value} = REBUILD
20190402 11:39:55.580 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:39:55.580 - INFO - ${current_value} = REBUILD
20190402 11:39:55.580 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1787)
20190402 11:39:55.580 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:39:55.580 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:39:55.580 - FAIL - REBUILD != ACTIVE
20190402 11:39:55.580 - DEBUG - Traceback (most recent call last):
  None
20190402 11:39:55.580 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:39:55.581 - INFO - +------ END KW: OpenStack.Check Field Value (1789)
20190402 11:40:05.581 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:40:05.583 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:40:05.584 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:40:05.584 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:40:05.585 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:40:05.585 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:40:05.586 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:40:05.586 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:40:05.586 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:40:05.587 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:40:05.589 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:40:05.589 - INFO - +--------- END KW: BuiltIn.Set Variable (2)
20190402 11:40:05.589 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:40:05.590 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:40:07.323 - INFO - Command exited with return code 0.
20190402 11:40:07.323 - INFO - ${stdout} = REBUILD
20190402 11:40:07.323 - INFO - ${stderr} =
20190402 11:40:07.323 - INFO - ${rc} = 0
20190402 11:40:07.323 - INFO - +--------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:40:07.324 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:40:07.324 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:07.324 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:40:07.324 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:40:07.324 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:40:07.324 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:07.325 - INFO - +-------- END KW: OpenStack.Run OS Command (1739)
20190402 11:40:07.325 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:40:07.325 - INFO - ${value} = REBUILD
20190402 11:40:07.325 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:40:07.325 - INFO - ${current_value} = REBUILD
20190402 11:40:07.325 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1743)
20190402 11:40:07.325 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:40:07.325 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:40:07.326 - FAIL - REBUILD != ACTIVE
20190402 11:40:07.326 - DEBUG - Traceback (most recent call last):
  None
20190402 11:40:07.326 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:40:07.326 - INFO - +------ END KW: OpenStack.Check Field Value (1745)
20190402 11:40:17.326 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:40:17.327 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:40:17.328 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:40:17.329 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:40:17.329 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:40:17.330 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:40:17.330 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:40:17.331 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:40:17.331 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:40:17.332 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:40:17.333 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:40:17.333 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:40:17.333 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:40:17.334 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:40:19.117 - INFO - Command exited with return code 0.
20190402 11:40:19.117 - INFO - ${stdout} = REBUILD
20190402 11:40:19.117 - INFO - ${stderr} =
20190402 11:40:19.118 - INFO - ${rc} = 0
20190402 11:40:19.118 - INFO - +--------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:40:19.118 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:40:19.119 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:19.120 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:40:19.120 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:40:19.121 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:40:19.121 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:19.121 - INFO - +-------- END KW: OpenStack.Run OS Command (1790)
20190402 11:40:19.122 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:40:19.122 - INFO - ${value} = REBUILD
20190402 11:40:19.122 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:40:19.123 - INFO - ${current_value} = REBUILD
20190402 11:40:19.123 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1796)
20190402 11:40:19.123 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:40:19.124 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:40:19.124 - FAIL - REBUILD != ACTIVE
20190402 11:40:19.124 - DEBUG - Traceback (most recent call last):
  None
20190402 11:40:19.125 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:40:19.125 - INFO - +------ END KW: OpenStack.Check Field Value (1799)
20190402 11:40:29.125 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:40:29.126 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:40:29.127 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:40:29.127 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:40:29.127 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:40:29.127 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:40:29.128 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:40:29.128 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:40:29.128 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:40:29.128 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:40:29.129 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:40:29.129 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:40:29.129 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:40:29.129 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:40:30.812 - INFO - Command exited with return code 0.
20190402 11:40:30.813 - INFO - ${stdout} = REBUILD
20190402 11:40:30.813 - INFO - ${stderr} =
20190402 11:40:30.813 - INFO - ${rc} = 0
20190402 11:40:30.813 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 11:40:30.814 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:40:30.816 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:30.816 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:40:30.817 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:40:30.817 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:40:30.818 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:30.818 - INFO - +-------- END KW: OpenStack.Run OS Command (1690)
20190402 11:40:30.818 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:40:30.819 - INFO - ${value} = REBUILD
20190402 11:40:30.819 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:40:30.820 - INFO - ${current_value} = REBUILD
20190402 11:40:30.820 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1694)
20190402 11:40:30.820 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:40:30.821 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:40:30.821 - FAIL - REBUILD != ACTIVE
20190402 11:40:30.821 - DEBUG - Traceback (most recent call last):
  None
20190402 11:40:30.821 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:40:30.822 - INFO - +------ END KW: OpenStack.Check Field Value (1697)
20190402 11:40:40.823 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:40:40.824 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:40:40.825 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:40:40.826 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:40:40.826 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:40:40.826 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:40:40.827 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:40:40.827 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:40:40.827 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:40:40.829 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:40:40.829 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:40:40.829 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:40:40.830 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:40:40.831 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:40:42.514 - INFO - Command exited with return code 0.
20190402 11:40:42.514 - INFO - ${stdout} = REBUILD
20190402 11:40:42.515 - INFO - ${stderr} =
20190402 11:40:42.515 - INFO - ${rc} = 0
20190402 11:40:42.515 - INFO - +--------- END KW: SSHLibrary.Execute Command (1685)
20190402 11:40:42.515 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:40:42.517 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:42.517 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:40:42.517 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:40:42.518 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:40:42.518 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:42.519 - INFO - +-------- END KW: OpenStack.Run OS Command (1692)
20190402 11:40:42.519 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:40:42.520 - INFO - ${value} = REBUILD
20190402 11:40:42.520 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:40:42.520 - INFO - ${current_value} = REBUILD
20190402 11:40:42.520 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1696)
20190402 11:40:42.521 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:40:42.521 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:40:42.522 - FAIL - REBUILD != ACTIVE
20190402 11:40:42.522 - DEBUG - Traceback (most recent call last):
  None
20190402 11:40:42.522 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:40:42.522 - INFO - +------ END KW: OpenStack.Check Field Value (1699)
20190402 11:40:52.523 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:40:52.523 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:40:52.524 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:40:52.524 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:40:52.524 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:40:52.524 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:40:52.525 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:40:52.525 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:40:52.525 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:40:52.526 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:40:52.526 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:40:52.526 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:40:52.526 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:40:52.527 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:40:54.157 - INFO - Command exited with return code 0.
20190402 11:40:54.157 - INFO - ${stdout} = REBUILD
20190402 11:40:54.158 - INFO - ${stderr} =
20190402 11:40:54.158 - INFO - ${rc} = 0
20190402 11:40:54.158 - INFO - +--------- END KW: SSHLibrary.Execute Command (1632)
20190402 11:40:54.158 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:40:54.158 - INFO - ${res} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:54.158 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:40:54.159 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:40:54.159 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:40:54.159 - INFO - ${result} = {u'stdout': u'REBUILD', u'stderr': u'', u'rc': 0}
20190402 11:40:54.159 - INFO - +-------- END KW: OpenStack.Run OS Command (1634)
20190402 11:40:54.159 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:40:54.159 - INFO - ${value} = REBUILD
20190402 11:40:54.159 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:40:54.160 - INFO - ${current_value} = REBUILD
20190402 11:40:54.160 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1637)
20190402 11:40:54.160 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:40:54.160 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:40:54.160 - FAIL - REBUILD != ACTIVE
20190402 11:40:54.160 - DEBUG - Traceback (most recent call last):
  None
20190402 11:40:54.160 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:40:54.160 - INFO - +------ END KW: OpenStack.Check Field Value (1637)
20190402 11:41:04.161 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:41:04.162 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:04.162 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:04.163 - INFO - ${openstack_cmd} = openstack server show vm-cirros-2
20190402 11:41:04.163 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:04.163 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:04.163 - INFO - ${cmd} = openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:04.164 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:41:04.164 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:04.164 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:04.164 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:04.165 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:41:04.165 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:04.165 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-2|grep -w status|tail -1|awk '{print$4}''.
20190402 11:41:05.846 - INFO - Command exited with return code 0.
20190402 11:41:05.846 - INFO - ${stdout} = ACTIVE
20190402 11:41:05.846 - INFO - ${stderr} =
20190402 11:41:05.846 - INFO - ${rc} = 0
20190402 11:41:05.847 - INFO - +--------- END KW: SSHLibrary.Execute Command (1681)
20190402 11:41:05.847 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:05.848 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:41:05.848 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:41:05.848 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:05.849 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:05.849 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:41:05.850 - INFO - +-------- END KW: OpenStack.Run OS Command (1685)
20190402 11:41:05.850 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:41:05.850 - INFO - ${value} = ACTIVE
20190402 11:41:05.850 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:41:05.851 - INFO - ${current_value} = ACTIVE
20190402 11:41:05.851 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1690)
20190402 11:41:05.851 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:41:05.852 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:41:05.852 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:41:05.852 - INFO - +------ END KW: OpenStack.Check Field Value (1691)
20190402 11:41:05.853 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (83660)
20190402 11:41:05.853 - INFO - +---- END KW: OpenStack.Rebuild Instance From Volume (87650)
------------------------------------------------------------------------------
20190402 11:41:05.853 - INFO - +--- END TEST: Rebuild Instances (163374)
------------------------------------------------------------------------------
20190402 11:41:05.854 - INFO - +--- START TEST: Resize Instances [ ]
------------------------------------------------------------------------------
20190402 11:41:05.855 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name_2} ]
20190402 11:41:05.856 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 11:41:05.856 - INFO - ${openstack_cmd} = openstack flavor create
20190402 11:41:05.856 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:41:05.857 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 11:41:05.857 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small
20190402 11:41:05.858 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:41:05.858 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:41:05.859 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:05.859 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:05.859 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:41:05.860 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:05.860 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f2.small'.
20190402 11:41:07.292 - INFO - Command exited with return code 0.
20190402 11:41:07.292 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 11:41:07.293 - INFO - ${stderr} =
20190402 11:41:07.293 - INFO - ${rc} = 0
20190402 11:41:07.293 - INFO - +------ END KW: SSHLibrary.Execute Command (1433)
20190402 11:41:07.293 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:07.295 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 11:41:07.295 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:41:07.296 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:07.297 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:07.297 - INFO - +----- END KW: OpenStack.Run OS Command (1439)
20190402 11:41:07.298 - INFO - +---- END KW: OpenStack.Create Flavor (1442)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:41:07.298 - INFO - +---- START KW: OpenStack.Resize Instance [ ${cirros_instance_name} | ${cirros_flavor_name_2} ]
20190402 11:41:07.300 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --flavor ${flavor} ${vm_name} | True | 30 sec ]
20190402 11:41:07.301 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:07.301 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:07.301 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:41:07.301 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:07.302 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --flavor f2.small vm-cirros-1'.
20190402 11:41:10.436 - INFO - Command exited with return code 0.
20190402 11:41:10.436 - INFO - ${stdout} =
20190402 11:41:10.437 - INFO - ${stderr} =
20190402 11:41:10.437 - INFO - ${rc} = 0
20190402 11:41:10.437 - INFO - +------ END KW: SSHLibrary.Execute Command (3136)
20190402 11:41:10.437 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:10.437 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:41:10.437 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:41:10.438 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:10.438 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:41:10.438 - INFO - +----- END KW: OpenStack.Run OS Command (3138)
20190402 11:41:10.438 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | RESIZE ]
20190402 11:41:10.439 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | RESIZE ]
20190402 11:41:10.439 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:10.440 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:10.440 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:41:10.440 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:41:10.440 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:10.440 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:10.440 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:41:10.441 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:10.441 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:10.441 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:10.441 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:41:10.441 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:10.442 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:41:12.073 - INFO - Command exited with return code 0.
20190402 11:41:12.074 - INFO - ${stdout} = RESIZE
20190402 11:41:12.074 - INFO - ${stderr} =
20190402 11:41:12.074 - INFO - ${rc} = 0
20190402 11:41:12.074 - INFO - +--------- END KW: SSHLibrary.Execute Command (1633)
20190402 11:41:12.074 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:12.075 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:12.076 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:41:12.076 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:12.077 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:12.077 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:12.077 - INFO - +-------- END KW: OpenStack.Run OS Command (1636)
20190402 11:41:12.077 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:41:12.078 - INFO - ${value} = RESIZE
20190402 11:41:12.079 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:41:12.079 - INFO - ${current_value} = RESIZE
20190402 11:41:12.080 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1640)
20190402 11:41:12.080 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:41:12.081 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:41:12.081 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:41:12.082 - INFO - +------ END KW: OpenStack.Check Field Value (1642)
20190402 11:41:12.082 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1644)
20190402 11:41:12.082 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:41:12.084 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:41:12.084 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:12.085 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:12.086 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:41:12.086 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:12.086 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:12.087 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:12.087 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:41:12.087 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:12.088 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:12.089 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:12.089 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:12.089 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:12.090 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:41:13.671 - INFO - Command exited with return code 0.
20190402 11:41:13.672 - INFO - ${stdout} = RESIZE
20190402 11:41:13.672 - INFO - ${stderr} =
20190402 11:41:13.672 - INFO - ${rc} = 0
20190402 11:41:13.672 - INFO - +--------- END KW: SSHLibrary.Execute Command (1583)
20190402 11:41:13.673 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:13.674 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:13.674 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:41:13.674 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:13.675 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:13.675 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:13.675 - INFO - +-------- END KW: OpenStack.Run OS Command (1588)
20190402 11:41:13.675 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:41:13.676 - INFO - ${value} = RESIZE
20190402 11:41:13.676 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:41:13.676 - INFO - ${current_value} = RESIZE
20190402 11:41:13.676 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1592)
20190402 11:41:13.677 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:41:13.677 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:41:13.677 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:41:13.677 - DEBUG - Traceback (most recent call last):
  None
20190402 11:41:13.678 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:41:13.678 - INFO - +------ END KW: OpenStack.Check Field Value (1594)
20190402 11:41:23.679 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:41:23.680 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:23.681 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:23.682 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:41:23.682 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:23.682 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:23.683 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:23.683 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:41:23.683 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:23.684 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:23.685 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:23.685 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:23.685 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:23.686 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:41:25.369 - INFO - Command exited with return code 0.
20190402 11:41:25.370 - INFO - ${stdout} = RESIZE
20190402 11:41:25.370 - INFO - ${stderr} =
20190402 11:41:25.370 - INFO - ${rc} = 0
20190402 11:41:25.370 - INFO - +--------- END KW: SSHLibrary.Execute Command (1685)
20190402 11:41:25.370 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:25.372 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:25.372 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:41:25.372 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:25.373 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:25.373 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:25.373 - INFO - +-------- END KW: OpenStack.Run OS Command (1690)
20190402 11:41:25.374 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:41:25.374 - INFO - ${value} = RESIZE
20190402 11:41:25.374 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:41:25.375 - INFO - ${current_value} = RESIZE
20190402 11:41:25.375 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1695)
20190402 11:41:25.375 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:41:25.376 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:41:25.376 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:41:25.376 - DEBUG - Traceback (most recent call last):
  None
20190402 11:41:25.377 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:41:25.377 - INFO - +------ END KW: OpenStack.Check Field Value (1699)
20190402 11:41:35.378 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:41:35.379 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:35.380 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:35.380 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:41:35.381 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:35.381 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:35.382 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:35.382 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:41:35.382 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:35.383 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:35.384 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:35.384 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:35.384 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:35.385 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:41:37.569 - INFO - Command exited with return code 0.
20190402 11:41:37.570 - INFO - ${stdout} = RESIZE
20190402 11:41:37.570 - INFO - ${stderr} =
20190402 11:41:37.570 - INFO - ${rc} = 0
20190402 11:41:37.570 - INFO - +--------- END KW: SSHLibrary.Execute Command (2186)
20190402 11:41:37.571 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:37.572 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:37.573 - INFO - +--------- END KW: BuiltIn.Create Dictionary (3)
20190402 11:41:37.573 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:37.574 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:37.575 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:37.575 - INFO - +-------- END KW: OpenStack.Run OS Command (2193)
20190402 11:41:37.575 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:41:37.576 - INFO - ${value} = RESIZE
20190402 11:41:37.576 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:41:37.576 - INFO - ${current_value} = RESIZE
20190402 11:41:37.577 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2197)
20190402 11:41:37.577 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:41:37.577 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:41:37.578 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:41:37.578 - DEBUG - Traceback (most recent call last):
  None
20190402 11:41:37.578 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:41:37.578 - INFO - +------ END KW: OpenStack.Check Field Value (2201)
20190402 11:41:47.579 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:41:47.579 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:47.579 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:47.580 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:41:47.580 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:47.580 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:47.580 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:47.580 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:41:47.580 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:47.581 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:47.582 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:47.582 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:47.582 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:47.582 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:41:49.216 - INFO - Command exited with return code 0.
20190402 11:41:49.216 - INFO - ${stdout} = RESIZE
20190402 11:41:49.216 - INFO - ${stderr} =
20190402 11:41:49.217 - INFO - ${rc} = 0
20190402 11:41:49.217 - INFO - +--------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:41:49.217 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:41:49.217 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:49.217 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:41:49.217 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:41:49.218 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:41:49.218 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:41:49.218 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:41:49.218 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:41:49.218 - INFO - ${value} = RESIZE
20190402 11:41:49.218 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:41:49.218 - INFO - ${current_value} = RESIZE
20190402 11:41:49.218 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1639)
20190402 11:41:49.219 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:41:49.219 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:41:49.219 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:41:49.219 - DEBUG - Traceback (most recent call last):
  None
20190402 11:41:49.219 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:41:49.219 - INFO - +------ END KW: OpenStack.Check Field Value (1641)
20190402 11:41:59.219 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:41:59.220 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:41:59.220 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:41:59.220 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:41:59.221 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:59.221 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:41:59.221 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:41:59.221 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:41:59.221 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:41:59.221 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:41:59.222 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:41:59.222 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:41:59.222 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:41:59.222 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:01.206 - INFO - Command exited with return code 0.
20190402 11:42:01.206 - INFO - ${stdout} = RESIZE
20190402 11:42:01.206 - INFO - ${stderr} =
20190402 11:42:01.206 - INFO - ${rc} = 0
20190402 11:42:01.206 - INFO - +--------- END KW: SSHLibrary.Execute Command (1984)
20190402 11:42:01.206 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:01.207 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:01.207 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:42:01.207 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:01.207 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:42:01.207 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:01.207 - INFO - +-------- END KW: OpenStack.Run OS Command (1986)
20190402 11:42:01.207 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:01.208 - INFO - ${value} = RESIZE
20190402 11:42:01.208 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:42:01.208 - INFO - ${current_value} = RESIZE
20190402 11:42:01.208 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1988)
20190402 11:42:01.208 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:01.208 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:01.208 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:42:01.208 - DEBUG - Traceback (most recent call last):
  None
20190402 11:42:01.208 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:42:01.209 - INFO - +------ END KW: OpenStack.Check Field Value (1990)
20190402 11:42:11.209 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:42:11.210 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:11.210 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:11.210 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:11.210 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:42:11.211 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:11.211 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:11.211 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:42:11.211 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:11.211 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:11.212 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:11.212 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:11.212 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:11.212 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:13.446 - INFO - Command exited with return code 0.
20190402 11:42:13.447 - INFO - ${stdout} = RESIZE
20190402 11:42:13.447 - INFO - ${stderr} =
20190402 11:42:13.447 - INFO - ${rc} = 0
20190402 11:42:13.447 - INFO - +--------- END KW: SSHLibrary.Execute Command (2235)
20190402 11:42:13.447 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:13.448 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:13.448 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:42:13.448 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:13.448 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:42:13.448 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:13.448 - INFO - +-------- END KW: OpenStack.Run OS Command (2237)
20190402 11:42:13.448 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:13.449 - INFO - ${value} = RESIZE
20190402 11:42:13.449 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:42:13.449 - INFO - ${current_value} = RESIZE
20190402 11:42:13.449 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2239)
20190402 11:42:13.449 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:13.449 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:13.449 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:42:13.449 - DEBUG - Traceback (most recent call last):
  None
20190402 11:42:13.449 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:42:13.449 - INFO - +------ END KW: OpenStack.Check Field Value (2240)
20190402 11:42:23.450 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:42:23.451 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:23.452 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:23.452 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:23.453 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:23.453 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:23.454 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:23.454 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:42:23.454 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:23.455 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:23.456 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:23.456 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:23.456 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:23.457 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:25.443 - INFO - Command exited with return code 0.
20190402 11:42:25.443 - INFO - ${stdout} = VERIFY_RESIZE
20190402 11:42:25.444 - INFO - ${stderr} =
20190402 11:42:25.444 - INFO - ${rc} = 0
20190402 11:42:25.444 - INFO - +--------- END KW: SSHLibrary.Execute Command (1988)
20190402 11:42:25.444 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:25.445 - INFO - ${res} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:25.446 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:42:25.446 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:25.447 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:42:25.447 - INFO - ${result} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:25.447 - INFO - +-------- END KW: OpenStack.Run OS Command (1993)
20190402 11:42:25.447 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:25.448 - INFO - ${value} = VERIFY_RESIZE
20190402 11:42:25.448 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:42:25.448 - INFO - ${current_value} = VERIFY_RESIZE
20190402 11:42:25.449 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1998)
20190402 11:42:25.449 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:25.449 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:25.450 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:42:25.450 - INFO - +------ END KW: OpenStack.Check Field Value (2000)
20190402 11:42:25.450 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (73368)
20190402 11:42:25.450 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --confirm ${vm_name} | True | 30 sec ]
20190402 11:42:25.451 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:25.452 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:25.452 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:42:25.453 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:25.454 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --confirm vm-cirros-1'.
20190402 11:42:27.150 - INFO - Command exited with return code 0.
20190402 11:42:27.150 - INFO - ${stdout} =
20190402 11:42:27.150 - INFO - ${stderr} =
20190402 11:42:27.151 - INFO - ${rc} = 0
20190402 11:42:27.151 - INFO - +------ END KW: SSHLibrary.Execute Command (1698)
20190402 11:42:27.151 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:27.151 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:42:27.151 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:42:27.151 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:27.152 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:42:27.152 - INFO - +----- END KW: OpenStack.Run OS Command (1702)
20190402 11:42:27.152 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:42:27.152 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:42:27.153 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:27.153 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:27.153 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:27.153 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:42:27.153 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:27.154 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:27.154 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:42:27.154 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:27.154 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:27.155 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:27.155 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:27.155 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:27.155 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:29.167 - INFO - Command exited with return code 0.
20190402 11:42:29.168 - INFO - ${stdout} = ACTIVE
20190402 11:42:29.168 - INFO - ${stderr} =
20190402 11:42:29.168 - INFO - ${rc} = 0
20190402 11:42:29.168 - INFO - +--------- END KW: SSHLibrary.Execute Command (2013)
20190402 11:42:29.168 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:29.169 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:42:29.169 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:42:29.170 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:29.170 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:42:29.170 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:42:29.171 - INFO - +-------- END KW: OpenStack.Run OS Command (2017)
20190402 11:42:29.171 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:29.171 - INFO - ${value} = ACTIVE
20190402 11:42:29.171 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:42:29.172 - INFO - ${current_value} = ACTIVE
20190402 11:42:29.172 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2019)
20190402 11:42:29.172 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:29.173 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:29.173 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:42:29.173 - INFO - +------ END KW: OpenStack.Check Field Value (2021)
20190402 11:42:29.173 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (2021)
20190402 11:42:29.174 - INFO - +---- END KW: OpenStack.Resize Instance (81875)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:42:29.174 - INFO - +---- START KW: OpenStack.Resize Instance [ ${cirros_instance_name} | ${cirros_flavor_name} ]
20190402 11:42:29.175 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --flavor ${flavor} ${vm_name} | True | 30 sec ]
20190402 11:42:29.176 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:29.176 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:29.176 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:42:29.177 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:29.178 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --flavor f1.small vm-cirros-1'.
20190402 11:42:32.262 - INFO - Command exited with return code 0.
20190402 11:42:32.262 - INFO - ${stdout} =
20190402 11:42:32.262 - INFO - ${stderr} =
20190402 11:42:32.262 - INFO - ${rc} = 0
20190402 11:42:32.262 - INFO - +------ END KW: SSHLibrary.Execute Command (3085)
20190402 11:42:32.262 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:32.263 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:42:32.263 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:42:32.263 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:32.264 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:42:32.264 - INFO - +----- END KW: OpenStack.Run OS Command (3089)
20190402 11:42:32.264 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | RESIZE ]
20190402 11:42:32.265 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | RESIZE ]
20190402 11:42:32.265 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:32.266 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:32.266 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:32.267 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:32.267 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:32.267 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:32.267 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:42:32.268 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:32.268 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:32.269 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:32.269 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:32.269 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:32.269 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:33.952 - INFO - Command exited with return code 0.
20190402 11:42:33.952 - INFO - ${stdout} = RESIZE
20190402 11:42:33.952 - INFO - ${stderr} =
20190402 11:42:33.953 - INFO - ${rc} = 0
20190402 11:42:33.953 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 11:42:33.953 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:33.954 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:33.954 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:42:33.955 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:33.955 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:42:33.955 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:33.956 - INFO - +-------- END KW: OpenStack.Run OS Command (1688)
20190402 11:42:33.956 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:33.956 - INFO - ${value} = RESIZE
20190402 11:42:33.957 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:42:33.957 - INFO - ${current_value} = RESIZE
20190402 11:42:33.957 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1692)
20190402 11:42:33.957 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:33.958 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:33.958 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:42:33.958 - INFO - +------ END KW: OpenStack.Check Field Value (1693)
20190402 11:42:33.959 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1694)
20190402 11:42:33.959 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:42:33.960 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:42:33.960 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:33.962 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:33.963 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:33.963 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:33.963 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:33.964 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:33.964 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:42:33.964 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:33.965 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:33.965 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:33.965 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:42:33.966 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:33.967 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:35.650 - INFO - Command exited with return code 0.
20190402 11:42:35.650 - INFO - ${stdout} = RESIZE
20190402 11:42:35.650 - INFO - ${stderr} =
20190402 11:42:35.650 - INFO - ${rc} = 0
20190402 11:42:35.650 - INFO - +--------- END KW: SSHLibrary.Execute Command (1684)
20190402 11:42:35.651 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:35.652 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:35.652 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:42:35.652 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:35.653 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:42:35.653 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:35.653 - INFO - +-------- END KW: OpenStack.Run OS Command (1689)
20190402 11:42:35.654 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:35.654 - INFO - ${value} = RESIZE
20190402 11:42:35.654 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:42:35.655 - INFO - ${current_value} = RESIZE
20190402 11:42:35.655 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1695)
20190402 11:42:35.655 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:35.656 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:35.656 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:42:35.656 - DEBUG - Traceback (most recent call last):
  None
20190402 11:42:35.656 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:42:35.657 - INFO - +------ END KW: OpenStack.Check Field Value (1697)
20190402 11:42:45.657 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:42:45.658 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:45.658 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:45.658 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:45.658 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:42:45.658 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:45.659 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:45.659 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:42:45.659 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:45.659 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:45.660 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:45.660 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:45.660 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:45.660 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:47.491 - INFO - Command exited with return code 0.
20190402 11:42:47.492 - INFO - ${stdout} = RESIZE
20190402 11:42:47.492 - INFO - ${stderr} =
20190402 11:42:47.492 - INFO - ${rc} = 0
20190402 11:42:47.492 - INFO - +--------- END KW: SSHLibrary.Execute Command (1832)
20190402 11:42:47.492 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:47.492 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:47.493 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:42:47.493 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:47.493 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:42:47.493 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:47.493 - INFO - +-------- END KW: OpenStack.Run OS Command (1834)
20190402 11:42:47.493 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:47.493 - INFO - ${value} = RESIZE
20190402 11:42:47.493 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:42:47.494 - INFO - ${current_value} = RESIZE
20190402 11:42:47.494 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1836)
20190402 11:42:47.494 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:47.494 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:47.494 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:42:47.494 - DEBUG - Traceback (most recent call last):
  None
20190402 11:42:47.494 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:42:47.494 - INFO - +------ END KW: OpenStack.Check Field Value (1837)
20190402 11:42:57.495 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:42:57.496 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:42:57.497 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:42:57.498 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:42:57.498 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:57.498 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:42:57.499 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:42:57.499 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:42:57.500 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:42:57.501 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:42:57.502 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:42:57.502 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:42:57.502 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:42:57.503 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:42:59.136 - INFO - Command exited with return code 0.
20190402 11:42:59.136 - INFO - ${stdout} = RESIZE
20190402 11:42:59.136 - INFO - ${stderr} =
20190402 11:42:59.136 - INFO - ${rc} = 0
20190402 11:42:59.136 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:42:59.137 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:42:59.137 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:59.137 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:42:59.137 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:42:59.137 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:42:59.138 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:42:59.138 - INFO - +-------- END KW: OpenStack.Run OS Command (1638)
20190402 11:42:59.138 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:42:59.138 - INFO - ${value} = RESIZE
20190402 11:42:59.138 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:42:59.138 - INFO - ${current_value} = RESIZE
20190402 11:42:59.138 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1642)
20190402 11:42:59.138 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:42:59.138 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:42:59.139 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:42:59.139 - DEBUG - Traceback (most recent call last):
  None
20190402 11:42:59.139 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:42:59.139 - INFO - +------ END KW: OpenStack.Check Field Value (1644)
20190402 11:43:09.139 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:43:09.140 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:43:09.141 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:43:09.142 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:43:09.142 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:09.143 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:43:09.143 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:43:09.143 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:43:09.144 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:43:09.145 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:09.145 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:09.145 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:09.146 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:09.146 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:43:10.828 - INFO - Command exited with return code 0.
20190402 11:43:10.828 - INFO - ${stdout} = RESIZE
20190402 11:43:10.829 - INFO - ${stderr} =
20190402 11:43:10.829 - INFO - ${rc} = 0
20190402 11:43:10.829 - INFO - +--------- END KW: SSHLibrary.Execute Command (1683)
20190402 11:43:10.829 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:10.830 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:10.830 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:43:10.830 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:10.830 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:43:10.831 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:10.831 - INFO - +-------- END KW: OpenStack.Run OS Command (1687)
20190402 11:43:10.831 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:43:10.831 - INFO - ${value} = RESIZE
20190402 11:43:10.831 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:43:10.832 - INFO - ${current_value} = RESIZE
20190402 11:43:10.832 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1692)
20190402 11:43:10.832 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:43:10.832 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:43:10.832 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:43:10.833 - DEBUG - Traceback (most recent call last):
  None
20190402 11:43:10.833 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:43:10.833 - INFO - +------ END KW: OpenStack.Check Field Value (1694)
20190402 11:43:20.834 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:43:20.835 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:43:20.836 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:43:20.836 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:43:20.836 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:20.837 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:43:20.837 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:43:20.838 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:43:20.838 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:43:20.839 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:20.839 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:20.840 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:20.840 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:20.842 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:43:22.879 - INFO - Command exited with return code 0.
20190402 11:43:22.879 - INFO - ${stdout} = RESIZE
20190402 11:43:22.879 - INFO - ${stderr} =
20190402 11:43:22.879 - INFO - ${rc} = 0
20190402 11:43:22.880 - INFO - +--------- END KW: SSHLibrary.Execute Command (2039)
20190402 11:43:22.880 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:22.881 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:22.881 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:43:22.881 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:22.882 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:22.882 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:22.883 - INFO - +-------- END KW: OpenStack.Run OS Command (2044)
20190402 11:43:22.883 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:43:22.883 - INFO - ${value} = RESIZE
20190402 11:43:22.883 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:43:22.884 - INFO - ${current_value} = RESIZE
20190402 11:43:22.884 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2049)
20190402 11:43:22.884 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:43:22.885 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:43:22.885 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:43:22.885 - DEBUG - Traceback (most recent call last):
  None
20190402 11:43:22.885 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:43:22.886 - INFO - +------ END KW: OpenStack.Check Field Value (2053)
20190402 11:43:32.886 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:43:32.887 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:43:32.888 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:43:32.889 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:43:32.889 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:32.889 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:43:32.890 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:43:32.890 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:43:32.890 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:43:32.891 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:32.892 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:32.892 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:32.892 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:32.893 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:43:34.577 - INFO - Command exited with return code 0.
20190402 11:43:34.578 - INFO - ${stdout} = RESIZE
20190402 11:43:34.578 - INFO - ${stderr} =
20190402 11:43:34.578 - INFO - ${rc} = 0
20190402 11:43:34.578 - INFO - +--------- END KW: SSHLibrary.Execute Command (1686)
20190402 11:43:34.578 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:34.580 - INFO - ${res} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:34.580 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:43:34.580 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:34.581 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:34.581 - INFO - ${result} = {u'stdout': u'RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:34.581 - INFO - +-------- END KW: OpenStack.Run OS Command (1691)
20190402 11:43:34.582 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:43:34.582 - INFO - ${value} = RESIZE
20190402 11:43:34.582 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:43:34.583 - INFO - ${current_value} = RESIZE
20190402 11:43:34.583 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1696)
20190402 11:43:34.583 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:43:34.584 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:43:34.584 - FAIL - RESIZE != VERIFY_RESIZE
20190402 11:43:34.584 - DEBUG - Traceback (most recent call last):
  None
20190402 11:43:34.584 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:43:34.584 - INFO - +------ END KW: OpenStack.Check Field Value (1698)
20190402 11:43:44.585 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | VERIFY_RESIZE ]
20190402 11:43:44.585 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:43:44.586 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:43:44.586 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:43:44.586 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:44.586 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:43:44.587 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:43:44.587 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:43:44.587 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:43:44.587 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:44.587 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:44.588 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:44.588 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:44.588 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:43:46.370 - INFO - Command exited with return code 0.
20190402 11:43:46.370 - INFO - ${stdout} = VERIFY_RESIZE
20190402 11:43:46.370 - INFO - ${stderr} =
20190402 11:43:46.370 - INFO - ${rc} = 0
20190402 11:43:46.371 - INFO - +--------- END KW: SSHLibrary.Execute Command (1783)
20190402 11:43:46.371 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:46.373 - INFO - ${res} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:46.373 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:43:46.373 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:46.374 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:46.374 - INFO - ${result} = {u'stdout': u'VERIFY_RESIZE', u'stderr': u'', u'rc': 0}
20190402 11:43:46.375 - INFO - +-------- END KW: OpenStack.Run OS Command (1787)
20190402 11:43:46.375 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:43:46.376 - INFO - ${value} = VERIFY_RESIZE
20190402 11:43:46.376 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:43:46.377 - INFO - ${current_value} = VERIFY_RESIZE
20190402 11:43:46.377 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1792)
20190402 11:43:46.377 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:43:46.378 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:43:46.378 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:43:46.378 - INFO - +------ END KW: OpenStack.Check Field Value (1793)
20190402 11:43:46.378 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (72419)
20190402 11:43:46.379 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server resize --confirm ${vm_name} | True | 30 sec ]
20190402 11:43:46.379 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:46.380 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:46.380 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:43:46.380 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:46.381 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server resize --confirm vm-cirros-1'.
20190402 11:43:48.264 - INFO - Command exited with return code 0.
20190402 11:43:48.265 - INFO - ${stdout} =
20190402 11:43:48.265 - INFO - ${stderr} =
20190402 11:43:48.265 - INFO - ${rc} = 0
20190402 11:43:48.265 - INFO - +------ END KW: SSHLibrary.Execute Command (1885)
20190402 11:43:48.266 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:48.267 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:43:48.267 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:43:48.267 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:48.268 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:48.268 - INFO - +----- END KW: OpenStack.Run OS Command (1889)
20190402 11:43:48.269 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm_name} | status | ACTIVE ]
20190402 11:43:48.269 - INFO - +------ START KW: OpenStack.Check Field Value [ server | ${vm_name} | status | ACTIVE ]
20190402 11:43:48.270 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:43:48.271 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:43:48.272 - INFO - ${openstack_cmd} = openstack server show vm-cirros-1
20190402 11:43:48.272 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:48.272 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:43:48.273 - INFO - ${cmd} = openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}'
20190402 11:43:48.273 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:43:48.273 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:43:48.275 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:48.275 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:48.275 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:48.276 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:48.276 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show vm-cirros-1|grep -w status|tail -1|awk '{print$4}''.
20190402 11:43:49.910 - INFO - Command exited with return code 0.
20190402 11:43:49.910 - INFO - ${stdout} = ACTIVE
20190402 11:43:49.910 - INFO - ${stderr} =
20190402 11:43:49.910 - INFO - ${rc} = 0
20190402 11:43:49.911 - INFO - +--------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:43:49.911 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:49.912 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:43:49.912 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:43:49.913 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:49.913 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:43:49.914 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:43:49.914 - INFO - +-------- END KW: OpenStack.Run OS Command (1641)
20190402 11:43:49.914 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:43:49.915 - INFO - ${value} = ACTIVE
20190402 11:43:49.915 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:43:49.916 - INFO - ${current_value} = ACTIVE
20190402 11:43:49.916 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1646)
20190402 11:43:49.916 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:43:49.917 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:43:49.917 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:43:49.917 - INFO - +------ END KW: OpenStack.Check Field Value (1648)
20190402 11:43:49.917 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1649)
20190402 11:43:49.918 - INFO - +---- END KW: OpenStack.Resize Instance (80743)
------------------------------------------------------------------------------
20190402 11:43:49.918 - INFO - +--- END TEST: Resize Instances (164064)
------------------------------------------------------------------------------
20190402 11:43:49.919 - INFO - +--- START TEST: Set Unset Properties Instances [ ]
------------------------------------------------------------------------------
20190402 11:43:49.919 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1}='true' | ${instance_property_2}='500' | ${instance_property_3}='180' ]
20190402 11:43:49.920 - INFO - ${properties} = --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180'
20190402 11:43:49.921 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:43:49.921 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name} | ${properties} ]
20190402 11:43:49.922 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190402 11:43:49.922 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:49.923 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:49.923 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:43:49.923 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:49.924 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-1'.
20190402 11:43:51.620 - INFO - Command exited with return code 0.
20190402 11:43:51.621 - INFO - ${stdout} =
20190402 11:43:51.621 - INFO - ${stderr} =
20190402 11:43:51.621 - INFO - ${rc} = 0
20190402 11:43:51.622 - INFO - +------ END KW: SSHLibrary.Execute Command (1699)
20190402 11:43:51.622 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:51.624 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:43:51.624 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:43:51.625 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:51.625 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:43:51.626 - INFO - +----- END KW: OpenStack.Run OS Command (1704)
20190402 11:43:51.626 - INFO - +---- END KW: OpenStack.Set Instance Property (1705)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:43:51.627 - INFO - +---- START KW: OpenStack.Set Instance Property [ ${cirros_instance_name_2} | ${properties} ]
20190402 11:43:51.627 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server set ${key} ${vm_name} | True | 30 sec ]
20190402 11:43:51.628 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:51.629 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:51.629 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:43:51.629 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:51.630 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server set --property sw:wrs:auto_recovery='true' --property hw:wrs:live_migration_max_downtime='500' --property hw:wrs:live_migration_timeout='180' vm-cirros-2'.
20190402 11:43:53.393 - INFO - Command exited with return code 0.
20190402 11:43:53.394 - INFO - ${stdout} =
20190402 11:43:53.394 - INFO - ${stderr} =
20190402 11:43:53.394 - INFO - ${rc} = 0
20190402 11:43:53.394 - INFO - +------ END KW: SSHLibrary.Execute Command (1765)
20190402 11:43:53.395 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:53.396 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:43:53.396 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:43:53.396 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:53.397 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:53.397 - INFO - +----- END KW: OpenStack.Run OS Command (1770)
20190402 11:43:53.398 - INFO - +---- END KW: OpenStack.Set Instance Property (1771)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:43:53.398 - INFO - +---- START KW: BuiltIn.Catenate [ ${instance_property_1} | ${instance_property_2} | ${instance_property_3} ]
20190402 11:43:53.399 - INFO - ${properties} = --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout
20190402 11:43:53.399 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:43:53.399 - INFO - +---- START KW: OpenStack.Unset Instance Property [ ${cirros_instance_name} | ${properties} ]
20190402 11:43:53.400 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unset ${key} ${vm_name} | True | 30 sec ]
20190402 11:43:53.401 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:53.401 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:53.401 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:43:53.402 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:53.403 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unset --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout vm-cirros-1'.
20190402 11:43:55.335 - INFO - Command exited with return code 0.
20190402 11:43:55.336 - INFO - ${stdout} =
20190402 11:43:55.336 - INFO - ${stderr} =
20190402 11:43:55.336 - INFO - ${rc} = 0
20190402 11:43:55.336 - INFO - +------ END KW: SSHLibrary.Execute Command (1934)
20190402 11:43:55.336 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:55.338 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:43:55.338 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:43:55.339 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:55.340 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:55.340 - INFO - +----- END KW: OpenStack.Run OS Command (1940)
20190402 11:43:55.341 - INFO - +---- END KW: OpenStack.Unset Instance Property (1942)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:43:55.341 - INFO - +---- START KW: OpenStack.Unset Instance Property [ ${cirros_instance_name_2} | ${properties} ]
20190402 11:43:55.342 - INFO - +----- START KW: OpenStack.Run OS Command [ openstack server unset ${key} ${vm_name} | True | 30 sec ]
20190402 11:43:55.343 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:55.343 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:55.344 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:43:55.344 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:55.345 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server unset --property sw:wrs:auto_recovery --property hw:wrs:live_migration_max_downtime --property hw:wrs:live_migration_timeout vm-cirros-2'.
20190402 11:43:57.492 - INFO - Command exited with return code 0.
20190402 11:43:57.492 - INFO - ${stdout} =
20190402 11:43:57.492 - INFO - ${stderr} =
20190402 11:43:57.492 - INFO - ${rc} = 0
20190402 11:43:57.492 - INFO - +------ END KW: SSHLibrary.Execute Command (2148)
20190402 11:43:57.493 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:57.493 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:43:57.493 - INFO - +------ END KW: BuiltIn.Create Dictionary (0)
20190402 11:43:57.493 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:57.493 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:43:57.494 - INFO - +----- END KW: OpenStack.Run OS Command (2152)
20190402 11:43:57.494 - INFO - +---- END KW: OpenStack.Unset Instance Property (2153)
------------------------------------------------------------------------------
20190402 11:43:57.494 - INFO - +--- END TEST: Set Unset Properties Instances (7576)
------------------------------------------------------------------------------
20190402 11:43:57.494 - INFO - +--- START TEST: Evacuate Instances From Hosts [ ]
------------------------------------------------------------------------------
20190402 11:43:57.495 - INFO - +---- START KW: BuiltIn.Run Keyword If [ '${CONFIGURATION_TYPE}' == 'Duplex' | Run Keywords | Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 | ELSE IF | '${CONFIGURATION_TYPE}' == 'MN-Local' or '${CONFIGURATION_TYPE}' == 'MN-External' | Run Keywords | Evacuate Instances | compute-0 | AND | Evacuate Instances | compute-1 ]
20190402 11:43:57.495 - INFO - +----- START KW: BuiltIn.Run Keywords [ Evacuate Instances | controller-0 | AND | Evacuate Instances | controller-1 ]
20190402 11:43:57.495 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-0 ]
20190402 11:43:57.496 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190402 11:43:57.496 - INFO - ${openstack_cmd} = openstack compute service set
20190402 11:43:57.496 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:57.496 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190402 11:43:57.496 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute
20190402 11:43:57.496 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 11:43:57.497 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:43:57.497 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:57.497 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:57.497 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:43:57.497 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:57.497 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-0 nova-compute'.
20190402 11:43:58.994 - INFO - Command exited with return code 0.
20190402 11:43:58.994 - INFO - ${stdout} =
20190402 11:43:58.994 - INFO - ${stderr} =
20190402 11:43:58.995 - INFO - ${rc} = 0
20190402 11:43:58.995 - INFO - +-------- END KW: SSHLibrary.Execute Command (1498)
20190402 11:43:58.996 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:43:58.997 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:43:58.998 - INFO - +-------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:43:58.998 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:43:58.999 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:43:58.999 - INFO - +------- END KW: OpenStack.Run OS Command (1502)
20190402 11:43:58.999 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | disabled ]
20190402 11:43:59.000 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | disabled ]
20190402 11:43:59.001 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:43:59.001 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:43:59.002 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:43:59.002 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:59.002 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:43:59.003 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:43:59.003 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:43:59.003 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:43:59.004 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:43:59.005 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:43:59.005 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:43:59.005 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:43:59.006 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:00.337 - INFO - Command exited with return code 0.
20190402 11:44:00.338 - INFO - ${stdout} = disabled
20190402 11:44:00.338 - INFO - ${stderr} =
20190402 11:44:00.339 - INFO - ${rc} = 0
20190402 11:44:00.339 - INFO - +----------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:44:00.339 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:00.341 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:00.341 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:44:00.341 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:00.342 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:44:00.343 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:00.343 - INFO - +---------- END KW: OpenStack.Run OS Command (1340)
20190402 11:44:00.343 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:00.344 - INFO - ${value} = disabled
20190402 11:44:00.344 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:44:00.345 - INFO - ${current_value} = disabled
20190402 11:44:00.345 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1344)
20190402 11:44:00.345 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:00.346 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:00.346 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:44:00.346 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1346)
20190402 11:44:00.347 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1347)
20190402 11:44:00.347 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | enabled ]
20190402 11:44:00.348 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:44:00.349 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:44:00.349 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:44:00.350 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:44:00.350 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:00.350 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:44:00.351 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:44:00.351 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:44:00.351 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:44:00.353 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:44:00.354 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:44:00.354 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:00.355 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:44:00.356 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:01.795 - INFO - Command exited with return code 0.
20190402 11:44:01.795 - INFO - ${stdout} = disabled
20190402 11:44:01.795 - INFO - ${stderr} =
20190402 11:44:01.795 - INFO - ${rc} = 0
20190402 11:44:01.795 - INFO - +----------- END KW: SSHLibrary.Execute Command (1440)
20190402 11:44:01.795 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:01.796 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:01.796 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:44:01.796 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:01.796 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:44:01.796 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:01.796 - INFO - +---------- END KW: OpenStack.Run OS Command (1445)
20190402 11:44:01.797 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:01.797 - INFO - ${value} = disabled
20190402 11:44:01.797 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:44:01.797 - INFO - ${current_value} = disabled
20190402 11:44:01.797 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1449)
20190402 11:44:01.797 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:01.797 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:01.797 - FAIL - disabled != enabled
20190402 11:44:01.797 - DEBUG - Traceback (most recent call last):
  None
20190402 11:44:01.798 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:44:01.798 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1450)
20190402 11:44:11.798 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:44:11.799 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:44:11.800 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:44:11.801 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:44:11.801 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:11.801 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:44:11.802 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:44:11.802 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:44:11.802 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:44:11.804 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:44:11.804 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:44:11.805 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:44:11.805 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:44:11.806 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:13.138 - INFO - Command exited with return code 0.
20190402 11:44:13.138 - INFO - ${stdout} = disabled
20190402 11:44:13.138 - INFO - ${stderr} =
20190402 11:44:13.138 - INFO - ${rc} = 0
20190402 11:44:13.139 - INFO - +----------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:44:13.139 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:13.141 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:13.141 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:44:13.141 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:13.142 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:44:13.142 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:13.143 - INFO - +---------- END KW: OpenStack.Run OS Command (1340)
20190402 11:44:13.143 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:13.143 - INFO - ${value} = disabled
20190402 11:44:13.144 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:44:13.144 - INFO - ${current_value} = disabled
20190402 11:44:13.144 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1345)
20190402 11:44:13.145 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:13.145 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:13.145 - FAIL - disabled != enabled
20190402 11:44:13.146 - DEBUG - Traceback (most recent call last):
  None
20190402 11:44:13.146 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:44:13.146 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1348)
20190402 11:44:23.147 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:44:23.148 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:44:23.148 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:44:23.149 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:44:23.149 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:23.149 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:44:23.150 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:44:23.150 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:44:23.150 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:44:23.151 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:44:23.152 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:44:23.152 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:23.152 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:44:23.153 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:24.484 - INFO - Command exited with return code 0.
20190402 11:44:24.484 - INFO - ${stdout} = disabled
20190402 11:44:24.484 - INFO - ${stderr} =
20190402 11:44:24.484 - INFO - ${rc} = 0
20190402 11:44:24.485 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:44:24.485 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:24.485 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:24.485 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:44:24.485 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:24.486 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:44:24.486 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:24.486 - INFO - +---------- END KW: OpenStack.Run OS Command (1336)
20190402 11:44:24.486 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:24.486 - INFO - ${value} = disabled
20190402 11:44:24.486 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:44:24.486 - INFO - ${current_value} = disabled
20190402 11:44:24.486 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1338)
20190402 11:44:24.487 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:24.487 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:24.487 - FAIL - disabled != enabled
20190402 11:44:24.487 - DEBUG - Traceback (most recent call last):
  None
20190402 11:44:24.487 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:44:24.487 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1340)
20190402 11:44:34.487 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:44:34.488 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:44:34.488 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:44:34.488 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:44:34.488 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:44:34.488 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:44:34.489 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:44:34.489 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:44:34.489 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:44:34.489 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:44:34.489 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:44:34.490 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:34.490 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:44:34.490 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:35.820 - INFO - Command exited with return code 0.
20190402 11:44:35.821 - INFO - ${stdout} = disabled
20190402 11:44:35.821 - INFO - ${stderr} =
20190402 11:44:35.821 - INFO - ${rc} = 0
20190402 11:44:35.822 - INFO - +----------- END KW: SSHLibrary.Execute Command (1331)
20190402 11:44:35.822 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:35.824 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:35.825 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:44:35.825 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:35.826 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:44:35.827 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:35.827 - INFO - +---------- END KW: OpenStack.Run OS Command (1338)
20190402 11:44:35.827 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:35.828 - INFO - ${value} = disabled
20190402 11:44:35.828 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:44:35.829 - INFO - ${current_value} = disabled
20190402 11:44:35.829 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1341)
20190402 11:44:35.829 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:35.830 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:35.830 - FAIL - disabled != enabled
20190402 11:44:35.830 - DEBUG - Traceback (most recent call last):
  None
20190402 11:44:35.830 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:44:35.831 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1344)
20190402 11:44:45.831 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:44:45.832 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:44:45.832 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:44:45.832 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:44:45.832 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:44:45.833 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:44:45.833 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:44:45.833 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:44:45.833 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:44:45.833 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:44:45.834 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:44:45.834 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:44:45.834 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:44:45.834 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:47.366 - INFO - Command exited with return code 0.
20190402 11:44:47.366 - INFO - ${stdout} = disabled
20190402 11:44:47.366 - INFO - ${stderr} =
20190402 11:44:47.366 - INFO - ${rc} = 0
20190402 11:44:47.367 - INFO - +----------- END KW: SSHLibrary.Execute Command (1533)
20190402 11:44:47.367 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:47.368 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:47.368 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:44:47.369 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:47.369 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:44:47.370 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:47.370 - INFO - +---------- END KW: OpenStack.Run OS Command (1537)
20190402 11:44:47.370 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:47.371 - INFO - ${value} = disabled
20190402 11:44:47.371 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:44:47.371 - INFO - ${current_value} = disabled
20190402 11:44:47.372 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1539)
20190402 11:44:47.372 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:47.372 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:47.373 - FAIL - disabled != enabled
20190402 11:44:47.374 - DEBUG - Traceback (most recent call last):
  None
20190402 11:44:47.374 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:44:47.374 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1543)
20190402 11:44:57.375 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:44:57.376 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:44:57.377 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:44:57.377 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:44:57.377 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:44:57.378 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:44:57.378 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:44:57.378 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:44:57.379 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:44:57.380 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:44:57.380 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:44:57.380 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:44:57.381 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:44:57.382 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:44:58.713 - INFO - Command exited with return code 0.
20190402 11:44:58.714 - INFO - ${stdout} = disabled
20190402 11:44:58.714 - INFO - ${stderr} =
20190402 11:44:58.714 - INFO - ${rc} = 0
20190402 11:44:58.714 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:44:58.714 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:44:58.715 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:58.715 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:44:58.715 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:44:58.715 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:44:58.716 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:44:58.716 - INFO - +---------- END KW: OpenStack.Run OS Command (1337)
20190402 11:44:58.716 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:44:58.716 - INFO - ${value} = disabled
20190402 11:44:58.716 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:44:58.716 - INFO - ${current_value} = disabled
20190402 11:44:58.717 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1340)
20190402 11:44:58.717 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:44:58.717 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:44:58.717 - FAIL - disabled != enabled
20190402 11:44:58.717 - DEBUG - Traceback (most recent call last):
  None
20190402 11:44:58.717 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:44:58.717 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1342)
20190402 11:45:08.718 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:45:08.719 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:08.720 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:08.720 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:08.720 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:08.720 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:08.721 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}'
20190402 11:45:08.721 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:45:08.722 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:08.723 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:08.723 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:08.723 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:08.724 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:08.724 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-0|awk '{print$10}''.
20190402 11:45:10.207 - INFO - Command exited with return code 0.
20190402 11:45:10.207 - INFO - ${stdout} = enabled
20190402 11:45:10.207 - INFO - ${stderr} =
20190402 11:45:10.207 - INFO - ${rc} = 0
20190402 11:45:10.207 - INFO - +----------- END KW: SSHLibrary.Execute Command (1483)
20190402 11:45:10.208 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:10.208 - INFO - ${res} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:45:10.208 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:45:10.208 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:10.208 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:45:10.209 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:45:10.209 - INFO - +---------- END KW: OpenStack.Run OS Command (1487)
20190402 11:45:10.209 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:45:10.209 - INFO - ${value} = enabled
20190402 11:45:10.209 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:45:10.209 - INFO - ${current_value} = enabled
20190402 11:45:10.209 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1490)
20190402 11:45:10.209 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:45:10.210 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:45:10.210 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:45:10.210 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1492)
20190402 11:45:10.210 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (69863)
20190402 11:45:10.210 - INFO - +------ END KW: OpenStack.Evacuate Instances (72715)
20190402 11:45:10.210 - INFO - +------ START KW: OpenStack.Evacuate Instances [ controller-1 ]
20190402 11:45:10.210 - INFO - +------- START KW: BuiltIn.Set Variable [ openstack compute service set ]
20190402 11:45:10.210 - INFO - ${openstack_cmd} = openstack compute service set
20190402 11:45:10.210 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:10.211 - INFO - +------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --disable | --disable-reason test-evacuate | ${host} | nova-compute ]
20190402 11:45:10.211 - INFO - ${cmd} = openstack compute service set --disable --disable-reason test-evacuate controller-1 nova-compute
20190402 11:45:10.211 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 11:45:10.211 - INFO - +------- START KW: OpenStack.Run OS Command [ ${cmd} | True | 30 sec ]
20190402 11:45:10.211 - INFO - +-------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:10.212 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:10.212 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:10.212 - INFO - +-------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:10.212 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service set --disable --disable-reason test-evacuate controller-1 nova-compute'.
20190402 11:45:11.694 - INFO - Command exited with return code 0.
20190402 11:45:11.694 - INFO - ${stdout} =
20190402 11:45:11.695 - INFO - ${stderr} =
20190402 11:45:11.695 - INFO - ${rc} = 0
20190402 11:45:11.695 - INFO - +-------- END KW: SSHLibrary.Execute Command (1483)
20190402 11:45:11.695 - INFO - +-------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:11.695 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:45:11.695 - INFO - +-------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:45:11.695 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:11.696 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:45:11.696 - INFO - +------- END KW: OpenStack.Run OS Command (1485)
20190402 11:45:11.696 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | disabled ]
20190402 11:45:11.696 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | disabled ]
20190402 11:45:11.697 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:11.697 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:11.697 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:11.697 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:11.697 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:11.697 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:45:11.697 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:45:11.697 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:11.698 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:11.698 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:11.698 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:11.698 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:11.698 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:45:13.111 - INFO - Command exited with return code 0.
20190402 11:45:13.111 - INFO - ${stdout} = disabled
20190402 11:45:13.112 - INFO - ${stderr} =
20190402 11:45:13.112 - INFO - ${rc} = 0
20190402 11:45:13.112 - INFO - +----------- END KW: SSHLibrary.Execute Command (1414)
20190402 11:45:13.112 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:13.114 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:13.114 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:45:13.114 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:13.115 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:45:13.115 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:13.116 - INFO - +---------- END KW: OpenStack.Run OS Command (1418)
20190402 11:45:13.116 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:45:13.116 - INFO - ${value} = disabled
20190402 11:45:13.116 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:45:13.117 - INFO - ${current_value} = disabled
20190402 11:45:13.117 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1420)
20190402 11:45:13.117 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:45:13.118 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:45:13.118 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:45:13.118 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1422)
20190402 11:45:13.119 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1423)
20190402 11:45:13.119 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Compute Service Property | ${host} | enabled ]
20190402 11:45:13.120 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:45:13.120 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:13.121 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:13.122 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:13.122 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:13.122 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:13.123 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:45:13.123 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:45:13.123 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:13.124 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:13.124 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:13.125 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:13.125 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:13.126 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:45:14.458 - INFO - Command exited with return code 0.
20190402 11:45:14.458 - INFO - ${stdout} = disabled
20190402 11:45:14.458 - INFO - ${stderr} =
20190402 11:45:14.458 - INFO - ${rc} = 0
20190402 11:45:14.458 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:45:14.459 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:14.459 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:14.460 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:45:14.460 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:14.461 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:45:14.461 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:14.461 - INFO - +---------- END KW: OpenStack.Run OS Command (1338)
20190402 11:45:14.462 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:45:14.462 - INFO - ${value} = disabled
20190402 11:45:14.462 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:45:14.462 - INFO - ${current_value} = disabled
20190402 11:45:14.463 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1342)
20190402 11:45:14.463 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:45:14.463 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:45:14.463 - FAIL - disabled != enabled
20190402 11:45:14.463 - DEBUG - Traceback (most recent call last):
  None
20190402 11:45:14.464 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:45:14.464 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1344)
20190402 11:45:24.464 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:45:24.465 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:24.466 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:24.467 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:24.467 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:24.467 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:24.468 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:45:24.468 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:45:24.468 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:24.469 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:24.470 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:24.470 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:24.470 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:24.471 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:45:25.802 - INFO - Command exited with return code 0.
20190402 11:45:25.802 - INFO - ${stdout} = disabled
20190402 11:45:25.802 - INFO - ${stderr} =
20190402 11:45:25.802 - INFO - ${rc} = 0
20190402 11:45:25.803 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:45:25.803 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:25.803 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:25.803 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:45:25.803 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:25.804 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:45:25.804 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:25.804 - INFO - +---------- END KW: OpenStack.Run OS Command (1336)
20190402 11:45:25.804 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:45:25.804 - INFO - ${value} = disabled
20190402 11:45:25.804 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:45:25.804 - INFO - ${current_value} = disabled
20190402 11:45:25.804 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1339)
20190402 11:45:25.805 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:45:25.805 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:45:25.805 - FAIL - disabled != enabled
20190402 11:45:25.805 - DEBUG - Traceback (most recent call last):
  None
20190402 11:45:25.805 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:45:25.805 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1341)
20190402 11:45:35.805 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:45:35.806 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:35.806 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:35.807 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:35.807 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:35.807 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:35.807 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:45:35.807 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:45:35.808 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:35.808 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:35.808 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:35.808 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:35.808 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:35.809 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:45:37.393 - INFO - Command exited with return code 0.
20190402 11:45:37.393 - INFO - ${stdout} = disabled
20190402 11:45:37.393 - INFO - ${stderr} =
20190402 11:45:37.393 - INFO - ${rc} = 0
20190402 11:45:37.394 - INFO - +----------- END KW: SSHLibrary.Execute Command (1586)
20190402 11:45:37.394 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:37.395 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:37.395 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:45:37.396 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:37.396 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:45:37.397 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:37.397 - INFO - +---------- END KW: OpenStack.Run OS Command (1589)
20190402 11:45:37.398 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:45:37.398 - INFO - ${value} = disabled
20190402 11:45:37.398 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:45:37.399 - INFO - ${current_value} = disabled
20190402 11:45:37.399 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1593)
20190402 11:45:37.399 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:45:37.400 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:45:37.400 - FAIL - disabled != enabled
20190402 11:45:37.400 - DEBUG - Traceback (most recent call last):
  None
20190402 11:45:37.400 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:45:37.401 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1596)
20190402 11:45:47.401 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:45:47.403 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:47.404 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:47.404 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:47.405 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:47.405 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:47.406 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:45:47.406 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:45:47.406 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:47.407 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:47.407 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:47.407 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:45:47.408 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:47.408 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:45:49.141 - INFO - Command exited with return code 0.
20190402 11:45:49.142 - INFO - ${stdout} = disabled
20190402 11:45:49.142 - INFO - ${stderr} =
20190402 11:45:49.142 - INFO - ${rc} = 0
20190402 11:45:49.142 - INFO - +----------- END KW: SSHLibrary.Execute Command (1734)
20190402 11:45:49.143 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:45:49.144 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:49.144 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:45:49.144 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:45:49.145 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:45:49.145 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:45:49.145 - INFO - +---------- END KW: OpenStack.Run OS Command (1739)
20190402 11:45:49.146 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:45:49.146 - INFO - ${value} = disabled
20190402 11:45:49.146 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:45:49.147 - INFO - ${current_value} = disabled
20190402 11:45:49.147 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1745)
20190402 11:45:49.147 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:45:49.148 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:45:49.148 - FAIL - disabled != enabled
20190402 11:45:49.148 - DEBUG - Traceback (most recent call last):
  None
20190402 11:45:49.148 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:45:49.148 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1747)
20190402 11:45:59.149 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:45:59.150 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:45:59.151 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:45:59.152 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:45:59.152 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:59.152 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:45:59.153 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:45:59.153 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:45:59.154 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:45:59.155 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:45:59.155 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:45:59.156 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:45:59.156 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:45:59.157 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:46:00.489 - INFO - Command exited with return code 0.
20190402 11:46:00.489 - INFO - ${stdout} = disabled
20190402 11:46:00.489 - INFO - ${stderr} =
20190402 11:46:00.489 - INFO - ${rc} = 0
20190402 11:46:00.490 - INFO - +----------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:46:00.490 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:46:00.491 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:00.491 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:46:00.491 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:46:00.492 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:46:00.492 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:00.492 - INFO - +---------- END KW: OpenStack.Run OS Command (1339)
20190402 11:46:00.493 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:46:00.493 - INFO - ${value} = disabled
20190402 11:46:00.493 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:46:00.494 - INFO - ${current_value} = disabled
20190402 11:46:00.494 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1344)
20190402 11:46:00.494 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:46:00.495 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:46:00.495 - FAIL - disabled != enabled
20190402 11:46:00.495 - DEBUG - Traceback (most recent call last):
  None
20190402 11:46:00.495 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:46:00.495 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1346)
20190402 11:46:10.496 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:46:10.497 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:46:10.498 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:46:10.498 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:46:10.498 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:46:10.499 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:46:10.499 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:46:10.499 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:46:10.500 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:46:10.502 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:46:10.502 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:46:10.502 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:10.503 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:46:10.503 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:46:12.136 - INFO - Command exited with return code 0.
20190402 11:46:12.136 - INFO - ${stdout} = disabled
20190402 11:46:12.136 - INFO - ${stderr} =
20190402 11:46:12.137 - INFO - ${rc} = 0
20190402 11:46:12.137 - INFO - +----------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:46:12.137 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:46:12.138 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:12.139 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:46:12.139 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:46:12.140 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:46:12.140 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:12.140 - INFO - +---------- END KW: OpenStack.Run OS Command (1640)
20190402 11:46:12.141 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:46:12.141 - INFO - ${value} = disabled
20190402 11:46:12.142 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:46:12.142 - INFO - ${current_value} = disabled
20190402 11:46:12.142 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1645)
20190402 11:46:12.143 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:46:12.143 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:46:12.144 - FAIL - disabled != enabled
20190402 11:46:12.144 - DEBUG - Traceback (most recent call last):
  None
20190402 11:46:12.144 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:46:12.144 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1648)
20190402 11:46:22.145 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:46:22.146 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:46:22.147 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:46:22.147 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:46:22.148 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:46:22.148 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:46:22.149 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:46:22.149 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:46:22.149 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:46:22.150 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:46:22.151 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:46:22.151 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:22.151 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:46:22.152 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:46:23.938 - INFO - Command exited with return code 0.
20190402 11:46:23.939 - INFO - ${stdout} = disabled
20190402 11:46:23.939 - INFO - ${stderr} =
20190402 11:46:23.939 - INFO - ${rc} = 0
20190402 11:46:23.939 - INFO - +----------- END KW: SSHLibrary.Execute Command (1788)
20190402 11:46:23.940 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:46:23.941 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:23.941 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:46:23.942 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:46:23.942 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:46:23.943 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:23.943 - INFO - +---------- END KW: OpenStack.Run OS Command (1794)
20190402 11:46:23.943 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:46:23.944 - INFO - ${value} = disabled
20190402 11:46:23.944 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:46:23.944 - INFO - ${current_value} = disabled
20190402 11:46:23.945 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1799)
20190402 11:46:23.945 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:46:23.945 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:46:23.946 - FAIL - disabled != enabled
20190402 11:46:23.946 - DEBUG - Traceback (most recent call last):
  None
20190402 11:46:23.946 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:46:23.946 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1801)
20190402 11:46:33.947 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:46:33.948 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:46:33.949 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:46:33.950 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:46:33.950 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:33.950 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:46:33.951 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:46:33.951 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:46:33.951 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:46:33.952 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:46:33.953 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:46:33.953 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:33.953 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:46:33.954 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:46:35.691 - INFO - Command exited with return code 0.
20190402 11:46:35.691 - INFO - ${stdout} = disabled
20190402 11:46:35.692 - INFO - ${stderr} =
20190402 11:46:35.692 - INFO - ${rc} = 0
20190402 11:46:35.692 - INFO - +----------- END KW: SSHLibrary.Execute Command (1739)
20190402 11:46:35.692 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:46:35.694 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:35.694 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:46:35.694 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:46:35.695 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:46:35.695 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:35.695 - INFO - +---------- END KW: OpenStack.Run OS Command (1744)
20190402 11:46:35.696 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:46:35.697 - INFO - ${value} = disabled
20190402 11:46:35.697 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:46:35.697 - INFO - ${current_value} = disabled
20190402 11:46:35.698 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1749)
20190402 11:46:35.698 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:46:35.698 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:46:35.699 - FAIL - disabled != enabled
20190402 11:46:35.699 - DEBUG - Traceback (most recent call last):
  None
20190402 11:46:35.699 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:46:35.700 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1752)
20190402 11:46:45.700 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:46:45.701 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:46:45.702 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:46:45.703 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:46:45.703 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:45.703 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:46:45.704 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:46:45.704 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:46:45.704 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:46:45.705 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:46:45.706 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:46:45.706 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:45.706 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:46:45.707 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:46:47.739 - INFO - Command exited with return code 0.
20190402 11:46:47.740 - INFO - ${stdout} = disabled
20190402 11:46:47.740 - INFO - ${stderr} =
20190402 11:46:47.740 - INFO - ${rc} = 0
20190402 11:46:47.740 - INFO - +----------- END KW: SSHLibrary.Execute Command (2034)
20190402 11:46:47.740 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:46:47.740 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:47.740 - INFO - +----------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:46:47.741 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:46:47.741 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:46:47.741 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:47.741 - INFO - +---------- END KW: OpenStack.Run OS Command (2037)
20190402 11:46:47.741 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:46:47.741 - INFO - ${value} = disabled
20190402 11:46:47.741 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:46:47.742 - INFO - ${current_value} = disabled
20190402 11:46:47.742 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (2041)
20190402 11:46:47.742 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:46:47.742 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:46:47.742 - FAIL - disabled != enabled
20190402 11:46:47.742 - DEBUG - Traceback (most recent call last):
  None
20190402 11:46:47.742 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:46:47.742 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (2042)
20190402 11:46:57.743 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:46:57.744 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:46:57.744 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:46:57.745 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:46:57.745 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:57.745 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:46:57.746 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:46:57.746 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:46:57.746 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:46:57.747 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:46:57.748 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:46:57.748 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:46:57.748 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:46:57.749 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:46:59.534 - INFO - Command exited with return code 0.
20190402 11:46:59.535 - INFO - ${stdout} = disabled
20190402 11:46:59.535 - INFO - ${stderr} =
20190402 11:46:59.535 - INFO - ${rc} = 0
20190402 11:46:59.535 - INFO - +----------- END KW: SSHLibrary.Execute Command (1787)
20190402 11:46:59.536 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:46:59.537 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:59.537 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:46:59.537 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:46:59.538 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:46:59.538 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:46:59.539 - INFO - +---------- END KW: OpenStack.Run OS Command (1792)
20190402 11:46:59.539 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:46:59.539 - INFO - ${value} = disabled
20190402 11:46:59.540 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:46:59.540 - INFO - ${current_value} = disabled
20190402 11:46:59.540 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1796)
20190402 11:46:59.540 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:46:59.541 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:46:59.541 - FAIL - disabled != enabled
20190402 11:46:59.541 - DEBUG - Traceback (most recent call last):
  None
20190402 11:46:59.542 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:46:59.542 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1799)
20190402 11:47:09.543 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:47:09.544 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:47:09.544 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:47:09.546 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:47:09.546 - INFO - +---------- END KW: BuiltIn.Set Variable (2)
20190402 11:47:09.546 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:47:09.547 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:47:09.547 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:47:09.548 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:09.549 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:09.550 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:09.550 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:09.550 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:09.552 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:47:11.287 - INFO - Command exited with return code 0.
20190402 11:47:11.288 - INFO - ${stdout} = disabled
20190402 11:47:11.288 - INFO - ${stderr} =
20190402 11:47:11.288 - INFO - ${rc} = 0
20190402 11:47:11.288 - INFO - +----------- END KW: SSHLibrary.Execute Command (1738)
20190402 11:47:11.289 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:11.290 - INFO - ${res} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:47:11.290 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:11.290 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:11.291 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:11.291 - INFO - ${result} = {u'stdout': u'disabled', u'stderr': u'', u'rc': 0}
20190402 11:47:11.291 - INFO - +---------- END KW: OpenStack.Run OS Command (1743)
20190402 11:47:11.291 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:11.292 - INFO - ${value} = disabled
20190402 11:47:11.292 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:47:11.293 - INFO - ${current_value} = disabled
20190402 11:47:11.293 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1749)
20190402 11:47:11.293 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:47:11.293 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:47:11.294 - FAIL - disabled != enabled
20190402 11:47:11.294 - DEBUG - Traceback (most recent call last):
  None
20190402 11:47:11.294 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:47:11.294 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1752)
20190402 11:47:21.295 - INFO - +-------- START KW: OpenStack.Check Compute Service Property [ ${host} | enabled ]
20190402 11:47:21.296 - INFO - +--------- START KW: OpenStack.Retrieve Field Property Compute [ ${compute} ]
20190402 11:47:21.297 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack compute service list --service nova-compute ]
20190402 11:47:21.297 - INFO - ${openstack_cmd} = openstack compute service list --service nova-compute
20190402 11:47:21.297 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:21.298 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep ${compute} | awk '{print$10}' ]
20190402 11:47:21.298 - INFO - ${cmd} = openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}'
20190402 11:47:21.299 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:47:21.299 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:21.300 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:21.300 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:21.301 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:21.301 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:21.302 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack compute service list --service nova-compute|grep controller-1|awk '{print$10}''.
20190402 11:47:23.037 - INFO - Command exited with return code 0.
20190402 11:47:23.037 - INFO - ${stdout} = enabled
20190402 11:47:23.037 - INFO - ${stderr} =
20190402 11:47:23.037 - INFO - ${rc} = 0
20190402 11:47:23.038 - INFO - +----------- END KW: SSHLibrary.Execute Command (1737)
20190402 11:47:23.038 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:23.039 - INFO - ${res} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:47:23.039 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:23.039 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:23.040 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:23.040 - INFO - ${result} = {u'stdout': u'enabled', u'stderr': u'', u'rc': 0}
20190402 11:47:23.041 - INFO - +---------- END KW: OpenStack.Run OS Command (1742)
20190402 11:47:23.041 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:23.041 - INFO - ${value} = enabled
20190402 11:47:23.042 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:47:23.042 - INFO - ${current_value} = enabled
20190402 11:47:23.042 - INFO - +--------- END KW: OpenStack.Retrieve Field Property Compute (1746)
20190402 11:47:23.042 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:47:23.043 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:47:23.043 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:47:23.043 - INFO - +-------- END KW: OpenStack.Check Compute Service Property (1748)
20190402 11:47:23.043 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (129924)
20190402 11:47:23.044 - INFO - +------ END KW: OpenStack.Evacuate Instances (132834)
20190402 11:47:23.044 - INFO - +----- END KW: BuiltIn.Run Keywords (205549)
20190402 11:47:23.044 - INFO - +---- END KW: BuiltIn.Run Keyword If (205549)
------------------------------------------------------------------------------
20190402 11:47:23.045 - INFO - +--- END TEST: Evacuate Instances From Hosts (205550)
------------------------------------------------------------------------------
20190402 11:47:23.048 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190402 11:47:23.049 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190402 11:47:23.049 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190402 11:47:23.050 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:47:23.051 - INFO - ${openstack_cmd} = openstack server list
20190402 11:47:23.051 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:47:23.051 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:47:23.052 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:47:23.052 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:47:23.052 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:23.053 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:23.053 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:23.054 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:23.054 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:23.055 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:47:24.996 - INFO - Command exited with return code 0.
20190402 11:47:24.997 - INFO - ${stdout} = 

vm-cirros-2
vm-cirros-1
20190402 11:47:24.998 - INFO - ${stderr} =
20190402 11:47:24.998 - INFO - ${rc} = 0
20190402 11:47:24.998 - INFO - +------- END KW: SSHLibrary.Execute Command (1944)
20190402 11:47:24.999 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:25.000 - INFO - ${res} = {u'stdout': u'\n\nvm-cirros-2\nvm-cirros-1', u'stderr': u'', u'rc': 0}
20190402 11:47:25.001 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:25.001 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:25.003 - INFO - +------- END KW: BuiltIn.Run Keyword If (2)
20190402 11:47:25.004 - INFO - &{result} = { stdout=

vm-cirros-2
vm-cirros-1 | stderr= | rc=0 }
20190402 11:47:25.004 - INFO - +------ END KW: OpenStack.Run OS Command (1952)
20190402 11:47:25.004 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:25.006 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:25.006 - INFO - ${response} = 

vm-cirros-2
vm-cirros-1
20190402 11:47:25.007 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:47:25.007 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:25.008 - INFO - @{res_in_list} = [ vm-cirros-2 | vm-cirros-1 ]
20190402 11:47:25.008 - INFO - +------- END KW: String.Split String (1)
20190402 11:47:25.008 - INFO - @{vm_list} = [ vm-cirros-2 | vm-cirros-1 ]
20190402 11:47:25.008 - INFO - +------ END KW: Utils.Convert Response To List (4)
20190402 11:47:25.008 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:47:25.009 - INFO - +------- START KW: ${vm} = vm-cirros-2 [ ]
20190402 11:47:25.009 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:47:25.010 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:47:25.010 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:47:25.010 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:25.010 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:47:25.011 - INFO - ${cmd} = openstack server delete vm-cirros-2
20190402 11:47:25.011 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:25.011 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:25.013 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:25.013 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:25.014 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:25.014 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:25.015 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete vm-cirros-2'.
20190402 11:47:26.798 - INFO - Command exited with return code 0.
20190402 11:47:26.798 - INFO - ${stdout} =
20190402 11:47:26.798 - INFO - ${stderr} =
20190402 11:47:26.799 - INFO - ${rc} = 0
20190402 11:47:26.799 - INFO - +---------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:47:26.799 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:26.801 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:26.801 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:26.801 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:26.802 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:26.803 - INFO - +--------- END KW: OpenStack.Run OS Command (1792)
20190402 11:47:26.803 - INFO - +-------- END KW: OpenStack.Delete Instance (1794)
20190402 11:47:26.803 - INFO - +------- END KW: ${vm} = vm-cirros-2 (1794)
20190402 11:47:26.803 - INFO - +------- START KW: ${vm} = vm-cirros-1 [ ]
20190402 11:47:26.804 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:47:26.804 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:47:26.805 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:47:26.805 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:26.805 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:47:26.806 - INFO - ${cmd} = openstack server delete vm-cirros-1
20190402 11:47:26.806 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:26.806 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:26.807 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:26.807 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:26.807 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:26.808 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:26.808 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete vm-cirros-1'.
20190402 11:47:28.994 - INFO - Command exited with return code 0.
20190402 11:47:28.994 - INFO - ${stdout} =
20190402 11:47:28.994 - INFO - ${stderr} =
20190402 11:47:28.995 - INFO - ${rc} = 0
20190402 11:47:28.995 - INFO - +---------- END KW: SSHLibrary.Execute Command (2187)
20190402 11:47:28.995 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:28.996 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:28.996 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:28.996 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:28.996 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:28.997 - INFO - +--------- END KW: OpenStack.Run OS Command (2191)
20190402 11:47:28.997 - INFO - +-------- END KW: OpenStack.Delete Instance (2193)
20190402 11:47:28.997 - INFO - +------- END KW: ${vm} = vm-cirros-1 (2194)
20190402 11:47:28.997 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (3989)
20190402 11:47:28.997 - INFO - +----- END KW: OpenStack.Delete All Instances (5948)
20190402 11:47:28.997 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190402 11:47:28.998 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190402 11:47:28.998 - INFO - ${openstack_cmd} = openstack image list
20190402 11:47:28.998 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:47:28.998 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190402 11:47:28.999 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190402 11:47:28.999 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:47:28.999 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:28.999 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:29.000 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:29.000 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:29.000 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:29.001 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190402 11:47:30.445 - INFO - Command exited with return code 0.
20190402 11:47:30.446 - INFO - ${stdout} = 

cirros
20190402 11:47:30.446 - INFO - ${stderr} =
20190402 11:47:30.446 - INFO - ${rc} = 0
20190402 11:47:30.447 - INFO - +------- END KW: SSHLibrary.Execute Command (1446)
20190402 11:47:30.447 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:30.449 - INFO - ${res} = {u'stdout': u'\n\ncirros', u'stderr': u'', u'rc': 0}
20190402 11:47:30.449 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:30.450 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:30.451 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:30.451 - INFO - &{result} = { stdout=

cirros | stderr= | rc=0 }
20190402 11:47:30.452 - INFO - +------ END KW: OpenStack.Run OS Command (1452)
20190402 11:47:30.452 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:30.453 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:30.453 - INFO - ${response} = 

cirros
20190402 11:47:30.453 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:47:30.453 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:30.454 - INFO - @{res_in_list} = [ cirros ]
20190402 11:47:30.454 - INFO - +------- END KW: String.Split String (1)
20190402 11:47:30.454 - INFO - @{image_list} = [ cirros ]
20190402 11:47:30.455 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:47:30.455 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190402 11:47:30.455 - INFO - +------- START KW: ${image} = cirros [ ]
20190402 11:47:30.455 - INFO - +-------- START KW: OpenStack.Delete Image [ ${image} ]
20190402 11:47:30.456 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack image delete ]
20190402 11:47:30.456 - INFO - ${openstack_cmd} = openstack image delete
20190402 11:47:30.456 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:30.457 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${image} ]
20190402 11:47:30.457 - INFO - ${cmd} = openstack image delete cirros
20190402 11:47:30.457 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:47:30.458 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:30.458 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:30.459 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:30.459 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:30.459 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:30.460 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image delete cirros'.
20190402 11:47:32.092 - INFO - Command exited with return code 0.
20190402 11:47:32.092 - INFO - ${stdout} =
20190402 11:47:32.093 - INFO - ${stderr} =
20190402 11:47:32.093 - INFO - ${rc} = 0
20190402 11:47:32.093 - INFO - +---------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:47:32.093 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:32.095 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:32.095 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:32.095 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:32.096 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:32.096 - INFO - +--------- END KW: OpenStack.Run OS Command (1639)
20190402 11:47:32.097 - INFO - +-------- END KW: OpenStack.Delete Image (1642)
20190402 11:47:32.097 - INFO - +------- END KW: ${image} = cirros (1642)
20190402 11:47:32.097 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (1642)
20190402 11:47:32.097 - INFO - +----- END KW: OpenStack.Delete All Images (3100)
20190402 11:47:32.098 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190402 11:47:32.099 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190402 11:47:32.099 - INFO - ${openstack_cmd} = openstack flavor list
20190402 11:47:32.099 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:47:32.100 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190402 11:47:32.101 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190402 11:47:32.101 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:47:32.101 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:32.103 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:32.103 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:32.103 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:32.103 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:32.104 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190402 11:47:33.436 - INFO - Command exited with return code 0.
20190402 11:47:33.436 - INFO - ${stdout} = 

f2.small
f1.small
20190402 11:47:33.436 - INFO - ${stderr} =
20190402 11:47:33.436 - INFO - ${rc} = 0
20190402 11:47:33.437 - INFO - +------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:47:33.437 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:33.438 - INFO - ${res} = {u'stdout': u'\n\nf2.small\nf1.small', u'stderr': u'', u'rc': 0}
20190402 11:47:33.438 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:33.439 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:33.439 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:33.440 - INFO - &{result} = { stdout=

f2.small
f1.small | stderr= | rc=0 }
20190402 11:47:33.440 - INFO - +------ END KW: OpenStack.Run OS Command (1339)
20190402 11:47:33.440 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:33.441 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:33.441 - INFO - ${response} = 

f2.small
f1.small
20190402 11:47:33.441 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:47:33.442 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:33.442 - INFO - @{res_in_list} = [ f2.small | f1.small ]
20190402 11:47:33.442 - INFO - +------- END KW: String.Split String (0)
20190402 11:47:33.443 - INFO - @{flavor_list} = [ f2.small | f1.small ]
20190402 11:47:33.443 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:47:33.443 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190402 11:47:33.443 - INFO - +------- START KW: ${flavor} = f2.small [ ]
20190402 11:47:33.443 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:47:33.444 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:47:33.445 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:47:33.445 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:33.445 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:47:33.446 - INFO - ${cmd} = openstack flavor delete f2.small
20190402 11:47:33.446 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:33.447 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:33.447 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:33.448 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:33.448 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:33.448 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:33.449 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f2.small'.
20190402 11:47:34.881 - INFO - Command exited with return code 0.
20190402 11:47:34.881 - INFO - ${stdout} =
20190402 11:47:34.882 - INFO - ${stderr} =
20190402 11:47:34.882 - INFO - ${rc} = 0
20190402 11:47:34.882 - INFO - +---------- END KW: SSHLibrary.Execute Command (1434)
20190402 11:47:34.882 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:34.884 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:34.884 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:34.884 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:34.885 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:34.885 - INFO - +--------- END KW: OpenStack.Run OS Command (1439)
20190402 11:47:34.886 - INFO - +-------- END KW: OpenStack.Delete Flavor (1443)
20190402 11:47:34.886 - INFO - +------- END KW: ${flavor} = f2.small (1443)
20190402 11:47:34.886 - INFO - +------- START KW: ${flavor} = f1.small [ ]
20190402 11:47:34.886 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:47:34.887 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:47:34.888 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:47:34.888 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:34.888 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:47:34.889 - INFO - ${cmd} = openstack flavor delete f1.small
20190402 11:47:34.889 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:34.889 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:34.890 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:34.890 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:34.891 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:34.891 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:34.892 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f1.small'.
20190402 11:47:36.439 - INFO - Command exited with return code 0.
20190402 11:47:36.439 - INFO - ${stdout} =
20190402 11:47:36.439 - INFO - ${stderr} =
20190402 11:47:36.439 - INFO - ${rc} = 0
20190402 11:47:36.440 - INFO - +---------- END KW: SSHLibrary.Execute Command (1548)
20190402 11:47:36.440 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:36.441 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:36.441 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:36.441 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:36.442 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:36.443 - INFO - +--------- END KW: OpenStack.Run OS Command (1553)
20190402 11:47:36.443 - INFO - +-------- END KW: OpenStack.Delete Flavor (1557)
20190402 11:47:36.443 - INFO - +------- END KW: ${flavor} = f1.small (1557)
20190402 11:47:36.443 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (3000)
20190402 11:47:36.443 - INFO - +----- END KW: OpenStack.Delete All Flavors (4345)
20190402 11:47:36.444 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190402 11:47:36.444 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:47:36.445 - INFO - ${openstack_cmd} = openstack network list
20190402 11:47:36.445 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:47:36.445 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190402 11:47:36.446 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190402 11:47:36.446 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:47:36.446 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:36.447 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:36.447 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:36.448 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:36.448 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:36.449 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190402 11:47:38.232 - INFO - Command exited with return code 0.
20190402 11:47:38.232 - INFO - ${stdout} = 

network-1
20190402 11:47:38.232 - INFO - ${stderr} =
20190402 11:47:38.233 - INFO - ${rc} = 0
20190402 11:47:38.233 - INFO - +------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:47:38.233 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:38.234 - INFO - ${res} = {u'stdout': u'\n\nnetwork-1', u'stderr': u'', u'rc': 0}
20190402 11:47:38.234 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:38.235 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:38.235 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:38.236 - INFO - &{result} = { stdout=

network-1 | stderr= | rc=0 }
20190402 11:47:38.236 - INFO - +------ END KW: OpenStack.Run OS Command (1790)
20190402 11:47:38.237 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:38.237 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:38.238 - INFO - ${response} = 

network-1
20190402 11:47:38.238 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:47:38.238 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:38.239 - INFO - @{res_in_list} = [ network-1 ]
20190402 11:47:38.239 - INFO - +------- END KW: String.Split String (1)
20190402 11:47:38.239 - INFO - @{network_list} = [ network-1 ]
20190402 11:47:38.239 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:47:38.240 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190402 11:47:38.240 - INFO - +------- START KW: ${network} = network-1 [ ]
20190402 11:47:38.240 - INFO - +-------- START KW: OpenStack.Delete Network [ ${network} ]
20190402 11:47:38.241 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack network delete ]
20190402 11:47:38.242 - INFO - ${openstack_cmd} = openstack network delete
20190402 11:47:38.242 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:38.242 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network} ]
20190402 11:47:38.243 - INFO - ${cmd} = openstack network delete network-1
20190402 11:47:38.243 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:38.243 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:38.244 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:38.245 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:38.245 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:38.245 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:38.246 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network delete network-1'.
20190402 11:47:41.182 - INFO - Command exited with return code 0.
20190402 11:47:41.182 - INFO - ${stdout} =
20190402 11:47:41.183 - INFO - ${stderr} =
20190402 11:47:41.183 - INFO - ${rc} = 0
20190402 11:47:41.183 - INFO - +---------- END KW: SSHLibrary.Execute Command (2938)
20190402 11:47:41.183 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:41.185 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:41.185 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:41.185 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:41.186 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:41.186 - INFO - +--------- END KW: OpenStack.Run OS Command (2943)
20190402 11:47:41.187 - INFO - +-------- END KW: OpenStack.Delete Network (2946)
20190402 11:47:41.187 - INFO - +------- END KW: ${network} = network-1 (2947)
20190402 11:47:41.187 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (2947)
20190402 11:47:41.187 - INFO - +----- END KW: OpenStack.Delete All Networks (4743)
20190402 11:47:41.187 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190402 11:47:41.188 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190402 11:47:41.188 - INFO - ${openstack_cmd} = openstack keypair list
20190402 11:47:41.189 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:47:41.189 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190402 11:47:41.189 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190402 11:47:41.190 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:47:41.190 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:41.191 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:41.191 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:41.191 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:41.192 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:41.192 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190402 11:47:42.580 - INFO - Command exited with return code 0.
20190402 11:47:42.580 - INFO - ${stdout} =
20190402 11:47:42.580 - INFO - ${stderr} =
20190402 11:47:42.580 - INFO - ${rc} = 0
20190402 11:47:42.581 - INFO - +------- END KW: SSHLibrary.Execute Command (1389)
20190402 11:47:42.581 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:42.582 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:42.582 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:42.582 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:42.582 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:42.583 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:47:42.583 - INFO - +------ END KW: OpenStack.Run OS Command (1393)
20190402 11:47:42.583 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:42.583 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:42.584 - INFO - ${response} =
20190402 11:47:42.584 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:47:42.584 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:42.584 - INFO - @{res_in_list} = [ ]
20190402 11:47:42.584 - INFO - +------- END KW: String.Split String (0)
20190402 11:47:42.585 - INFO - @{key_list} = [ ]
20190402 11:47:42.585 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:47:42.585 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190402 11:47:42.585 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190402 11:47:42.585 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (1398)
20190402 11:47:42.585 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190402 11:47:42.586 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:47:42.586 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:47:42.586 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:47:42.586 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:47:42.586 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190402 11:47:42.586 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:47:42.587 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:42.587 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:42.587 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:42.587 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:42.588 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:42.588 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190402 11:47:43.925 - INFO - Command exited with return code 0.
20190402 11:47:43.926 - INFO - ${stdout} = 

snap-cirros-2
snap-cirros-1
20190402 11:47:43.926 - INFO - ${stderr} =
20190402 11:47:43.926 - INFO - ${rc} = 0
20190402 11:47:43.926 - INFO - +------- END KW: SSHLibrary.Execute Command (1338)
20190402 11:47:43.927 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:43.928 - INFO - ${res} = {u'stdout': u'\n\nsnap-cirros-2\nsnap-cirros-1', u'stderr': u'', u'rc': 0}
20190402 11:47:43.928 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:43.929 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:43.929 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:43.931 - INFO - &{result} = { stdout=

snap-cirros-2
snap-cirros-1 | stderr= | rc=0 }
20190402 11:47:43.931 - INFO - +------ END KW: OpenStack.Run OS Command (1344)
20190402 11:47:43.932 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:43.932 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:43.933 - INFO - ${response} = 

snap-cirros-2
snap-cirros-1
20190402 11:47:43.933 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:47:43.933 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:43.934 - INFO - @{res_in_list} = [ snap-cirros-2 | snap-cirros-1 ]
20190402 11:47:43.934 - INFO - +------- END KW: String.Split String (1)
20190402 11:47:43.935 - INFO - @{snapshot_list} = [ snap-cirros-2 | snap-cirros-1 ]
20190402 11:47:43.935 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:47:43.935 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190402 11:47:43.935 - INFO - +------- START KW: ${snapshot} = snap-cirros-2 [ ]
20190402 11:47:43.935 - INFO - +-------- START KW: OpenStack.Delete Snapshot [ ${snapshot} ]
20190402 11:47:43.936 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume snapshot delete ]
20190402 11:47:43.937 - INFO - ${openstack_cmd} = openstack volume snapshot delete
20190402 11:47:43.937 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:43.937 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${snapshot} ]
20190402 11:47:43.937 - INFO - ${cmd} = openstack volume snapshot delete snap-cirros-2
20190402 11:47:43.938 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:43.938 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:43.939 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:43.939 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:43.939 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:43.940 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:43.940 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot delete snap-cirros-2'.
20190402 11:47:45.272 - INFO - Command exited with return code 0.
20190402 11:47:45.273 - INFO - ${stdout} =
20190402 11:47:45.273 - INFO - ${stderr} =
20190402 11:47:45.273 - INFO - ${rc} = 0
20190402 11:47:45.273 - INFO - +---------- END KW: SSHLibrary.Execute Command (1333)
20190402 11:47:45.274 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:45.275 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:45.275 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:45.275 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:45.276 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:45.276 - INFO - +--------- END KW: OpenStack.Run OS Command (1338)
20190402 11:47:45.276 - INFO - +-------- END KW: OpenStack.Delete Snapshot (1341)
20190402 11:47:45.276 - INFO - +------- END KW: ${snapshot} = snap-cirros-2 (1341)
20190402 11:47:45.276 - INFO - +------- START KW: ${snapshot} = snap-cirros-1 [ ]
20190402 11:47:45.277 - INFO - +-------- START KW: OpenStack.Delete Snapshot [ ${snapshot} ]
20190402 11:47:45.277 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume snapshot delete ]
20190402 11:47:45.278 - INFO - ${openstack_cmd} = openstack volume snapshot delete
20190402 11:47:45.278 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:45.278 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${snapshot} ]
20190402 11:47:45.279 - INFO - ${cmd} = openstack volume snapshot delete snap-cirros-1
20190402 11:47:45.279 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:45.279 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:45.280 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:45.280 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:45.281 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:45.281 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:45.282 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot delete snap-cirros-1'.
20190402 11:47:46.797 - INFO - Command exited with return code 0.
20190402 11:47:46.797 - INFO - ${stdout} =
20190402 11:47:46.798 - INFO - ${stderr} =
20190402 11:47:46.798 - INFO - ${rc} = 0
20190402 11:47:46.798 - INFO - +---------- END KW: SSHLibrary.Execute Command (1517)
20190402 11:47:46.798 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:46.798 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:46.798 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:47:46.799 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:46.799 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:46.799 - INFO - +--------- END KW: OpenStack.Run OS Command (1520)
20190402 11:47:46.799 - INFO - +-------- END KW: OpenStack.Delete Snapshot (1522)
20190402 11:47:46.799 - INFO - +------- END KW: ${snapshot} = snap-cirros-1 (1523)
20190402 11:47:46.799 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (2864)
20190402 11:47:46.799 - INFO - +----- END KW: OpenStack.Delete All Snapshots (4214)
20190402 11:47:46.799 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190402 11:47:46.800 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190402 11:47:46.800 - INFO - ${openstack_cmd} = openstack volume list
20190402 11:47:46.800 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:47:46.800 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190402 11:47:46.800 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190402 11:47:46.800 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:47:46.800 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:46.801 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:46.801 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:46.801 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:46.801 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:46.802 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190402 11:47:49.050 - INFO - Command exited with return code 0.
20190402 11:47:49.050 - INFO - ${stdout} = 

12f23d23-4049-4706-aca1-80783ee83ff2
65be29df-2ffc-4bcc-85f5-4fb95188b95b
5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:47:49.050 - INFO - ${stderr} =
20190402 11:47:49.050 - INFO - ${rc} = 0
20190402 11:47:49.050 - INFO - +------- END KW: SSHLibrary.Execute Command (2249)
20190402 11:47:49.050 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:49.051 - INFO - ${res} = {u'stdout': u'\n\n12f23d23-4049-4706-aca1-80783ee83ff2\n65be29df-2ffc-4bcc-85f5-4fb95188b95b\n5936d333-91af-4afe-babf-bd2a6b209783', u'stderr': u'', u'rc': 0}
20190402 11:47:49.051 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:47:49.051 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:49.051 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:49.051 - INFO - &{result} = { stdout=

12f23d23-4049-4706-aca1-80783ee83ff2
65be29df-2ffc-4bcc-85f5-4fb95188b95b
5936d333-91af-4afe-babf-bd2a6b209783 | stderr= | rc=0 }
20190402 11:47:49.051 - INFO - +------ END KW: OpenStack.Run OS Command (2251)
20190402 11:47:49.051 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:49.052 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:49.052 - INFO - ${response} = 

12f23d23-4049-4706-aca1-80783ee83ff2
65be29df-2ffc-4bcc-85f5-4fb95188b95b
5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:47:49.052 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:47:49.052 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:49.052 - INFO - @{res_in_list} = [ 12f23d23-4049-4706-aca1-80783ee83ff2 | 65be29df-2ffc-4bcc-85f5-4fb95188b95b | 5936d333-91af-4afe-babf-bd2a6b209783 ]
20190402 11:47:49.052 - INFO - +------- END KW: String.Split String (0)
20190402 11:47:49.052 - INFO - @{volume_list} = [ 12f23d23-4049-4706-aca1-80783ee83ff2 | 65be29df-2ffc-4bcc-85f5-4fb95188b95b | 5936d333-91af-4afe-babf-bd2a6b209783 ]
20190402 11:47:49.053 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:47:49.053 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190402 11:47:49.053 - INFO - +------- START KW: ${volume} = 12f23d23-4049-4706-aca1-80783ee83ff2 [ ]
20190402 11:47:49.053 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:47:49.053 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:47:49.053 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:47:49.053 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:49.053 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:47:49.054 - INFO - ${cmd} = openstack volume delete 12f23d23-4049-4706-aca1-80783ee83ff2
20190402 11:47:49.054 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:49.054 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:49.054 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:49.054 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:49.054 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:49.054 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:49.055 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 12f23d23-4049-4706-aca1-80783ee83ff2'.
20190402 11:47:50.843 - INFO - Command exited with return code 0.
20190402 11:47:50.843 - INFO - ${stdout} =
20190402 11:47:50.844 - INFO - ${stderr} =
20190402 11:47:50.844 - INFO - ${rc} = 0
20190402 11:47:50.844 - INFO - +---------- END KW: SSHLibrary.Execute Command (1790)
20190402 11:47:50.844 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:50.844 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:50.845 - INFO - +---------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:47:50.845 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:50.845 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:50.845 - INFO - +--------- END KW: OpenStack.Run OS Command (1791)
20190402 11:47:50.845 - INFO - +-------- END KW: OpenStack.Delete Volume (1792)
20190402 11:47:50.846 - INFO - +------- END KW: ${volume} = 12f23d23-4049-4706-aca1-80783ee83ff2 (1793)
20190402 11:47:50.846 - INFO - +------- START KW: ${volume} = 65be29df-2ffc-4bcc-85f5-4fb95188b95b [ ]
20190402 11:47:50.846 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:47:50.846 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:47:50.846 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:47:50.846 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:50.846 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:47:50.847 - INFO - ${cmd} = openstack volume delete 65be29df-2ffc-4bcc-85f5-4fb95188b95b
20190402 11:47:50.847 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:50.847 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:50.847 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:50.847 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:50.848 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:50.848 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:50.848 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 65be29df-2ffc-4bcc-85f5-4fb95188b95b'.
20190402 11:47:52.179 - INFO - Command exited with return code 0.
20190402 11:47:52.179 - INFO - ${stdout} =
20190402 11:47:52.180 - INFO - ${stderr} =
20190402 11:47:52.180 - INFO - ${rc} = 0
20190402 11:47:52.180 - INFO - +---------- END KW: SSHLibrary.Execute Command (1332)
20190402 11:47:52.180 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:52.182 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:52.182 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:52.182 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:52.183 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:52.184 - INFO - +--------- END KW: OpenStack.Run OS Command (1336)
20190402 11:47:52.184 - INFO - +-------- END KW: OpenStack.Delete Volume (1338)
20190402 11:47:52.184 - INFO - +------- END KW: ${volume} = 65be29df-2ffc-4bcc-85f5-4fb95188b95b (1338)
20190402 11:47:52.184 - INFO - +------- START KW: ${volume} = 5936d333-91af-4afe-babf-bd2a6b209783 [ ]
20190402 11:47:52.185 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:47:52.185 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:47:52.186 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:47:52.186 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:52.186 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:47:52.187 - INFO - ${cmd} = openstack volume delete 5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:47:52.187 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:47:52.187 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:47:52.190 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:52.190 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:52.190 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:47:52.191 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:52.191 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 5936d333-91af-4afe-babf-bd2a6b209783'.
20190402 11:47:53.538 - INFO - Command exited with return code 1.
20190402 11:47:53.538 - INFO - ${stdout} =
20190402 11:47:53.538 - INFO - ${stderr} = Failed to delete volume with name or ID '5936d333-91af-4afe-babf-bd2a6b209783': Invalid volume: Volume status must be available or error or error_restoring or error_extending or error_managing and mus...
20190402 11:47:53.539 - INFO - ${rc} = 1
20190402 11:47:53.539 - INFO - +---------- END KW: SSHLibrary.Execute Command (1349)
20190402 11:47:53.539 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:53.541 - INFO - ${res} = {u'stdout': u'', u'stderr': u"Failed to delete volume with name or ID '5936d333-91af-4afe-babf-bd2a6b209783': Invalid volume: Volume status must be available or error or error_restoring or error_exten...
20190402 11:47:53.541 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:53.541 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:53.542 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:53.543 - INFO - +--------- END KW: OpenStack.Run OS Command (1355)
20190402 11:47:53.543 - INFO - +-------- END KW: OpenStack.Delete Volume (1358)
20190402 11:47:53.543 - INFO - +------- END KW: ${volume} = 5936d333-91af-4afe-babf-bd2a6b209783 (1359)
20190402 11:47:53.543 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (4490)
20190402 11:47:53.544 - INFO - +----- END KW: OpenStack.Delete All Volumes (6745)
20190402 11:47:53.544 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190402 11:47:53.545 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190402 11:47:53.545 - INFO - ${openstack_cmd} = openstack stack list
20190402 11:47:53.545 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:47:53.546 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:47:53.546 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190402 11:47:53.547 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:47:53.547 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:53.548 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:53.549 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:53.549 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:47:53.549 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:53.550 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190402 11:47:54.882 - INFO - Command exited with return code 0.
20190402 11:47:54.883 - INFO - ${stdout} =
20190402 11:47:54.883 - INFO - ${stderr} =
20190402 11:47:54.883 - INFO - ${rc} = 0
20190402 11:47:54.883 - INFO - +------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:47:54.883 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:54.883 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:47:54.883 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:47:54.884 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:54.884 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:54.884 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:47:54.884 - INFO - +------ END KW: OpenStack.Run OS Command (1337)
20190402 11:47:54.884 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:47:54.884 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:47:54.885 - INFO - ${response} =
20190402 11:47:54.885 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:47:54.885 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:47:54.885 - INFO - @{res_in_list} = [ ]
20190402 11:47:54.885 - INFO - +------- END KW: String.Split String (0)
20190402 11:47:54.885 - INFO - @{stack_list} = [ ]
20190402 11:47:54.885 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:47:54.885 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190402 11:47:54.885 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (0)
20190402 11:47:54.885 - INFO - +----- END KW: OpenStack.Delete All Stacks (1341)
20190402 11:47:54.886 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (31837)
20190402 11:47:54.886 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190402 11:47:54.886 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190402 11:47:54.918 - INFO - +----- END KW: SSHLibrary.Close All Connections (32)
20190402 11:47:54.918 - INFO - +---- END KW: Utils.Stx Suite TearDown (32)
20190402 11:47:54.918 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (31870)
==============================================================================
20190402 11:47:54.921 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.03-Instance-From-Snapshot (1194333)
==============================================================================
20190402 11:47:54.934 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.04-Instance-From-Heat-Template [ ]
==============================================================================
20190402 11:47:54.934 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190402 11:47:54.935 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 11:47:54.935 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 11:47:54.935 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 11:47:54.936 - INFO - ${controller_connection} = 1
20190402 11:47:54.936 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190402 11:47:54.936 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 11:47:54.936 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 11:47:54.936 - INFO - Length is 10
20190402 11:47:54.936 - INFO - ${pwd_length} = 10
20190402 11:47:54.936 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190402 11:47:54.936 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 11:47:54.937 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 11:47:54.937 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 11:47:56.061 - INFO - Read output: Last login: Tue Apr  2 17:16:43 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 11:47:56.062 - INFO - +-------- END KW: SSHLibrary.Login (1124)
20190402 11:47:56.062 - INFO - Returning from the enclosing user keyword.
20190402 11:47:56.062 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1126)
20190402 11:47:56.062 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1126)
20190402 11:47:56.062 - INFO - ${master_controller_connection} = 1
20190402 11:47:56.062 - INFO - +----- END KW: Utils.Connect to Controller Node (1127)
20190402 11:47:56.063 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 11:47:56.063 - INFO - ${master_controller_connection} = 1
20190402 11:47:56.063 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190402 11:47:56.063 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 11:47:56.064 - INFO - 1
20190402 11:47:56.064 - INFO - +----- END KW: BuiltIn.Log (1)
20190402 11:47:56.064 - INFO - +---- END KW: Utils.Open Master Controller Connection (1129)
20190402 11:47:56.064 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 11:47:56.064 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 11:47:56.065 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:47:56.065 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:47:56.065 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:47:56.066 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:47:56.066 - INFO - &{result_dict} = { stdout= }
20190402 11:47:56.066 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:47:56.066 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:47:56.067 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:47:56.067 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:47:56.067 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:47:56.068 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:47:56.068 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (3)
20190402 11:47:56.068 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:47:56.068 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:47:56.068 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:47:56.071 - INFO - source /etc/platform/openrc
20190402 11:47:56.071 - INFO - +------ END KW: SSHLibrary.Write (3)
20190402 11:47:56.071 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:47:56.685 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:47:56.685 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:47:56.685 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (614)
20190402 11:47:56.685 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:47:56.686 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:47:56.686 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:47:56.686 - INFO - +------- END KW: String.Get Line (0)
20190402 11:47:56.686 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:47:56.686 - INFO - ${clean_out} =
20190402 11:47:56.686 - INFO - +------- END KW: String.Remove String (0)
20190402 11:47:56.687 - INFO - ${output} =
20190402 11:47:56.687 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190402 11:47:56.687 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:47:56.687 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:47:56.689 - INFO - echo $?
20190402 11:47:56.689 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:47:56.689 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:47:56.691 - INFO - 0
20190402 11:47:56.691 - INFO - ${rc} = 0
20190402 11:47:56.691 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (2)
20190402 11:47:56.691 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:47:56.691 - INFO - 0
20190402 11:47:56.691 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:47:56.692 - INFO - ${rc} = 0
20190402 11:47:56.692 - INFO - +------ END KW: Utils.Get Return Code (5)
20190402 11:47:56.692 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:47:56.692 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:47:56.692 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:47:56.692 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:47:56.693 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:47:56.693 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:47:56.693 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:47:56.693 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 11:47:56.693 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:47:56.693 - INFO - +----- END KW: Utils.Run Command (629)
20190402 11:47:56.693 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (629)
20190402 11:47:56.693 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1759)
------------------------------------------------------------------------------
20190402 11:47:56.694 - INFO - +--- START TEST: Create Flavors for Instance [ ]
------------------------------------------------------------------------------
20190402 11:47:56.694 - INFO - +---- START KW: OpenStack.Create Flavor [ ${cirros_flavor_ram} | ${cirros_flavor_vcpus} | ${cirros_flavor_disk} | ${cirros_flavor_name} ]
20190402 11:47:56.694 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack flavor create ]
20190402 11:47:56.695 - INFO - ${openstack_cmd} = openstack flavor create
20190402 11:47:56.695 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:47:56.695 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --ram ${ram} | --disk ${disk} | --vcpus ${vcpus} | --public | --id auto | ${extra_args} | ${name} ]
20190402 11:47:56.695 - INFO - ${cmd} = openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small
20190402 11:47:56.695 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:47:56.695 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:47:56.696 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:56.696 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:56.696 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:47:56.696 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:56.697 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor create --ram 2048 --disk 20 --vcpus 1 --public --id auto  f1.small'.
20190402 11:47:58.378 - INFO - Command exited with return code 0.
20190402 11:47:58.379 - INFO - ${stdout} = +----------------------------+--------------------------------------+
| Field                      | Value                                |
+----------------------------+------------------------------...
20190402 11:47:58.379 - INFO - ${stderr} =
20190402 11:47:58.379 - INFO - ${rc} = 0
20190402 11:47:58.379 - INFO - +------ END KW: SSHLibrary.Execute Command (1683)
20190402 11:47:58.380 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:47:58.381 - INFO - ${res} = {u'stdout': u'+----------------------------+--------------------------------------+\n| Field                      | Value                                |\n+----------------------------+--------------...
20190402 11:47:58.381 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:47:58.382 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:47:58.383 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:47:58.383 - INFO - +----- END KW: OpenStack.Run OS Command (1688)
20190402 11:47:58.384 - INFO - +---- END KW: OpenStack.Create Flavor (1690)
------------------------------------------------------------------------------
20190402 11:47:58.384 - INFO - +--- END TEST: Create Flavors for Instance (1691)
------------------------------------------------------------------------------
20190402 11:47:58.385 - INFO - +--- START TEST: Create Images for Instances [ ]
------------------------------------------------------------------------------
20190402 11:47:58.386 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190402 11:47:58.397 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 11:47:58.405 - INFO - [chan 3] Opened sftp connection (server version 3)
20190402 11:47:58.888 - INFO - '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2' -> '/home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2'
20190402 11:47:58.889 - INFO - +---- END KW: SSHLibrary.Put File (503)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:47:58.889 - INFO - +---- START KW: OpenStack.Create Image [ ${host_image_path}/${cirros_image} | ${disk_format} | ${cirros_image_name} ]
20190402 11:47:58.889 - INFO - +----- START KW: SSHLibrary.File Should Exist [ ${file_path} ]
20190402 11:47:58.890 - INFO - +----- END KW: SSHLibrary.File Should Exist (1)
20190402 11:47:58.890 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack image create ]
20190402 11:47:58.890 - INFO - ${openstack_cmd} = openstack image create
20190402 11:47:58.890 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:47:58.890 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --file ${file_path} | --disk-format ${disk_format} | --public | ${name} ]
20190402 11:47:58.891 - INFO - ${cmd} = openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros
20190402 11:47:58.891 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:47:58.891 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 3 min ]
20190402 11:47:58.891 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:47:58.892 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:47:58.892 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:47:58.892 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:47:58.892 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros'.
20190402 11:48:01.061 - INFO - Command exited with return code 0.
20190402 11:48:01.062 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:48:01.062 - INFO - ${stderr} =
20190402 11:48:01.062 - INFO - ${rc} = 0
20190402 11:48:01.063 - INFO - +------ END KW: SSHLibrary.Execute Command (2170)
20190402 11:48:01.063 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:01.065 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:48:01.065 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:48:01.066 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:01.067 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:01.068 - INFO - +----- END KW: OpenStack.Run OS Command (2176)
20190402 11:48:01.068 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | image | ${name} | status | active ]
20190402 11:48:01.069 - INFO - +------ START KW: OpenStack.Check Field Value [ image | ${name} | status | active ]
20190402 11:48:01.070 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:01.071 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:01.071 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:48:01.071 - INFO - +-------- END KW: BuiltIn.Set Variable (0)
20190402 11:48:01.072 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:01.072 - INFO - ${cmd} = openstack image show cirros|grep -w status|tail -1|awk '{print$4}'
20190402 11:48:01.072 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:48:01.073 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:01.074 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:01.074 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:01.074 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:48:01.075 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:01.075 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep -w status|tail -1|awk '{print$4}''.
20190402 11:48:02.457 - INFO - Command exited with return code 0.
20190402 11:48:02.457 - INFO - ${stdout} = active
20190402 11:48:02.457 - INFO - ${stderr} =
20190402 11:48:02.458 - INFO - ${rc} = 0
20190402 11:48:02.458 - INFO - +--------- END KW: SSHLibrary.Execute Command (1384)
20190402 11:48:02.458 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:02.459 - INFO - ${res} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:48:02.459 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:02.460 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:02.460 - INFO - +--------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:48:02.461 - INFO - ${result} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:48:02.461 - INFO - +-------- END KW: OpenStack.Run OS Command (1388)
20190402 11:48:02.461 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:02.462 - INFO - ${value} = active
20190402 11:48:02.462 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:48:02.462 - INFO - ${current_value} = active
20190402 11:48:02.462 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1392)
20190402 11:48:02.463 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:02.464 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:02.464 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:48:02.464 - INFO - +------ END KW: OpenStack.Check Field Value (1395)
20190402 11:48:02.464 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1396)
20190402 11:48:02.465 - INFO - +---- END KW: OpenStack.Create Image (3576)
------------------------------------------------------------------------------
20190402 11:48:02.465 - INFO - +--- END TEST: Create Images for Instances (4080)
------------------------------------------------------------------------------
20190402 11:48:02.466 - INFO - +--- START TEST: Create Networks for Instance [ ]
------------------------------------------------------------------------------
20190402 11:48:02.467 - INFO - +---- START KW: OpenStack.Create Network [ ${network_name} ]
20190402 11:48:02.467 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network create ]
20190402 11:48:02.468 - INFO - ${openstack_cmd} = openstack network create
20190402 11:48:02.468 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:48:02.468 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network_name} | ${additional_args} ]
20190402 11:48:02.469 - INFO - ${cmd} = openstack network create network-1
20190402 11:48:02.469 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:48:02.469 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:48:02.470 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:02.471 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:02.471 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:48:02.471 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:02.472 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network create network-1 '.
20190402 11:48:03.853 - INFO - Command exited with return code 0.
20190402 11:48:03.854 - INFO - ${stdout} = +---------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:48:03.854 - INFO - ${stderr} =
20190402 11:48:03.854 - INFO - ${rc} = 0
20190402 11:48:03.854 - INFO - +------ END KW: SSHLibrary.Execute Command (1383)
20190402 11:48:03.855 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:03.856 - INFO - ${res} = {u'stdout': u"+---------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:48:03.856 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:03.856 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:03.857 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:03.857 - INFO - +----- END KW: OpenStack.Run OS Command (1388)
20190402 11:48:03.858 - INFO - +---- END KW: OpenStack.Create Network (1391)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:48:03.858 - INFO - +---- START KW: OpenStack.Create Subnet [ ${network_name} | ${subnet_range} | ${subnet_extras} ]
20190402 11:48:03.859 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack subnet create ]
20190402 11:48:03.859 - INFO - ${openstack_cmd} = openstack subnet create
20190402 11:48:03.859 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:48:03.859 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --network ${network_name} | --subnet-range ${range_ip} ${additional_args} ]
20190402 11:48:03.860 - INFO - ${cmd} = openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1
20190402 11:48:03.860 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:48:03.860 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:48:03.861 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:03.862 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:03.862 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:48:03.862 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:03.863 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack subnet create --network network-1 --subnet-range 192.168.0.0/24 --ip-version 4 --dhcp subnet-1'.
20190402 11:48:05.775 - INFO - Command exited with return code 0.
20190402 11:48:05.775 - INFO - ${stdout} = +-------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:48:05.776 - INFO - ${stderr} =
20190402 11:48:05.776 - INFO - ${rc} = 0
20190402 11:48:05.776 - INFO - +------ END KW: SSHLibrary.Execute Command (1914)
20190402 11:48:05.776 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:05.778 - INFO - ${res} = {u'stdout': u"+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:48:05.778 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:48:05.778 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:05.779 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:05.780 - INFO - +----- END KW: OpenStack.Run OS Command (1919)
20190402 11:48:05.780 - INFO - +---- END KW: OpenStack.Create Subnet (1922)
------------------------------------------------------------------------------
20190402 11:48:05.781 - INFO - +--- END TEST: Create Networks for Instance (3314)
------------------------------------------------------------------------------
20190402 11:48:05.781 - INFO - +--- START TEST: Create Instance Trough Stack [ ]
------------------------------------------------------------------------------
20190402 11:48:05.782 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${stack_template} | ${host_image_path}/${stack_template} ]
20190402 11:48:05.795 - INFO - '/home/mgperezi/duplex/stx-test-suite/Utils/stack_template.yml' -> '/home/wrsroot//Utils/stack_template.yml'
20190402 11:48:05.795 - INFO - +---- END KW: SSHLibrary.Put File (13)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:48:05.795 - INFO - +---- START KW: OpenStack.Get Net Id [ ${network_name} ]
20190402 11:48:05.796 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:48:05.797 - INFO - ${openstack_cmd} = openstack network list
20190402 11:48:05.797 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:48:05.797 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "${network_name}" | awk '{print$2}' ]
20190402 11:48:05.798 - INFO - ${cmd} = openstack network list|grep "network-1"|awk '{print$2}'
20190402 11:48:05.798 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:48:05.798 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:05.799 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:05.800 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:05.800 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:48:05.800 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:05.801 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|grep "network-1"|awk '{print$2}''.
20190402 11:48:07.483 - INFO - Command exited with return code 0.
20190402 11:48:07.484 - INFO - ${stdout} = 56b50706-e978-4c9a-b1aa-69dc49e8f48c
20190402 11:48:07.484 - INFO - ${stderr} =
20190402 11:48:07.484 - INFO - ${rc} = 0
20190402 11:48:07.484 - INFO - +------ END KW: SSHLibrary.Execute Command (1684)
20190402 11:48:07.485 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:07.486 - INFO - ${res} = {u'stdout': u'56b50706-e978-4c9a-b1aa-69dc49e8f48c', u'stderr': u'', u'rc': 0}
20190402 11:48:07.486 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:07.487 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:07.488 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:07.489 - INFO - &{result} = { stdout=56b50706-e978-4c9a-b1aa-69dc49e8f48c | stderr= | rc=0 }
20190402 11:48:07.490 - INFO - +----- END KW: OpenStack.Run OS Command (1691)
20190402 11:48:07.490 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:07.491 - INFO - ${output} = 56b50706-e978-4c9a-b1aa-69dc49e8f48c
20190402 11:48:07.491 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 11:48:07.492 - INFO - +----- START KW: String.Split String [ ${output} | ${EMPTY} ]
20190402 11:48:07.493 - INFO - ${splitted_output} = [u'56b50706-e978-4c9a-b1aa-69dc49e8f48c']
20190402 11:48:07.493 - INFO - +----- END KW: String.Split String (1)
20190402 11:48:07.493 - INFO - +----- START KW: Collections.Get From List [ ${splitted_output} | 0 ]
20190402 11:48:07.494 - INFO - ${net_id} = 56b50706-e978-4c9a-b1aa-69dc49e8f48c
20190402 11:48:07.494 - INFO - +----- END KW: Collections.Get From List (1)
20190402 11:48:07.494 - INFO - ${net_id} = 56b50706-e978-4c9a-b1aa-69dc49e8f48c
20190402 11:48:07.495 - INFO - +---- END KW: OpenStack.Get Net Id (1700)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:48:07.495 - INFO - +---- START KW: OpenStack.Create Stack [ ${stack_name_1} | ${stack_template} | ${net_id} ]
20190402 11:48:07.496 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack stack create --template ]
20190402 11:48:07.497 - INFO - ${openstack_cmd} = openstack stack create --template
20190402 11:48:07.497 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:48:07.497 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${stack_template} | ${stack_name} | --parameter "NetID=${net_id}" ]
20190402 11:48:07.499 - INFO - ${cmd} = openstack stack create --template Utils/stack_template.yml stack-cirros-1 --parameter "NetID=56b50706-e978-4c9a-b1aa-69dc49e8f48c"
20190402 11:48:07.499 - INFO - +----- END KW: BuiltIn.Catenate (2)
20190402 11:48:07.499 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:07.500 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:07.501 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:07.501 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:48:07.501 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:07.502 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack create --template Utils/stack_template.yml stack-cirros-1 --parameter "NetID=56b50706-e978-4c9a-b1aa-69dc49e8f48c"'.
20190402 11:48:10.588 - INFO - Command exited with return code 0.
20190402 11:48:10.588 - INFO - ${stdout} = +---------------------+---------------------------------------+
| Field               | Value                                 |
+---------------------+---------------------------------------+
| id    ...
20190402 11:48:10.588 - INFO - ${stderr} =
20190402 11:48:10.588 - INFO - ${rc} = 0
20190402 11:48:10.588 - INFO - +------ END KW: SSHLibrary.Execute Command (3087)
20190402 11:48:10.588 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:10.589 - INFO - ${res} = {u'stdout': u'+---------------------+---------------------------------------+\n| Field               | Value                                 |\n+---------------------+---------------------------------...
20190402 11:48:10.589 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:10.589 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:10.590 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:10.590 - INFO - ${output} = {u'stdout': u'+---------------------+---------------------------------------+\n| Field               | Value                                 |\n+---------------------+---------------------------------...
20190402 11:48:10.590 - INFO - +----- END KW: OpenStack.Run OS Command (3091)
20190402 11:48:10.590 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:10.590 - INFO - +------ START KW: OpenStack.Check Field Value [ stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:10.591 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:10.591 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:10.592 - INFO - ${openstack_cmd} = openstack stack show stack-cirros-1
20190402 11:48:10.592 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:10.592 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:10.592 - INFO - ${cmd} = openstack stack show stack-cirros-1|grep -w stack_status|tail -1|awk '{print$4}'
20190402 11:48:10.592 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:48:10.593 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:10.593 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:10.593 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:10.594 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:48:10.594 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:10.594 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack show stack-cirros-1|grep -w stack_status|tail -1|awk '{print$4}''.
20190402 11:48:12.591 - INFO - Command exited with return code 0.
20190402 11:48:12.591 - INFO - ${stdout} = CREATE_IN_PROGRESS
20190402 11:48:12.591 - INFO - ${stderr} =
20190402 11:48:12.591 - INFO - ${rc} = 0
20190402 11:48:12.592 - INFO - +--------- END KW: SSHLibrary.Execute Command (1997)
20190402 11:48:12.592 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:12.593 - INFO - ${res} = {u'stdout': u'CREATE_IN_PROGRESS', u'stderr': u'', u'rc': 0}
20190402 11:48:12.593 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:12.593 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:12.594 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:12.594 - INFO - ${result} = {u'stdout': u'CREATE_IN_PROGRESS', u'stderr': u'', u'rc': 0}
20190402 11:48:12.595 - INFO - +-------- END KW: OpenStack.Run OS Command (2002)
20190402 11:48:12.595 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:12.595 - INFO - ${value} = CREATE_IN_PROGRESS
20190402 11:48:12.596 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:48:12.596 - INFO - ${current_value} = CREATE_IN_PROGRESS
20190402 11:48:12.597 - INFO - +------- END KW: OpenStack.Retrieve Field Property (2005)
20190402 11:48:12.597 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:12.597 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:12.598 - FAIL - CREATE_IN_PROGRESS != CREATE_COMPLETE
20190402 11:48:12.598 - DEBUG - Traceback (most recent call last):
  None
20190402 11:48:12.598 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:48:12.598 - INFO - +------ END KW: OpenStack.Check Field Value (2008)
20190402 11:48:22.599 - INFO - +------ START KW: OpenStack.Check Field Value [ stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:22.600 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:22.601 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:22.602 - INFO - ${openstack_cmd} = openstack stack show stack-cirros-1
20190402 11:48:22.602 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:22.602 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:22.603 - INFO - ${cmd} = openstack stack show stack-cirros-1|grep -w stack_status|tail -1|awk '{print$4}'
20190402 11:48:22.603 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:48:22.603 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:22.605 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:22.605 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:22.606 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:22.606 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:22.607 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack show stack-cirros-1|grep -w stack_status|tail -1|awk '{print$4}''.
20190402 11:48:24.391 - INFO - Command exited with return code 0.
20190402 11:48:24.391 - INFO - ${stdout} = CREATE_COMPLETE
20190402 11:48:24.391 - INFO - ${stderr} =
20190402 11:48:24.391 - INFO - ${rc} = 0
20190402 11:48:24.391 - INFO - +--------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:48:24.392 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:24.393 - INFO - ${res} = {u'stdout': u'CREATE_COMPLETE', u'stderr': u'', u'rc': 0}
20190402 11:48:24.393 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:24.393 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:24.394 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:24.394 - INFO - ${result} = {u'stdout': u'CREATE_COMPLETE', u'stderr': u'', u'rc': 0}
20190402 11:48:24.394 - INFO - +-------- END KW: OpenStack.Run OS Command (1791)
20190402 11:48:24.395 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:24.395 - INFO - ${value} = CREATE_COMPLETE
20190402 11:48:24.396 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:48:24.396 - INFO - ${current_value} = CREATE_COMPLETE
20190402 11:48:24.396 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1796)
20190402 11:48:24.397 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:24.397 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:24.398 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:48:24.398 - INFO - +------ END KW: OpenStack.Check Field Value (1799)
20190402 11:48:24.398 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (13808)
20190402 11:48:24.398 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:48:24.399 - INFO - ${openstack_cmd} = openstack server list
20190402 11:48:24.399 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:48:24.399 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:48:24.400 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:48:24.400 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:48:24.400 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:48:24.401 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:24.401 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:24.402 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:48:24.402 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:24.403 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:48:26.136 - INFO - Command exited with return code 0.
20190402 11:48:26.136 - INFO - ${stdout} = 

stack-cirros-1-server-rwcc5eiike2x
20190402 11:48:26.136 - INFO - ${stderr} =
20190402 11:48:26.136 - INFO - ${rc} = 0
20190402 11:48:26.137 - INFO - +------ END KW: SSHLibrary.Execute Command (1735)
20190402 11:48:26.137 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:26.138 - INFO - ${res} = {u'stdout': u'\n\nstack-cirros-1-server-rwcc5eiike2x', u'stderr': u'', u'rc': 0}
20190402 11:48:26.138 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:26.139 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:26.139 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:48:26.140 - INFO - &{result} = { stdout=

stack-cirros-1-server-rwcc5eiike2x | stderr= | rc=0 }
20190402 11:48:26.140 - INFO - +----- END KW: OpenStack.Run OS Command (1740)
20190402 11:48:26.140 - INFO - +----- START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:48:26.141 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:26.142 - INFO - ${response} = 

stack-cirros-1-server-rwcc5eiike2x
20190402 11:48:26.142 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 11:48:26.142 - INFO - +------ START KW: String.Split String [ ${response} ]
20190402 11:48:26.142 - INFO - @{res_in_list} = [ stack-cirros-1-server-rwcc5eiike2x ]
20190402 11:48:26.143 - INFO - +------ END KW: String.Split String (1)
20190402 11:48:26.143 - INFO - @{vm_list} = [ stack-cirros-1-server-rwcc5eiike2x ]
20190402 11:48:26.143 - INFO - +----- END KW: Utils.Convert Response To List (3)
20190402 11:48:26.143 - INFO - +----- START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:48:26.144 - INFO - +------ START KW: ${vm} = stack-cirros-1-server-rwcc5eiike2x [ ]
20190402 11:48:26.144 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm} | status | ACTIVE ]
20190402 11:48:26.145 - INFO - +-------- START KW: OpenStack.Check Field Value [ server | ${vm} | status | ACTIVE ]
20190402 11:48:26.146 - INFO - +--------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:26.147 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:26.147 - INFO - ${openstack_cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x
20190402 11:48:26.148 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:26.148 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:26.149 - INFO - ${cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w status|tail -1|awk '{print$4}'
20190402 11:48:26.149 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:48:26.149 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:26.150 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:26.150 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:26.151 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:48:26.151 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:26.152 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w status|tail -1|awk '{print$4}''.
20190402 11:48:27.785 - INFO - Command exited with return code 0.
20190402 11:48:27.785 - INFO - ${stdout} = ACTIVE
20190402 11:48:27.785 - INFO - ${stderr} =
20190402 11:48:27.785 - INFO - ${rc} = 0
20190402 11:48:27.786 - INFO - +----------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:48:27.786 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:27.788 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:48:27.788 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:48:27.788 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:27.789 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:27.789 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:48:27.789 - INFO - +---------- END KW: OpenStack.Run OS Command (1640)
20190402 11:48:27.789 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:27.790 - INFO - ${value} = ACTIVE
20190402 11:48:27.790 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:48:27.791 - INFO - ${current_value} = ACTIVE
20190402 11:48:27.791 - INFO - +--------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:48:27.791 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:27.791 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:27.792 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:48:27.792 - INFO - +-------- END KW: OpenStack.Check Field Value (1647)
20190402 11:48:27.792 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1648)
20190402 11:48:27.792 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm} | power_state | Running ]
20190402 11:48:27.793 - INFO - +-------- START KW: OpenStack.Check Field Value [ server | ${vm} | power_state | Running ]
20190402 11:48:27.794 - INFO - +--------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:27.795 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:27.796 - INFO - ${openstack_cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x
20190402 11:48:27.796 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:27.796 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:27.797 - INFO - ${cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:48:27.797 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:48:27.797 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:27.798 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:27.799 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:27.799 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:27.799 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:27.800 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:48:29.433 - INFO - Command exited with return code 0.
20190402 11:48:29.433 - INFO - ${stdout} = Running
20190402 11:48:29.433 - INFO - ${stderr} =
20190402 11:48:29.433 - INFO - ${rc} = 0
20190402 11:48:29.434 - INFO - +----------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:48:29.434 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:29.435 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:48:29.435 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:29.435 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:29.436 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:29.436 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:48:29.437 - INFO - +---------- END KW: OpenStack.Run OS Command (1640)
20190402 11:48:29.437 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:29.438 - INFO - ${value} = Running
20190402 11:48:29.438 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:48:29.438 - INFO - ${current_value} = Running
20190402 11:48:29.438 - INFO - +--------- END KW: OpenStack.Retrieve Field Property (1644)
20190402 11:48:29.439 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:29.439 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:29.439 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:48:29.439 - INFO - +-------- END KW: OpenStack.Check Field Value (1646)
20190402 11:48:29.440 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1648)
20190402 11:48:29.440 - INFO - +------ END KW: ${vm} = stack-cirros-1-server-rwcc5eiike2x (3296)
20190402 11:48:29.440 - INFO - +----- END KW: ${vm} IN [ @{vm_list} ] (3297)
20190402 11:48:29.440 - INFO - +---- END KW: OpenStack.Create Stack (21945)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:48:29.440 - INFO - +---- START KW: OpenStack.Create Stack [ ${stack_name_2} | ${stack_template} | ${net_id} ]
20190402 11:48:29.441 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack stack create --template ]
20190402 11:48:29.442 - INFO - ${openstack_cmd} = openstack stack create --template
20190402 11:48:29.442 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:48:29.442 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${stack_template} | ${stack_name} | --parameter "NetID=${net_id}" ]
20190402 11:48:29.443 - INFO - ${cmd} = openstack stack create --template Utils/stack_template.yml stack-cirros-2 --parameter "NetID=56b50706-e978-4c9a-b1aa-69dc49e8f48c"
20190402 11:48:29.443 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:48:29.443 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:29.444 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:29.445 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:29.445 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:48:29.445 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:29.447 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack create --template Utils/stack_template.yml stack-cirros-2 --parameter "NetID=56b50706-e978-4c9a-b1aa-69dc49e8f48c"'.
20190402 11:48:32.181 - INFO - Command exited with return code 0.
20190402 11:48:32.182 - INFO - ${stdout} = +---------------------+---------------------------------------+
| Field               | Value                                 |
+---------------------+---------------------------------------+
| id    ...
20190402 11:48:32.182 - INFO - ${stderr} =
20190402 11:48:32.182 - INFO - ${rc} = 0
20190402 11:48:32.182 - INFO - +------ END KW: SSHLibrary.Execute Command (2737)
20190402 11:48:32.183 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:32.184 - INFO - ${res} = {u'stdout': u'+---------------------+---------------------------------------+\n| Field               | Value                                 |\n+---------------------+---------------------------------...
20190402 11:48:32.184 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:48:32.184 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:32.185 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:32.186 - INFO - ${output} = {u'stdout': u'+---------------------+---------------------------------------+\n| Field               | Value                                 |\n+---------------------+---------------------------------...
20190402 11:48:32.186 - INFO - +----- END KW: OpenStack.Run OS Command (2743)
20190402 11:48:32.186 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:32.187 - INFO - +------ START KW: OpenStack.Check Field Value [ stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:32.188 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:32.189 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:32.190 - INFO - ${openstack_cmd} = openstack stack show stack-cirros-2
20190402 11:48:32.190 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:32.191 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:32.191 - INFO - ${cmd} = openstack stack show stack-cirros-2|grep -w stack_status|tail -1|awk '{print$4}'
20190402 11:48:32.191 - INFO - +-------- END KW: BuiltIn.Catenate (0)
20190402 11:48:32.192 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:32.193 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:32.193 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:32.193 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:48:32.194 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:32.194 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack show stack-cirros-2|grep -w stack_status|tail -1|awk '{print$4}''.
20190402 11:48:33.576 - INFO - Command exited with return code 0.
20190402 11:48:33.577 - INFO - ${stdout} = CREATE_IN_PROGRESS
20190402 11:48:33.577 - INFO - ${stderr} =
20190402 11:48:33.577 - INFO - ${rc} = 0
20190402 11:48:33.577 - INFO - +--------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:48:33.578 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:33.579 - INFO - ${res} = {u'stdout': u'CREATE_IN_PROGRESS', u'stderr': u'', u'rc': 0}
20190402 11:48:33.579 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:48:33.579 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:33.580 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:33.580 - INFO - ${result} = {u'stdout': u'CREATE_IN_PROGRESS', u'stderr': u'', u'rc': 0}
20190402 11:48:33.581 - INFO - +-------- END KW: OpenStack.Run OS Command (1389)
20190402 11:48:33.581 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:33.581 - INFO - ${value} = CREATE_IN_PROGRESS
20190402 11:48:33.582 - INFO - +-------- END KW: Collections.Get From Dictionary (1)
20190402 11:48:33.582 - INFO - ${current_value} = CREATE_IN_PROGRESS
20190402 11:48:33.583 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1394)
20190402 11:48:33.583 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:33.583 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:33.584 - FAIL - CREATE_IN_PROGRESS != CREATE_COMPLETE
20190402 11:48:33.584 - DEBUG - Traceback (most recent call last):
  None
20190402 11:48:33.584 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:48:33.584 - INFO - +------ END KW: OpenStack.Check Field Value (1397)
20190402 11:48:43.585 - INFO - +------ START KW: OpenStack.Check Field Value [ stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:43.586 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:43.587 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:43.588 - INFO - ${openstack_cmd} = openstack stack show stack-cirros-2
20190402 11:48:43.588 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:43.588 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:43.589 - INFO - ${cmd} = openstack stack show stack-cirros-2|grep -w stack_status|tail -1|awk '{print$4}'
20190402 11:48:43.589 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:48:43.589 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:43.590 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:43.591 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:43.591 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:43.591 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:43.592 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack show stack-cirros-2|grep -w stack_status|tail -1|awk '{print$4}''.
20190402 11:48:45.276 - INFO - Command exited with return code 0.
20190402 11:48:45.277 - INFO - ${stdout} = CREATE_IN_PROGRESS
20190402 11:48:45.277 - INFO - ${stderr} =
20190402 11:48:45.277 - INFO - ${rc} = 0
20190402 11:48:45.277 - INFO - +--------- END KW: SSHLibrary.Execute Command (1686)
20190402 11:48:45.278 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:45.279 - INFO - ${res} = {u'stdout': u'CREATE_IN_PROGRESS', u'stderr': u'', u'rc': 0}
20190402 11:48:45.280 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:48:45.280 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:45.281 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:45.281 - INFO - ${result} = {u'stdout': u'CREATE_IN_PROGRESS', u'stderr': u'', u'rc': 0}
20190402 11:48:45.281 - INFO - +-------- END KW: OpenStack.Run OS Command (1692)
20190402 11:48:45.282 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:45.282 - INFO - ${value} = CREATE_IN_PROGRESS
20190402 11:48:45.282 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:48:45.283 - INFO - ${current_value} = CREATE_IN_PROGRESS
20190402 11:48:45.283 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1697)
20190402 11:48:45.283 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:45.284 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:45.284 - FAIL - CREATE_IN_PROGRESS != CREATE_COMPLETE
20190402 11:48:45.285 - DEBUG - Traceback (most recent call last):
  None
20190402 11:48:45.285 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (2)
20190402 11:48:45.285 - INFO - +------ END KW: OpenStack.Check Field Value (1700)
20190402 11:48:55.286 - INFO - +------ START KW: OpenStack.Check Field Value [ stack | ${stack_name} | stack_status | CREATE_COMPLETE ]
20190402 11:48:55.287 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:55.288 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:55.289 - INFO - ${openstack_cmd} = openstack stack show stack-cirros-2
20190402 11:48:55.289 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:55.289 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:55.290 - INFO - ${cmd} = openstack stack show stack-cirros-2|grep -w stack_status|tail -1|awk '{print$4}'
20190402 11:48:55.290 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:48:55.290 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:55.292 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:55.292 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:55.293 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:55.293 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:55.294 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack show stack-cirros-2|grep -w stack_status|tail -1|awk '{print$4}''.
20190402 11:48:56.828 - INFO - Command exited with return code 0.
20190402 11:48:56.828 - INFO - ${stdout} = CREATE_COMPLETE
20190402 11:48:56.829 - INFO - ${stderr} =
20190402 11:48:56.829 - INFO - ${rc} = 0
20190402 11:48:56.829 - INFO - +--------- END KW: SSHLibrary.Execute Command (1536)
20190402 11:48:56.829 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:56.829 - INFO - ${res} = {u'stdout': u'CREATE_COMPLETE', u'stderr': u'', u'rc': 0}
20190402 11:48:56.829 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:48:56.829 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:56.830 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:48:56.830 - INFO - ${result} = {u'stdout': u'CREATE_COMPLETE', u'stderr': u'', u'rc': 0}
20190402 11:48:56.830 - INFO - +-------- END KW: OpenStack.Run OS Command (1540)
20190402 11:48:56.830 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:56.830 - INFO - ${value} = CREATE_COMPLETE
20190402 11:48:56.830 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:48:56.830 - INFO - ${current_value} = CREATE_COMPLETE
20190402 11:48:56.830 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1543)
20190402 11:48:56.831 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:48:56.831 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:48:56.831 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:48:56.831 - INFO - +------ END KW: OpenStack.Check Field Value (1545)
20190402 11:48:56.831 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (24645)
20190402 11:48:56.831 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:48:56.831 - INFO - ${openstack_cmd} = openstack server list
20190402 11:48:56.831 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:48:56.831 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:48:56.832 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:48:56.832 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:48:56.832 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:48:56.832 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:56.832 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:56.832 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:48:56.832 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:56.833 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:48:58.765 - INFO - Command exited with return code 0.
20190402 11:48:58.765 - INFO - ${stdout} = 

stack-cirros-2-server-s2ufxj2rnjhh
stack-cirros-1-server-rwcc5eiike2x
20190402 11:48:58.765 - INFO - ${stderr} =
20190402 11:48:58.766 - INFO - ${rc} = 0
20190402 11:48:58.766 - INFO - +------ END KW: SSHLibrary.Execute Command (1934)
20190402 11:48:58.766 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:48:58.767 - INFO - ${res} = {u'stdout': u'\n\nstack-cirros-2-server-s2ufxj2rnjhh\nstack-cirros-1-server-rwcc5eiike2x', u'stderr': u'', u'rc': 0}
20190402 11:48:58.768 - INFO - +------ END KW: BuiltIn.Create Dictionary (2)
20190402 11:48:58.768 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:48:58.769 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:48:58.769 - INFO - &{result} = { stdout=

stack-cirros-2-server-s2ufxj2rnjhh
stack-cirros-1-server-rwcc5eiike2x | stderr= | rc=0 }
20190402 11:48:58.769 - INFO - +----- END KW: OpenStack.Run OS Command (1937)
20190402 11:48:58.770 - INFO - +----- START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:48:58.770 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:48:58.771 - INFO - ${response} = 

stack-cirros-2-server-s2ufxj2rnjhh
stack-cirros-1-server-rwcc5eiike2x
20190402 11:48:58.771 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 11:48:58.771 - INFO - +------ START KW: String.Split String [ ${response} ]
20190402 11:48:58.772 - INFO - @{res_in_list} = [ stack-cirros-2-server-s2ufxj2rnjhh | stack-cirros-1-server-rwcc5eiike2x ]
20190402 11:48:58.772 - INFO - +------ END KW: String.Split String (1)
20190402 11:48:58.772 - INFO - @{vm_list} = [ stack-cirros-2-server-s2ufxj2rnjhh | stack-cirros-1-server-rwcc5eiike2x ]
20190402 11:48:58.772 - INFO - +----- END KW: Utils.Convert Response To List (2)
20190402 11:48:58.773 - INFO - +----- START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:48:58.773 - INFO - +------ START KW: ${vm} = stack-cirros-2-server-s2ufxj2rnjhh [ ]
20190402 11:48:58.773 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm} | status | ACTIVE ]
20190402 11:48:58.774 - INFO - +-------- START KW: OpenStack.Check Field Value [ server | ${vm} | status | ACTIVE ]
20190402 11:48:58.775 - INFO - +--------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:48:58.775 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:48:58.776 - INFO - ${openstack_cmd} = openstack server show stack-cirros-2-server-s2ufxj2rnjhh
20190402 11:48:58.776 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:48:58.776 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:48:58.777 - INFO - ${cmd} = openstack server show stack-cirros-2-server-s2ufxj2rnjhh|grep -w status|tail -1|awk '{print$4}'
20190402 11:48:58.777 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:48:58.778 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:48:58.779 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:48:58.779 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:48:58.779 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:48:58.779 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:48:58.780 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show stack-cirros-2-server-s2ufxj2rnjhh|grep -w status|tail -1|awk '{print$4}''.
20190402 11:49:00.413 - INFO - Command exited with return code 0.
20190402 11:49:00.414 - INFO - ${stdout} = ACTIVE
20190402 11:49:00.414 - INFO - ${stderr} =
20190402 11:49:00.414 - INFO - ${rc} = 0
20190402 11:49:00.414 - INFO - +----------- END KW: SSHLibrary.Execute Command (1635)
20190402 11:49:00.415 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:00.418 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:49:00.419 - INFO - +----------- END KW: BuiltIn.Create Dictionary (4)
20190402 11:49:00.419 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:00.420 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:00.420 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:49:00.420 - INFO - +---------- END KW: OpenStack.Run OS Command (1642)
20190402 11:49:00.421 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:00.421 - INFO - ${value} = ACTIVE
20190402 11:49:00.421 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:00.422 - INFO - ${current_value} = ACTIVE
20190402 11:49:00.422 - INFO - +--------- END KW: OpenStack.Retrieve Field Property (1647)
20190402 11:49:00.423 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:49:00.423 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:00.423 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:49:00.424 - INFO - +-------- END KW: OpenStack.Check Field Value (1649)
20190402 11:49:00.424 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1651)
20190402 11:49:00.424 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm} | power_state | Running ]
20190402 11:49:00.425 - INFO - +-------- START KW: OpenStack.Check Field Value [ server | ${vm} | power_state | Running ]
20190402 11:49:00.426 - INFO - +--------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:49:00.427 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:49:00.428 - INFO - ${openstack_cmd} = openstack server show stack-cirros-2-server-s2ufxj2rnjhh
20190402 11:49:00.428 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:00.428 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:49:00.429 - INFO - ${cmd} = openstack server show stack-cirros-2-server-s2ufxj2rnjhh|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:49:00.429 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:49:00.429 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:00.430 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:00.431 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:00.431 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:00.431 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:00.432 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show stack-cirros-2-server-s2ufxj2rnjhh|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:49:02.065 - INFO - Command exited with return code 0.
20190402 11:49:02.065 - INFO - ${stdout} = Running
20190402 11:49:02.065 - INFO - ${stderr} =
20190402 11:49:02.065 - INFO - ${rc} = 0
20190402 11:49:02.066 - INFO - +----------- END KW: SSHLibrary.Execute Command (1634)
20190402 11:49:02.066 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:02.067 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:49:02.067 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:02.068 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:02.068 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:02.069 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:49:02.069 - INFO - +---------- END KW: OpenStack.Run OS Command (1640)
20190402 11:49:02.069 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:02.070 - INFO - ${value} = Running
20190402 11:49:02.070 - INFO - +---------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:02.070 - INFO - ${current_value} = Running
20190402 11:49:02.070 - INFO - +--------- END KW: OpenStack.Retrieve Field Property (1644)
20190402 11:49:02.071 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:49:02.071 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:02.071 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:49:02.072 - INFO - +-------- END KW: OpenStack.Check Field Value (1647)
20190402 11:49:02.072 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1648)
20190402 11:49:02.072 - INFO - +------ END KW: ${vm} = stack-cirros-2-server-s2ufxj2rnjhh (3299)
20190402 11:49:02.072 - INFO - +------ START KW: ${vm} = stack-cirros-1-server-rwcc5eiike2x [ ]
20190402 11:49:02.072 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm} | status | ACTIVE ]
20190402 11:49:02.073 - INFO - +-------- START KW: OpenStack.Check Field Value [ server | ${vm} | status | ACTIVE ]
20190402 11:49:02.074 - INFO - +--------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:49:02.075 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:49:02.075 - INFO - ${openstack_cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x
20190402 11:49:02.076 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:02.076 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:49:02.076 - INFO - ${cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w status|tail -1|awk '{print$4}'
20190402 11:49:02.077 - INFO - +---------- END KW: BuiltIn.Catenate (0)
20190402 11:49:02.077 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:02.078 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:02.078 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:02.078 - INFO - +----------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:02.079 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:02.079 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w status|tail -1|awk '{print$4}''.
20190402 11:49:03.863 - INFO - Command exited with return code 0.
20190402 11:49:03.864 - INFO - ${stdout} = ACTIVE
20190402 11:49:03.864 - INFO - ${stderr} =
20190402 11:49:03.864 - INFO - ${rc} = 0
20190402 11:49:03.864 - INFO - +----------- END KW: SSHLibrary.Execute Command (1785)
20190402 11:49:03.864 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:03.866 - INFO - ${res} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:49:03.866 - INFO - +----------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:03.866 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:03.867 - INFO - +----------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:03.868 - INFO - ${result} = {u'stdout': u'ACTIVE', u'stderr': u'', u'rc': 0}
20190402 11:49:03.868 - INFO - +---------- END KW: OpenStack.Run OS Command (1791)
20190402 11:49:03.868 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:03.869 - INFO - ${value} = ACTIVE
20190402 11:49:03.870 - INFO - +---------- END KW: Collections.Get From Dictionary (2)
20190402 11:49:03.870 - INFO - ${current_value} = ACTIVE
20190402 11:49:03.871 - INFO - +--------- END KW: OpenStack.Retrieve Field Property (1796)
20190402 11:49:03.871 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:49:03.871 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:03.872 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:49:03.872 - INFO - +-------- END KW: OpenStack.Check Field Value (1799)
20190402 11:49:03.872 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1800)
20190402 11:49:03.873 - INFO - +------- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | server | ${vm} | power_state | Running ]
20190402 11:49:03.874 - INFO - +-------- START KW: OpenStack.Check Field Value [ server | ${vm} | power_state | Running ]
20190402 11:49:03.875 - INFO - +--------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:49:03.876 - INFO - +---------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:49:03.876 - INFO - ${openstack_cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x
20190402 11:49:03.877 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:03.877 - INFO - +---------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:49:03.878 - INFO - ${cmd} = openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w power_state|tail -1|awk '{print$4}'
20190402 11:49:03.878 - INFO - +---------- END KW: BuiltIn.Catenate (1)
20190402 11:49:03.878 - INFO - +---------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:03.879 - INFO - +----------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:03.880 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:03.880 - INFO - +----------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:03.880 - INFO - +----------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:03.881 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server show stack-cirros-1-server-rwcc5eiike2x|grep -w power_state|tail -1|awk '{print$4}''.
20190402 11:49:05.516 - INFO - Command exited with return code 0.
20190402 11:49:05.516 - INFO - ${stdout} = Running
20190402 11:49:05.517 - INFO - ${stderr} =
20190402 11:49:05.517 - INFO - ${rc} = 0
20190402 11:49:05.517 - INFO - +----------- END KW: SSHLibrary.Execute Command (1637)
20190402 11:49:05.517 - INFO - +----------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:05.518 - INFO - ${res} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:49:05.518 - INFO - +----------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:05.518 - INFO - +----------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:05.518 - INFO - +----------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:05.518 - INFO - ${result} = {u'stdout': u'Running', u'stderr': u'', u'rc': 0}
20190402 11:49:05.519 - INFO - +---------- END KW: OpenStack.Run OS Command (1641)
20190402 11:49:05.519 - INFO - +---------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:05.519 - INFO - ${value} = Running
20190402 11:49:05.519 - INFO - +---------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:05.519 - INFO - ${current_value} = Running
20190402 11:49:05.520 - INFO - +--------- END KW: OpenStack.Retrieve Field Property (1645)
20190402 11:49:05.520 - INFO - +--------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:49:05.520 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:05.520 - INFO - +--------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:49:05.520 - INFO - +-------- END KW: OpenStack.Check Field Value (1647)
20190402 11:49:05.520 - INFO - +------- END KW: BuiltIn.Wait Until Keyword Succeeds (1647)
20190402 11:49:05.520 - INFO - +------ END KW: ${vm} = stack-cirros-1-server-rwcc5eiike2x (3448)
20190402 11:49:05.520 - INFO - +----- END KW: ${vm} IN [ @{vm_list} ] (6747)
20190402 11:49:05.521 - INFO - +---- END KW: OpenStack.Create Stack (36081)
------------------------------------------------------------------------------
20190402 11:49:05.521 - INFO - +--- END TEST: Create Instance Trough Stack (59740)
------------------------------------------------------------------------------
20190402 11:49:05.522 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190402 11:49:05.522 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190402 11:49:05.522 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190402 11:49:05.523 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:49:05.523 - INFO - ${openstack_cmd} = openstack server list
20190402 11:49:05.523 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:49:05.523 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:49:05.524 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:49:05.524 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:05.524 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:05.524 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:05.525 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:05.525 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:05.525 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:05.525 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:49:07.111 - INFO - Command exited with return code 0.
20190402 11:49:07.112 - INFO - ${stdout} = 

stack-cirros-2-server-s2ufxj2rnjhh
stack-cirros-1-server-rwcc5eiike2x
20190402 11:49:07.112 - INFO - ${stderr} =
20190402 11:49:07.112 - INFO - ${rc} = 0
20190402 11:49:07.112 - INFO - +------- END KW: SSHLibrary.Execute Command (1587)
20190402 11:49:07.112 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:07.112 - INFO - ${res} = {u'stdout': u'\n\nstack-cirros-2-server-s2ufxj2rnjhh\nstack-cirros-1-server-rwcc5eiike2x', u'stderr': u'', u'rc': 0}
20190402 11:49:07.112 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:49:07.112 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:07.113 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:07.113 - INFO - &{result} = { stdout=

stack-cirros-2-server-s2ufxj2rnjhh
stack-cirros-1-server-rwcc5eiike2x | stderr= | rc=0 }
20190402 11:49:07.113 - INFO - +------ END KW: OpenStack.Run OS Command (1589)
20190402 11:49:07.113 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:07.113 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:07.114 - INFO - ${response} = 

stack-cirros-2-server-s2ufxj2rnjhh
stack-cirros-1-server-rwcc5eiike2x
20190402 11:49:07.114 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:07.114 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:07.114 - INFO - @{res_in_list} = [ stack-cirros-2-server-s2ufxj2rnjhh | stack-cirros-1-server-rwcc5eiike2x ]
20190402 11:49:07.114 - INFO - +------- END KW: String.Split String (0)
20190402 11:49:07.114 - INFO - @{vm_list} = [ stack-cirros-2-server-s2ufxj2rnjhh | stack-cirros-1-server-rwcc5eiike2x ]
20190402 11:49:07.114 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:49:07.114 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:49:07.114 - INFO - +------- START KW: ${vm} = stack-cirros-2-server-s2ufxj2rnjhh [ ]
20190402 11:49:07.115 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:49:07.115 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:49:07.115 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:49:07.115 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:07.115 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:49:07.115 - INFO - ${cmd} = openstack server delete stack-cirros-2-server-s2ufxj2rnjhh
20190402 11:49:07.115 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:49:07.116 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:07.116 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:07.116 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:07.116 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:07.116 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:07.117 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete stack-cirros-2-server-s2ufxj2rnjhh'.
20190402 11:49:08.863 - INFO - Command exited with return code 0.
20190402 11:49:08.864 - INFO - ${stdout} =
20190402 11:49:08.864 - INFO - ${stderr} =
20190402 11:49:08.864 - INFO - ${rc} = 0
20190402 11:49:08.864 - INFO - +---------- END KW: SSHLibrary.Execute Command (1748)
20190402 11:49:08.865 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:08.866 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:08.866 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:08.867 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:08.867 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:08.868 - INFO - +--------- END KW: OpenStack.Run OS Command (1752)
20190402 11:49:08.868 - INFO - +-------- END KW: OpenStack.Delete Instance (1754)
20190402 11:49:08.868 - INFO - +------- END KW: ${vm} = stack-cirros-2-server-s2ufxj2rnjhh (1754)
20190402 11:49:08.868 - INFO - +------- START KW: ${vm} = stack-cirros-1-server-rwcc5eiike2x [ ]
20190402 11:49:08.869 - INFO - +-------- START KW: OpenStack.Delete Instance [ ${vm} ]
20190402 11:49:08.870 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack server delete ]
20190402 11:49:08.870 - INFO - ${openstack_cmd} = openstack server delete
20190402 11:49:08.870 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:08.870 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${vm} ]
20190402 11:49:08.871 - INFO - ${cmd} = openstack server delete stack-cirros-1-server-rwcc5eiike2x
20190402 11:49:08.871 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:08.871 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:08.872 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:08.873 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:08.873 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:08.873 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:08.875 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server delete stack-cirros-1-server-rwcc5eiike2x'.
20190402 11:49:10.658 - INFO - Command exited with return code 0.
20190402 11:49:10.659 - INFO - ${stdout} =
20190402 11:49:10.659 - INFO - ${stderr} =
20190402 11:49:10.659 - INFO - ${rc} = 0
20190402 11:49:10.660 - INFO - +---------- END KW: SSHLibrary.Execute Command (1786)
20190402 11:49:10.660 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:10.662 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:10.662 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:10.662 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:10.663 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:10.664 - INFO - +--------- END KW: OpenStack.Run OS Command (1792)
20190402 11:49:10.664 - INFO - +-------- END KW: OpenStack.Delete Instance (1795)
20190402 11:49:10.664 - INFO - +------- END KW: ${vm} = stack-cirros-1-server-rwcc5eiike2x (1796)
20190402 11:49:10.664 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (3550)
20190402 11:49:10.665 - INFO - +----- END KW: OpenStack.Delete All Instances (5142)
20190402 11:49:10.665 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190402 11:49:10.665 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190402 11:49:10.666 - INFO - ${openstack_cmd} = openstack image list
20190402 11:49:10.666 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:10.666 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190402 11:49:10.667 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190402 11:49:10.667 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:10.668 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:10.669 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:10.669 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:10.669 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:10.670 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:10.670 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190402 11:49:12.010 - INFO - Command exited with return code 0.
20190402 11:49:12.010 - INFO - ${stdout} = 

cirros
20190402 11:49:12.011 - INFO - ${stderr} =
20190402 11:49:12.011 - INFO - ${rc} = 0
20190402 11:49:12.011 - INFO - +------- END KW: SSHLibrary.Execute Command (1341)
20190402 11:49:12.012 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:12.013 - INFO - ${res} = {u'stdout': u'\n\ncirros', u'stderr': u'', u'rc': 0}
20190402 11:49:12.013 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:12.014 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:12.014 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:12.015 - INFO - &{result} = { stdout=

cirros | stderr= | rc=0 }
20190402 11:49:12.015 - INFO - +------ END KW: OpenStack.Run OS Command (1347)
20190402 11:49:12.015 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:12.016 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:12.016 - INFO - ${response} = 

cirros
20190402 11:49:12.017 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:12.017 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:12.018 - INFO - @{res_in_list} = [ cirros ]
20190402 11:49:12.018 - INFO - +------- END KW: String.Split String (1)
20190402 11:49:12.018 - INFO - @{image_list} = [ cirros ]
20190402 11:49:12.018 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:49:12.019 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190402 11:49:12.019 - INFO - +------- START KW: ${image} = cirros [ ]
20190402 11:49:12.019 - INFO - +-------- START KW: OpenStack.Delete Image [ ${image} ]
20190402 11:49:12.020 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack image delete ]
20190402 11:49:12.020 - INFO - ${openstack_cmd} = openstack image delete
20190402 11:49:12.020 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:12.020 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${image} ]
20190402 11:49:12.021 - INFO - ${cmd} = openstack image delete cirros
20190402 11:49:12.021 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:12.021 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:12.022 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:12.023 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:12.023 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:12.023 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:12.024 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image delete cirros'.
20190402 11:49:14.114 - INFO - Command exited with return code 0.
20190402 11:49:14.114 - INFO - ${stdout} =
20190402 11:49:14.114 - INFO - ${stderr} =
20190402 11:49:14.114 - INFO - ${rc} = 0
20190402 11:49:14.115 - INFO - +---------- END KW: SSHLibrary.Execute Command (2092)
20190402 11:49:14.115 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:14.116 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:14.117 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:14.117 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:14.118 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:14.118 - INFO - +--------- END KW: OpenStack.Run OS Command (2097)
20190402 11:49:14.118 - INFO - +-------- END KW: OpenStack.Delete Image (2099)
20190402 11:49:14.119 - INFO - +------- END KW: ${image} = cirros (2099)
20190402 11:49:14.119 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (2100)
20190402 11:49:14.119 - INFO - +----- END KW: OpenStack.Delete All Images (3454)
20190402 11:49:14.119 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190402 11:49:14.120 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190402 11:49:14.120 - INFO - ${openstack_cmd} = openstack flavor list
20190402 11:49:14.120 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:49:14.121 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190402 11:49:14.121 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190402 11:49:14.121 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:49:14.122 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:14.123 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:14.123 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:14.123 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:14.124 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:14.125 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190402 11:49:15.556 - INFO - Command exited with return code 0.
20190402 11:49:15.556 - INFO - ${stdout} = 

f1.small
20190402 11:49:15.557 - INFO - ${stderr} =
20190402 11:49:15.557 - INFO - ${rc} = 0
20190402 11:49:15.557 - INFO - +------- END KW: SSHLibrary.Execute Command (1433)
20190402 11:49:15.557 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:15.559 - INFO - ${res} = {u'stdout': u'\n\nf1.small', u'stderr': u'', u'rc': 0}
20190402 11:49:15.559 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:15.559 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:15.560 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:15.560 - INFO - &{result} = { stdout=

f1.small | stderr= | rc=0 }
20190402 11:49:15.561 - INFO - +------ END KW: OpenStack.Run OS Command (1439)
20190402 11:49:15.561 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:15.562 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:15.562 - INFO - ${response} = 

f1.small
20190402 11:49:15.563 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:15.563 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:15.563 - INFO - @{res_in_list} = [ f1.small ]
20190402 11:49:15.564 - INFO - +------- END KW: String.Split String (1)
20190402 11:49:15.564 - INFO - @{flavor_list} = [ f1.small ]
20190402 11:49:15.564 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:49:15.564 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190402 11:49:15.565 - INFO - +------- START KW: ${flavor} = f1.small [ ]
20190402 11:49:15.565 - INFO - +-------- START KW: OpenStack.Delete Flavor [ ${flavor} ]
20190402 11:49:15.565 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack flavor delete ]
20190402 11:49:15.566 - INFO - ${openstack_cmd} = openstack flavor delete
20190402 11:49:15.566 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:15.566 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${flavor} ]
20190402 11:49:15.567 - INFO - ${cmd} = openstack flavor delete f1.small
20190402 11:49:15.567 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:15.567 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:15.569 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:15.569 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:15.569 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:15.570 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:15.570 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor delete f1.small'.
20190402 11:49:17.053 - INFO - Command exited with return code 0.
20190402 11:49:17.053 - INFO - ${stdout} =
20190402 11:49:17.054 - INFO - ${stderr} =
20190402 11:49:17.054 - INFO - ${rc} = 0
20190402 11:49:17.054 - INFO - +---------- END KW: SSHLibrary.Execute Command (1484)
20190402 11:49:17.054 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:17.055 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:17.055 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:17.056 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:17.056 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:17.057 - INFO - +--------- END KW: OpenStack.Run OS Command (1490)
20190402 11:49:17.057 - INFO - +-------- END KW: OpenStack.Delete Flavor (1492)
20190402 11:49:17.057 - INFO - +------- END KW: ${flavor} = f1.small (1492)
20190402 11:49:17.057 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (1493)
20190402 11:49:17.058 - INFO - +----- END KW: OpenStack.Delete All Flavors (2939)
20190402 11:49:17.058 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190402 11:49:17.059 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:49:17.059 - INFO - ${openstack_cmd} = openstack network list
20190402 11:49:17.059 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:49:17.059 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190402 11:49:17.060 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190402 11:49:17.061 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:17.061 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:17.062 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:17.062 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:17.062 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:17.063 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:17.063 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190402 11:49:18.445 - INFO - Command exited with return code 0.
20190402 11:49:18.445 - INFO - ${stdout} = 

network-1
20190402 11:49:18.445 - INFO - ${stderr} =
20190402 11:49:18.445 - INFO - ${rc} = 0
20190402 11:49:18.445 - INFO - +------- END KW: SSHLibrary.Execute Command (1382)
20190402 11:49:18.446 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:18.446 - INFO - ${res} = {u'stdout': u'\n\nnetwork-1', u'stderr': u'', u'rc': 0}
20190402 11:49:18.446 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:49:18.447 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:18.447 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:18.447 - INFO - &{result} = { stdout=

network-1 | stderr= | rc=0 }
20190402 11:49:18.447 - INFO - +------ END KW: OpenStack.Run OS Command (1386)
20190402 11:49:18.448 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:18.448 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:18.448 - INFO - ${response} = 

network-1
20190402 11:49:18.448 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:18.449 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:18.449 - INFO - @{res_in_list} = [ network-1 ]
20190402 11:49:18.449 - INFO - +------- END KW: String.Split String (0)
20190402 11:49:18.449 - INFO - @{network_list} = [ network-1 ]
20190402 11:49:18.449 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:49:18.449 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190402 11:49:18.449 - INFO - +------- START KW: ${network} = network-1 [ ]
20190402 11:49:18.450 - INFO - +-------- START KW: OpenStack.Delete Network [ ${network} ]
20190402 11:49:18.450 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack network delete ]
20190402 11:49:18.450 - INFO - ${openstack_cmd} = openstack network delete
20190402 11:49:18.450 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:18.450 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${network} ]
20190402 11:49:18.451 - INFO - ${cmd} = openstack network delete network-1
20190402 11:49:18.451 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:18.451 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:18.452 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:18.452 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:18.452 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:18.452 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:18.453 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network delete network-1'.
20190402 11:49:21.486 - INFO - Command exited with return code 0.
20190402 11:49:21.487 - INFO - ${stdout} =
20190402 11:49:21.487 - INFO - ${stderr} =
20190402 11:49:21.487 - INFO - ${rc} = 0
20190402 11:49:21.487 - INFO - +---------- END KW: SSHLibrary.Execute Command (3035)
20190402 11:49:21.488 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:21.489 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:21.489 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:21.489 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:21.490 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:21.490 - INFO - +--------- END KW: OpenStack.Run OS Command (3039)
20190402 11:49:21.491 - INFO - +-------- END KW: OpenStack.Delete Network (3040)
20190402 11:49:21.491 - INFO - +------- END KW: ${network} = network-1 (3042)
20190402 11:49:21.491 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (3042)
20190402 11:49:21.491 - INFO - +----- END KW: OpenStack.Delete All Networks (4433)
20190402 11:49:21.491 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190402 11:49:21.492 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190402 11:49:21.493 - INFO - ${openstack_cmd} = openstack keypair list
20190402 11:49:21.493 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:21.493 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190402 11:49:21.494 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190402 11:49:21.494 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:21.494 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:21.495 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:21.496 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:21.496 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:21.496 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:21.497 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190402 11:49:22.829 - INFO - Command exited with return code 0.
20190402 11:49:22.829 - INFO - ${stdout} =
20190402 11:49:22.830 - INFO - ${stderr} =
20190402 11:49:22.830 - INFO - ${rc} = 0
20190402 11:49:22.830 - INFO - +------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:49:22.830 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:22.831 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:22.831 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:22.832 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:22.832 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:22.833 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:49:22.833 - INFO - +------ END KW: OpenStack.Run OS Command (1339)
20190402 11:49:22.833 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:22.834 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:22.834 - INFO - ${response} =
20190402 11:49:22.835 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:22.835 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:22.835 - INFO - @{res_in_list} = [ ]
20190402 11:49:22.835 - INFO - +------- END KW: String.Split String (0)
20190402 11:49:22.836 - INFO - @{key_list} = [ ]
20190402 11:49:22.836 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:49:22.836 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190402 11:49:22.836 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190402 11:49:22.837 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (1345)
20190402 11:49:22.837 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190402 11:49:22.837 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:49:22.838 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:49:22.838 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:22.838 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:49:22.839 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190402 11:49:22.839 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:22.839 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:22.840 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:22.840 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:22.840 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:22.841 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:22.841 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190402 11:49:24.180 - INFO - Command exited with return code 0.
20190402 11:49:24.180 - INFO - ${stdout} = 

snap-cirros-2
snap-cirros-1
20190402 11:49:24.180 - INFO - ${stderr} =
20190402 11:49:24.180 - INFO - ${rc} = 0
20190402 11:49:24.181 - INFO - +------- END KW: SSHLibrary.Execute Command (1339)
20190402 11:49:24.181 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:24.182 - INFO - ${res} = {u'stdout': u'\n\nsnap-cirros-2\nsnap-cirros-1', u'stderr': u'', u'rc': 0}
20190402 11:49:24.182 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:24.182 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:24.183 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:24.184 - INFO - &{result} = { stdout=

snap-cirros-2
snap-cirros-1 | stderr= | rc=0 }
20190402 11:49:24.184 - INFO - +------ END KW: OpenStack.Run OS Command (1345)
20190402 11:49:24.185 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:24.186 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:24.187 - INFO - ${response} = 

snap-cirros-2
snap-cirros-1
20190402 11:49:24.187 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:24.187 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:24.188 - INFO - @{res_in_list} = [ snap-cirros-2 | snap-cirros-1 ]
20190402 11:49:24.188 - INFO - +------- END KW: String.Split String (1)
20190402 11:49:24.188 - INFO - @{snapshot_list} = [ snap-cirros-2 | snap-cirros-1 ]
20190402 11:49:24.189 - INFO - +------ END KW: Utils.Convert Response To List (4)
20190402 11:49:24.189 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190402 11:49:24.189 - INFO - +------- START KW: ${snapshot} = snap-cirros-2 [ ]
20190402 11:49:24.189 - INFO - +-------- START KW: OpenStack.Delete Snapshot [ ${snapshot} ]
20190402 11:49:24.190 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume snapshot delete ]
20190402 11:49:24.190 - INFO - ${openstack_cmd} = openstack volume snapshot delete
20190402 11:49:24.190 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:24.191 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${snapshot} ]
20190402 11:49:24.191 - INFO - ${cmd} = openstack volume snapshot delete snap-cirros-2
20190402 11:49:24.191 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:49:24.192 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:24.193 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:24.193 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:24.194 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:24.194 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:24.195 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot delete snap-cirros-2'.
20190402 11:49:25.678 - INFO - Command exited with return code 0.
20190402 11:49:25.678 - INFO - ${stdout} =
20190402 11:49:25.678 - INFO - ${stderr} =
20190402 11:49:25.678 - INFO - ${rc} = 0
20190402 11:49:25.678 - INFO - +---------- END KW: SSHLibrary.Execute Command (1484)
20190402 11:49:25.678 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:25.679 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:25.679 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:25.680 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:25.680 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:25.680 - INFO - +--------- END KW: OpenStack.Run OS Command (1488)
20190402 11:49:25.680 - INFO - +-------- END KW: OpenStack.Delete Snapshot (1491)
20190402 11:49:25.680 - INFO - +------- END KW: ${snapshot} = snap-cirros-2 (1491)
20190402 11:49:25.681 - INFO - +------- START KW: ${snapshot} = snap-cirros-1 [ ]
20190402 11:49:25.681 - INFO - +-------- START KW: OpenStack.Delete Snapshot [ ${snapshot} ]
20190402 11:49:25.681 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume snapshot delete ]
20190402 11:49:25.682 - INFO - ${openstack_cmd} = openstack volume snapshot delete
20190402 11:49:25.682 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:25.682 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${snapshot} ]
20190402 11:49:25.682 - INFO - ${cmd} = openstack volume snapshot delete snap-cirros-1
20190402 11:49:25.682 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:49:25.683 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:25.683 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:25.684 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:25.684 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:25.684 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:25.685 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot delete snap-cirros-1'.
20190402 11:49:27.096 - INFO - Command exited with return code 0.
20190402 11:49:27.097 - INFO - ${stdout} =
20190402 11:49:27.097 - INFO - ${stderr} =
20190402 11:49:27.097 - INFO - ${rc} = 0
20190402 11:49:27.097 - INFO - +---------- END KW: SSHLibrary.Execute Command (1413)
20190402 11:49:27.097 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:27.099 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:27.099 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:27.099 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:27.100 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:27.100 - INFO - +--------- END KW: OpenStack.Run OS Command (1417)
20190402 11:49:27.101 - INFO - +-------- END KW: OpenStack.Delete Snapshot (1419)
20190402 11:49:27.101 - INFO - +------- END KW: ${snapshot} = snap-cirros-1 (1420)
20190402 11:49:27.101 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (2912)
20190402 11:49:27.101 - INFO - +----- END KW: OpenStack.Delete All Snapshots (4264)
20190402 11:49:27.101 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190402 11:49:27.102 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190402 11:49:27.102 - INFO - ${openstack_cmd} = openstack volume list
20190402 11:49:27.103 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:27.103 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190402 11:49:27.103 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190402 11:49:27.104 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:27.104 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:27.105 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:27.105 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:27.105 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:27.106 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:27.107 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190402 11:49:28.538 - INFO - Command exited with return code 0.
20190402 11:49:28.538 - INFO - ${stdout} = 

5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:49:28.538 - INFO - ${stderr} =
20190402 11:49:28.539 - INFO - ${rc} = 0
20190402 11:49:28.539 - INFO - +------- END KW: SSHLibrary.Execute Command (1433)
20190402 11:49:28.539 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:28.540 - INFO - ${res} = {u'stdout': u'\n\n5936d333-91af-4afe-babf-bd2a6b209783', u'stderr': u'', u'rc': 0}
20190402 11:49:28.541 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:28.541 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:28.542 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:28.542 - INFO - &{result} = { stdout=

5936d333-91af-4afe-babf-bd2a6b209783 | stderr= | rc=0 }
20190402 11:49:28.543 - INFO - +------ END KW: OpenStack.Run OS Command (1438)
20190402 11:49:28.543 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:28.544 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:28.544 - INFO - ${response} = 

5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:49:28.545 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:28.545 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:28.545 - INFO - @{res_in_list} = [ 5936d333-91af-4afe-babf-bd2a6b209783 ]
20190402 11:49:28.546 - INFO - +------- END KW: String.Split String (0)
20190402 11:49:28.546 - INFO - @{volume_list} = [ 5936d333-91af-4afe-babf-bd2a6b209783 ]
20190402 11:49:28.546 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:49:28.546 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190402 11:49:28.547 - INFO - +------- START KW: ${volume} = 5936d333-91af-4afe-babf-bd2a6b209783 [ ]
20190402 11:49:28.547 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:49:28.548 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:49:28.548 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:49:28.548 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:28.549 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:49:28.549 - INFO - ${cmd} = openstack volume delete 5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:49:28.549 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:28.550 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:28.551 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:28.552 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:28.552 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:28.552 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:28.553 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 5936d333-91af-4afe-babf-bd2a6b209783'.
20190402 11:49:29.935 - INFO - Command exited with return code 1.
20190402 11:49:29.936 - INFO - ${stdout} =
20190402 11:49:29.936 - INFO - ${stderr} = Failed to delete volume with name or ID '5936d333-91af-4afe-babf-bd2a6b209783': Invalid volume: Volume status must be available or error or error_restoring or error_extending or error_managing and mus...
20190402 11:49:29.936 - INFO - ${rc} = 1
20190402 11:49:29.937 - INFO - +---------- END KW: SSHLibrary.Execute Command (1384)
20190402 11:49:29.937 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:29.938 - INFO - ${res} = {u'stdout': u'', u'stderr': u"Failed to delete volume with name or ID '5936d333-91af-4afe-babf-bd2a6b209783': Invalid volume: Volume status must be available or error or error_restoring or error_exten...
20190402 11:49:29.938 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:29.939 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:29.940 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:29.940 - INFO - +--------- END KW: OpenStack.Run OS Command (1390)
20190402 11:49:29.940 - INFO - +-------- END KW: OpenStack.Delete Volume (1393)
20190402 11:49:29.941 - INFO - +------- END KW: ${volume} = 5936d333-91af-4afe-babf-bd2a6b209783 (1393)
20190402 11:49:29.941 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (1395)
20190402 11:49:29.941 - INFO - +----- END KW: OpenStack.Delete All Volumes (2840)
20190402 11:49:29.941 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190402 11:49:29.942 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190402 11:49:29.942 - INFO - ${openstack_cmd} = openstack stack list
20190402 11:49:29.943 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:29.943 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:49:29.944 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190402 11:49:29.944 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:29.944 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:29.945 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:29.946 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:29.946 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:29.946 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:29.947 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190402 11:49:31.279 - INFO - Command exited with return code 0.
20190402 11:49:31.280 - INFO - ${stdout} = 
Stack

stack-cirros-2
stack-cirros-1
20190402 11:49:31.280 - INFO - ${stderr} =
20190402 11:49:31.280 - INFO - ${rc} = 0
20190402 11:49:31.280 - INFO - +------- END KW: SSHLibrary.Execute Command (1334)
20190402 11:49:31.281 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:31.282 - INFO - ${res} = {u'stdout': u'\nStack\n\nstack-cirros-2\nstack-cirros-1', u'stderr': u'', u'rc': 0}
20190402 11:49:31.282 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:31.282 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:31.283 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:31.283 - INFO - &{result} = { stdout=
Stack

stack-cirros-2
stack-cirros-1 | stderr= | rc=0 }
20190402 11:49:31.284 - INFO - +------ END KW: OpenStack.Run OS Command (1339)
20190402 11:49:31.284 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:31.284 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:31.285 - INFO - ${response} = 
Stack

stack-cirros-2
stack-cirros-1
20190402 11:49:31.285 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:31.285 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:31.286 - INFO - @{res_in_list} = [ Stack | stack-cirros-2 | stack-cirros-1 ]
20190402 11:49:31.286 - INFO - +------- END KW: String.Split String (1)
20190402 11:49:31.286 - INFO - @{stack_list} = [ Stack | stack-cirros-2 | stack-cirros-1 ]
20190402 11:49:31.287 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:49:31.287 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190402 11:49:31.287 - INFO - +------- START KW: ${stack} = Stack [ ]
20190402 11:49:31.287 - INFO - +-------- START KW: OpenStack.Delete Stack [ ${stack} ]
20190402 11:49:31.288 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack stack delete ]
20190402 11:49:31.288 - INFO - ${openstack_cmd} = openstack stack delete
20190402 11:49:31.288 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:31.289 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${stack} | -y ]
20190402 11:49:31.289 - INFO - ${cmd} = openstack stack delete Stack -y
20190402 11:49:31.289 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:49:31.289 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:31.290 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:31.291 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:31.291 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:31.291 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:31.292 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack delete Stack -y'.
20190402 11:49:32.576 - INFO - Command exited with return code 1.
20190402 11:49:32.576 - INFO - ${stdout} = Stack not found: Stack
20190402 11:49:32.576 - INFO - ${stderr} = Unable to delete 1 of the 1 stacks.
20190402 11:49:32.576 - INFO - ${rc} = 1
20190402 11:49:32.577 - INFO - +---------- END KW: SSHLibrary.Execute Command (1285)
20190402 11:49:32.577 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:32.577 - INFO - ${res} = {u'stdout': u'Stack not found: Stack', u'stderr': u'Unable to delete 1 of the 1 stacks.', u'rc': 1}
20190402 11:49:32.578 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:32.578 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:32.578 - INFO - +---------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:32.578 - INFO - +--------- END KW: OpenStack.Run OS Command (1289)
20190402 11:49:32.579 - INFO - +-------- END KW: OpenStack.Delete Stack (1292)
20190402 11:49:32.579 - INFO - +------- END KW: ${stack} = Stack (1292)
20190402 11:49:32.579 - INFO - +------- START KW: ${stack} = stack-cirros-2 [ ]
20190402 11:49:32.579 - INFO - +-------- START KW: OpenStack.Delete Stack [ ${stack} ]
20190402 11:49:32.579 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack stack delete ]
20190402 11:49:32.580 - INFO - ${openstack_cmd} = openstack stack delete
20190402 11:49:32.580 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:32.580 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${stack} | -y ]
20190402 11:49:32.580 - INFO - ${cmd} = openstack stack delete stack-cirros-2 -y
20190402 11:49:32.580 - INFO - +--------- END KW: BuiltIn.Catenate (0)
20190402 11:49:32.580 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:32.581 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:32.582 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:32.582 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:32.582 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:32.582 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack delete stack-cirros-2 -y'.
20190402 11:49:34.021 - INFO - Command exited with return code 0.
20190402 11:49:34.022 - INFO - ${stdout} =
20190402 11:49:34.022 - INFO - ${stderr} =
20190402 11:49:34.022 - INFO - ${rc} = 0
20190402 11:49:34.022 - INFO - +---------- END KW: SSHLibrary.Execute Command (1440)
20190402 11:49:34.022 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:34.023 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:34.024 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:34.024 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:34.025 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:34.025 - INFO - +--------- END KW: OpenStack.Run OS Command (1445)
20190402 11:49:34.025 - INFO - +-------- END KW: OpenStack.Delete Stack (1446)
20190402 11:49:34.025 - INFO - +------- END KW: ${stack} = stack-cirros-2 (1446)
20190402 11:49:34.026 - INFO - +------- START KW: ${stack} = stack-cirros-1 [ ]
20190402 11:49:34.026 - INFO - +-------- START KW: OpenStack.Delete Stack [ ${stack} ]
20190402 11:49:34.027 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack stack delete ]
20190402 11:49:34.027 - INFO - ${openstack_cmd} = openstack stack delete
20190402 11:49:34.027 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:34.027 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${stack} | -y ]
20190402 11:49:34.028 - INFO - ${cmd} = openstack stack delete stack-cirros-1 -y
20190402 11:49:34.028 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:34.028 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:34.029 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:34.030 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:34.030 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:34.030 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:34.031 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack delete stack-cirros-1 -y'.
20190402 11:49:35.563 - INFO - Command exited with return code 0.
20190402 11:49:35.564 - INFO - ${stdout} =
20190402 11:49:35.564 - INFO - ${stderr} =
20190402 11:49:35.564 - INFO - ${rc} = 0
20190402 11:49:35.564 - INFO - +---------- END KW: SSHLibrary.Execute Command (1534)
20190402 11:49:35.565 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:35.566 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:35.566 - INFO - +---------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:35.566 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:35.567 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:35.567 - INFO - +--------- END KW: OpenStack.Run OS Command (1539)
20190402 11:49:35.568 - INFO - +-------- END KW: OpenStack.Delete Stack (1541)
20190402 11:49:35.568 - INFO - +------- END KW: ${stack} = stack-cirros-1 (1542)
20190402 11:49:35.568 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (4281)
20190402 11:49:35.568 - INFO - +----- END KW: OpenStack.Delete All Stacks (5627)
20190402 11:49:35.568 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (30046)
20190402 11:49:35.569 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190402 11:49:35.569 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190402 11:49:35.578 - INFO - +----- END KW: SSHLibrary.Close All Connections (9)
20190402 11:49:35.578 - INFO - +---- END KW: Utils.Stx Suite TearDown (9)
20190402 11:49:35.578 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (30056)
==============================================================================
20190402 11:49:35.581 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.04-Instance-From-Heat-Template (100656)
==============================================================================
20190402 11:49:35.609 - INFO - +-- START SUITE: Sanity-Test.Sanity-OpenStack.05-Measurements-For-Metric [ ]
==============================================================================
20190402 11:49:35.610 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190402 11:49:35.610 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 11:49:35.610 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 11:49:35.611 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 11:49:35.612 - INFO - ${controller_connection} = 1
20190402 11:49:35.612 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190402 11:49:35.612 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 11:49:35.612 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 11:49:35.613 - INFO - Length is 10
20190402 11:49:35.613 - INFO - ${pwd_length} = 10
20190402 11:49:35.613 - INFO - +------- END KW: BuiltIn.Get Length (1)
20190402 11:49:35.613 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 11:49:35.613 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 11:49:35.613 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 11:49:36.763 - INFO - Read output: Last login: Tue Apr  2 17:36:37 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 11:49:36.764 - INFO - +-------- END KW: SSHLibrary.Login (1151)
20190402 11:49:36.764 - INFO - Returning from the enclosing user keyword.
20190402 11:49:36.764 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1151)
20190402 11:49:36.764 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1152)
20190402 11:49:36.765 - INFO - ${master_controller_connection} = 1
20190402 11:49:36.765 - INFO - +----- END KW: Utils.Connect to Controller Node (1155)
20190402 11:49:36.765 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 11:49:36.765 - INFO - ${master_controller_connection} = 1
20190402 11:49:36.766 - INFO - +----- END KW: BuiltIn.Set Suite Variable (1)
20190402 11:49:36.766 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 11:49:36.766 - INFO - 1
20190402 11:49:36.766 - INFO - +----- END KW: BuiltIn.Log (0)
20190402 11:49:36.766 - INFO - +---- END KW: Utils.Open Master Controller Connection (1156)
20190402 11:49:36.767 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 11:49:36.767 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 11:49:36.768 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:49:36.768 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:49:36.768 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:49:36.769 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:49:36.770 - INFO - &{result_dict} = { stdout= }
20190402 11:49:36.770 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:36.770 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:49:36.771 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:49:36.771 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:49:36.771 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:49:36.772 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:49:36.772 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (4)
20190402 11:49:36.772 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:49:36.773 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:49:36.773 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:49:36.783 - INFO - source /etc/platform/openrc
20190402 11:49:36.783 - INFO - +------ END KW: SSHLibrary.Write (10)
20190402 11:49:36.784 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:49:37.386 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:49:37.387 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:49:37.387 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (603)
20190402 11:49:37.387 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:49:37.388 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:49:37.388 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:49:37.388 - INFO - +------- END KW: String.Get Line (0)
20190402 11:49:37.388 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:49:37.389 - INFO - ${clean_out} =
20190402 11:49:37.389 - INFO - +------- END KW: String.Remove String (1)
20190402 11:49:37.389 - INFO - ${output} =
20190402 11:49:37.389 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190402 11:49:37.389 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:49:37.389 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:49:37.391 - INFO - echo $?
20190402 11:49:37.391 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:49:37.392 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:49:37.392 - INFO - 0
20190402 11:49:37.392 - INFO - ${rc} = 0
20190402 11:49:37.392 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:49:37.392 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:49:37.392 - INFO - 0
20190402 11:49:37.392 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:49:37.392 - INFO - ${rc} = 0
20190402 11:49:37.392 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:49:37.393 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:49:37.393 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:49:37.393 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:49:37.393 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:37.393 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:49:37.394 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 11:49:37.394 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:49:37.394 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 11:49:37.394 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:49:37.394 - INFO - +----- END KW: Utils.Run Command (627)
20190402 11:49:37.394 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (627)
20190402 11:49:37.394 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1784)
------------------------------------------------------------------------------
20190402 11:49:37.395 - INFO - +--- START TEST: Create Image For Metrics [ ]
------------------------------------------------------------------------------
20190402 11:49:37.395 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/${cirros_image} | ${host_image_path}/${cirros_image} ]
20190402 11:49:37.403 - INFO - [chan 1] Opened sftp connection (server version 3)
20190402 11:49:37.410 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 11:49:37.898 - INFO - '/home/mgperezi/duplex/stx-test-suite/cirros-0.4.0-x86_64-disk.qcow2' -> '/home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2'
20190402 11:49:37.898 - INFO - +---- END KW: SSHLibrary.Put File (503)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:37.898 - INFO - +---- START KW: OpenStack.Create Image [ ${host_image_path}/${cirros_image} | ${disk_format} | ${cirros_image_name} ]
20190402 11:49:37.899 - INFO - +----- START KW: SSHLibrary.File Should Exist [ ${file_path} ]
20190402 11:49:37.899 - INFO - +----- END KW: SSHLibrary.File Should Exist (0)
20190402 11:49:37.899 - INFO - +----- START KW: BuiltIn.Set Variable [ openstack image create ]
20190402 11:49:37.900 - INFO - ${openstack_cmd} = openstack image create
20190402 11:49:37.900 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:37.900 - INFO - +----- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --file ${file_path} | --disk-format ${disk_format} | --public | ${name} ]
20190402 11:49:37.900 - INFO - ${cmd} = openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros
20190402 11:49:37.900 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:49:37.900 - INFO - +----- START KW: OpenStack.Run OS Command [ ${cmd} | True | 3 min ]
20190402 11:49:37.901 - INFO - +------ START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:37.901 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:37.901 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:37.901 - INFO - +------ START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:37.901 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image create --file /home/wrsroot//cirros-0.4.0-x86_64-disk.qcow2 --disk-format qcow2 --public cirros'.
20190402 11:49:40.135 - INFO - Command exited with return code 0.
20190402 11:49:40.136 - INFO - ${stdout} = +------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:49:40.136 - INFO - ${stderr} =
20190402 11:49:40.136 - INFO - ${rc} = 0
20190402 11:49:40.136 - INFO - +------ END KW: SSHLibrary.Execute Command (2235)
20190402 11:49:40.137 - INFO - +------ START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:40.138 - INFO - ${res} = {u'stdout': u"+------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------...
20190402 11:49:40.138 - INFO - +------ END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:40.139 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:40.140 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:40.140 - INFO - +----- END KW: OpenStack.Run OS Command (2240)
20190402 11:49:40.141 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 5 min | 10 sec | Check Field Value | image | ${name} | status | active ]
20190402 11:49:40.142 - INFO - +------ START KW: OpenStack.Check Field Value [ image | ${name} | status | active ]
20190402 11:49:40.143 - INFO - +------- START KW: OpenStack.Retrieve Field Property [ ${component} | ${component_name} | ${property} ]
20190402 11:49:40.145 - INFO - +-------- START KW: BuiltIn.Set Variable [ openstack ${component} show ${component_name} ]
20190402 11:49:40.146 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:49:40.146 - INFO - +-------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:40.146 - INFO - +-------- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep -w ${property} | tail -1 | awk '{print$4}' ]
20190402 11:49:40.147 - INFO - ${cmd} = openstack image show cirros|grep -w status|tail -1|awk '{print$4}'
20190402 11:49:40.147 - INFO - +-------- END KW: BuiltIn.Catenate (1)
20190402 11:49:40.147 - INFO - +-------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:40.149 - INFO - +--------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:40.149 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:40.149 - INFO - +--------- END KW: BuiltIn.Set Variable (0)
20190402 11:49:40.149 - INFO - +--------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:40.150 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep -w status|tail -1|awk '{print$4}''.
20190402 11:49:41.433 - INFO - Command exited with return code 0.
20190402 11:49:41.433 - INFO - ${stdout} = active
20190402 11:49:41.434 - INFO - ${stderr} =
20190402 11:49:41.434 - INFO - ${rc} = 0
20190402 11:49:41.434 - INFO - +--------- END KW: SSHLibrary.Execute Command (1285)
20190402 11:49:41.435 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:41.436 - INFO - ${res} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:49:41.436 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:41.436 - INFO - +--------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:41.437 - INFO - +--------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:41.437 - INFO - ${result} = {u'stdout': u'active', u'stderr': u'', u'rc': 0}
20190402 11:49:41.438 - INFO - +-------- END KW: OpenStack.Run OS Command (1290)
20190402 11:49:41.438 - INFO - +-------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:41.438 - INFO - ${value} = active
20190402 11:49:41.439 - INFO - +-------- END KW: Collections.Get From Dictionary (0)
20190402 11:49:41.439 - INFO - ${current_value} = active
20190402 11:49:41.439 - INFO - +------- END KW: OpenStack.Retrieve Field Property (1296)
20190402 11:49:41.440 - INFO - +------- START KW: BuiltIn.Should Be Equal As Strings [ ${current_value} | ${expected_value} ]
20190402 11:49:41.440 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:41.440 - INFO - +------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:49:41.441 - INFO - +------ END KW: OpenStack.Check Field Value (1299)
20190402 11:49:41.441 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (1301)
20190402 11:49:41.442 - INFO - +---- END KW: OpenStack.Create Image (3544)
------------------------------------------------------------------------------
20190402 11:49:41.443 - INFO - +--- END TEST: Create Image For Metrics (4048)
------------------------------------------------------------------------------
20190402 11:49:41.443 - INFO - +--- START TEST: Update Image Name [ ]
------------------------------------------------------------------------------
20190402 11:49:41.444 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190402 11:49:41.445 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:49:41.445 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:41.445 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "created_at" | awk '{print $4}' ]
20190402 11:49:41.446 - INFO - ${cmd} = openstack image show cirros|grep "created_at"|awk '{print $4}'
20190402 11:49:41.446 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:41.447 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:41.448 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:41.448 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:41.448 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:49:41.449 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:41.449 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "created_at"|awk '{print $4}''.
20190402 11:49:42.737 - INFO - Command exited with return code 0.
20190402 11:49:42.737 - INFO - ${stdout} = 2019-04-02T17:38:21Z
20190402 11:49:42.737 - INFO - ${stderr} =
20190402 11:49:42.737 - INFO - ${rc} = 0
20190402 11:49:42.738 - INFO - +----- END KW: SSHLibrary.Execute Command (1288)
20190402 11:49:42.738 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:42.739 - INFO - ${res} = {u'stdout': u'2019-04-02T17:38:21Z', u'stderr': u'', u'rc': 0}
20190402 11:49:42.739 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:42.739 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:42.740 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:42.741 - INFO - &{result} = { stdout=2019-04-02T17:38:21Z | stderr= | rc=0 }
20190402 11:49:42.741 - INFO - +---- END KW: OpenStack.Run OS Command (1294)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:42.741 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:42.742 - INFO - ${created_at} = 2019-04-02T17:38:21Z
20190402 11:49:42.742 - INFO - +---- END KW: Collections.Get From Dictionary (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:42.743 - INFO - +---- START KW: BuiltIn.Set Variable [ openstack image set ]
20190402 11:49:42.743 - INFO - ${openstack_cmd} = openstack image set
20190402 11:49:42.744 - INFO - +---- END KW: BuiltIn.Set Variable (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:42.744 - INFO - +---- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --name ${cirros_image_name_tmp} | ${cirros_image_name} ]
20190402 11:49:42.745 - INFO - ${cmd} = openstack image set --name cirros-tmp cirros
20190402 11:49:42.745 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:42.746 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:42.747 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:42.747 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:42.748 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:42.748 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:42.749 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image set --name cirros-tmp cirros'.
20190402 11:49:44.211 - INFO - Command exited with return code 0.
20190402 11:49:44.211 - INFO - ${stdout} =
20190402 11:49:44.212 - INFO - ${stderr} =
20190402 11:49:44.212 - INFO - ${rc} = 0
20190402 11:49:44.212 - INFO - +----- END KW: SSHLibrary.Execute Command (1464)
20190402 11:49:44.212 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:44.213 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:44.214 - INFO - +----- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:44.214 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:44.215 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:44.215 - INFO - +---- END KW: OpenStack.Run OS Command (1469)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:44.216 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name_tmp} ]
20190402 11:49:44.216 - INFO - ${openstack_cmd} = openstack image show cirros-tmp
20190402 11:49:44.216 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:44.217 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "updated_at" | awk '{print $4}' ]
20190402 11:49:44.217 - INFO - ${cmd} = openstack image show cirros-tmp|grep "updated_at"|awk '{print $4}'
20190402 11:49:44.218 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:44.218 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:44.220 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:44.220 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:44.220 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:49:44.220 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:44.221 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros-tmp|grep "updated_at"|awk '{print $4}''.
20190402 11:49:45.503 - INFO - Command exited with return code 0.
20190402 11:49:45.503 - INFO - ${stdout} = 2019-04-02T17:38:26Z
20190402 11:49:45.503 - INFO - ${stderr} =
20190402 11:49:45.503 - INFO - ${rc} = 0
20190402 11:49:45.503 - INFO - +----- END KW: SSHLibrary.Execute Command (1283)
20190402 11:49:45.503 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:45.504 - INFO - ${res} = {u'stdout': u'2019-04-02T17:38:26Z', u'stderr': u'', u'rc': 0}
20190402 11:49:45.504 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:45.504 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:45.505 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:45.505 - INFO - &{result} = { stdout=2019-04-02T17:38:26Z | stderr= | rc=0 }
20190402 11:49:45.505 - INFO - +---- END KW: OpenStack.Run OS Command (1287)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:45.506 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:45.506 - INFO - ${first_update} = 2019-04-02T17:38:26Z
20190402 11:49:45.506 - INFO - +---- END KW: Collections.Get From Dictionary (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:45.506 - INFO - +---- START KW: BuiltIn.Should Not Be Equal [ ${created_at} | ${first_update} ]
20190402 11:49:45.506 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:45.507 - INFO - +---- END KW: BuiltIn.Should Not Be Equal (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:45.507 - INFO - +---- START KW: BuiltIn.Set Variable [ openstack image set ]
20190402 11:49:45.507 - INFO - ${openstack_cmd} = openstack image set
20190402 11:49:45.507 - INFO - +---- END KW: BuiltIn.Set Variable (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:45.507 - INFO - +---- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --name ${cirros_image_name} | ${cirros_image_name_tmp} ]
20190402 11:49:45.508 - INFO - ${cmd} = openstack image set --name cirros cirros-tmp
20190402 11:49:45.508 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:45.508 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:45.509 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:45.509 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:45.509 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:49:45.509 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:45.510 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image set --name cirros cirros-tmp'.
20190402 11:49:47.047 - INFO - Command exited with return code 0.
20190402 11:49:47.048 - INFO - ${stdout} =
20190402 11:49:47.048 - INFO - ${stderr} =
20190402 11:49:47.048 - INFO - ${rc} = 0
20190402 11:49:47.048 - INFO - +----- END KW: SSHLibrary.Execute Command (1539)
20190402 11:49:47.048 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:47.049 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:47.049 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:47.050 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:47.050 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:47.051 - INFO - +---- END KW: OpenStack.Run OS Command (1543)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:47.051 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190402 11:49:47.052 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:49:47.052 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:47.052 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "updated_at" | awk '{print $4}' ]
20190402 11:49:47.053 - INFO - ${cmd} = openstack image show cirros|grep "updated_at"|awk '{print $4}'
20190402 11:49:47.053 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:47.053 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:47.054 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:47.054 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:47.055 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:47.055 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:47.056 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "updated_at"|awk '{print $4}''.
20190402 11:49:48.402 - INFO - Command exited with return code 0.
20190402 11:49:48.402 - INFO - ${stdout} = 2019-04-02T17:38:29Z
20190402 11:49:48.403 - INFO - ${stderr} =
20190402 11:49:48.403 - INFO - ${rc} = 0
20190402 11:49:48.403 - INFO - +----- END KW: SSHLibrary.Execute Command (1348)
20190402 11:49:48.404 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:48.405 - INFO - ${res} = {u'stdout': u'2019-04-02T17:38:29Z', u'stderr': u'', u'rc': 0}
20190402 11:49:48.405 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:48.405 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:48.406 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:48.407 - INFO - &{result} = { stdout=2019-04-02T17:38:29Z | stderr= | rc=0 }
20190402 11:49:48.407 - INFO - +---- END KW: OpenStack.Run OS Command (1354)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:48.408 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:48.408 - INFO - ${second_update} = 2019-04-02T17:38:29Z
20190402 11:49:48.409 - INFO - +---- END KW: Collections.Get From Dictionary (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:48.409 - INFO - +---- START KW: BuiltIn.Should Not Be Equal [ ${first_update} | ${second_update} ]
20190402 11:49:48.410 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:48.410 - INFO - +---- END KW: BuiltIn.Should Not Be Equal (1)
------------------------------------------------------------------------------
20190402 11:49:48.411 - INFO - +--- END TEST: Update Image Name (6967)
------------------------------------------------------------------------------
20190402 11:49:48.411 - INFO - +--- START TEST: Update Image Disk Ram Size [ ]
------------------------------------------------------------------------------
20190402 11:49:48.412 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190402 11:49:48.412 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:49:48.413 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:48.413 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "updated_at" | awk '{print $4}' ]
20190402 11:49:48.414 - INFO - ${cmd} = openstack image show cirros|grep "updated_at"|awk '{print $4}'
20190402 11:49:48.414 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:48.414 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:48.416 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:48.416 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:48.416 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:48.416 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:48.417 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "updated_at"|awk '{print $4}''.
20190402 11:49:49.750 - INFO - Command exited with return code 0.
20190402 11:49:49.750 - INFO - ${stdout} = 2019-04-02T17:38:29Z
20190402 11:49:49.750 - INFO - ${stderr} =
20190402 11:49:49.750 - INFO - ${rc} = 0
20190402 11:49:49.750 - INFO - +----- END KW: SSHLibrary.Execute Command (1334)
20190402 11:49:49.751 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:49.752 - INFO - ${res} = {u'stdout': u'2019-04-02T17:38:29Z', u'stderr': u'', u'rc': 0}
20190402 11:49:49.752 - INFO - +----- END KW: BuiltIn.Create Dictionary (1)
20190402 11:49:49.752 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:49.753 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:49.754 - INFO - &{result} = { stdout=2019-04-02T17:38:29Z | stderr= | rc=0 }
20190402 11:49:49.754 - INFO - +---- END KW: OpenStack.Run OS Command (1340)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:49.754 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:49.755 - INFO - ${updated_at} = 2019-04-02T17:38:29Z
20190402 11:49:49.755 - INFO - +---- END KW: Collections.Get From Dictionary (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:49.755 - INFO - +---- START KW: BuiltIn.Set Variable [ openstack image set ]
20190402 11:49:49.756 - INFO - ${openstack_cmd} = openstack image set
20190402 11:49:49.756 - INFO - +---- END KW: BuiltIn.Set Variable (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:49.756 - INFO - +---- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --min-disk ${image_disk_size} | ${cirros_image_name} ]
20190402 11:49:49.757 - INFO - ${cmd} = openstack image set --min-disk 10 cirros
20190402 11:49:49.757 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:49.758 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:49.759 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:49.759 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:49.759 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:49:49.760 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:49.761 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image set --min-disk 10 cirros'.
20190402 11:49:51.143 - INFO - Command exited with return code 0.
20190402 11:49:51.143 - INFO - ${stdout} =
20190402 11:49:51.143 - INFO - ${stderr} =
20190402 11:49:51.143 - INFO - ${rc} = 0
20190402 11:49:51.144 - INFO - +----- END KW: SSHLibrary.Execute Command (1384)
20190402 11:49:51.144 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:51.146 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:51.146 - INFO - +----- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:51.147 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:51.147 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:51.148 - INFO - +---- END KW: OpenStack.Run OS Command (1390)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:51.148 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190402 11:49:51.149 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:49:51.149 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:51.150 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "updated_at" | awk '{print $4}' ]
20190402 11:49:51.150 - INFO - ${cmd} = openstack image show cirros|grep "updated_at"|awk '{print $4}'
20190402 11:49:51.151 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:51.151 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:51.152 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:51.152 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:51.153 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:51.153 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:51.154 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "updated_at"|awk '{print $4}''.
20190402 11:49:52.435 - INFO - Command exited with return code 0.
20190402 11:49:52.436 - INFO - ${stdout} = 2019-04-02T17:38:33Z
20190402 11:49:52.436 - INFO - ${stderr} =
20190402 11:49:52.437 - INFO - ${rc} = 0
20190402 11:49:52.437 - INFO - +----- END KW: SSHLibrary.Execute Command (1284)
20190402 11:49:52.437 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:52.438 - INFO - ${res} = {u'stdout': u'2019-04-02T17:38:33Z', u'stderr': u'', u'rc': 0}
20190402 11:49:52.439 - INFO - +----- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:52.439 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:52.440 - INFO - +----- END KW: BuiltIn.Run Keyword If (0)
20190402 11:49:52.440 - INFO - &{result} = { stdout=2019-04-02T17:38:33Z | stderr= | rc=0 }
20190402 11:49:52.440 - INFO - +---- END KW: OpenStack.Run OS Command (1289)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:52.441 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:52.441 - INFO - ${first_update} = 2019-04-02T17:38:33Z
20190402 11:49:52.442 - INFO - +---- END KW: Collections.Get From Dictionary (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:52.442 - INFO - +---- START KW: BuiltIn.Should Not Be Equal [ ${updated_at} | ${first_update} ]
20190402 11:49:52.442 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:52.443 - INFO - +---- END KW: BuiltIn.Should Not Be Equal (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:52.443 - INFO - +---- START KW: BuiltIn.Set Variable [ openstack image set ]
20190402 11:49:52.443 - INFO - ${openstack_cmd} = openstack image set
20190402 11:49:52.444 - INFO - +---- END KW: BuiltIn.Set Variable (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:52.444 - INFO - +---- START KW: BuiltIn.Catenate [ ${openstack_cmd} | --min-ram ${image_ram_size} | ${cirros_image_name} ]
20190402 11:49:52.445 - INFO - ${cmd} = openstack image set --min-ram 20 cirros
20190402 11:49:52.445 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:52.445 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:52.446 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:52.447 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:52.447 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:52.447 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:52.448 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image set --min-ram 20 cirros'.
20190402 11:49:53.911 - INFO - Command exited with return code 0.
20190402 11:49:53.912 - INFO - ${stdout} =
20190402 11:49:53.912 - INFO - ${stderr} =
20190402 11:49:53.912 - INFO - ${rc} = 0
20190402 11:49:53.913 - INFO - +----- END KW: SSHLibrary.Execute Command (1466)
20190402 11:49:53.913 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:53.915 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:53.916 - INFO - +----- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:53.916 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:53.917 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:53.918 - INFO - +---- END KW: OpenStack.Run OS Command (1473)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:53.919 - INFO - +---- START KW: BuiltIn.Catenate [ openstack image show | ${cirros_image_name} ]
20190402 11:49:53.919 - INFO - ${openstack_cmd} = openstack image show cirros
20190402 11:49:53.920 - INFO - +---- END KW: BuiltIn.Catenate (0)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:53.920 - INFO - +---- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | grep "updated_at" | awk '{print $4}' ]
20190402 11:49:53.921 - INFO - ${cmd} = openstack image show cirros|grep "updated_at"|awk '{print $4}'
20190402 11:49:53.921 - INFO - +---- END KW: BuiltIn.Catenate (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:53.921 - INFO - +---- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:53.922 - INFO - +----- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:53.923 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:53.923 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:49:53.923 - INFO - +----- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:53.924 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image show cirros|grep "updated_at"|awk '{print $4}''.
20190402 11:49:55.206 - INFO - Command exited with return code 0.
20190402 11:49:55.206 - INFO - ${stdout} = 2019-04-02T17:38:36Z
20190402 11:49:55.206 - INFO - ${stderr} =
20190402 11:49:55.207 - INFO - ${rc} = 0
20190402 11:49:55.207 - INFO - +----- END KW: SSHLibrary.Execute Command (1284)
20190402 11:49:55.207 - INFO - +----- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:55.209 - INFO - ${res} = {u'stdout': u'2019-04-02T17:38:36Z', u'stderr': u'', u'rc': 0}
20190402 11:49:55.209 - INFO - +----- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:55.210 - INFO - +----- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:55.211 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:55.211 - INFO - &{result} = { stdout=2019-04-02T17:38:36Z | stderr= | rc=0 }
20190402 11:49:55.212 - INFO - +---- END KW: OpenStack.Run OS Command (1291)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:55.212 - INFO - +---- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:55.213 - INFO - ${second_update} = 2019-04-02T17:38:36Z
20190402 11:49:55.213 - INFO - +---- END KW: Collections.Get From Dictionary (1)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:49:55.214 - INFO - +---- START KW: BuiltIn.Should Not Be Equal [ ${first_update} | ${second_update} ]
20190402 11:49:55.214 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:49:55.215 - INFO - +---- END KW: BuiltIn.Should Not Be Equal (0)
------------------------------------------------------------------------------
20190402 11:49:55.215 - INFO - +--- END TEST: Update Image Disk Ram Size (6804)
------------------------------------------------------------------------------
20190402 11:49:55.216 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ OpenStack.Openstack Cleanup All | Utils.Stx Suite TearDown ]
20190402 11:49:55.217 - INFO - +---- START KW: OpenStack.Openstack Cleanup All [ ]
20190402 11:49:55.218 - INFO - +----- START KW: OpenStack.Delete All Instances [ ]
20190402 11:49:55.218 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack server list ]
20190402 11:49:55.219 - INFO - ${openstack_cmd} = openstack server list
20190402 11:49:55.219 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:55.219 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:49:55.220 - INFO - ${cmd} = openstack server list|awk '{print$4}'|grep -v "Name"
20190402 11:49:55.220 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:55.220 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:55.222 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:55.222 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:55.222 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:55.223 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:55.223 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack server list|awk '{print$4}'|grep -v "Name"'.
20190402 11:49:56.820 - INFO - Command exited with return code 0.
20190402 11:49:56.821 - INFO - ${stdout} =
20190402 11:49:56.821 - INFO - ${stderr} =
20190402 11:49:56.821 - INFO - ${rc} = 0
20190402 11:49:56.821 - INFO - +------- END KW: SSHLibrary.Execute Command (1599)
20190402 11:49:56.822 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:56.823 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:49:56.823 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:56.823 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:56.824 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:56.825 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:49:56.825 - INFO - +------ END KW: OpenStack.Run OS Command (1605)
20190402 11:49:56.826 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:56.826 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:56.827 - INFO - ${response} =
20190402 11:49:56.827 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:56.828 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:56.829 - INFO - @{res_in_list} = [ ]
20190402 11:49:56.829 - INFO - +------- END KW: String.Split String (2)
20190402 11:49:56.829 - INFO - @{vm_list} = [ ]
20190402 11:49:56.830 - INFO - +------ END KW: Utils.Convert Response To List (5)
20190402 11:49:56.830 - INFO - +------ START KW: ${vm} IN [ @{vm_list} ] [ ]
20190402 11:49:56.830 - INFO - +------ END KW: ${vm} IN [ @{vm_list} ] (0)
20190402 11:49:56.830 - INFO - +----- END KW: OpenStack.Delete All Instances (1612)
20190402 11:49:56.831 - INFO - +----- START KW: OpenStack.Delete All Images [ ]
20190402 11:49:56.831 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack image list ]
20190402 11:49:56.832 - INFO - ${openstack_cmd} = openstack image list
20190402 11:49:56.832 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:49:56.832 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "Cirros" ]
20190402 11:49:56.833 - INFO - ${cmd} = openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"
20190402 11:49:56.833 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:49:56.833 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:49:56.834 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:56.835 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:56.835 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:56.835 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:56.836 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image list|awk '{print$4}'|grep -v "Name"|grep -v "Cirros"'.
20190402 11:49:58.534 - INFO - Command exited with return code 0.
20190402 11:49:58.534 - INFO - ${stdout} = 

cirros
20190402 11:49:58.535 - INFO - ${stderr} =
20190402 11:49:58.535 - INFO - ${rc} = 0
20190402 11:49:58.535 - INFO - +------- END KW: SSHLibrary.Execute Command (1700)
20190402 11:49:58.536 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:49:58.537 - INFO - ${res} = {u'stdout': u'\n\ncirros', u'stderr': u'', u'rc': 0}
20190402 11:49:58.537 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:49:58.537 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:49:58.538 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:49:58.539 - INFO - &{result} = { stdout=

cirros | stderr= | rc=0 }
20190402 11:49:58.539 - INFO - +------ END KW: OpenStack.Run OS Command (1706)
20190402 11:49:58.539 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:49:58.540 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:49:58.541 - INFO - ${response} = 

cirros
20190402 11:49:58.541 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:49:58.541 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:49:58.542 - INFO - @{res_in_list} = [ cirros ]
20190402 11:49:58.542 - INFO - +------- END KW: String.Split String (1)
20190402 11:49:58.543 - INFO - @{image_list} = [ cirros ]
20190402 11:49:58.543 - INFO - +------ END KW: Utils.Convert Response To List (4)
20190402 11:49:58.543 - INFO - +------ START KW: ${image} IN [ @{image_list} ] [ ]
20190402 11:49:58.543 - INFO - +------- START KW: ${image} = cirros [ ]
20190402 11:49:58.544 - INFO - +-------- START KW: OpenStack.Delete Image [ ${image} ]
20190402 11:49:58.544 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack image delete ]
20190402 11:49:58.545 - INFO - ${openstack_cmd} = openstack image delete
20190402 11:49:58.545 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:58.545 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${image} ]
20190402 11:49:58.546 - INFO - ${cmd} = openstack image delete cirros
20190402 11:49:58.546 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:49:58.546 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:49:58.547 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:49:58.548 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:49:58.548 - INFO - +---------- END KW: BuiltIn.Set Variable (1)
20190402 11:49:58.548 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:49:58.549 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack image delete cirros'.
20190402 11:50:10.104 - INFO - Command exited with return code 0.
20190402 11:50:10.104 - INFO - ${stdout} =
20190402 11:50:10.104 - INFO - ${stderr} =
20190402 11:50:10.104 - INFO - ${rc} = 0
20190402 11:50:10.105 - INFO - +---------- END KW: SSHLibrary.Execute Command (11557)
20190402 11:50:10.105 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:10.106 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:10.107 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:50:10.107 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:10.108 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:10.109 - INFO - +--------- END KW: OpenStack.Run OS Command (11562)
20190402 11:50:10.109 - INFO - +-------- END KW: OpenStack.Delete Image (11565)
20190402 11:50:10.109 - INFO - +------- END KW: ${image} = cirros (11566)
20190402 11:50:10.109 - INFO - +------ END KW: ${image} IN [ @{image_list} ] (11566)
20190402 11:50:10.110 - INFO - +----- END KW: OpenStack.Delete All Images (13279)
20190402 11:50:10.110 - INFO - +----- START KW: OpenStack.Delete All Flavors [ ]
20190402 11:50:10.111 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack flavor list ]
20190402 11:50:10.112 - INFO - ${openstack_cmd} = openstack flavor list
20190402 11:50:10.112 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:50:10.112 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "m1" ]
20190402 11:50:10.113 - INFO - ${cmd} = openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"
20190402 11:50:10.113 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:50:10.113 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:50:10.114 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:10.115 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:10.115 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:50:10.115 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:10.117 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack flavor list|awk '{print$4}'|grep -v "Name"|grep -v "m1"'.
20190402 11:50:11.499 - INFO - Command exited with return code 0.
20190402 11:50:11.499 - INFO - ${stdout} =
20190402 11:50:11.499 - INFO - ${stderr} =
20190402 11:50:11.500 - INFO - ${rc} = 0
20190402 11:50:11.500 - INFO - +------- END KW: SSHLibrary.Execute Command (1385)
20190402 11:50:11.500 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:11.501 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:11.502 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:50:11.502 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:11.503 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:11.503 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:50:11.503 - INFO - +------ END KW: OpenStack.Run OS Command (1390)
20190402 11:50:11.504 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:50:11.504 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:11.505 - INFO - ${response} =
20190402 11:50:11.505 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:50:11.505 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:50:11.506 - INFO - @{res_in_list} = [ ]
20190402 11:50:11.506 - INFO - +------- END KW: String.Split String (1)
20190402 11:50:11.507 - INFO - @{flavor_list} = [ ]
20190402 11:50:11.507 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:50:11.507 - INFO - +------ START KW: ${flavor} IN [ @{flavor_list} ] [ ]
20190402 11:50:11.507 - INFO - +------ END KW: ${flavor} IN [ @{flavor_list} ] (0)
20190402 11:50:11.507 - INFO - +----- END KW: OpenStack.Delete All Flavors (1397)
20190402 11:50:11.508 - INFO - +----- START KW: OpenStack.Delete All Networks [ ]
20190402 11:50:11.508 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack network list ]
20190402 11:50:11.509 - INFO - ${openstack_cmd} = openstack network list
20190402 11:50:11.509 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:50:11.509 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" | grep -v "private" | grep -v "public" | grep -v "external" | grep -v "internal" ]
20190402 11:50:11.510 - INFO - ${cmd} = openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"
20190402 11:50:11.510 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:50:11.511 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:50:11.512 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:11.512 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:11.512 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:50:11.513 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:11.514 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack network list|awk '{print$4}'|grep -v "Name"|grep -v "private"|grep -v "public"|grep -v "external"|grep -v "internal"'.
20190402 11:50:12.904 - INFO - Command exited with return code 0.
20190402 11:50:12.904 - INFO - ${stdout} =
20190402 11:50:12.904 - INFO - ${stderr} =
20190402 11:50:12.904 - INFO - ${rc} = 0
20190402 11:50:12.904 - INFO - +------- END KW: SSHLibrary.Execute Command (1391)
20190402 11:50:12.905 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:12.905 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:12.905 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:12.905 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:12.905 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:12.906 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:50:12.906 - INFO - +------ END KW: OpenStack.Run OS Command (1395)
20190402 11:50:12.906 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:50:12.906 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:12.907 - INFO - ${response} =
20190402 11:50:12.907 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:50:12.907 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:50:12.907 - INFO - @{res_in_list} = [ ]
20190402 11:50:12.907 - INFO - +------- END KW: String.Split String (0)
20190402 11:50:12.907 - INFO - @{network_list} = [ ]
20190402 11:50:12.907 - INFO - +------ END KW: Utils.Convert Response To List (1)
20190402 11:50:12.907 - INFO - +------ START KW: ${network} IN [ @{network_list} ] [ ]
20190402 11:50:12.908 - INFO - +------ END KW: ${network} IN [ @{network_list} ] (1)
20190402 11:50:12.908 - INFO - +----- END KW: OpenStack.Delete All Networks (1400)
20190402 11:50:12.908 - INFO - +----- START KW: OpenStack.Delete All KeyPairs [ ]
20190402 11:50:12.908 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack keypair list ]
20190402 11:50:12.908 - INFO - ${openstack_cmd} = openstack keypair list
20190402 11:50:12.908 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:50:12.908 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "Name" ]
20190402 11:50:12.908 - INFO - ${cmd} = openstack keypair list|awk '{print$2}'|grep -v "Name"
20190402 11:50:12.909 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:50:12.909 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:50:12.909 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:12.909 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:12.909 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:50:12.909 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:12.910 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack keypair list|awk '{print$2}'|grep -v "Name"'.
20190402 11:50:14.253 - INFO - Command exited with return code 0.
20190402 11:50:14.254 - INFO - ${stdout} =
20190402 11:50:14.254 - INFO - ${stderr} =
20190402 11:50:14.254 - INFO - ${rc} = 0
20190402 11:50:14.254 - INFO - +------- END KW: SSHLibrary.Execute Command (1345)
20190402 11:50:14.254 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:14.255 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:14.255 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:50:14.255 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:14.256 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:14.256 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:50:14.257 - INFO - +------ END KW: OpenStack.Run OS Command (1347)
20190402 11:50:14.257 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:50:14.258 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:14.258 - INFO - ${response} =
20190402 11:50:14.258 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:50:14.259 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:50:14.259 - INFO - @{res_in_list} = [ ]
20190402 11:50:14.259 - INFO - +------- END KW: String.Split String (0)
20190402 11:50:14.260 - INFO - @{key_list} = [ ]
20190402 11:50:14.260 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:50:14.260 - INFO - +------ START KW: ${key} IN [ @{key_list} ] [ ]
20190402 11:50:14.260 - INFO - +------ END KW: ${key} IN [ @{key_list} ] (0)
20190402 11:50:14.260 - INFO - +----- END KW: OpenStack.Delete All KeyPairs (1352)
20190402 11:50:14.261 - INFO - +----- START KW: OpenStack.Delete All Snapshots [ ]
20190402 11:50:14.261 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume snapshot list ]
20190402 11:50:14.261 - INFO - ${openstack_cmd} = openstack volume snapshot list
20190402 11:50:14.261 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:50:14.262 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:50:14.262 - INFO - ${cmd} = openstack volume snapshot list|awk '{print$4}'|grep -v "Name"
20190402 11:50:14.262 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:50:14.262 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:50:14.263 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:14.263 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:14.263 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:50:14.264 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:14.264 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume snapshot list|awk '{print$4}'|grep -v "Name"'.
20190402 11:50:15.646 - INFO - Command exited with return code 0.
20190402 11:50:15.646 - INFO - ${stdout} =
20190402 11:50:15.646 - INFO - ${stderr} =
20190402 11:50:15.647 - INFO - ${rc} = 0
20190402 11:50:15.647 - INFO - +------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:50:15.647 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:15.648 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:15.648 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:50:15.649 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:15.649 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:15.650 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:50:15.650 - INFO - +------ END KW: OpenStack.Run OS Command (1388)
20190402 11:50:15.650 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:50:15.651 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:15.651 - INFO - ${response} =
20190402 11:50:15.652 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:50:15.652 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:50:15.652 - INFO - @{res_in_list} = [ ]
20190402 11:50:15.652 - INFO - +------- END KW: String.Split String (0)
20190402 11:50:15.653 - INFO - @{snapshot_list} = [ ]
20190402 11:50:15.653 - INFO - +------ END KW: Utils.Convert Response To List (3)
20190402 11:50:15.653 - INFO - +------ START KW: ${snapshot} IN [ @{snapshot_list} ] [ ]
20190402 11:50:15.653 - INFO - +------ END KW: ${snapshot} IN [ @{snapshot_list} ] (0)
20190402 11:50:15.654 - INFO - +----- END KW: OpenStack.Delete All Snapshots (1392)
20190402 11:50:15.654 - INFO - +----- START KW: OpenStack.Delete All Volumes [ ]
20190402 11:50:15.654 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack volume list ]
20190402 11:50:15.655 - INFO - ${openstack_cmd} = openstack volume list
20190402 11:50:15.655 - INFO - +------ END KW: BuiltIn.Set Variable (1)
20190402 11:50:15.655 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$2}' | grep -v "ID" ]
20190402 11:50:15.656 - INFO - ${cmd} = openstack volume list|awk '{print$2}'|grep -v "ID"
20190402 11:50:15.656 - INFO - +------ END KW: BuiltIn.Catenate (1)
20190402 11:50:15.656 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:50:15.657 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:15.658 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:15.658 - INFO - +------- END KW: BuiltIn.Set Variable (1)
20190402 11:50:15.658 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:15.659 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume list|awk '{print$2}'|grep -v "ID"'.
20190402 11:50:17.141 - INFO - Command exited with return code 0.
20190402 11:50:17.142 - INFO - ${stdout} = 

5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:50:17.142 - INFO - ${stderr} =
20190402 11:50:17.142 - INFO - ${rc} = 0
20190402 11:50:17.143 - INFO - +------- END KW: SSHLibrary.Execute Command (1484)
20190402 11:50:17.143 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:17.144 - INFO - ${res} = {u'stdout': u'\n\n5936d333-91af-4afe-babf-bd2a6b209783', u'stderr': u'', u'rc': 0}
20190402 11:50:17.144 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:50:17.145 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:17.145 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:17.146 - INFO - &{result} = { stdout=

5936d333-91af-4afe-babf-bd2a6b209783 | stderr= | rc=0 }
20190402 11:50:17.146 - INFO - +------ END KW: OpenStack.Run OS Command (1490)
20190402 11:50:17.147 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:50:17.147 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:17.148 - INFO - ${response} = 

5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:50:17.148 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:50:17.148 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:50:17.149 - INFO - @{res_in_list} = [ 5936d333-91af-4afe-babf-bd2a6b209783 ]
20190402 11:50:17.149 - INFO - +------- END KW: String.Split String (1)
20190402 11:50:17.149 - INFO - @{volume_list} = [ 5936d333-91af-4afe-babf-bd2a6b209783 ]
20190402 11:50:17.149 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:50:17.150 - INFO - +------ START KW: ${volume} IN [ @{volume_list} ] [ ]
20190402 11:50:17.150 - INFO - +------- START KW: ${volume} = 5936d333-91af-4afe-babf-bd2a6b209783 [ ]
20190402 11:50:17.150 - INFO - +-------- START KW: OpenStack.Delete Volume [ ${volume} ]
20190402 11:50:17.151 - INFO - +--------- START KW: BuiltIn.Set Variable [ openstack volume delete ]
20190402 11:50:17.152 - INFO - ${openstack_cmd} = openstack volume delete
20190402 11:50:17.152 - INFO - +--------- END KW: BuiltIn.Set Variable (1)
20190402 11:50:17.152 - INFO - +--------- START KW: BuiltIn.Catenate [ ${openstack_cmd} | ${volume} ]
20190402 11:50:17.153 - INFO - ${cmd} = openstack volume delete 5936d333-91af-4afe-babf-bd2a6b209783
20190402 11:50:17.153 - INFO - +--------- END KW: BuiltIn.Catenate (1)
20190402 11:50:17.153 - INFO - +--------- START KW: OpenStack.Run OS Command [ ${cmd} ]
20190402 11:50:17.154 - INFO - +---------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:17.154 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:17.154 - INFO - +---------- END KW: BuiltIn.Set Variable (0)
20190402 11:50:17.155 - INFO - +---------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:17.155 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack volume delete 5936d333-91af-4afe-babf-bd2a6b209783'.
20190402 11:50:18.537 - INFO - Command exited with return code 0.
20190402 11:50:18.538 - INFO - ${stdout} =
20190402 11:50:18.538 - INFO - ${stderr} =
20190402 11:50:18.538 - INFO - ${rc} = 0
20190402 11:50:18.538 - INFO - +---------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:50:18.539 - INFO - +---------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:18.540 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:18.540 - INFO - +---------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:50:18.540 - INFO - +---------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:18.541 - INFO - +---------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:18.542 - INFO - +--------- END KW: OpenStack.Run OS Command (1388)
20190402 11:50:18.542 - INFO - +-------- END KW: OpenStack.Delete Volume (1392)
20190402 11:50:18.542 - INFO - +------- END KW: ${volume} = 5936d333-91af-4afe-babf-bd2a6b209783 (1392)
20190402 11:50:18.542 - INFO - +------ END KW: ${volume} IN [ @{volume_list} ] (1392)
20190402 11:50:18.542 - INFO - +----- END KW: OpenStack.Delete All Volumes (2888)
20190402 11:50:18.543 - INFO - +----- START KW: OpenStack.Delete All Stacks [ ]
20190402 11:50:18.543 - INFO - +------ START KW: BuiltIn.Set Variable [ openstack stack list ]
20190402 11:50:18.543 - INFO - ${openstack_cmd} = openstack stack list
20190402 11:50:18.543 - INFO - +------ END KW: BuiltIn.Set Variable (0)
20190402 11:50:18.543 - INFO - +------ START KW: BuiltIn.Catenate [ SEPARATOR=| | ${openstack_cmd} | awk '{print$4}' | grep -v "Name" ]
20190402 11:50:18.543 - INFO - ${cmd} = openstack stack list|awk '{print$4}'|grep -v "Name"
20190402 11:50:18.543 - INFO - +------ END KW: BuiltIn.Catenate (0)
20190402 11:50:18.544 - INFO - +------ START KW: OpenStack.Run OS Command [ ${cmd} | True ]
20190402 11:50:18.544 - INFO - +------- START KW: BuiltIn.Set Variable [ export OS_CLOUD=openstack_helm ]
20190402 11:50:18.544 - INFO - ${load_os_token} = export OS_CLOUD=openstack_helm
20190402 11:50:18.544 - INFO - +------- END KW: BuiltIn.Set Variable (0)
20190402 11:50:18.544 - INFO - +------- START KW: SSHLibrary.Execute Command [ ${load_os_token} && ${cmd} | return_stdout=True | return_stderr=True | return_rc=True | timeout=${timeout} ]
20190402 11:50:18.545 - INFO - Executing command 'export OS_CLOUD=openstack_helm && openstack stack list|awk '{print$4}'|grep -v "Name"'.
20190402 11:50:19.926 - INFO - Command exited with return code 0.
20190402 11:50:19.927 - INFO - ${stdout} =
20190402 11:50:19.927 - INFO - ${stderr} =
20190402 11:50:19.927 - INFO - ${rc} = 0
20190402 11:50:19.927 - INFO - +------- END KW: SSHLibrary.Execute Command (1383)
20190402 11:50:19.927 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${stdout} | stderr=${stderr} | rc=${rc} ]
20190402 11:50:19.928 - INFO - ${res} = {u'stdout': u'', u'stderr': u'', u'rc': 0}
20190402 11:50:19.929 - INFO - +------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:50:19.929 - INFO - +------- START KW: BuiltIn.Run Keyword If [ ${rc} != 0 and ${fail_if_error} == True | FAIL | ${stderr} ]
20190402 11:50:19.930 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:19.930 - INFO - &{result} = { stdout= | stderr= | rc=0 }
20190402 11:50:19.930 - INFO - +------ END KW: OpenStack.Run OS Command (1386)
20190402 11:50:19.931 - INFO - +------ START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:50:19.931 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:19.932 - INFO - ${response} =
20190402 11:50:19.932 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:50:19.932 - INFO - +------- START KW: String.Split String [ ${response} ]
20190402 11:50:19.933 - INFO - @{res_in_list} = [ ]
20190402 11:50:19.933 - INFO - +------- END KW: String.Split String (1)
20190402 11:50:19.933 - INFO - @{stack_list} = [ ]
20190402 11:50:19.933 - INFO - +------ END KW: Utils.Convert Response To List (2)
20190402 11:50:19.933 - INFO - +------ START KW: ${stack} IN [ @{stack_list} ] [ ]
20190402 11:50:19.934 - INFO - +------ END KW: ${stack} IN [ @{stack_list} ] (1)
20190402 11:50:19.934 - INFO - +----- END KW: OpenStack.Delete All Stacks (1391)
20190402 11:50:19.934 - INFO - +---- END KW: OpenStack.Openstack Cleanup All (24717)
20190402 11:50:19.935 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190402 11:50:19.935 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190402 11:50:19.937 - INFO - +----- END KW: SSHLibrary.Close All Connections (2)
20190402 11:50:19.938 - INFO - +---- END KW: Utils.Stx Suite TearDown (3)
20190402 11:50:19.938 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (24722)
==============================================================================
20190402 11:50:19.940 - INFO - +-- END SUITE: Sanity-Test.Sanity-OpenStack.05-Measurements-For-Metric (44356)
==============================================================================
20190402 11:50:19.964 - INFO - +- END SUITE: Sanity-Test.Sanity-OpenStack (3620157)
==============================================================================
20190402 11:50:19.966 - INFO - +- START SUITE: Sanity-Test.Sanity-Platform [ ]
==============================================================================
20190402 11:50:19.979 - INFO - +-- START SUITE: Sanity-Test.Sanity-Platform.02-OpenStack-Pod-Healthy [ ]
==============================================================================
20190402 11:50:19.979 - INFO - +--- START SETUP: Utils.Stx Suite Setup [ ]
20190402 11:50:19.980 - INFO - +---- START KW: Utils.Open Master Controller Connection [ ]
20190402 11:50:19.980 - INFO - +----- START KW: Utils.Connect to Controller Node [ ${CONFIG.credentials.STX_DEPLOY_USER_NAME} | ${CONFIG.credentials.STX_DEPLOY_USER_PSWD} | ${CONFIG.general.IP_UNIT_0_ADDRESS} ]
20190402 11:50:19.980 - INFO - +------ START KW: SSHLibrary.Open Connection [ ${ip_address} prompt=${prompt} | timeout=${timeout} ]
20190402 11:50:19.981 - INFO - ${controller_connection} = 1
20190402 11:50:19.981 - INFO - +------ END KW: SSHLibrary.Open Connection (1)
20190402 11:50:19.981 - INFO - +------ START KW: Utils.Flexible_SSH_Login [ ${user} | ${password} ]
20190402 11:50:19.981 - INFO - +------- START KW: BuiltIn.Get Length [ ${password} ]
20190402 11:50:19.981 - INFO - Length is 10
20190402 11:50:19.981 - INFO - ${pwd_length} = 10
20190402 11:50:19.981 - INFO - +------- END KW: BuiltIn.Get Length (0)
20190402 11:50:19.981 - INFO - +------- START KW: BuiltIn.Run Keyword And Return If [ ${pwd_length} > 0 | SSHLibrary.Login | ${user} | ${password} | delay=${delay} ]
20190402 11:50:19.982 - INFO - +-------- START KW: SSHLibrary.Login [ ${user} | ${password} | delay=${delay} ]
20190402 11:50:19.982 - INFO - Logging into '192.168.200.76 prompt=$:22' as 'wrsroot'.
20190402 11:50:21.068 - INFO - Read output: Last login: Tue Apr  2 17:38:18 2019 from 192.168.200.60
/etc/motd.d/00-header:

[H[2J
WARNING: Unauthorized access to this system is forbidden and will be
prosecuted by law. By accessing this system, you agree that your
actions may be monitored if unauthorized usage is suspected.

controller-0:~$
20190402 11:50:21.068 - INFO - +-------- END KW: SSHLibrary.Login (1086)
20190402 11:50:21.068 - INFO - Returning from the enclosing user keyword.
20190402 11:50:21.068 - INFO - +------- END KW: BuiltIn.Run Keyword And Return If (1087)
20190402 11:50:21.069 - INFO - +------ END KW: Utils.Flexible_SSH_Login (1088)
20190402 11:50:21.069 - INFO - ${master_controller_connection} = 1
20190402 11:50:21.069 - INFO - +----- END KW: Utils.Connect to Controller Node (1089)
20190402 11:50:21.069 - INFO - +----- START KW: BuiltIn.Set Suite Variable [ ${master_controller_connection} ]
20190402 11:50:21.069 - INFO - ${master_controller_connection} = 1
20190402 11:50:21.069 - INFO - +----- END KW: BuiltIn.Set Suite Variable (0)
20190402 11:50:21.069 - INFO - +----- START KW: BuiltIn.Log [ ${master_controller_connection} ]
20190402 11:50:21.070 - INFO - 1
20190402 11:50:21.070 - INFO - +----- END KW: BuiltIn.Log (1)
20190402 11:50:21.070 - INFO - +---- END KW: Utils.Open Master Controller Connection (1090)
20190402 11:50:21.070 - INFO - +---- START KW: Utils.Set Env Vars From Openrc [ ]
20190402 11:50:21.070 - INFO - +----- START KW: Utils.Run Command [ source /etc/platform/openrc | True ]
20190402 11:50:21.070 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:21.072 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (2)
20190402 11:50:21.072 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:21.072 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:21.072 - INFO - &{result_dict} = { stdout= }
20190402 11:50:21.072 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:21.073 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:21.073 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:21.073 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:21.073 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:21.074 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:21.074 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:50:21.074 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:50:21.074 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:50:21.074 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:21.079 - INFO - source /etc/platform/openrc
20190402 11:50:21.079 - INFO - +------ END KW: SSHLibrary.Write (5)
20190402 11:50:21.079 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:21.499 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:21.499 - INFO - ${output} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:21.499 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (420)
20190402 11:50:21.500 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:21.500 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:21.500 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:21.500 - INFO - +------- END KW: String.Get Line (0)
20190402 11:50:21.500 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:21.500 - INFO - ${clean_out} =
20190402 11:50:21.500 - INFO - +------- END KW: String.Remove String (0)
20190402 11:50:21.501 - INFO - ${output} =
20190402 11:50:21.501 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:50:21.501 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:50:21.501 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:21.503 - INFO - echo $?
20190402 11:50:21.503 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:50:21.503 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:21.503 - INFO - 0
20190402 11:50:21.504 - INFO - ${rc} = 0
20190402 11:50:21.504 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 11:50:21.504 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:21.504 - INFO - 0
20190402 11:50:21.504 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:50:21.504 - INFO - ${rc} = 0
20190402 11:50:21.504 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:50:21.504 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:21.505 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:21.505 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:21.505 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:21.505 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:21.505 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:50:21.505 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:21.505 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout:
20190402 11:50:21.506 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 11:50:21.506 - INFO - +----- END KW: Utils.Run Command (436)
20190402 11:50:21.506 - INFO - +---- END KW: Utils.Set Env Vars From Openrc (436)
20190402 11:50:21.506 - INFO - +--- END SETUP: Utils.Stx Suite Setup (1527)
------------------------------------------------------------------------------
20190402 11:50:21.506 - INFO - +--- START TEST: OpenStack PODs Healthy [ ]
------------------------------------------------------------------------------
20190402 11:50:21.506 - INFO - +---- START KW: Utils.Check System Application Status [ stx-openstack | applied ]
20190402 11:50:21.507 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:21.507 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:21.507 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:50:21.508 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:21.508 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:21.508 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:21.508 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:21.509 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:21.509 - INFO - &{result_dict} = { stdout= }
20190402 11:50:21.509 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:21.509 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:21.509 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:21.509 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:21.510 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:21.510 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:21.510 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:50:21.510 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:50:21.510 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:21.510 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:50:21.511 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:21.521 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:21.521 - INFO - +------ END KW: SSHLibrary.Write (10)
20190402 11:50:21.521 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:22.723 - INFO - applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:22.724 - INFO - ${output} = applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:22.724 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1203)
20190402 11:50:22.724 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:22.724 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:22.724 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:22.725 - INFO - +------- END KW: String.Get Line (1)
20190402 11:50:22.725 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:22.725 - INFO - ${clean_out} = applied
20190402 11:50:22.725 - INFO - +------- END KW: String.Remove String (0)
20190402 11:50:22.725 - INFO - ${output} = applied
20190402 11:50:22.725 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:50:22.726 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:50:22.726 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:22.728 - INFO - echo $?
20190402 11:50:22.728 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:50:22.728 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:22.728 - INFO - 0
20190402 11:50:22.728 - INFO - ${rc} = 0
20190402 11:50:22.728 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:50:22.728 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:22.728 - INFO - 0
20190402 11:50:22.728 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:50:22.729 - INFO - ${rc} = 0
20190402 11:50:22.729 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:50:22.729 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:22.729 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:22.729 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:22.730 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:22.730 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:22.730 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:50:22.730 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:22.730 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applied
20190402 11:50:22.730 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:50:22.730 - INFO - &{result} = { stdout=applied | stderr= | rc=0 }
20190402 11:50:22.731 - INFO - +----- END KW: Utils.Run Command (1224)
20190402 11:50:22.731 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:22.731 - INFO - ${value} = applied
20190402 11:50:22.731 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 11:50:22.731 - INFO - +----- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:50:22.731 - INFO - +------ START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:50:22.732 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:50:22.732 - INFO - +------ END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:50:22.732 - INFO - +----- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:22.732 - INFO - +---- END KW: Utils.Check System Application Status (1226)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:50:22.732 - INFO - +---- START KW: Utils.Check PODs Health [ ]
20190402 11:50:22.732 - INFO - +----- START KW: BuiltIn.Set Variable [ kubectl get pods --all-namespaces -o wide ]
20190402 11:50:22.732 - INFO - ${kubectl_cmd} = kubectl get pods --all-namespaces -o wide
20190402 11:50:22.733 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:50:22.733 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${kubectl_cmd} | grep -v NAMESPACE | grep -v Running | grep -v Completed ]
20190402 11:50:22.733 - INFO - ${cmd} = kubectl get pods --all-namespaces -o wide|grep -v NAMESPACE|grep -v Running|grep -v Completed
20190402 11:50:22.733 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:50:22.733 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:22.733 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:22.734 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:50:22.734 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:22.734 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:22.734 - INFO - &{result_dict} = { stdout= }
20190402 11:50:22.734 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:22.735 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:22.735 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:22.735 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:22.735 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:22.735 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:22.735 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 11:50:22.735 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:50:22.736 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:22.736 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 11:50:22.736 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:22.754 - INFO - kubectl get pods --all-namespaces -o w ide|grep -v NAMESPACE|grep -v Running|grep -v Completed
20190402 11:50:22.755 - INFO - +------ END KW: SSHLibrary.Write (19)
20190402 11:50:22.755 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:23.471 - INFO - default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:23.471 - INFO - ${output} = default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>
[wrsroot@controller-0 ~(keystone_admin)]...
20190402 11:50:23.471 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (716)
20190402 11:50:23.472 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:23.472 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:23.473 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:23.473 - INFO - +------- END KW: String.Get Line (1)
20190402 11:50:23.473 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:23.473 - INFO - ${clean_out} = default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>
20190402 11:50:23.473 - INFO - +------- END KW: String.Remove String (0)
20190402 11:50:23.473 - INFO - ${output} = default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>
20190402 11:50:23.473 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190402 11:50:23.473 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:50:23.474 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:23.476 - INFO - echo $?
20190402 11:50:23.476 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:50:23.476 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:23.476 - INFO - 0
20190402 11:50:23.476 - INFO - ${rc} = 0
20190402 11:50:23.476 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:50:23.476 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:23.476 - INFO - 0
20190402 11:50:23.476 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:50:23.477 - INFO - ${rc} = 0
20190402 11:50:23.477 - INFO - +------ END KW: Utils.Get Return Code (4)
20190402 11:50:23.477 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:23.477 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:23.477 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:23.477 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:23.478 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:23.478 - INFO - +------ END KW: Collections.Set To Dictionary (1)
20190402 11:50:23.478 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:23.478 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>
20190402 11:50:23.478 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:50:23.478 - INFO - &{result} = { stdout=default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none> | stderr= | rc=0 }
20190402 11:50:23.478 - INFO - +----- END KW: Utils.Run Command (745)
20190402 11:50:23.478 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:23.479 - INFO - ${value} = default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>
20190402 11:50:23.479 - INFO - +----- END KW: Collections.Get From Dictionary (1)
20190402 11:50:23.479 - INFO - +----- START KW: BuiltIn.Should Be Empty [ ${value} ]
20190402 11:50:23.479 - INFO - Length is 158
20190402 11:50:23.479 - FAIL - 'default       testpod                                                       0/1     ImagePullBackOff   0          5h31m   172.16.0.6     controller-0   <none>' should be empty.
20190402 11:50:23.479 - DEBUG - Traceback (most recent call last):
  None
20190402 11:50:23.479 - INFO - +----- END KW: BuiltIn.Should Be Empty (0)
20190402 11:50:23.479 - INFO - +---- END KW: Utils.Check PODs Health (747)
------------------------------------------------------------------------------
20190402 11:50:23.480 - INFO - +--- END TEST: OpenStack PODs Healthy (1974)
------------------------------------------------------------------------------
20190402 11:50:23.480 - INFO - +--- START TEST: Reapply STX OpenStack [ ]
------------------------------------------------------------------------------
20190402 11:50:23.480 - INFO - +---- START KW: Utils.System Application Apply [ stx-openstack ]
20190402 11:50:23.481 - INFO - +----- START KW: Utils.Run Command [ system application-apply ${application} | True ]
20190402 11:50:23.481 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:23.481 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:23.482 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:23.482 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:23.482 - INFO - &{result_dict} = { stdout= }
20190402 11:50:23.482 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:23.482 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:23.483 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:23.483 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:23.483 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:23.483 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:23.483 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:50:23.484 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:50:23.484 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:23.484 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:50:23.484 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:23.487 - INFO - system application-apply stx-openstack [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kk
20190402 11:50:23.487 - INFO - +------ END KW: SSHLibrary.Write (3)
20190402 11:50:23.487 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:24.548 - INFO - +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | applying                         |
| updated_at    | 2019-04-02T16:31:02.383659+00:00 |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:24.548 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 11:50:24.548 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1061)
20190402 11:50:24.548 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:24.549 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:24.549 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:24.549 - INFO - +------- END KW: String.Get Line (0)
20190402 11:50:24.549 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:24.549 - INFO - ${clean_out} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 11:50:24.549 - INFO - +------- END KW: String.Remove String (0)
20190402 11:50:24.550 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 11:50:24.550 - INFO - +------ END KW: Utils.Remove Prompt Line (2)
20190402 11:50:24.550 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:50:24.550 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:24.552 - INFO - echo $?
20190402 11:50:24.552 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:50:24.552 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:24.553 - INFO - 0
20190402 11:50:24.553 - INFO - ${rc} = 0
20190402 11:50:24.553 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 11:50:24.553 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:24.553 - INFO - 0
20190402 11:50:24.554 - INFO - +------- END KW: BuiltIn.Log (1)
20190402 11:50:24.554 - INFO - ${rc} = 0
20190402 11:50:24.554 - INFO - +------ END KW: Utils.Get Return Code (4)
20190402 11:50:24.554 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:24.554 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:24.555 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:24.555 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:24.555 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:24.555 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:50:24.555 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:24.555 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | applying                         |
| updated_at    | 2019-04-02T16:31:02.383659+00:00 |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
20190402 11:50:24.555 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:50:24.555 - INFO - +----- END KW: Utils.Run Command (1074)
20190402 11:50:24.556 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 90 min | 5 sec | Check System Application Status | ${application} | applied ]
20190402 11:50:24.556 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:50:24.556 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:24.557 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:24.557 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:50:24.557 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:24.557 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:24.557 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:24.557 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:24.558 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:24.558 - INFO - &{result_dict} = { stdout= }
20190402 11:50:24.558 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:24.558 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:24.558 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:24.559 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:24.559 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:24.559 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:24.559 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:50:24.559 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:50:24.559 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:24.559 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 11:50:24.559 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:24.571 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:24.571 - INFO - +-------- END KW: SSHLibrary.Write (12)
20190402 11:50:24.571 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:25.769 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:25.769 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:25.770 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1199)
20190402 11:50:25.770 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:25.770 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:25.770 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:25.770 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:50:25.770 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:25.771 - INFO - ${clean_out} = applying
20190402 11:50:25.771 - INFO - +--------- END KW: String.Remove String (1)
20190402 11:50:25.771 - INFO - ${output} = applying
20190402 11:50:25.771 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:50:25.771 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:50:25.771 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:25.774 - INFO - echo $?
20190402 11:50:25.774 - INFO - +--------- END KW: SSHLibrary.Write (3)
20190402 11:50:25.774 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:25.774 - INFO - 0
20190402 11:50:25.774 - INFO - ${rc} = 0
20190402 11:50:25.775 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:50:25.775 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:25.775 - INFO - 0
20190402 11:50:25.775 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:50:25.775 - INFO - ${rc} = 0
20190402 11:50:25.775 - INFO - +-------- END KW: Utils.Get Return Code (4)
20190402 11:50:25.775 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:25.776 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:25.776 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:25.776 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:25.776 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:25.776 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:25.777 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:25.777 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:50:25.777 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:50:25.777 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:50:25.777 - INFO - +------- END KW: Utils.Run Command (1220)
20190402 11:50:25.777 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:25.777 - INFO - ${value} = applying
20190402 11:50:25.777 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:50:25.778 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:50:25.778 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:50:25.778 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:50:25.778 - FAIL - applying != applied
20190402 11:50:25.778 - DEBUG - Traceback (most recent call last):
  None
20190402 11:50:25.778 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:50:25.778 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:25.778 - INFO - +------ END KW: Utils.Check System Application Status (1222)
20190402 11:50:30.779 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:50:30.780 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:30.780 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:30.781 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:50:30.781 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:30.782 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:30.783 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:30.783 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:30.783 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:30.784 - INFO - &{result_dict} = { stdout= }
20190402 11:50:30.785 - INFO - +--------- END KW: BuiltIn.Create Dictionary (2)
20190402 11:50:30.785 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:30.785 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:30.786 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:30.786 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:30.787 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:30.787 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 11:50:30.787 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:50:30.788 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:30.788 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 11:50:30.788 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:30.817 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:30.817 - INFO - +-------- END KW: SSHLibrary.Write (29)
20190402 11:50:30.817 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:36.315 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:36.315 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:36.315 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (5498)
20190402 11:50:36.315 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:36.315 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:36.316 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:36.316 - INFO - +--------- END KW: String.Get Line (1)
20190402 11:50:36.316 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:36.316 - INFO - ${clean_out} = applying
20190402 11:50:36.316 - INFO - +--------- END KW: String.Remove String (0)
20190402 11:50:36.316 - INFO - ${output} = applying
20190402 11:50:36.316 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:50:36.316 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:50:36.316 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:36.318 - INFO - echo $?
20190402 11:50:36.318 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:50:36.318 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:36.326 - INFO - 0
20190402 11:50:36.326 - INFO - ${rc} = 0
20190402 11:50:36.326 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (8)
20190402 11:50:36.326 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:36.326 - INFO - 0
20190402 11:50:36.326 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:50:36.326 - INFO - ${rc} = 0
20190402 11:50:36.326 - INFO - +-------- END KW: Utils.Get Return Code (10)
20190402 11:50:36.327 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:36.327 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:36.327 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:36.327 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:36.327 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:36.328 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:36.328 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:36.328 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:50:36.328 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:50:36.328 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:50:36.328 - INFO - +------- END KW: Utils.Run Command (5547)
20190402 11:50:36.328 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:36.329 - INFO - ${value} = applying
20190402 11:50:36.329 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:50:36.329 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:50:36.329 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:50:36.329 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:50:36.330 - FAIL - applying != applied
20190402 11:50:36.330 - DEBUG - Traceback (most recent call last):
  None
20190402 11:50:36.330 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:50:36.330 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:36.330 - INFO - +------ END KW: Utils.Check System Application Status (5551)
20190402 11:50:41.331 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:50:41.331 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:41.332 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:41.332 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:50:41.333 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:41.333 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:41.334 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:50:41.334 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:41.335 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:41.336 - INFO - &{result_dict} = { stdout= }
20190402 11:50:41.336 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:50:41.337 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:41.337 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:41.337 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:41.338 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:41.339 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:41.339 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 11:50:41.339 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:50:41.339 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:41.340 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 11:50:41.340 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:41.367 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:41.367 - INFO - +-------- END KW: SSHLibrary.Write (27)
20190402 11:50:41.367 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:43.192 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:43.192 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:43.192 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1825)
20190402 11:50:43.192 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:43.193 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:43.193 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:43.193 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:50:43.193 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:43.193 - INFO - ${clean_out} = applying
20190402 11:50:43.193 - INFO - +--------- END KW: String.Remove String (0)
20190402 11:50:43.193 - INFO - ${output} = applying
20190402 11:50:43.193 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:50:43.194 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:50:43.194 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:43.196 - INFO - echo $?
20190402 11:50:43.196 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:50:43.196 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:43.200 - INFO - 0
20190402 11:50:43.200 - INFO - ${rc} = 0
20190402 11:50:43.200 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 11:50:43.200 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:43.200 - INFO - 0
20190402 11:50:43.200 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:50:43.200 - INFO - ${rc} = 0
20190402 11:50:43.200 - INFO - +-------- END KW: Utils.Get Return Code (6)
20190402 11:50:43.200 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:43.201 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:43.201 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:43.201 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:43.201 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:43.201 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:43.201 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:43.202 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:50:43.202 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 11:50:43.202 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:50:43.202 - INFO - +------- END KW: Utils.Run Command (1870)
20190402 11:50:43.202 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:43.202 - INFO - ${value} = applying
20190402 11:50:43.202 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:50:43.202 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:50:43.203 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:50:43.203 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:50:43.203 - FAIL - applying != applied
20190402 11:50:43.203 - DEBUG - Traceback (most recent call last):
  None
20190402 11:50:43.203 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:50:43.203 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:43.204 - INFO - +------ END KW: Utils.Check System Application Status (1873)
20190402 11:50:48.204 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:50:48.205 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:48.206 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:48.206 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:50:48.206 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:48.207 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:48.208 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:50:48.208 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:48.209 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:48.210 - INFO - &{result_dict} = { stdout= }
20190402 11:50:48.210 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:50:48.210 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:48.211 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:48.211 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:48.212 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:48.212 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:48.212 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (4)
20190402 11:50:48.212 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:50:48.213 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:48.213 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 11:50:48.213 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:48.230 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:48.230 - INFO - +-------- END KW: SSHLibrary.Write (17)
20190402 11:50:48.230 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:49.855 - INFO - applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:49.855 - INFO - ${output} = applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:49.855 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1625)
20190402 11:50:49.855 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:49.856 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:49.856 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:49.856 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:50:49.856 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:49.856 - INFO - ${clean_out} = applied
20190402 11:50:49.856 - INFO - +--------- END KW: String.Remove String (0)
20190402 11:50:49.857 - INFO - ${output} = applied
20190402 11:50:49.857 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 11:50:49.857 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:50:49.857 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:49.859 - INFO - echo $?
20190402 11:50:49.859 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:50:49.859 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:49.866 - INFO - 0
20190402 11:50:49.866 - INFO - ${rc} = 0
20190402 11:50:49.866 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (7)
20190402 11:50:49.866 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:49.866 - INFO - 0
20190402 11:50:49.866 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:50:49.866 - INFO - ${rc} = 0
20190402 11:50:49.866 - INFO - +-------- END KW: Utils.Get Return Code (9)
20190402 11:50:49.867 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:49.867 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:49.867 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:49.867 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:49.867 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:49.867 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:49.868 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:49.868 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applied
20190402 11:50:49.868 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:50:49.868 - INFO - &{result} = { stdout=applied | stderr= | rc=0 }
20190402 11:50:49.868 - INFO - +------- END KW: Utils.Run Command (1662)
20190402 11:50:49.868 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:49.868 - INFO - ${value} = applied
20190402 11:50:49.868 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:50:49.869 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:50:49.869 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:50:49.869 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:50:49.869 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:50:49.869 - INFO - +------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:49.869 - INFO - +------ END KW: Utils.Check System Application Status (1665)
20190402 11:50:49.869 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (25313)
20190402 11:50:49.869 - INFO - +---- END KW: Utils.System Application Apply (26389)
------------------------------------------------------------------------------
20190402 11:50:49.870 - INFO - +--- END TEST: Reapply STX OpenStack (26390)
------------------------------------------------------------------------------
20190402 11:50:49.870 - INFO - +--- START TEST: STX OpenStack Override Update Reset [ ]
------------------------------------------------------------------------------
20190402 11:50:49.870 - INFO - +---- START KW: Utils.Helm Override OpenStack [ nova | openstack ]
20190402 11:50:49.871 - INFO - +----- START KW: BuiltIn.Set Variable [ system helm-override-update ]
20190402 11:50:49.871 - INFO - ${kubectl_cmd} = system helm-override-update
20190402 11:50:49.871 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:50:49.871 - INFO - +----- START KW: BuiltIn.Catenate [ ${kubectl_cmd} | --set conf.nova.DEFAULT.foo=bar | ${char_name} | ${namespace} ]
20190402 11:50:49.872 - INFO - ${cmd} = system helm-override-update --set conf.nova.DEFAULT.foo=bar nova openstack
20190402 11:50:49.872 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:50:49.872 - INFO - +----- START KW: Utils.Run Command [ ${cmd} | True ]
20190402 11:50:49.872 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:49.872 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:49.873 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:49.873 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:49.873 - INFO - &{result_dict} = { stdout= }
20190402 11:50:49.873 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:49.873 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:49.874 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:49.874 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:49.874 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:49.874 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:49.874 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 11:50:49.874 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:50:49.875 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:49.875 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 11:50:49.875 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:49.882 - INFO - system helm-override-update --set conf .nova.DEFAULT.foo=bar nova openstack
20190402 11:50:49.882 - INFO - +------ END KW: SSHLibrary.Write (7)
20190402 11:50:49.882 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:51.781 - INFO - +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_overrides | conf:          |
|                |   nova:        |
|                |     DEFAULT:   |
|                |       foo: bar |
|                |                |
+----------------+----------------+
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:51.782 - INFO - ${output} = +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_override...
20190402 11:50:51.782 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1900)
20190402 11:50:51.782 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:51.782 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:51.783 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:51.783 - INFO - +------- END KW: String.Get Line (1)
20190402 11:50:51.783 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:51.783 - INFO - ${clean_out} = +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_override...
20190402 11:50:51.783 - INFO - +------- END KW: String.Remove String (0)
20190402 11:50:51.783 - INFO - ${output} = +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_override...
20190402 11:50:51.783 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:50:51.783 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:50:51.783 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:51.785 - INFO - echo $?
20190402 11:50:51.785 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:50:51.785 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:51.786 - INFO - 0
20190402 11:50:51.786 - INFO - ${rc} = 0
20190402 11:50:51.786 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 11:50:51.786 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:51.786 - INFO - 0
20190402 11:50:51.786 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:50:51.786 - INFO - ${rc} = 0
20190402 11:50:51.786 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:50:51.786 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:51.787 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:51.787 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:51.787 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:51.787 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:51.787 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:50:51.787 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:51.788 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +----------------+----------------+
| Property       | Value          |
+----------------+----------------+
| name           | nova           |
| namespace      | openstack      |
| user_overrides | conf:          |
|                |   nova:        |
|                |     DEFAULT:   |
|                |       foo: bar |
|                |                |
+----------------+----------------+
20190402 11:50:51.788 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 11:50:51.788 - INFO - +----- END KW: Utils.Run Command (1916)
20190402 11:50:51.788 - INFO - +---- END KW: Utils.Helm Override OpenStack (1918)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:50:51.788 - INFO - +---- START KW: Utils.System Application Apply [ stx-openstack ]
20190402 11:50:51.789 - INFO - +----- START KW: Utils.Run Command [ system application-apply ${application} | True ]
20190402 11:50:51.789 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:51.789 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:51.790 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:51.790 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:51.790 - INFO - &{result_dict} = { stdout= }
20190402 11:50:51.790 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:51.790 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:51.791 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:51.791 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:51.791 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:51.791 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:51.791 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 11:50:51.791 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:50:51.792 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:51.792 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 11:50:51.792 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:51.794 - INFO - system application-apply stx-openstack [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Kk
20190402 11:50:51.794 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 11:50:51.795 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:52.993 - INFO - +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | applying                         |
| updated_at    | 2019-04-02T17:39:32.121145+00:00 |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:52.993 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 11:50:52.993 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1198)
20190402 11:50:52.994 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:52.994 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:52.994 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:52.994 - INFO - +------- END KW: String.Get Line (0)
20190402 11:50:52.994 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:52.995 - INFO - ${clean_out} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 11:50:52.995 - INFO - +------- END KW: String.Remove String (1)
20190402 11:50:52.995 - INFO - ${output} = +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00....
20190402 11:50:52.995 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:50:52.995 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:50:52.995 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:52.997 - INFO - echo $?
20190402 11:50:52.997 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:50:52.997 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:52.997 - INFO - 0
20190402 11:50:52.998 - INFO - ${rc} = 0
20190402 11:50:52.998 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 11:50:52.998 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:52.998 - INFO - 0
20190402 11:50:52.998 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:50:52.998 - INFO - ${rc} = 0
20190402 11:50:52.998 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:50:52.998 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:52.999 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:52.999 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:52.999 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:52.999 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:52.999 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:50:52.999 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:52.999 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: +---------------+----------------------------------+
| Property      | Value                            |
+---------------+----------------------------------+
| created_at    | 2019-04-02T12:47:00.451151+00:00 |
| manifest_file | manifest.yaml                    |
| manifest_name | armada-manifest                  |
| name          | stx-openstack                    |
| progress      | None                             |
| status        | applying                         |
| updated_at    | 2019-04-02T17:39:32.121145+00:00 |
+---------------+----------------------------------+
Please use 'system application-list' or 'system application-show stx-openstack' to view the current progress.
20190402 11:50:53.000 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:50:53.000 - INFO - +----- END KW: Utils.Run Command (1211)
20190402 11:50:53.000 - INFO - +----- START KW: BuiltIn.Wait Until Keyword Succeeds [ 90 min | 5 sec | Check System Application Status | ${application} | applied ]
20190402 11:50:53.000 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:50:53.000 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:53.001 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:53.001 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:50:53.001 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:53.001 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:53.001 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:53.001 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:53.002 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:53.002 - INFO - &{result_dict} = { stdout= }
20190402 11:50:53.002 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:53.002 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:53.002 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:53.002 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:53.003 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:53.003 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:53.003 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:50:53.003 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:50:53.003 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:53.003 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 11:50:53.003 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:53.005 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:53.005 - INFO - +-------- END KW: SSHLibrary.Write (2)
20190402 11:50:53.006 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:50:54.203 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:54.203 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:54.203 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1197)
20190402 11:50:54.203 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:50:54.204 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:50:54.204 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:54.204 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:50:54.204 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:50:54.205 - INFO - ${clean_out} = applying
20190402 11:50:54.205 - INFO - +--------- END KW: String.Remove String (1)
20190402 11:50:54.205 - INFO - ${output} = applying
20190402 11:50:54.205 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 11:50:54.205 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:50:54.205 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:50:54.207 - INFO - echo $?
20190402 11:50:54.207 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:50:54.207 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:50:54.211 - INFO - 0
20190402 11:50:54.211 - INFO - ${rc} = 0
20190402 11:50:54.211 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 11:50:54.211 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:50:54.211 - INFO - 0
20190402 11:50:54.211 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:50:54.212 - INFO - ${rc} = 0
20190402 11:50:54.212 - INFO - +-------- END KW: Utils.Get Return Code (7)
20190402 11:50:54.212 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:50:54.212 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:50:54.212 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:54.212 - INFO - +-------- END KW: BuiltIn.Run Keyword If (0)
20190402 11:50:54.213 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:50:54.213 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:54.213 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:50:54.213 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:50:54.213 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:50:54.214 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:50:54.214 - INFO - +------- END KW: Utils.Run Command (1213)
20190402 11:50:54.214 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:50:54.214 - INFO - ${value} = applying
20190402 11:50:54.214 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:50:54.214 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:50:54.214 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:50:54.215 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:50:54.215 - FAIL - applying != applied
20190402 11:50:54.215 - DEBUG - Traceback (most recent call last):
  None
20190402 11:50:54.215 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:50:54.215 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:50:54.215 - INFO - +------ END KW: Utils.Check System Application Status (1215)
20190402 11:50:59.215 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:50:59.216 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:50:59.216 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:50:59.216 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 11:50:59.217 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:50:59.217 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:50:59.217 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:50:59.217 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:50:59.218 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:50:59.218 - INFO - &{result_dict} = { stdout= }
20190402 11:50:59.218 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:50:59.218 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:50:59.218 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:50:59.218 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:50:59.219 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:50:59.219 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:50:59.219 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:50:59.219 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:50:59.219 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:50:59.219 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 11:50:59.219 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:50:59.231 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:50:59.232 - INFO - +-------- END KW: SSHLibrary.Write (12)
20190402 11:50:59.232 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:01.161 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:01.161 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:01.161 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1929)
20190402 11:51:01.162 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:01.162 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:01.162 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:01.162 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:51:01.162 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:01.163 - INFO - ${clean_out} = applying
20190402 11:51:01.163 - INFO - +--------- END KW: String.Remove String (1)
20190402 11:51:01.163 - INFO - ${output} = applying
20190402 11:51:01.163 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:51:01.163 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:51:01.163 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:01.165 - INFO - echo $?
20190402 11:51:01.165 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:51:01.165 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:01.165 - INFO - 0
20190402 11:51:01.165 - INFO - ${rc} = 0
20190402 11:51:01.165 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:51:01.165 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:01.166 - INFO - 0
20190402 11:51:01.166 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 11:51:01.166 - INFO - ${rc} = 0
20190402 11:51:01.166 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 11:51:01.166 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:01.166 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:01.167 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:01.167 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:01.167 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:01.167 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:01.167 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:01.167 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:51:01.167 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:51:01.167 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:51:01.168 - INFO - +------- END KW: Utils.Run Command (1951)
20190402 11:51:01.168 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:01.168 - INFO - ${value} = applying
20190402 11:51:01.168 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:51:01.168 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:51:01.168 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:51:01.168 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:51:01.169 - FAIL - applying != applied
20190402 11:51:01.169 - DEBUG - Traceback (most recent call last):
  None
20190402 11:51:01.169 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:51:01.169 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:01.169 - INFO - +------ END KW: Utils.Check System Application Status (1954)
20190402 11:51:06.169 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:51:06.171 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:51:06.172 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:51:06.172 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:51:06.172 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:06.173 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:06.174 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:51:06.174 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:06.175 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:06.176 - INFO - &{result_dict} = { stdout= }
20190402 11:51:06.177 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:51:06.177 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:06.177 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:06.178 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:06.178 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:06.179 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:06.179 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 11:51:06.179 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:51:06.179 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:06.180 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 11:51:06.180 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:06.209 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:51:06.210 - INFO - +-------- END KW: SSHLibrary.Write (30)
20190402 11:51:06.210 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:09.089 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:09.089 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:09.089 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (2879)
20190402 11:51:09.089 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:09.089 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:09.090 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:09.090 - INFO - +--------- END KW: String.Get Line (1)
20190402 11:51:09.090 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:09.090 - INFO - ${clean_out} = applying
20190402 11:51:09.090 - INFO - +--------- END KW: String.Remove String (0)
20190402 11:51:09.090 - INFO - ${output} = applying
20190402 11:51:09.090 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:51:09.090 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:51:09.090 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:09.093 - INFO - echo $?
20190402 11:51:09.093 - INFO - +--------- END KW: SSHLibrary.Write (3)
20190402 11:51:09.093 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:09.096 - INFO - 0
20190402 11:51:09.096 - INFO - ${rc} = 0
20190402 11:51:09.096 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (3)
20190402 11:51:09.097 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:09.097 - INFO - 0
20190402 11:51:09.097 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 11:51:09.097 - INFO - ${rc} = 0
20190402 11:51:09.097 - INFO - +-------- END KW: Utils.Get Return Code (7)
20190402 11:51:09.097 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:09.097 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:09.098 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:09.098 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:09.098 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:09.098 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:09.098 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:09.098 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:51:09.098 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:51:09.099 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:51:09.099 - INFO - +------- END KW: Utils.Run Command (2927)
20190402 11:51:09.099 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:09.099 - INFO - ${value} = applying
20190402 11:51:09.099 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:51:09.099 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:51:09.099 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:51:09.100 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:51:09.100 - FAIL - applying != applied
20190402 11:51:09.100 - DEBUG - Traceback (most recent call last):
  None
20190402 11:51:09.100 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:51:09.100 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:09.100 - INFO - +------ END KW: Utils.Check System Application Status (2931)
20190402 11:51:14.101 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:51:14.102 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:51:14.103 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:51:14.103 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:51:14.103 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:14.104 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:14.105 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:51:14.106 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:14.107 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:14.108 - INFO - &{result_dict} = { stdout= }
20190402 11:51:14.108 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:51:14.108 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:14.109 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:14.109 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:14.110 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:14.111 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:14.111 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 11:51:14.111 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:51:14.112 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:14.112 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 11:51:14.112 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:14.140 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:51:14.140 - INFO - +-------- END KW: SSHLibrary.Write (28)
20190402 11:51:14.141 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:15.535 - INFO - applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:15.535 - INFO - ${output} = applying
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:15.535 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1394)
20190402 11:51:15.536 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:15.536 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:15.536 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:15.536 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:51:15.536 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:15.537 - INFO - ${clean_out} = applying
20190402 11:51:15.537 - INFO - +--------- END KW: String.Remove String (1)
20190402 11:51:15.537 - INFO - ${output} = applying
20190402 11:51:15.537 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:51:15.537 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:51:15.537 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:15.539 - INFO - echo $?
20190402 11:51:15.540 - INFO - +--------- END KW: SSHLibrary.Write (3)
20190402 11:51:15.540 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:15.540 - INFO - 0
20190402 11:51:15.540 - INFO - ${rc} = 0
20190402 11:51:15.540 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:51:15.540 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:15.540 - INFO - 0
20190402 11:51:15.540 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:51:15.540 - INFO - ${rc} = 0
20190402 11:51:15.541 - INFO - +-------- END KW: Utils.Get Return Code (4)
20190402 11:51:15.541 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:15.542 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:15.542 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:15.542 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:15.542 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:15.542 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:15.542 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:15.542 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applying
20190402 11:51:15.543 - INFO - +-------- END KW: Collections.Log Dictionary (1)
20190402 11:51:15.543 - INFO - &{result} = { stdout=applying | stderr= | rc=0 }
20190402 11:51:15.543 - INFO - +------- END KW: Utils.Run Command (1440)
20190402 11:51:15.543 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:15.543 - INFO - ${value} = applying
20190402 11:51:15.543 - INFO - +------- END KW: Collections.Get From Dictionary (0)
20190402 11:51:15.543 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:51:15.544 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:51:15.544 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:51:15.544 - FAIL - applying != applied
20190402 11:51:15.544 - DEBUG - Traceback (most recent call last):
  None
20190402 11:51:15.544 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:51:15.544 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:15.544 - INFO - +------ END KW: Utils.Check System Application Status (1444)
20190402 11:51:20.545 - INFO - +------ START KW: Utils.Check System Application Status [ ${application} | applied ]
20190402 11:51:20.546 - INFO - +------- START KW: BuiltIn.Catenate [ SEPARATOR=| | system application-list | grep ${application} | awk '{print $8}' ]
20190402 11:51:20.546 - INFO - ${cmd} = system application-list|grep stx-openstack|awk '{print $8}'
20190402 11:51:20.547 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:51:20.547 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:20.548 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:20.549 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:51:20.549 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:20.550 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:20.551 - INFO - &{result_dict} = { stdout= }
20190402 11:51:20.551 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:51:20.552 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:20.552 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:20.553 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:20.553 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:20.554 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:20.554 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (5)
20190402 11:51:20.555 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:51:20.555 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:20.556 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 11:51:20.556 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:20.576 - INFO - system application-list|grep stx-opens tack|awk '{print $8}'
20190402 11:51:20.576 - INFO - +-------- END KW: SSHLibrary.Write (20)
20190402 11:51:20.576 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:22.394 - INFO - applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:22.395 - INFO - ${output} = applied
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:22.395 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (1819)
20190402 11:51:22.395 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:22.396 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:22.396 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:22.396 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:51:22.396 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:22.396 - INFO - ${clean_out} = applied
20190402 11:51:22.396 - INFO - +--------- END KW: String.Remove String (0)
20190402 11:51:22.397 - INFO - ${output} = applied
20190402 11:51:22.397 - INFO - +-------- END KW: Utils.Remove Prompt Line (2)
20190402 11:51:22.397 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:51:22.397 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:22.399 - INFO - echo $?
20190402 11:51:22.399 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:51:22.399 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:22.408 - INFO - 0
20190402 11:51:22.408 - INFO - ${rc} = 0
20190402 11:51:22.408 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (9)
20190402 11:51:22.408 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:22.409 - INFO - 0
20190402 11:51:22.409 - INFO - +--------- END KW: BuiltIn.Log (1)
20190402 11:51:22.409 - INFO - ${rc} = 0
20190402 11:51:22.409 - INFO - +-------- END KW: Utils.Get Return Code (12)
20190402 11:51:22.409 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:22.410 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:22.410 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:22.410 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:22.410 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:22.410 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:22.411 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:22.411 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: applied
20190402 11:51:22.411 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:51:22.411 - INFO - &{result} = { stdout=applied | stderr= | rc=0 }
20190402 11:51:22.411 - INFO - +------- END KW: Utils.Run Command (1864)
20190402 11:51:22.411 - INFO - +------- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:22.412 - INFO - ${value} = applied
20190402 11:51:22.412 - INFO - +------- END KW: Collections.Get From Dictionary (1)
20190402 11:51:22.412 - INFO - +------- START KW: BuiltIn.Run Keyword If [ '${value}' == 'apply-failed' | System Application Apply | ${application} | ELSE | Should Be Equal As Strings | ${value} | ${status} ]
20190402 11:51:22.413 - INFO - +-------- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | ${status} ]
20190402 11:51:22.413 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:51:22.413 - INFO - +-------- END KW: BuiltIn.Should Be Equal As Strings (0)
20190402 11:51:22.413 - INFO - +------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:22.413 - INFO - +------ END KW: Utils.Check System Application Status (1868)
20190402 11:51:22.413 - INFO - +----- END KW: BuiltIn.Wait Until Keyword Succeeds (29413)
20190402 11:51:22.413 - INFO - +---- END KW: Utils.System Application Apply (30625)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:51:22.414 - INFO - +---- START KW: Utils.Check Helm Override OpenStack [ ]
20190402 11:51:22.414 - INFO - +----- START KW: BuiltIn.Set Variable [ kubectl get pods --all-namespaces -o wide ]
20190402 11:51:22.414 - INFO - ${kubectl_cmd} = kubectl get pods --all-namespaces -o wide
20190402 11:51:22.414 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:51:22.414 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${kubectl_cmd} | grep nova-compute | awk '{print $2}' ]
20190402 11:51:22.415 - INFO - ${cmd} = kubectl get pods --all-namespaces -o wide|grep nova-compute|awk '{print $2}'
20190402 11:51:22.415 - INFO - +----- END KW: BuiltIn.Catenate (1)
20190402 11:51:22.415 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:22.415 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:22.416 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:51:22.416 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:22.416 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:22.416 - INFO - &{result_dict} = { stdout= }
20190402 11:51:22.417 - INFO - +------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:51:22.417 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:22.417 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:22.417 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:22.417 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:22.418 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:22.418 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:51:22.418 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:51:22.418 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:22.418 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:51:22.418 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:22.426 - INFO - kubectl get pods --all-namespaces -o w ide|grep nova-compute|awk '{print $2}'
20190402 11:51:22.426 - INFO - +------ END KW: SSHLibrary.Write (8)
20190402 11:51:22.426 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:23.523 - INFO - nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.524 - INFO - ${output} = nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.524 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (1098)
20190402 11:51:23.524 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:23.524 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:23.525 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.525 - INFO - +------- END KW: String.Get Line (1)
20190402 11:51:23.525 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:23.525 - INFO - ${clean_out} = nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz
20190402 11:51:23.525 - INFO - +------- END KW: String.Remove String (0)
20190402 11:51:23.525 - INFO - ${output} = nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz
20190402 11:51:23.525 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:51:23.525 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:51:23.525 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:23.526 - INFO - echo $?
20190402 11:51:23.527 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:51:23.527 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:23.528 - INFO - 0
20190402 11:51:23.528 - INFO - ${rc} = 0
20190402 11:51:23.528 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 11:51:23.528 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:23.528 - INFO - 0
20190402 11:51:23.528 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:51:23.528 - INFO - ${rc} = 0
20190402 11:51:23.528 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:51:23.528 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:23.529 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:23.529 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:23.529 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:23.529 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:23.529 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:51:23.529 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:23.530 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz
20190402 11:51:23.530 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 11:51:23.530 - INFO - &{result} = { stdout=nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz | stderr= | rc=0 }
20190402 11:51:23.530 - INFO - +----- END KW: Utils.Run Command (1115)
20190402 11:51:23.530 - INFO - +----- START KW: Utils.Convert Response To List [ ${result} ]
20190402 11:51:23.530 - INFO - +------ START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:23.531 - INFO - ${response} = nova-compute-controller-0-a762cb46-526sh
nova-compute-controller-1-347ae4cb-m4lxz
20190402 11:51:23.531 - INFO - +------ END KW: Collections.Get From Dictionary (1)
20190402 11:51:23.531 - INFO - +------ START KW: String.Split String [ ${response} ]
20190402 11:51:23.531 - INFO - @{res_in_list} = [ nova-compute-controller-0-a762cb46-526sh | nova-compute-controller-1-347ae4cb-m4lxz ]
20190402 11:51:23.531 - INFO - +------ END KW: String.Split String (0)
20190402 11:51:23.531 - INFO - @{nova_pod_list} = [ nova-compute-controller-0-a762cb46-526sh | nova-compute-controller-1-347ae4cb-m4lxz ]
20190402 11:51:23.531 - INFO - +----- END KW: Utils.Convert Response To List (1)
20190402 11:51:23.531 - INFO - +----- START KW: BuiltIn.Set Variable [ kubectl exec -n openstack -it ]
20190402 11:51:23.531 - INFO - ${kubectl_cmd} = kubectl exec -n openstack -it
20190402 11:51:23.532 - INFO - +----- END KW: BuiltIn.Set Variable (0)
20190402 11:51:23.532 - INFO - +----- START KW: ${nova_pod} IN [ @{nova_pod_list} ] [ ]
20190402 11:51:23.532 - INFO - +------ START KW: ${nova_pod} = nova-compute-controller-0-a762cb46-526sh [ ]
20190402 11:51:23.532 - INFO - +------- START KW: BuiltIn.Catenate [ ${kubectl_cmd} | ${nova_pod} | -- grep foo /etc/nova/nova.conf ]
20190402 11:51:23.532 - INFO - ${cmd} = kubectl exec -n openstack -it nova-compute-controller-0-a762cb46-526sh -- grep foo /etc/nova/nova.conf
20190402 11:51:23.532 - INFO - +------- END KW: BuiltIn.Catenate (0)
20190402 11:51:23.532 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:23.533 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:23.533 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:51:23.533 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:23.533 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:23.534 - INFO - &{result_dict} = { stdout= }
20190402 11:51:23.534 - INFO - +--------- END KW: BuiltIn.Create Dictionary (1)
20190402 11:51:23.534 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:23.534 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:23.534 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:23.534 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:23.535 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:23.535 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:51:23.535 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:51:23.535 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.535 - INFO - +-------- END KW: SSHLibrary.Read (0)
20190402 11:51:23.535 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:23.537 - INFO - kubectl exec -n openstack -it nova-com pute-controller-0-a762cb46-526sh -- grep foo /etc/nova/nova.conf
20190402 11:51:23.538 - INFO - +-------- END KW: SSHLibrary.Write (3)
20190402 11:51:23.538 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:23.853 - INFO - Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-0-a762cb46-526sh -n openstack' to see all of the containers in this pod.
foo = bar
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.853 - INFO - ${output} = Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-0-a762cb46-526sh -n openstack' to see all of the containers in this pod.
foo = bar
[wrsroot@controller-0...
20190402 11:51:23.854 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (316)
20190402 11:51:23.854 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:23.854 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:23.854 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.854 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:51:23.855 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:23.855 - INFO - ${clean_out} = Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-0-a762cb46-526sh -n openstack' to see all of the containers in this pod.
foo = bar
20190402 11:51:23.855 - INFO - +--------- END KW: String.Remove String (1)
20190402 11:51:23.855 - INFO - ${output} = Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-0-a762cb46-526sh -n openstack' to see all of the containers in this pod.
foo = bar
20190402 11:51:23.855 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:51:23.855 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:51:23.855 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:23.857 - INFO - echo $?
20190402 11:51:23.857 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:51:23.857 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:23.861 - INFO - 0
20190402 11:51:23.861 - INFO - ${rc} = 0
20190402 11:51:23.862 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (4)
20190402 11:51:23.862 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:23.862 - INFO - 0
20190402 11:51:23.862 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:51:23.862 - INFO - ${rc} = 0
20190402 11:51:23.862 - INFO - +-------- END KW: Utils.Get Return Code (7)
20190402 11:51:23.862 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:23.863 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:23.863 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:23.863 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:23.863 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:23.863 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:23.863 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:23.863 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-0-a762cb46-526sh -n openstack' to see all of the containers in this pod.
foo = bar
20190402 11:51:23.863 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:51:23.864 - INFO - &{result} = { stdout=Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-0-a762cb46-526sh -n openstack' to see all of the containers in this pod.
foo = bar | stderr= | r...
20190402 11:51:23.864 - INFO - +------- END KW: Utils.Run Command (332)
20190402 11:51:23.864 - INFO - +------- START KW: BuiltIn.Should Contain [ ${result.stdout} | foo = bar ]
20190402 11:51:23.864 - INFO - +------- END KW: BuiltIn.Should Contain (0)
20190402 11:51:23.864 - INFO - +------ END KW: ${nova_pod} = nova-compute-controller-0-a762cb46-526sh (332)
20190402 11:51:23.864 - INFO - +------ START KW: ${nova_pod} = nova-compute-controller-1-347ae4cb-m4lxz [ ]
20190402 11:51:23.864 - INFO - +------- START KW: BuiltIn.Catenate [ ${kubectl_cmd} | ${nova_pod} | -- grep foo /etc/nova/nova.conf ]
20190402 11:51:23.865 - INFO - ${cmd} = kubectl exec -n openstack -it nova-compute-controller-1-347ae4cb-m4lxz -- grep foo /etc/nova/nova.conf
20190402 11:51:23.865 - INFO - +------- END KW: BuiltIn.Catenate (1)
20190402 11:51:23.865 - INFO - +------- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:23.865 - INFO - +-------- START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:23.865 - INFO - +-------- END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:51:23.866 - INFO - +-------- START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:23.866 - INFO - +--------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:23.866 - INFO - &{result_dict} = { stdout= }
20190402 11:51:23.866 - INFO - +--------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:51:23.866 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:23.867 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:23.867 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:23.867 - INFO - +--------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:23.867 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:23.867 - INFO - +-------- END KW: Utils.Create Empy Result Dictionary (1)
20190402 11:51:23.867 - INFO - +-------- START KW: SSHLibrary.Read [ ]
20190402 11:51:23.867 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:23.868 - INFO - +-------- END KW: SSHLibrary.Read (1)
20190402 11:51:23.868 - INFO - +-------- START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:23.886 - INFO - kubectl exec -n openstack -it nova-com pute-controller-1-347ae4cb-m4lxz -- grep foo /etc/nova/nova.conf
20190402 11:51:23.887 - INFO - +-------- END KW: SSHLibrary.Write (18)
20190402 11:51:23.887 - INFO - +-------- START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:24.136 - INFO - Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-1-347ae4cb-m4lxz -n openstack' to see all of the containers in this pod.
foo = bar
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.136 - INFO - ${output} = Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-1-347ae4cb-m4lxz -n openstack' to see all of the containers in this pod.
foo = bar
[wrsroot@controller-0...
20190402 11:51:24.136 - INFO - +-------- END KW: SSHLibrary.Read Until Prompt (249)
20190402 11:51:24.137 - INFO - +-------- START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:24.137 - INFO - +--------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:24.137 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.137 - INFO - +--------- END KW: String.Get Line (0)
20190402 11:51:24.137 - INFO - +--------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:24.138 - INFO - ${clean_out} = Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-1-347ae4cb-m4lxz -n openstack' to see all of the containers in this pod.
foo = bar
20190402 11:51:24.138 - INFO - +--------- END KW: String.Remove String (1)
20190402 11:51:24.138 - INFO - ${output} = Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-1-347ae4cb-m4lxz -n openstack' to see all of the containers in this pod.
foo = bar
20190402 11:51:24.138 - INFO - +-------- END KW: Utils.Remove Prompt Line (1)
20190402 11:51:24.138 - INFO - +-------- START KW: Utils.Get Return Code [ ]
20190402 11:51:24.138 - INFO - +--------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:24.140 - INFO - echo $?
20190402 11:51:24.140 - INFO - +--------- END KW: SSHLibrary.Write (2)
20190402 11:51:24.140 - INFO - +--------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:24.140 - INFO - 0
20190402 11:51:24.140 - INFO - ${rc} = 0
20190402 11:51:24.140 - INFO - +--------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:51:24.141 - INFO - +--------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:24.141 - INFO - 0
20190402 11:51:24.141 - INFO - +--------- END KW: BuiltIn.Log (0)
20190402 11:51:24.141 - INFO - ${rc} = 0
20190402 11:51:24.141 - INFO - +-------- END KW: Utils.Get Return Code (3)
20190402 11:51:24.141 - INFO - +-------- START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:24.141 - INFO - +--------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:24.142 - INFO - +--------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:24.142 - INFO - +-------- END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:24.142 - INFO - +-------- START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:24.142 - INFO - +-------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.142 - INFO - +-------- START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:24.142 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-1-347ae4cb-m4lxz -n openstack' to see all of the containers in this pod.
foo = bar
20190402 11:51:24.142 - INFO - +-------- END KW: Collections.Log Dictionary (0)
20190402 11:51:24.143 - INFO - &{result} = { stdout=Defaulting container name to nova-compute.
Use 'kubectl describe pod/nova-compute-controller-1-347ae4cb-m4lxz -n openstack' to see all of the containers in this pod.
foo = bar | stderr= | r...
20190402 11:51:24.143 - INFO - +------- END KW: Utils.Run Command (278)
20190402 11:51:24.143 - INFO - +------- START KW: BuiltIn.Should Contain [ ${result.stdout} | foo = bar ]
20190402 11:51:24.143 - INFO - +------- END KW: BuiltIn.Should Contain (0)
20190402 11:51:24.143 - INFO - +------ END KW: ${nova_pod} = nova-compute-controller-1-347ae4cb-m4lxz (279)
20190402 11:51:24.143 - INFO - +----- END KW: ${nova_pod} IN [ @{nova_pod_list} ] (611)
20190402 11:51:24.143 - INFO - +---- END KW: Utils.Check Helm Override OpenStack (1729)
------------------------------------------------------------------------------
20190402 11:51:24.144 - INFO - +--- END TEST: STX OpenStack Override Update Reset (34273)
------------------------------------------------------------------------------
20190402 11:51:24.144 - INFO - +--- START TEST: Kube System Services [ ]
------------------------------------------------------------------------------
20190402 11:51:24.144 - INFO - +---- START KW: Utils.Check PODs Health [ ]
20190402 11:51:24.144 - INFO - +----- START KW: BuiltIn.Set Variable [ kubectl get pods --all-namespaces -o wide ]
20190402 11:51:24.145 - INFO - ${kubectl_cmd} = kubectl get pods --all-namespaces -o wide
20190402 11:51:24.145 - INFO - +----- END KW: BuiltIn.Set Variable (1)
20190402 11:51:24.145 - INFO - +----- START KW: BuiltIn.Catenate [ SEPARATOR=| | ${kubectl_cmd} | grep -v NAMESPACE | grep -v Running | grep -v Completed ]
20190402 11:51:24.145 - INFO - ${cmd} = kubectl get pods --all-namespaces -o wide|grep -v NAMESPACE|grep -v Running|grep -v Completed
20190402 11:51:24.145 - INFO - +----- END KW: BuiltIn.Catenate (0)
20190402 11:51:24.145 - INFO - +----- START KW: Utils.Run Command [ ${cmd} ]
20190402 11:51:24.145 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:24.146 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (1)
20190402 11:51:24.146 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:24.146 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:24.146 - INFO - &{result_dict} = { stdout= }
20190402 11:51:24.146 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:51:24.147 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:24.147 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.147 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:24.147 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.147 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:24.148 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (2)
20190402 11:51:24.148 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:51:24.148 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.148 - INFO - +------ END KW: SSHLibrary.Read (0)
20190402 11:51:24.148 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:24.150 - INFO - kubectl get pods --all-namespaces -o w ide|grep -v NAMESPACE|grep -v Running|grep -v Completed
20190402 11:51:24.150 - INFO - +------ END KW: SSHLibrary.Write (2)
20190402 11:51:24.150 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:24.377 - INFO - default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-1554226800-wqdd2                             0/1     ContainerCreating   0          4s      <none>         controller-0   <none>
openstack     cinder-volume-usage-audit-1554226800-jbgr6                    0/1     PodInitializing     0          4s      172.16.1.112   controller-1   <none>
openstack     heat-engine-cleaner-1554226800-kw9fk                          0/1     Init:0/1            0          4s      172.16.0.227   controller-0   <none>
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.377 - INFO - ${output} = default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-15542268...
20190402 11:51:24.377 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (227)
20190402 11:51:24.377 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:24.377 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:24.378 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.378 - INFO - +------- END KW: String.Get Line (1)
20190402 11:51:24.378 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:24.378 - INFO - ${clean_out} = default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-15542268...
20190402 11:51:24.378 - INFO - +------- END KW: String.Remove String (0)
20190402 11:51:24.378 - INFO - ${output} = default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-15542268...
20190402 11:51:24.378 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:51:24.378 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:51:24.379 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:24.380 - INFO - echo $?
20190402 11:51:24.381 - INFO - +------- END KW: SSHLibrary.Write (2)
20190402 11:51:24.381 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:24.381 - INFO - 0
20190402 11:51:24.381 - INFO - ${rc} = 0
20190402 11:51:24.381 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (0)
20190402 11:51:24.381 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:24.381 - INFO - 0
20190402 11:51:24.381 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:51:24.382 - INFO - ${rc} = 0
20190402 11:51:24.382 - INFO - +------ END KW: Utils.Get Return Code (4)
20190402 11:51:24.382 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:24.382 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stdout=${output.strip()} ]
20190402 11:51:24.382 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.383 - INFO - +------ END KW: BuiltIn.Run Keyword If (0)
20190402 11:51:24.383 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:24.383 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.383 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:24.383 - INFO - Dictionary size is 3 and it contains following items:
rc: 0
stderr: 
stdout: default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-1554226800-wqdd2                             0/1     ContainerCreating   0          4s      <none>         controller-0   <none>
openstack     cinder-volume-usage-audit-1554226800-jbgr6                    0/1     PodInitializing     0          4s      172.16.1.112   controller-1   <none>
openstack     heat-engine-cleaner-1554226800-kw9fk                          0/1     Init:0/1            0          4s      172.16.0.227   controller-0   <none>
20190402 11:51:24.383 - INFO - +------ END KW: Collections.Log Dictionary (0)
20190402 11:51:24.383 - INFO - &{result} = { stdout=default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit...
20190402 11:51:24.383 - INFO - +----- END KW: Utils.Run Command (238)
20190402 11:51:24.384 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:24.384 - INFO - ${value} = default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-15542268...
20190402 11:51:24.384 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 11:51:24.384 - INFO - +----- START KW: BuiltIn.Should Be Empty [ ${value} ]
20190402 11:51:24.384 - INFO - Length is 642
20190402 11:51:24.384 - FAIL - 'default       testpod                                                       0/1     ImagePullBackOff    0          5h32m   172.16.0.6     controller-0   <none>
openstack     ceph-pools-audit-1554226800-wqdd2                             0/1     ContainerCreating   0          4s      <none>         controller-0   <none>
openstack     cinder-volume-usage-audit-1554226800-jbgr6                    0/1     PodInitializing     0          4s      172.16.1.112   controller-1   <none>
openstack     heat-engine-cleaner-1554226800-kw9fk                          0/1     Init:0/1            0          4s      172.16.0.227   controller-0   <none>' should be empty.
20190402 11:51:24.384 - DEBUG - Traceback (most recent call last):
  None
20190402 11:51:24.384 - INFO - +----- END KW: BuiltIn.Should Be Empty (0)
20190402 11:51:24.384 - INFO - +---- END KW: Utils.Check PODs Health (240)
------------------------------------------------------------------------------
20190402 11:51:24.385 - INFO - +--- END TEST: Kube System Services (241)
------------------------------------------------------------------------------
20190402 11:51:24.385 - INFO - +--- START TEST: Create Check Delete POD [ ]
------------------------------------------------------------------------------
20190402 11:51:24.385 - INFO - +---- START KW: SSHLibrary.Put File [ %{PYTHONPATH}/Utils/${pod_yml} | ${host_image_path}/${pod_yml} ]
20190402 11:51:24.394 - INFO - [chan 1] Opened sftp connection (server version 3)
20190402 11:51:24.404 - INFO - [chan 2] Opened sftp connection (server version 3)
20190402 11:51:24.407 - INFO - '/home/mgperezi/duplex/stx-test-suite/Utils/testpod.yaml' -> '/home/wrsroot//testpod.yaml'
20190402 11:51:24.407 - INFO - +---- END KW: SSHLibrary.Put File (22)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
20190402 11:51:24.407 - INFO - +---- START KW: Utils.Create POD [ ${pod_yml} | ${pod_name} ]
20190402 11:51:24.408 - INFO - +----- START KW: Utils.Run Command [ kubectl create -f ${pod_yml} ]
20190402 11:51:24.408 - INFO - +------ START KW: SSHLibrary.Set Client Configuration [ timeout=${timeout} | prompt=$ ]
20190402 11:51:24.408 - INFO - +------ END KW: SSHLibrary.Set Client Configuration (0)
20190402 11:51:24.409 - INFO - +------ START KW: Utils.Create Empy Result Dictionary [ ]
20190402 11:51:24.409 - INFO - +------- START KW: BuiltIn.Create Dictionary [ stdout=${EMPTY} ]
20190402 11:51:24.409 - INFO - &{result_dict} = { stdout= }
20190402 11:51:24.409 - INFO - +------- END KW: BuiltIn.Create Dictionary (0)
20190402 11:51:24.409 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | stderr=${EMPTY} ]
20190402 11:51:24.410 - INFO - +------- END KW: Collections.Set To Dictionary (1)
20190402 11:51:24.410 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result_dict} | rc=${EMPTY} ]
20190402 11:51:24.410 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.410 - INFO - &{result} = { stdout= | stderr= | rc= }
20190402 11:51:24.410 - INFO - +------ END KW: Utils.Create Empy Result Dictionary (1)
20190402 11:51:24.410 - INFO - +------ START KW: SSHLibrary.Read [ ]
20190402 11:51:24.411 - INFO - [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.411 - INFO - +------ END KW: SSHLibrary.Read (1)
20190402 11:51:24.411 - INFO - +------ START KW: SSHLibrary.Write [ ${cmd} ]
20190402 11:51:24.416 - INFO - kubectl create -f testpod.yaml
20190402 11:51:24.417 - INFO - +------ END KW: SSHLibrary.Write (6)
20190402 11:51:24.417 - INFO - +------ START KW: SSHLibrary.Read Until Prompt [ ]
20190402 11:51:24.653 - INFO - Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.654 - INFO - ${output} = Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
[wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.654 - INFO - +------ END KW: SSHLibrary.Read Until Prompt (237)
20190402 11:51:24.654 - INFO - +------ START KW: Utils.Remove Prompt Line [ ${output} ]
20190402 11:51:24.654 - INFO - +------- START KW: String.Get Line [ ${output} | -1 ]
20190402 11:51:24.655 - INFO - ${line_to_remove} = [wrsroot@controller-0 ~(keystone_admin)]$
20190402 11:51:24.655 - INFO - +------- END KW: String.Get Line (1)
20190402 11:51:24.655 - INFO - +------- START KW: String.Remove String [ ${output} | ${line_to_remove} ]
20190402 11:51:24.655 - INFO - ${clean_out} = Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
20190402 11:51:24.655 - INFO - +------- END KW: String.Remove String (0)
20190402 11:51:24.655 - INFO - ${output} = Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
20190402 11:51:24.655 - INFO - +------ END KW: Utils.Remove Prompt Line (1)
20190402 11:51:24.655 - INFO - +------ START KW: Utils.Get Return Code [ ]
20190402 11:51:24.656 - INFO - +------- START KW: SSHLibrary.Write [ echo $? ]
20190402 11:51:24.657 - INFO - echo $?
20190402 11:51:24.657 - INFO - +------- END KW: SSHLibrary.Write (1)
20190402 11:51:24.657 - INFO - +------- START KW: SSHLibrary.Read Until Regexp [ [0-9]+ ]
20190402 11:51:24.658 - INFO - 1
20190402 11:51:24.658 - INFO - ${rc} = 1
20190402 11:51:24.658 - INFO - +------- END KW: SSHLibrary.Read Until Regexp (1)
20190402 11:51:24.658 - INFO - +------- START KW: BuiltIn.Log [ ${rc} ]
20190402 11:51:24.658 - INFO - 1
20190402 11:51:24.658 - INFO - +------- END KW: BuiltIn.Log (0)
20190402 11:51:24.658 - INFO - ${rc} = 1
20190402 11:51:24.658 - INFO - +------ END KW: Utils.Get Return Code (3)
20190402 11:51:24.658 - INFO - +------ START KW: BuiltIn.Run Keyword If [ ${rc} == 0 | Set To Dictionary | ${result} | stdout=${output.strip()} | ELSE IF | ${fail_if_error} == True | FAIL | ${output} | ELSE | Set To Dictionary | ${result} | stderr=${output} ]
20190402 11:51:24.659 - INFO - +------- START KW: Collections.Set To Dictionary [ ${result} | stderr=${output} ]
20190402 11:51:24.659 - INFO - +------- END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.659 - INFO - +------ END KW: BuiltIn.Run Keyword If (1)
20190402 11:51:24.659 - INFO - +------ START KW: Collections.Set To Dictionary [ ${result} | rc=${rc} ]
20190402 11:51:24.659 - INFO - +------ END KW: Collections.Set To Dictionary (0)
20190402 11:51:24.659 - INFO - +------ START KW: Collections.Log Dictionary [ ${result} ]
20190402 11:51:24.660 - INFO - Dictionary size is 3 and it contains following items:
rc: 1
stderr: Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists

stdout:
20190402 11:51:24.660 - INFO - +------ END KW: Collections.Log Dictionary (1)
20190402 11:51:24.660 - INFO - &{result} = { stdout= | stderr=Error from server (AlreadyExists): error when creating "testpod.yaml": pods "testpod" already exists
 | rc=1 }
20190402 11:51:24.660 - INFO - +----- END KW: Utils.Run Command (252)
20190402 11:51:24.660 - INFO - +----- START KW: Collections.Get From Dictionary [ ${result} | stdout ]
20190402 11:51:24.660 - INFO - ${value} =
20190402 11:51:24.660 - INFO - +----- END KW: Collections.Get From Dictionary (0)
20190402 11:51:24.660 - INFO - +----- START KW: BuiltIn.Should Be Equal As Strings [ ${value} | pod/${pod_name} created ]
20190402 11:51:24.661 - DEBUG - Argument types are:
<type 'unicode'>
<type 'unicode'>
20190402 11:51:24.661 - FAIL -  != pod/testpod created
20190402 11:51:24.661 - DEBUG - Traceback (most recent call last):
  None
20190402 11:51:24.661 - INFO - +----- END KW: BuiltIn.Should Be Equal As Strings (1)
20190402 11:51:24.661 - INFO - +---- END KW: Utils.Create POD (254)
------------------------------------------------------------------------------
20190402 11:51:24.661 - INFO - +--- END TEST: Create Check Delete POD (276)
------------------------------------------------------------------------------
20190402 11:51:24.662 - INFO - +--- START TEARDOWN: BuiltIn.Run Keywords [ Utils.Stx Suite TearDown ]
20190402 11:51:24.662 - INFO - +---- START KW: Utils.Stx Suite TearDown [ ]
20190402 11:51:24.662 - INFO - +----- START KW: SSHLibrary.Close All Connections [ ]
20190402 11:51:24.664 - INFO - +----- END KW: SSHLibrary.Close All Connections (1)
20190402 11:51:24.664 - INFO - +---- END KW: Utils.Stx Suite TearDown (2)
20190402 11:51:24.664 - INFO - +--- END TEARDOWN: BuiltIn.Run Keywords (2)
==============================================================================
20190402 11:51:24.665 - INFO - +-- END SUITE: Sanity-Test.Sanity-Platform.02-OpenStack-Pod-Healthy (64698)
==============================================================================
20190402 11:51:24.667 - INFO - +- END SUITE: Sanity-Test.Sanity-Platform (64702)
==============================================================================
20190402 11:51:24.679 - INFO - + END SUITE: Sanity-Test (3684892)
==============================================================================
